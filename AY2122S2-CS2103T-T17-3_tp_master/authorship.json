[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T17-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T17-3/tp/actions)","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"\u003cimg src\u003d\"docs/images/Ui.png\" alt\u003d\"Ui\" width\u003d\"723\" height\u003d\"563\"/\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"* Automated Insurance Assistant (AIA) is a desktop app for helping insurance agents manage contacts and their related","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"information. Furthermore, it helps manage their schedules and keep track of client meetings as well.","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"  * Adding a new client in the program","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"  * Setting an automated reminder for client\u0027s birthdays","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"  * Setting a reminder on a client related meeting","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"* It is named `Automated Insurance Assistant (AIA)` (`AIA` for short) because it is meant to be word play,","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"referring to the insurance agency with the same acronym","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"* AIA is a program written in Java, with OOP principles taken into consideration when implementing the program\u0027s features","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"* This project serves as our main project for the module, CS2103T","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"bloodofme":12,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"run {","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ngjunkang":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"Hello! We are a team of year 2 students based in the","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"[School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"### Pang Yuan Ker","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"\u003cimg src\u003d\"images/pyk595.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"[github](http://github.com/pyk595)","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"[portfolio](team/pyk595.md)","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"* Responsibilities: Scheduling + Tracking","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"### Nadine Chiun","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"\u003cimg src\u003d\"images/bloodofme.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"[github](https://github.com/bloodofme)","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"[portfolio](team/bloodofme.md)","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"* Responsibilities: UI","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"### Ng Jun Kang","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"\u003cimg src\u003d\"images/ngjunkang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"[github](http://github.com/ngjunkang)","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"[portfolio](team/ngjunkang.md)","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"* Responsibilities: Integration","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"### Shi Kexin","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"\u003cimg src\u003d\"images/cashewnade.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"[github](https://github.com/cashewnade)","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"[portfolio](team/cashewnade.md)","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"-":26,"bloodofme":22}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"pyk595"},"content":"*{More to be added}*","lastModifiedDate":"2022-03-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"pyk595"},"content":"* has a need to distinct between groups of contacts","lastModifiedDate":"2022-03-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"pyk595"},"content":"* prefers getting reminders on actionable items","lastModifiedDate":"2022-03-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"pyk595"},"content":"**Value proposition**: manage and consolidate information on contacts with automated reminders,","lastModifiedDate":"2022-03-01"},{"lineNumber":187,"author":{"gitId":"pyk595"},"content":"faster than a typical mouse/GUI driven application","lastModifiedDate":"2022-03-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                         | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"pyk595"},"content":"| -------- | ------------------------------------------ | --------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2022-03-01"},{"lineNumber":196,"author":{"gitId":"pyk595"},"content":"| `* * *`  | new user                                   | see usage instructions                  | refer to instructions easily when I forget how to use the App          |","lastModifiedDate":"2022-03-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person                        |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"pyk595"},"content":"| `* * *`  | financial advisor                          | add birthdays for my contacts           | show my clients that I take note of their important dates personally   |","lastModifiedDate":"2022-03-01"},{"lineNumber":199,"author":{"gitId":"pyk595"},"content":"| `* * *`  | user                                       | edit an existing person                 | make sure that the information stored is up to date                    |","lastModifiedDate":"2022-03-01"},{"lineNumber":200,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                         | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name                   | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"pyk595"},"content":"| `* *`    | busy user                                  | keep track of important tasks daily     | make sure I do not miss out tasks for my clients                       |","lastModifiedDate":"2022-03-01"},{"lineNumber":203,"author":{"gitId":"pyk595"},"content":"| `* *`    | user with many persons in the address book | assign tags to my contacts              | categorise my contacts in a meaningful manner                          |","lastModifiedDate":"2022-03-01"},{"lineNumber":204,"author":{"gitId":"pyk595"},"content":"| `* *`    | financial advisor                          | track my last interaction with a contact| have a snapshot of the relationship                                    |","lastModifiedDate":"2022-03-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `Address Book` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"ngjunkang"},"content":"**Use case: UC01 - Add a new contact**","lastModifiedDate":"2022-03-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"ngjunkang"},"content":"1. User requests to add a new contact to the Address Book.","lastModifiedDate":"2022-03-01"},{"lineNumber":217,"author":{"gitId":"ngjunkang"},"content":"2. Address Book adds contact to the contact list.","lastModifiedDate":"2022-03-01"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"ngjunkang"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":225,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":227,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":229,"author":{"gitId":"ngjunkang"},"content":"**Use case: UC02 - Update a contact**","lastModifiedDate":"2022-03-01"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":231,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":233,"author":{"gitId":"ngjunkang"},"content":"1. User requests to update details for a person in the Address Book.","lastModifiedDate":"2022-03-01"},{"lineNumber":234,"author":{"gitId":"ngjunkang"},"content":"2. Address Book updates the details of the contact.","lastModifiedDate":"2022-03-01"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":236,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":238,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":240,"author":{"gitId":"ngjunkang"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":242,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":244,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":246,"author":{"gitId":"ngjunkang"},"content":"* 1b. The given index is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":248,"author":{"gitId":"ngjunkang"},"content":"    * 1b1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":250,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":252,"author":{"gitId":"ngjunkang"},"content":"**Use case: UC03 - List all contacts**","lastModifiedDate":"2022-03-02"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":254,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":256,"author":{"gitId":"ngjunkang"},"content":"1. User requests to list all contacts.","lastModifiedDate":"2022-03-01"},{"lineNumber":257,"author":{"gitId":"ngjunkang"},"content":"2. Address Book shows a list of contacts if any.","lastModifiedDate":"2022-03-01"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":263,"author":{"gitId":"ngjunkang"},"content":"* 1a. The list is empty.","lastModifiedDate":"2022-03-02"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":265,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":267,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":269,"author":{"gitId":"ngjunkang"},"content":"**Use case: UC04 - Delete a contact**","lastModifiedDate":"2022-03-01"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":271,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":273,"author":{"gitId":"ngjunkang"},"content":"1. User lists all contacts (UC03).","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"ngjunkang"},"content":"2. User requests to delete a specific contact in the list.","lastModifiedDate":"2022-03-24"},{"lineNumber":275,"author":{"gitId":"ngjunkang"},"content":"3. Address Book deletes the contact.","lastModifiedDate":"2022-03-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"ngjunkang"},"content":"* 2a. The given contact is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":283,"author":{"gitId":"ngjunkang"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"ngjunkang"},"content":"**Use case: UC05 - Find contact by keyword**","lastModifiedDate":"2022-03-01"},{"lineNumber":288,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":289,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":290,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":291,"author":{"gitId":"ngjunkang"},"content":"1. User requests to find a person.","lastModifiedDate":"2022-03-01"},{"lineNumber":292,"author":{"gitId":"ngjunkang"},"content":"2. Address Book shows a list of persons with names containing the keyword.","lastModifiedDate":"2022-03-02"},{"lineNumber":293,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":294,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":295,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":296,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":297,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":298,"author":{"gitId":"ngjunkang"},"content":"* 1a. No keyword is given.","lastModifiedDate":"2022-03-01"},{"lineNumber":299,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":300,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":301,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":302,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":303,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":304,"author":{"gitId":"ngjunkang"},"content":"* 1b. The given keyword does not match any contacts.","lastModifiedDate":"2022-03-02"},{"lineNumber":305,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":306,"author":{"gitId":"ngjunkang"},"content":"    * 1b1. Address Book shows a message that no contacts matches the keyword.","lastModifiedDate":"2022-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":308,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":310,"author":{"gitId":"ngjunkang"},"content":"**Use case: UC06 - Set previously contacted date**","lastModifiedDate":"2022-03-01"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":314,"author":{"gitId":"ngjunkang"},"content":"1. User request to set previously contacted date for a specified contact.","lastModifiedDate":"2022-03-01"},{"lineNumber":315,"author":{"gitId":"ngjunkang"},"content":"2. Address Book sets the previously contacted date for the specified contact.","lastModifiedDate":"2022-03-01"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":317,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":319,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":321,"author":{"gitId":"ngjunkang"},"content":"* 1a. No date is given.","lastModifiedDate":"2022-03-01"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":323,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. Address Book sets the previously contacted date as today for the specified contact.","lastModifiedDate":"2022-03-01"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":325,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":327,"author":{"gitId":"ngjunkang"},"content":"* 1b. The given date is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":329,"author":{"gitId":"ngjunkang"},"content":"    * 1b1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":331,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":332,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":333,"author":{"gitId":"ngjunkang"},"content":"* 1c. The given index is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":334,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":335,"author":{"gitId":"ngjunkang"},"content":"    * 1c1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":336,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":337,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":338,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":339,"author":{"gitId":"bloodofme"},"content":"**Use case: UC07 - Show all contacted information for a specified contact**","lastModifiedDate":"2022-03-25"},{"lineNumber":340,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":341,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":342,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":343,"author":{"gitId":"bloodofme"},"content":"1. User request to list all contacted information for a specified contact.","lastModifiedDate":"2022-03-25"},{"lineNumber":344,"author":{"gitId":"bloodofme"},"content":"2. Address Book shows all contacted information for the specified contact.","lastModifiedDate":"2022-03-25"},{"lineNumber":345,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":346,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":347,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":348,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":349,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":350,"author":{"gitId":"bloodofme"},"content":"* 1a. No index specifying a specific contact is given.","lastModifiedDate":"2022-03-25"},{"lineNumber":351,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":352,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":353,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":354,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":355,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":356,"author":{"gitId":"bloodofme"},"content":"* 1b. The given index specifying a specific contact is invalid.","lastModifiedDate":"2022-03-25"},{"lineNumber":357,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":358,"author":{"gitId":"ngjunkang"},"content":"    * 1b1. Address Book shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":359,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":360,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":361,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":362,"author":{"gitId":"bloodofme"},"content":"**Use case: UC08 - List all contacts in Address Book within a designated time frame**","lastModifiedDate":"2022-03-25"},{"lineNumber":363,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":364,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":365,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":366,"author":{"gitId":"ngjunkang"},"content":"1. User requests to see all contacts last contacted within/outside a designated number of days.","lastModifiedDate":"2022-03-02"},{"lineNumber":367,"author":{"gitId":"ngjunkang"},"content":"2. Address Book shows contacts last contacted within/outside the designated time frame (i.e. less than 30 days).","lastModifiedDate":"2022-03-02"},{"lineNumber":368,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":369,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":370,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":371,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":372,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":373,"author":{"gitId":"bloodofme"},"content":"* 1a. No client was contacted within/outside the designated number of days.","lastModifiedDate":"2022-03-25"},{"lineNumber":374,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":375,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":376,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":377,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":378,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":379,"author":{"gitId":"bloodofme"},"content":"**Use case: UC09 - Set reminder**","lastModifiedDate":"2022-03-25"},{"lineNumber":380,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":381,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":382,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":383,"author":{"gitId":"ngjunkang"},"content":"1. User requests to set a reminder for a designated contact at a specified date.","lastModifiedDate":"2022-03-01"},{"lineNumber":384,"author":{"gitId":"ngjunkang"},"content":"2. Address Book sets a reminder for the contact tagged to the specified date.","lastModifiedDate":"2022-03-01"},{"lineNumber":385,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":386,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":387,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":388,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":389,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":390,"author":{"gitId":"ngjunkang"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":391,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":392,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":394,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":395,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":396,"author":{"gitId":"bloodofme"},"content":"**Use case: UC10 - View reminders of a contact**","lastModifiedDate":"2022-03-25"},{"lineNumber":397,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":398,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":399,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":400,"author":{"gitId":"ngjunkang"},"content":"1. User requests to view reminders of a specific contact.","lastModifiedDate":"2022-03-01"},{"lineNumber":401,"author":{"gitId":"ngjunkang"},"content":"2. Address Book shows reminders of the specified contact.","lastModifiedDate":"2022-03-01"},{"lineNumber":402,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":403,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":404,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":405,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":406,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":407,"author":{"gitId":"ngjunkang"},"content":"* 1a. The given contact is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":408,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":409,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":410,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":411,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":412,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":413,"author":{"gitId":"ngjunkang"},"content":"* 1b. No reminder is found in the given contact.","lastModifiedDate":"2022-03-02"},{"lineNumber":414,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":415,"author":{"gitId":"ngjunkang"},"content":"    * 1b1. Address Book shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":416,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":417,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":418,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":419,"author":{"gitId":"bloodofme"},"content":"**Use Case: UC11 - View reminders on a date**","lastModifiedDate":"2022-03-25"},{"lineNumber":420,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":421,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":422,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":423,"author":{"gitId":"ngjunkang"},"content":"1. User requests to view reminders on a specific date.","lastModifiedDate":"2022-03-01"},{"lineNumber":424,"author":{"gitId":"ngjunkang"},"content":"2. Address Book shows reminders associated with the specified date.","lastModifiedDate":"2022-03-01"},{"lineNumber":425,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":426,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":427,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":428,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":429,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":430,"author":{"gitId":"ngjunkang"},"content":"* 1a. The date given is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":431,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":432,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":433,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":434,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":435,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":436,"author":{"gitId":"bloodofme"},"content":"**Use case: UC12 - Delete a reminder**","lastModifiedDate":"2022-03-25"},{"lineNumber":437,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":438,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":439,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":440,"author":{"gitId":"ngjunkang"},"content":"1. User views reminders of a specific contact (UC09).","lastModifiedDate":"2022-03-24"},{"lineNumber":441,"author":{"gitId":"ngjunkang"},"content":"2. User requests to delete a reminder for a specified contact.","lastModifiedDate":"2022-03-24"},{"lineNumber":442,"author":{"gitId":"ngjunkang"},"content":"3. Address Book deletes a reminder for the specified contact.","lastModifiedDate":"2022-03-24"},{"lineNumber":443,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":444,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":445,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":446,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":447,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":448,"author":{"gitId":"ngjunkang"},"content":"* 2a. The given reminder is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":449,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":450,"author":{"gitId":"ngjunkang"},"content":"    * 2a1. Address Book shows an error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":451,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":452,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":453,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":454,"author":{"gitId":"ngjunkang"},"content":"* 2b. The given contact is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":455,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":456,"author":{"gitId":"ngjunkang"},"content":"    * 2b1. Address Book shows an error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":457,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":458,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":459,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":460,"author":{"gitId":"bloodofme"},"content":"**Use case: UC13 - Show all tags**","lastModifiedDate":"2022-03-25"},{"lineNumber":461,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":462,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":463,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":464,"author":{"gitId":"ngjunkang"},"content":"1. User requests to view all tags.","lastModifiedDate":"2022-03-01"},{"lineNumber":465,"author":{"gitId":"ngjunkang"},"content":"2. Address Book shows all existing tags.","lastModifiedDate":"2022-03-01"},{"lineNumber":466,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":467,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":468,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":469,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":470,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":471,"author":{"gitId":"ngjunkang"},"content":"* 1a. There is no tags in Address Book.","lastModifiedDate":"2022-03-24"},{"lineNumber":472,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":473,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. Address Book shows a message, stating that there is no tags.","lastModifiedDate":"2022-03-24"},{"lineNumber":474,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":475,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":476,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":477,"author":{"gitId":"bloodofme"},"content":"**Use case: UC14 - Show all contacts that are tagged to a tag**","lastModifiedDate":"2022-03-25"},{"lineNumber":478,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":479,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":480,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":481,"author":{"gitId":"bloodofme"},"content":"1. User views all tags (UC13).","lastModifiedDate":"2022-03-25"},{"lineNumber":482,"author":{"gitId":"ngjunkang"},"content":"2. User requests to view all contacts that are tagged to the specified tag.","lastModifiedDate":"2022-03-24"},{"lineNumber":483,"author":{"gitId":"ngjunkang"},"content":"3. Address Book shows all contacts that are tagged to the specified tag, if any.","lastModifiedDate":"2022-03-24"},{"lineNumber":484,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":485,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":486,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":487,"author":{"gitId":"ngjunkang"},"content":"* 2a. The given tag is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":488,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":489,"author":{"gitId":"ngjunkang"},"content":"    * 2a1. Address Book shows an error message.","lastModifiedDate":"2022-03-24"},{"lineNumber":490,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":491,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":492,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":493,"author":{"gitId":"bloodofme"},"content":"**Use case: UC15 - Add a tag to a contact**","lastModifiedDate":"2022-03-25"},{"lineNumber":494,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":495,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":496,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":497,"author":{"gitId":"ngjunkang"},"content":"1. User requests to add a tag to a contact.","lastModifiedDate":"2022-03-01"},{"lineNumber":498,"author":{"gitId":"ngjunkang"},"content":"2. Address Book appends the designated tag to the contact.","lastModifiedDate":"2022-03-01"},{"lineNumber":499,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":500,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":501,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":502,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":503,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":504,"author":{"gitId":"ngjunkang"},"content":"* 1a. The given contact is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":505,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":506,"author":{"gitId":"ngjunkang"},"content":"    * 1a1 Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":507,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":508,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":509,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":510,"author":{"gitId":"ngjunkang"},"content":"* 1b. The given tag is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":511,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":512,"author":{"gitId":"ngjunkang"},"content":"    * 1b1 Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":513,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":514,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":515,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":516,"author":{"gitId":"ngjunkang"},"content":"* 1c. The given tag already exists.","lastModifiedDate":"2022-03-01"},{"lineNumber":517,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":518,"author":{"gitId":"ngjunkang"},"content":"    * 1c1 Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":519,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":520,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":521,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":522,"author":{"gitId":"bloodofme"},"content":"**Use case: UC16 - Delete a tag from a contact**","lastModifiedDate":"2022-03-25"},{"lineNumber":523,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":524,"author":{"gitId":"ngjunkang"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":525,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":526,"author":{"gitId":"ngjunkang"},"content":"1. User requests to delete a tag from a contact.","lastModifiedDate":"2022-03-01"},{"lineNumber":527,"author":{"gitId":"ngjunkang"},"content":"2. Address Book removes the specified tag from the contact.","lastModifiedDate":"2022-03-01"},{"lineNumber":528,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":529,"author":{"gitId":"ngjunkang"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":530,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":531,"author":{"gitId":"ngjunkang"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":532,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":533,"author":{"gitId":"ngjunkang"},"content":"* 1a. The given contact is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":534,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":535,"author":{"gitId":"ngjunkang"},"content":"    * 1a1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":536,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":537,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":538,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":539,"author":{"gitId":"ngjunkang"},"content":"* 1b. The given tag is not associated with the contact.","lastModifiedDate":"2022-03-01"},{"lineNumber":540,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":541,"author":{"gitId":"ngjunkang"},"content":"    * 1b1. Address Book shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":542,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":543,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":544,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":545,"author":{"gitId":"ngjunkang"},"content":"* 1c. The given tag is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":546,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":547,"author":{"gitId":"ngjunkang"},"content":"    * 1c1. Address Book shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":548,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":549,"author":{"gitId":"ngjunkang"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":550,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":551,"author":{"gitId":"pyk595"},"content":"**Use case: UC16 - Show all birthdays today**","lastModifiedDate":"2022-03-24"},{"lineNumber":552,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":553,"author":{"gitId":"pyk595"},"content":"**MSS**","lastModifiedDate":"2022-03-24"},{"lineNumber":554,"author":{"gitId":"pyk595"},"content":"1. User requests to view all birthdays occurring today.","lastModifiedDate":"2022-03-24"},{"lineNumber":555,"author":{"gitId":"pyk595"},"content":"2. Address Book shows all persons with birthdays today.","lastModifiedDate":"2022-03-24"},{"lineNumber":556,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":557,"author":{"gitId":"pyk595"},"content":"    Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":558,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":559,"author":{"gitId":"pyk595"},"content":"**Extensions**","lastModifiedDate":"2022-03-24"},{"lineNumber":560,"author":{"gitId":"pyk595"},"content":"* 1a. No birthdays occur today.","lastModifiedDate":"2022-03-24"},{"lineNumber":561,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":562,"author":{"gitId":"pyk595"},"content":"    * 1a1. Address Book shows message stating that there are 0 persons with birthdays today.","lastModifiedDate":"2022-03-24"},{"lineNumber":563,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":564,"author":{"gitId":"pyk595"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":565,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"pyk595"},"content":"1.  Should work on any **mainstream OS** as long as it has Java `11` or","lastModifiedDate":"2022-03-01"},{"lineNumber":568,"author":{"gitId":"pyk595"},"content":"    above installed.","lastModifiedDate":"2022-03-01"},{"lineNumber":569,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"pyk595"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands)","lastModifiedDate":"2022-03-01"},{"lineNumber":571,"author":{"gitId":"pyk595"},"content":"    should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-01"},{"lineNumber":572,"author":{"gitId":"pyk595"},"content":"4.  Should not be bigger than 100MB.","lastModifiedDate":"2022-03-01"},{"lineNumber":573,"author":{"gitId":"pyk595"},"content":"5.  A user should not be required to use an installer to run the **application**.","lastModifiedDate":"2022-03-01"},{"lineNumber":574,"author":{"gitId":"pyk595"},"content":"6.  A new user should know how to use or where to look for function guides within one day.","lastModifiedDate":"2022-03-01"},{"lineNumber":575,"author":{"gitId":"pyk595"},"content":"7.  An advanced user should be able to edit and replace the dataset manually.","lastModifiedDate":"2022-03-01"},{"lineNumber":576,"author":{"gitId":"pyk595"},"content":"8.  The **application** GUI should work well for standard screen resolutions 1920x1080 and higher,","lastModifiedDate":"2022-03-01"},{"lineNumber":577,"author":{"gitId":"pyk595"},"content":"    and for screen scales of 100% and 125%.","lastModifiedDate":"2022-03-01"},{"lineNumber":578,"author":{"gitId":"pyk595"},"content":"9.  The **application** should respond to user input within 2 seconds.","lastModifiedDate":"2022-03-01"},{"lineNumber":579,"author":{"gitId":"pyk595"},"content":"10. The **application** is not required to support printing or use with other 3rd party software.","lastModifiedDate":"2022-03-01"},{"lineNumber":580,"author":{"gitId":"pyk595"},"content":"11. The **application** is not required to implement undo, redo and data recovery functions on error.","lastModifiedDate":"2022-03-01"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"ngjunkang"},"content":"* **Address Book**: Address book used to store contacts in the application","lastModifiedDate":"2022-03-01"},{"lineNumber":587,"author":{"gitId":"ngjunkang"},"content":"* **Application**: The Automated Insurance Assistant Application","lastModifiedDate":"2022-03-01"},{"lineNumber":588,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-03-01"},{"lineNumber":589,"author":{"gitId":"ngjunkang"},"content":"* **MSS**: Main Success Scenario that describes the most straightforward interaction for a given use case, which assumes that nothing goes wrong","lastModifiedDate":"2022-03-01"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"pyk595"},"content":"   1. Double-click the jar file","lastModifiedDate":"2022-03-20"},{"lineNumber":609,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":610,"author":{"gitId":"pyk595"},"content":"        Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2022-03-20"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"pyk595"},"content":"1. Dealing with missing data files","lastModifiedDate":"2022-03-20"},{"lineNumber":641,"author":{"gitId":"pyk595"},"content":"    1. Remove addressbook.json and the data directory","lastModifiedDate":"2022-03-20"},{"lineNumber":642,"author":{"gitId":"pyk595"},"content":"    1. Run the jar file","lastModifiedDate":"2022-03-20"},{"lineNumber":643,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":644,"author":{"gitId":"pyk595"},"content":"        Expected: The application will automatically generate a data directory and populate addressbook.json with sample data.","lastModifiedDate":"2022-03-20"},{"lineNumber":645,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":646,"author":{"gitId":"pyk595"},"content":"1. Dealing with corrupted data files","lastModifiedDate":"2022-03-20"},{"lineNumber":647,"author":{"gitId":"pyk595"},"content":"    1. Remove some lines from addressbook.json","lastModifiedDate":"2022-03-20"},{"lineNumber":648,"author":{"gitId":"pyk595"},"content":"    1. Run the jar file","lastModifiedDate":"2022-03-20"},{"lineNumber":649,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":650,"author":{"gitId":"pyk595"},"content":"        Expected: The application will make a copy of the current addressbook.json in backup.json and continue running with an empty addressbook.json. If changes are made, addressbook.json will be overwritten.","lastModifiedDate":"2022-03-20"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ngjunkang":269,"pyk595":53,"-":315,"bloodofme":16}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"Automated Insurance Assistant (AIA) is a desktop application that helps Insurance Agents to manage their client contacts.","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"Instead of hiring a secretary to handle day-to-day activities, using AIA can help you achieve the following:","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"- Catalogue and easily retrieve saved data on clients based on specific categories","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"- Keep track of important events and time sensitive tasks to do for each client (e.g. client birthdays)","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"- Keep records of previous interactions with each client","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"Usage of this application is optimised for use via a Command Line Interface (CLI) while still displaying information to users in an intuitive manner, through a Graphical User Interface (GUI).","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"If you can type fast, AIA can significantly reduce the amount of time spent on retrieving saved information for each client that might have been saved on many different sources previously.","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"This user guide offers the following to insurance agents or other users trying to learn how to use the application:","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"- A quick start to running the application","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"- All available features","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"- Examples on how to use each feature","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"### Use of in-text formatting","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"Bold words refer to commands to be performed by users.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"e.g. **cd** will refer to the \"change directory\" command in CLI.","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"Words in quotations are files, file types or dependencies.","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"e.g. \"exe\" refers to the executable file type used on windows.","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"----","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"## Table of Contents","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"* [Features](#features)","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"  - [Adding a contact: `add`](#adding-a-contact-add)","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"  - [Viewing all contacts: `list`](#viewing-all-contacts-list)","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"  - [Editing a contact: `edit`](#editing-a-contact-edit)","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"  - [Finding contacts by name: `find`](#finding-contacts-by-name-find)","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"  - [Deleting a contact: `delete`](#deleting-a-contact-delete)","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"  - [Adding a tag: `tag`](#adding-a-tag-tag)","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"  - [Deleting a tag: `untag`](#deleting-a-tag-untag)","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"  - [Viewiing all available tags: `tags`](#viewing-all-available-tags-tags)","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"  - [Finding contacts with tag: `#`](#finding-contacts-with-tag-)","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"  - [Adding interaction records with a contact: `contacted`](#adding-interaction-records-with-a-contact-contacted)","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"  - [Deleting a recent interaction record with a contact: `unlog`](#deleting-a-recent-interaction-record-with-a-contact-unlog)","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"  - [Viewing all recent interactions with a contact: `logs`](#viewing-all-recent-interactions-with-a-contact-logs)","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"  - [Viewing contacts that were contacted within days: `within`](#viewing-contacts-that-were-contacted-within-days-within)","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"  - [Viewing contacts contacted more than a specified number of days ago: `after`](#viewing-contacts-contacted-more-than-a-specified-number-of-days-ago-after)","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"  - [Adding a reminder to a contact: `remind`](#adding-a-reminder-to-a-contact-remind)","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"  - [Viewing reminders of a contact: `reminder`](#viewing-reminders-of-a-contact-reminder)","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"  - [Viewing reminders by date: `reminders`](#viewing-reminders-by-date-reminders)","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"  - [Show all birthdays today: `birthdays`](#show-all-birthdays-today-birthdays)","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"  - [Deleting a reminder: `forget`](#deleting-a-reminder-forget)","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"  - [Exiting the program: `exit`](#exiting-the-program-exit)","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cashewnade"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"## Quick Start","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"1. Ensure you have \"Java JDK 11\" or above installed in your Computer.","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"2. Download the latest \"jar\" file, \"AIA.jar\" [here](https://github.com/AY2122S2-CS2103T-T17-3/tp/releases).","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"3. Move the \"jar\" file to an empty folder in where you want to store the \"jar\" file and the contacts.","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"4. Open a shell application (Command Prompt or Terminal etc.) and navigate to the folder created in step 3.","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"5. Run the \"jar\" file with the **java -jar** command in the shell application to run the application, e.g. **java -jar AIA.jar**.","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing `help` and pressing Enter will open the help window.","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"7. When in doubt, type `help` in the command box or click \"Help\" in the application bar to pull up the list of available commands.","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"8. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"pyk595"},"content":"* Markup words in `UPPER_CASE` are the information to be entered by the user.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"cashewnade"},"content":"  e.g. in `add n/NAME`, `NAME` is an information which can be used as `add n/John Doe`.","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"bloodofme"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/Client` or as `n/John Doe`.","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"bloodofme"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/Client`, `t/Client t/PremiumMember` etc.","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"pyk595"},"content":"* User input can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"pyk595"},"content":"* If an input is expected only once in for a specific command, but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"pyk595"},"content":"  the input will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"* Dates should be in \"YYYY-MM-DD\" format, unless stated otherwise. Single digits should be zero padded.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"  e.g. `2022-05-17`, `2021-01-01` and `2011-10-10` are in the correct format, while `2022-5-17` and `2021-1-1` are in the wrong format.","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"pyk595"},"content":"* `INDEX` used in the different commands refer to the index number shown in the displayed person list.","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"pyk595"},"content":"  ❗The `INDEX` must be a positive integer i.e. 1,2,3,...","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"pyk595"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"cashewnade"},"content":"### Adding a contact: `add`","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"pyk595"},"content":"When you meet a new potential client and you managed to get their contact information, you can `add` them as a contact in the application.","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"bloodofme"},"content":"* Upon adding a person, a default recently interacted date and description would be automatically generated.","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"bloodofme"},"content":"  * The default date would be the day the contact was added, and default description would be \"First Interaction\".","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"pyk595"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS b/BIRTH_DATE [t/TAG]…​`","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"pyk595"},"content":"* `BIRTH_DATE` should be in the specified date format.","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"cashewnade"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"cashewnade"},"content":"**Tip:**","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"ngjunkang"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 b/1970-01-01` adds the contact with only the compulsory information provided.","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"bloodofme"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 b/1970-01-01 t/Client t/BasicMember` adds the contact with the compulsory information provided and the optional information.","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"pyk595"},"content":"### Viewing all contacts: `list`","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"pyk595"},"content":"When you want to look through your whole clientele, `list` will show all the people saved in the application.","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"ngjunkang"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"cashewnade"},"content":"### Editing a contact: `edit`","lastModifiedDate":"2022-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"pyk595"},"content":"If you realise you need to change a client\u0027s outdated information, you can `edit` an existing contact in the application.","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"pyk595"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [b/BIRTH_DATE]","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"cashewnade"},"content":"[t/TAG]…​`","lastModifiedDate":"2022-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"pyk595"},"content":"* Edits the person at the specified `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"ngjunkang"},"content":"* When editing tags, the existing tags of the person will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"pyk595"},"content":"* `BIRTH_DATE` should be in the specified date format.","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"ngjunkang"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"ngjunkang"},"content":"* `edit 2 n/Betsy Crower t/` edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"pyk595"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"cashewnade"},"content":"### Finding contacts by name: `find`","lastModifiedDate":"2022-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"pyk595"},"content":"Scrolling through a whole list of people to find a specific client takes a long time. Instead, you can `find` people using keywords of their name.","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"ngjunkang"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"cashewnade"},"content":"### Deleting a contact: `delete`","lastModifiedDate":"2022-03-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"pyk595"},"content":"If a contact entry is no longer relevant, you can `delete` the specified contact from the application.","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"ngjunkang"},"content":"* `list` followed by `delete 2` deletes the 2nd contact in the application.","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"ngjunkang"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st contact in the results of the `find` command.","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"ngjunkang"},"content":"### Adding a tag: `tag`","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"pyk595"},"content":"Suppose you want to catalogue a contact with a specific category like \"client\", you can `tag` the contact to a category, as specified by the index.","lastModifiedDate":"2022-03-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"ngjunkang"},"content":"Format: `tag INDEX t/TAG`","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"ngjunkang"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"ngjunkang"},"content":"* `tag 27 t/client` adds the \"client\" tag to the 27th contact in the display contact list.","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"ngjunkang"},"content":"### Deleting a tag: `untag`","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"pyk595"},"content":"If a contact is no longer a client, and you wish to remove the tag, you can simply `untag` contact from the cateogory, as specified by the index.","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"ngjunkang"},"content":"Format: `untag INDEX t/TAG`","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"ngjunkang"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"bloodofme"},"content":"* `untag 27 t/client` deletes the \"client\" tag from the 27th contact in the display contact list.","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"pyk595"},"content":"### Viewing all available tags: `tags`","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"pyk595"},"content":"If you forget what tags you have currently, you can list all the tags used in the application, in alphabetical order.","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"ngjunkang"},"content":"Format: `tags`","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"ngjunkang"},"content":"### Finding contacts with tag: `#`","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"pyk595"},"content":"If you want to focus on a specific category, you can find all the contacts with the specified tag assigned to them.","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"ngjunkang"},"content":"Format: `#TAG`","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"ngjunkang"},"content":"Example:","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"bloodofme"},"content":"* `#client` finds all the contacts that are tagged to \"client\".","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":241,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"pyk595"},"content":"### Adding interaction records with a contact: `contacted`","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":245,"author":{"gitId":"pyk595"},"content":"After meeting a client, you might want to write a note about the client, along with the meeting date. By using the `contacted` command, you can manually save your interaction with the person in the form of a note accompanied by a date.","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":247,"author":{"gitId":"ngjunkang"},"content":"Format: `contacted INDEX d/DATE des/description`","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"pyk595"},"content":"* `DATE` should be in the specified date format.","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":250,"author":{"gitId":"cashewnade"},"content":"Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":251,"author":{"gitId":"pyk595"},"content":"* `contacted 23 d/2022-02-11 des/Signed contract` manually logs the following interaction with the 23rd person in the displayed contact list, `Signed contract` on `2022-02-11`.","lastModifiedDate":"2022-03-30"},{"lineNumber":252,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":253,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"pyk595"},"content":"### Deleting a recent interaction record with a contact: `unlog`","lastModifiedDate":"2022-03-30"},{"lineNumber":256,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":257,"author":{"gitId":"pyk595"},"content":"Suppose you made a mistake while recording your interaction. You can easily `unlog` the saved interaction record from the specified contact.","lastModifiedDate":"2022-03-30"},{"lineNumber":258,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":259,"author":{"gitId":"bloodofme"},"content":"Format: `unlog INDEX del/INDEX`","lastModifiedDate":"2022-03-27"},{"lineNumber":260,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"bloodofme"},"content":"* `INDEX` signifies the specified contact.","lastModifiedDate":"2022-03-30"},{"lineNumber":262,"author":{"gitId":"bloodofme"},"content":"* `INDEX` refers to the index number shown in the displayed contact list.","lastModifiedDate":"2022-03-30"},{"lineNumber":263,"author":{"gitId":"pyk595"},"content":"* `del/INDEX` signifies the interaction record to delete.","lastModifiedDate":"2022-03-30"},{"lineNumber":264,"author":{"gitId":"pyk595"},"content":"* `del/INDEX` refers to the index number shown in the contact\u0027s displayed list of interaction records.","lastModifiedDate":"2022-03-30"},{"lineNumber":265,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":266,"author":{"gitId":"bloodofme"},"content":"Example:","lastModifiedDate":"2022-03-27"},{"lineNumber":267,"author":{"gitId":"pyk595"},"content":"* `unlog 2 del/6` deletes the 6th interaction record from the 2nd contact in the displayed contact list.","lastModifiedDate":"2022-03-30"},{"lineNumber":268,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"pyk595"},"content":"### Viewing all recent interactions with a contact: `logs`","lastModifiedDate":"2022-03-30"},{"lineNumber":272,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"pyk595"},"content":"If you want to review your interaction history with a contact, you can use `logs` to list all saved interaction records for the specified contact.","lastModifiedDate":"2022-03-30"},{"lineNumber":274,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"bloodofme"},"content":"Format: `logs INDEX`","lastModifiedDate":"2022-03-27"},{"lineNumber":276,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"bloodofme"},"content":"* `INDEX` signifies the specified contact.","lastModifiedDate":"2022-03-27"},{"lineNumber":278,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"bloodofme"},"content":"Example:","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"pyk595"},"content":"* `logs 2` lists all recorded interactions with the 2nd contact in the displayed contact list.","lastModifiedDate":"2022-03-30"},{"lineNumber":281,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":282,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"pyk595"},"content":"### Viewing contacts that were contacted within days: `within`","lastModifiedDate":"2022-03-30"},{"lineNumber":285,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":286,"author":{"gitId":"pyk595"},"content":"Occasionally, it might be hard to remember if you met someone recently. The `within` command allows you to show all contacts that you had interacted with within a specified range of days.","lastModifiedDate":"2022-03-30"},{"lineNumber":287,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":288,"author":{"gitId":"bloodofme"},"content":"Format: `within DAYS`","lastModifiedDate":"2022-03-27"},{"lineNumber":289,"author":{"gitId":"cashewnade"},"content":"* DAYS must be a positive integer.","lastModifiedDate":"2022-03-02"},{"lineNumber":290,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":291,"author":{"gitId":"cashewnade"},"content":"Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":292,"author":{"gitId":"pyk595"},"content":"* `within 12` shows a list of people that were last contacted within the past 12 days.","lastModifiedDate":"2022-03-30"},{"lineNumber":293,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":294,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":295,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"pyk595"},"content":"### Viewing contacts contacted more than a specified number of days ago: `after`","lastModifiedDate":"2022-03-30"},{"lineNumber":297,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":298,"author":{"gitId":"pyk595"},"content":"When cold calling for new potential clients, you can consider looking through your old contacts instead. You can display a list of people that you have not been in contact with for more than a specified number of DAYS.","lastModifiedDate":"2022-03-30"},{"lineNumber":299,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":300,"author":{"gitId":"pyk595"},"content":"Format: `after DAYS`","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"cashewnade"},"content":"* DAYS must be a positive integer.","lastModifiedDate":"2022-03-02"},{"lineNumber":302,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":303,"author":{"gitId":"cashewnade"},"content":"Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":304,"author":{"gitId":"pyk595"},"content":"* `after 50` shows a list of people that were last contacted more than 50 days ago.","lastModifiedDate":"2022-03-30"},{"lineNumber":305,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":306,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"ngjunkang"},"content":"### Adding a reminder to a contact: `remind`","lastModifiedDate":"2022-03-28"},{"lineNumber":309,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":310,"author":{"gitId":"pyk595"},"content":"It is hard to keep track of everything all at once. Add a reminder for a client to `remind` you about tasks.","lastModifiedDate":"2022-03-30"},{"lineNumber":311,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":312,"author":{"gitId":"bloodofme"},"content":"* `INDEX` signifies the specified contact.","lastModifiedDate":"2022-03-30"},{"lineNumber":313,"author":{"gitId":"bloodofme"},"content":"* `INDEX` refers to the index number shown in the displayed contact list.","lastModifiedDate":"2022-03-30"},{"lineNumber":314,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":315,"author":{"gitId":"ngjunkang"},"content":"Format: `remind INDEX r/REMINDER rd/DATE`","lastModifiedDate":"2022-03-28"},{"lineNumber":316,"author":{"gitId":"pyk595"},"content":"* `DATE` should be in the specified date format.","lastModifiedDate":"2022-03-28"},{"lineNumber":317,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":318,"author":{"gitId":"cashewnade"},"content":"Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":319,"author":{"gitId":"pyk595"},"content":"* `remind 13 r/phone call rd/2022-09-11` sets up a reminder for you to make a phone call to the 13th person on 11 Sep 2022.","lastModifiedDate":"2022-03-30"},{"lineNumber":320,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":321,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":322,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":323,"author":{"gitId":"pyk595"},"content":"### Viewing reminders of a contact: `reminder`","lastModifiedDate":"2022-03-30"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"pyk595"},"content":"Sometimes, certain clients require more attention. You can view all reminders of tasks you need to do for these specific clients.","lastModifiedDate":"2022-03-30"},{"lineNumber":326,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":327,"author":{"gitId":"cashewnade"},"content":"Format: `reminder INDEX`","lastModifiedDate":"2022-03-02"},{"lineNumber":328,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":329,"author":{"gitId":"cashewnade"},"content":"Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":330,"author":{"gitId":"pyk595"},"content":"* `reminder 7`shows you a list of tasks you need to do for the 7th person along with their corresponding deadlines.","lastModifiedDate":"2022-03-30"},{"lineNumber":331,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":332,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":333,"author":{"gitId":"ngjunkang"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":334,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":335,"author":{"gitId":"pyk595"},"content":"### Viewing reminders by date: `reminders`","lastModifiedDate":"2022-03-30"},{"lineNumber":336,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":337,"author":{"gitId":"pyk595"},"content":"If you just want to look at the tasks you need to do by a specific date, you can display all reminders due by a specified date.","lastModifiedDate":"2022-03-30"},{"lineNumber":338,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":339,"author":{"gitId":"cashewnade"},"content":"Format: `reminders [d/DATE]`","lastModifiedDate":"2022-03-02"},{"lineNumber":340,"author":{"gitId":"pyk595"},"content":"* `DATE` should be in the specified date format.","lastModifiedDate":"2022-03-28"},{"lineNumber":341,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":342,"author":{"gitId":"cashewnade"},"content":"Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":343,"author":{"gitId":"pyk595"},"content":"* `reminders d/2023-01-01` shows all reminders for 1 Jan 2023.","lastModifiedDate":"2022-03-30"},{"lineNumber":344,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":345,"author":{"gitId":"pyk595"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-30"},{"lineNumber":346,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":347,"author":{"gitId":"pyk595"},"content":"### Show all birthdays today: `birthdays`","lastModifiedDate":"2022-03-30"},{"lineNumber":348,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"pyk595"},"content":"As an insurance agent, it is important to keep track of your clients\u0027 birthdays. We strongly suggest you to use the `birthdays` command once a day to make sure you do not miss out on your valued clients\u0027 birthdays.","lastModifiedDate":"2022-03-30"},{"lineNumber":350,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":351,"author":{"gitId":"pyk595"},"content":"Format: `birthdays`","lastModifiedDate":"2022-03-30"},{"lineNumber":352,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":353,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":354,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":355,"author":{"gitId":"cashewnade"},"content":"### Deleting a reminder: `forget`","lastModifiedDate":"2022-03-02"},{"lineNumber":356,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":357,"author":{"gitId":"pyk595"},"content":"If a reminder is no longer necessary, you can delete the specific reminder to make your reminder list cleaner and shorter.","lastModifiedDate":"2022-03-30"},{"lineNumber":358,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":359,"author":{"gitId":"pyk595"},"content":"Format: `forget INDEX del/INDEX`","lastModifiedDate":"2022-03-30"},{"lineNumber":360,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":361,"author":{"gitId":"cashewnade"},"content":"Example:","lastModifiedDate":"2022-03-02"},{"lineNumber":362,"author":{"gitId":"pyk595"},"content":"* `forget 5 del/1` helps you delete the first reminder on the 5th person\u0027s list.","lastModifiedDate":"2022-03-30"},{"lineNumber":363,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":364,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":365,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":366,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":373,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":374,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"pyk595"},"content":"The application\u0027s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-27"},{"lineNumber":377,"author":{"gitId":"pyk595"},"content":"If you made a mistake while manually editing the saved data, a backup save file would be generated in the same folder.","lastModifiedDate":"2022-03-27"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"pyk595"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"ngjunkang"},"content":"| Action                                                   | Format                                                                                |","lastModifiedDate":"2022-03-28"},{"lineNumber":387,"author":{"gitId":"pyk595"},"content":"|----------------------------------------------------------|---------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":388,"author":{"gitId":"ngjunkang"},"content":"| **Add a contact**                                        | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS b/BIRTH_DATE [t/TAG]…​`                  |","lastModifiedDate":"2022-03-28"},{"lineNumber":389,"author":{"gitId":"pyk595"},"content":"| **View all contacts**                                    | `list`                                                                                |","lastModifiedDate":"2022-03-30"},{"lineNumber":390,"author":{"gitId":"ngjunkang"},"content":"| **Edit a contact**                                       | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [b/BIRTH_DATE] [t/TAG]…​` |","lastModifiedDate":"2022-03-28"},{"lineNumber":391,"author":{"gitId":"ngjunkang"},"content":"| **Find a contact by keywords**                           | `find KEYWORD [MORE_KEYWORDS]`                                                        |","lastModifiedDate":"2022-03-28"},{"lineNumber":392,"author":{"gitId":"ngjunkang"},"content":"| **Delete a contact**                                     | `delete INDEX`                                                                        |","lastModifiedDate":"2022-03-28"},{"lineNumber":393,"author":{"gitId":"ngjunkang"},"content":"| **Add a tag**                                            | `tag INDEX t/TAG`                                                                     |","lastModifiedDate":"2022-03-28"},{"lineNumber":394,"author":{"gitId":"ngjunkang"},"content":"| **Delete a tag**                                         | `untag INDEX t/TAG`                                                                   |","lastModifiedDate":"2022-03-28"},{"lineNumber":395,"author":{"gitId":"ngjunkang"},"content":"| **Show all tags**                                        | `tags`                                                                                |","lastModifiedDate":"2022-03-28"},{"lineNumber":396,"author":{"gitId":"ngjunkang"},"content":"| **Find contacts by tags**                                | `#`                                                                                   |","lastModifiedDate":"2022-03-28"},{"lineNumber":397,"author":{"gitId":"pyk595"},"content":"| **Record an interaction with a contact**                 | `contacted INDEX d/DATE des/description`                                              |","lastModifiedDate":"2022-03-30"},{"lineNumber":398,"author":{"gitId":"pyk595"},"content":"| **Delete a recorded interaction with a contact**         | `unlog INDEX del/INDEX`                                                               |","lastModifiedDate":"2022-03-30"},{"lineNumber":399,"author":{"gitId":"pyk595"},"content":"| **View all recorded interactions with a contact**        | `logs INDEX`                                                                          |","lastModifiedDate":"2022-03-30"},{"lineNumber":400,"author":{"gitId":"pyk595"},"content":"| **View people contacted within DAYS**                    | `within DAYS`                                                                         |","lastModifiedDate":"2022-03-30"},{"lineNumber":401,"author":{"gitId":"pyk595"},"content":"| **View people you have contacted more than DAYS** ago    | `after DAYS`                                                                          |","lastModifiedDate":"2022-03-30"},{"lineNumber":402,"author":{"gitId":"pyk595"},"content":"| **View birthdays occurring today**                       | `birthdays`                                                                           |","lastModifiedDate":"2022-03-30"},{"lineNumber":403,"author":{"gitId":"pyk595"},"content":"| **Add a reminder**                                       | `remind INDEX r/REMINDER rd/DATE`                                                     |","lastModifiedDate":"2022-03-30"},{"lineNumber":404,"author":{"gitId":"ngjunkang"},"content":"| **View reminders of a contact**                          | `reminder INDEX`                                                                      |","lastModifiedDate":"2022-03-28"},{"lineNumber":405,"author":{"gitId":"ngjunkang"},"content":"| **View reminders on a date**                             | `reminders [rd/DATE]`                                                                 |","lastModifiedDate":"2022-03-28"},{"lineNumber":406,"author":{"gitId":"pyk595"},"content":"| **Delete a reminder**                                    | `forget INDEX del/INDEX`                                                              |","lastModifiedDate":"2022-03-30"},{"lineNumber":407,"author":{"gitId":"ngjunkang"},"content":"| **Exit the program**                                     | `exit`                                                                                |","lastModifiedDate":"2022-03-28"},{"lineNumber":408,"author":{"gitId":"ngjunkang"},"content":"| **Help**                                                 | `help`                                                                                |","lastModifiedDate":"2022-03-28"},{"lineNumber":409,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":410,"author":{"gitId":"ngjunkang"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cashewnade":55,"ngjunkang":98,"pyk595":116,"-":115,"bloodofme":26}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"pyk595"},"content":"    content: \"AIA\";","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"pyk595":1,"-":294}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"Class UniqueTagList","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUniqueTagList\" as ReadOnlyUniqueTagList","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"Class ContactedInfo","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"Model ..\u003e ReadOnlyUniqueTagList","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"ModelManager --\u003e \"1\" AddressBook","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"AddressBook *--\u003e \"1\" UniqueTagList","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"UniqueTagList .up.|\u003e ReadOnlyUniqueTagList","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"Person *--\u003e \"*\" ContactedInfo","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"AddressBook -[hidden]left-\u003e ReadOnlyUniqueTagList","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ngjunkang":9,"-":48,"bloodofme":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"title: Automated Insurance Assistant","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T17-3/tp/branch/master/graph/badge.svg?token\u003dFVMF4A2Y9H)](https://codecov.io/gh/AY2122S2-CS2103T-T17-3/tp)","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"**Automated Insurance Assistant is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"* If you are interested in using Automated Insurance Assistant, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"* If you are interested about developing Automated Insurance Assistant, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"pyk595":4,"-":15}},{"path":"docs/team/bloodofme.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"title: Nadine Chiun\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"### Project: Automated Insurance Assistant (AIA)","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"Automated Insurance Assistant (AIA) is a desktop application for managing contacts. AIA helps insurance agents handle all contact management processes, making sure they always have a snapshot of clients’ profiles on hand, with reminders for events.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dbloodofme\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"    * README:","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"      * Update README for project according to AIA [\\#17](https://github.com/AY2122S2-CS2103T-T17-3/tp/pull/17)","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"    * AboutUs:","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"      * Update AboutUs for project according to team member\u0027s roles and information [\\#17](https://github.com/AY2122S2-CS2103T-T17-3/tp/pull/17)","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    * Review:","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"      * Review most of team member\u0027s tasks, suggested changes before approving for merge to master","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"bloodofme":20}},{"path":"docs/team/cashewnade.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"layout: page","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"title: Shi Kexin\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"### Project: Automated Insurance Assistant (AIA)","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":"Automated Insurance Assistant (AIA) is a desktop application for managing contacts. AIA helps insurance agents handle","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"all contact management processes, making sure they always have a snapshot of clients’ profiles on hand, with reminders","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"for events.","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":"* **Code contributed**: [RepoSense link](#https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dcashewnade\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dcashewnade\u0026tabRepo\u003dAY2122S2-CS2103T-T17-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"* **User Guide**:","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"    * Wrote the initial v1.1 draft.","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"    * Reformatted the user guide into markdown format.","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cashewnade":18}},{"path":"docs/team/ngjunkang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"title: Ng Jun Kang\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"### Project: Automated Insurance Assistant (AIA)","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"Automated Insurance Assistant (AIA) is a desktop application for managing contacts. AIA helps insurance agents handle all contact management processes, making sure they always have a snapshot of clients’ profiles on hand, with reminders for events.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dngjunkang\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"        * Wrote 20% of the initial v1.1 draft in Google Docs","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"        * Reformatted Use Cases and Glossary of the v1.1 draft to MarkDown format (Pull requests [\\#15](https://github.com/AY2122S2-CS2103T-T17-3/tp/pull/15), [\\#16](https://github.com/AY2122S2-CS2103T-T17-3/tp/pull/16))","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"ngjunkang":17}},{"path":"docs/team/pyk595.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"title: Pang Yuan Ker\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"### Project: Automated Insurance Assistant (AIA)","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"Automated Insurance Assistant (AIA) is a desktop application for managing contacts.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"AIA helps insurance agents handle all contact management processes, making sure they always have a","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"snapshot of clients’ profiles on hand, with reminders for events.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"- **Code contributed:**","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"  [Code Dashboard](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dpyk595\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"- **Team-based tasks**:","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"    1. Setting up GitHub Team Organisation and repository","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"    2. Setting up CI tools (GitHub actions and CodeCov)","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    3. Maintaining issue tracker","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"- **Documentation:**","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"    - Developer Guide","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"        - Wrote 80% of the initial v1.1 draft in Google Docs","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"        - Reformatted the following items in the v1.1 draft to MarkDown format","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"            1. Target User Profile, User Stories, Value Proposition","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"               (Pull request [#19](https://github.com/AY2122S2-CS2103T-T17-3/tp/pull/19))","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"            2. Non-functional Requirements","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"               (Pull request [#20](https://github.com/AY2122S2-CS2103T-T17-3/tp/pull/20))","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"pyk595":29}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"    public static final String MESSAGE_INVALID_ARGUMENTS \u003d \"Arguments are not allowed after this command word!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"    public static final String MESSAGE_EMPTY_CONTACTED_INFORMATION \u003d \"You have not contacted this person before\";","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pyk595":2,"-":14}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"     * Returns true if {@code s} represents an unsigned integer","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"     * e.g. 0, 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"pyk595"},"content":"    public static boolean isUnsignedInteger(String s) {","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\");","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"pyk595"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pyk595":19,"-":68}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"cashewnade"},"content":"        Command command \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"cashewnade"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"cashewnade"},"content":"            command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cashewnade"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"cashewnade"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cashewnade":6,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTH_DATE;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"            + PREFIX_BIRTH_DATE + \"BIRTHDATE \"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"            + PREFIX_CONTACTED_DATE + \"CONTACTED_DATE \"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"            + PREFIX_CONTACTED_DESC + \"DESC \"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"            + PREFIX_BIRTH_DATE + \"2000-01-01 \"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pyk595":3,"-":67,"bloodofme":4}},{"path":"src/main/java/seedu/address/logic/commands/AddContactedInfoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":" * Adds or changes the recent date of an existing person in the address book.","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"public class AddContactedInfoCommand extends Command {","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"    public static final String MESSAGE_ADD_CONTACTEDINFO_SUCCESS \u003d \"Added Contacted Info to Person: %1$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACTED_INFO \u003d \"Contacted list already contains: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"    public static final String COMMAND_WORD \u003d \"contacted\";","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"            + \": Adds the last contacted date  \"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"            + \"Existing date will be overwritten by the input.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"            + \"d/ [DATE] \"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"            + \"des/ [DESCRIPTION]\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"            + \"d/ 2020-02-02 \"","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"            + \"des/ meetup.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Last contacted date: %2$s, Description: %3$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"    private final Index index;","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"    private final ContactedInfo contactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"     * Creates an ContactedCommand to add the specified {@code Person}","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"     * @param index of the person in the filtered person list to edit the contacted date","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"     * @param contactedInfo of the person to be updated to","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"    public AddContactedInfoCommand(Index index, ContactedInfo contactedInfo) {","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"        requireAllNonNull(index, contactedInfo);","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"        this.contactedInfo \u003d contactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"     * Creates a CommandResult object.","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"     * @return the CommandResult object.","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"     * @throws CommandException if it is an invalid command.","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bloodofme"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"        if (personToEdit.containsContactedInfo(contactedInfo)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_CONTACTED_INFO, contactedInfo.toString()));","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"bloodofme"},"content":"        ArrayList\u003cContactedInfo\u003e updatedContactedInfo \u003d new ArrayList\u003c\u003e(personToEdit.getContactedInfoList());","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"        updatedContactedInfo.add(contactedInfo);","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"        Collections.sort(updatedContactedInfo);","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"bloodofme"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"bloodofme"},"content":"                personToEdit.getName(),","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"bloodofme"},"content":"                personToEdit.getPhone(),","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"bloodofme"},"content":"                personToEdit.getEmail(),","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"bloodofme"},"content":"                personToEdit.getAddress(),","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"bloodofme"},"content":"                personToEdit.getBirthDate(),","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"bloodofme"},"content":"                Collections.unmodifiableList(updatedContactedInfo),","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"bloodofme"},"content":"                personToEdit.getTags(),","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"cashewnade"},"content":"                personToEdit.getReminderList());","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"bloodofme"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"bloodofme"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_CONTACTEDINFO_SUCCESS, editedPerson));","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"bloodofme"},"content":"     * Adds a {ContectInfo} to a ContactedInfo ArrayList by creating a new {@code ArrayList} (immutable).","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"bloodofme"},"content":"     * @param contactedInfoList the info ArrayList to add a {@code ContactedInfo} to.","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"bloodofme"},"content":"     * @param infoToAdd the {@code ContactedInfo} to be added.","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"bloodofme"},"content":"     * @return an immutable ContactedInfo ArrayList consisting","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"bloodofme"},"content":"     * of the existing {@code ContactedInfo} and {@code infoToAdd}.","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"bloodofme"},"content":"    private static ArrayList\u003cContactedInfo\u003e addContactedInfoToList(","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"bloodofme"},"content":"            ArrayList\u003cContactedInfo\u003e contactedInfoList, ContactedInfo infoToAdd) {","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"bloodofme"},"content":"        ArrayList\u003cContactedInfo\u003e updatedInfoList \u003d new ArrayList\u003c\u003e(contactedInfoList);","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"bloodofme"},"content":"        updatedInfoList.add(infoToAdd);","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"bloodofme"},"content":"        return (ArrayList\u003cContactedInfo\u003e) Collections.unmodifiableList(updatedInfoList);","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"bloodofme"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"bloodofme"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"bloodofme"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"bloodofme"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"bloodofme"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"bloodofme"},"content":"        if (!(other instanceof AddContactedInfoCommand)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"bloodofme"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"bloodofme"},"content":"        // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"bloodofme"},"content":"        AddContactedInfoCommand e \u003d (AddContactedInfoCommand) other;","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"bloodofme"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"bloodofme"},"content":"                \u0026\u0026 contactedInfo.equals(contactedInfo);","lastModifiedDate":"2022-03-19"},{"lineNumber":128,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"cashewnade":1,"bloodofme":129}},{"path":"src/main/java/seedu/address/logic/commands/AddReminderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMINDER_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMINDER_DESCRIPTION;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.date.DocumentedDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":" * Adds a reminder to a contact.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"public class AddReminderCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"    public static final String COMMAND_WORD \u003d \"remind\";","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a reminder to an existing contact, \"","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"cashewnade"},"content":"            + \"as specified by the index number used in the displayed person list. The reminder will be replace \"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"            + \"any existing reminder. If a date is not specified, it will register today as the reminder date.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cashewnade"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"cashewnade"},"content":"            + PREFIX_REMINDER_DESCRIPTION + \"REMINDER \"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cashewnade"},"content":"            + \"[\" + PREFIX_REMINDER_DATE + \"DATE]\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"cashewnade"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 \"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"cashewnade"},"content":"            + PREFIX_REMINDER_DESCRIPTION + \"meeting \"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"cashewnade"},"content":"            + PREFIX_REMINDER_DATE + new DocumentedDate(LocalDate.of(2022, 01, 01)).toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"cashewnade"},"content":"    public static final String MESSAGE_ADD_REMINDER_SUCCESS \u003d \"Added reminder %1$s for %2$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"cashewnade"},"content":"    private final Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"cashewnade"},"content":"    private final Reminder reminder;","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"cashewnade"},"content":"     * Constructs an {@code AddReminderCommand} with the given {@code Index} and {@code Reminder}.","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"cashewnade"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"     * @param index    of the person in the filtered person list to add the {@code Reminder}.","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"cashewnade"},"content":"     * @param reminder to be added to the {@code Person} specified by {@code index}.","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"cashewnade"},"content":"    public AddReminderCommand(Index index, Reminder reminder) {","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(reminder);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"cashewnade"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"cashewnade"},"content":"        this.reminder \u003d reminder;","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"cashewnade"},"content":"     * Creates and returns a {@code Person} with the details of personToEdit {@code Person}","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"cashewnade"},"content":"     * added with reminderToAdd {@code Reminder}.","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"cashewnade"},"content":"    private static Person createPersonWithAddedReminder(Person personToEdit, Reminder reminderToAdd) {","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"cashewnade"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"cashewnade"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"cashewnade"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"cashewnade"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"cashewnade"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"cashewnade"},"content":"        BirthDate updatedBirthDate \u003d personToEdit.getBirthDate();","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"        List\u003cContactedInfo\u003e updatedContactedInfoList \u003d personToEdit.getContactedInfoList();","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"cashewnade"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"cashewnade"},"content":"        ReminderList updatedReminders \u003d personToEdit.getReminderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"cashewnade"},"content":"        updatedReminders.add(reminderToAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"cashewnade"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthDate,","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"bloodofme"},"content":"                updatedContactedInfoList, updatedTags, updatedReminders);","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"cashewnade"},"content":"     * Adds a reminder to an existing person in the address book, if the reminder does not exist.","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"cashewnade"},"content":"     * If there is an existing reminder, the newly added reminder will replace the previous one.","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"cashewnade"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"cashewnade"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"cashewnade"},"content":"     * @return the command result after the command execution.","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"cashewnade"},"content":"     * @throws CommandException if the {@code Reminder} already exists or the {@code Index} is invalid.","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"cashewnade"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"cashewnade"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"cashewnade"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"cashewnade"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"cashewnade"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"cashewnade"},"content":"        Person editedPerson \u003d createPersonWithAddedReminder(personToEdit, this.reminder);","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"cashewnade"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"cashewnade"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"cashewnade"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_REMINDER_SUCCESS, this.reminder, editedPerson.getName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"cashewnade":105,"bloodofme":3}},{"path":"src/main/java/seedu/address/logic/commands/AddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":" * Adds a tag to an existing person in the address book, if the tag does not exist.","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a tag to the tags of an existing contact, \"","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"            + \"as specified by the index number used in the displayed person list. The tag will be added only if \"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"            + \"the tag is valid and is not already tagged to the contact (case-insensitive).\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 \"","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"            + PREFIX_TAG + \"friends\";","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Added tag: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"This person is already tagged to %1$s.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"    private final Index index;","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"    private final Tag tag;","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"     * Constructs an {@code AddTagCommand} with the given {@code Index} and {@code Tag}.","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"     * @param index of the person in the filtered person list to add the {@code Tag}.","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"     * @param tag to be tagged to the {@code Person} specified by {@code index}.","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"    public AddTagCommand(Index index, Tag tag) {","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"     * Adds a tag to an existing person in the address book, if the tag does not exist.","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"     * @return the command result after the command execution.","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"     * @throws CommandException if the {@code Tag} already exists or the {@code Index} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"        if (personToEdit.hasTag(this.tag)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_TAG, this.tag));","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"        Person editedPerson \u003d createPersonWithAddedTag(personToEdit, this.tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TAG_SUCCESS, editedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"     * Creates and returns a {@code Person} with the details of personToEdit {@code Person}","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"     * added with tagToAdd {@code Tag}.","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"     * @param personToEdit the {@code Person} to add the {@code Tag} to.","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"     * @param tagToAdd the {@code Tag} to add to {@code Person}.","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"     * @return the edited {@code Person} added with tagToAdd {@code Tag}.","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"    private static Person createPersonWithAddedTag(Person personToEdit, Tag tagToAdd) {","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"pyk595"},"content":"        BirthDate updatedBirthDate \u003d personToEdit.getBirthDate();","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"bloodofme"},"content":"        List\u003cContactedInfo\u003e updatedContactedInfo \u003d personToEdit.getContactedInfoList();","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e updatedTags \u003d addTagToSet(personToEdit.getTags(), tagToAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"cashewnade"},"content":"        ReminderList updatedReminders \u003d personToEdit.getReminderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"bloodofme"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthDate,","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bloodofme"},"content":"                updatedContactedInfo, updatedTags, updatedReminders);","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"     * Adds a {Tag} to a tag set by creating a new {@code HashSet} (immutable).","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"     * @param tags the tag set to add a {@code Tag} to.","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"     * @param tagToAdd the {@code Tag} to be added.","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"     * @return an immutable tag set consisting of the existing {@code Tag} and {@code tagToAdd} (only unique tags).","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"    private static Set\u003cTag\u003e addTagToSet(Set\u003cTag\u003e tags, Tag tagToAdd) {","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"ngjunkang"},"content":"        updatedTags.add(tagToAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"ngjunkang"},"content":"        return Collections.unmodifiableSet(updatedTags);","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"ngjunkang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"ngjunkang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"ngjunkang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"ngjunkang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"ngjunkang"},"content":"        if (!(other instanceof AddTagCommand)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"ngjunkang"},"content":"        // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand e \u003d (AddTagCommand) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"ngjunkang"},"content":"        return this.index.equals(e.index)","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"ngjunkang"},"content":"                \u0026\u0026 this.tag.equals(e.tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"cashewnade":2,"ngjunkang":136,"pyk595":2,"bloodofme":4}},{"path":"src/main/java/seedu/address/logic/commands/BirthdayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS_WITH_BIRTHDAY_TODAY;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":" * Lists all birthdays occurring today.","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"public class BirthdayCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"    public static final String COMMAND_WORD \u003d \"birthdays\";","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are the people with birthdays today.\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"                                                    + Messages.MESSAGE_PERSONS_LISTED_OVERVIEW","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"                                                    + \"\\nSend them a birthday message!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS_WITH_BIRTHDAY_TODAY);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, model.getFilteredPersonListSize()));","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"pyk595":34}},{"path":"src/main/java/seedu/address/logic/commands/ContactedOutsideRangeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.PersonOutsideDateRangePredicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":" * List all persons contacted outside of the designated number of days.","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"public class ContactedOutsideRangeCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"    public static final String COMMAND_WORD \u003d \"after\";","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all contacts contacted outside \"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"            + \"the specified range of days and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"            + \"Parameters: number of days (Positive integer or 0)\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"            + \"Example: \" + COMMAND_WORD + \" 5\";","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    private final PersonOutsideDateRangePredicate predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"     * Constructs a {@code ContactedOutsideRangeCommand} object with the given {@code PersonOutsideDateRangePredicate}.","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"     * @param predicate the predicate for the command execution in the context of {@code ContactedOutsideRangeCommand}.","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"    public ContactedOutsideRangeCommand(PersonOutsideDateRangePredicate predicate) {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"     * Executes the command and returns the {@code CommandResult}","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"     * @return {@code CommandResult} of the operation result for display","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonListSize()));","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        if (!(other instanceof ContactedOutsideRangeCommand)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"            return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"        return predicate.equals(((ContactedOutsideRangeCommand) other).predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"pyk595":59}},{"path":"src/main/java/seedu/address/logic/commands/ContactedWithinRangeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.PersonWithinDateRangePredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":" * List all persons contacted within a designated number of days.","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"public class ContactedWithinRangeCommand extends Command {","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"    public static final String COMMAND_WORD \u003d \"within\";","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all contacts contacted within \"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"            + \"the specified range of days and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"            + \"Parameters: number of days (Positive integer or 0)\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"            + \"Example: \" + COMMAND_WORD + \" 5\";","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    private final PersonWithinDateRangePredicate predicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"     * Constructs a {@code ContactedWithinRangeCommand} object with the given {@code PersonWithinDateRangePredicate}.","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"     * @param predicate the predicate for the command execution in the context of {@code ContactedWithinRangeCommand}.","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"    public ContactedWithinRangeCommand(PersonWithinDateRangePredicate predicate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"     * Executes the command and returns the {@code CommandResult}.","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"     * @return {@code CommandResult} of the operation result for display.","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonListSize()));","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"        if (!(other instanceof ContactedWithinRangeCommand)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"            return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"        // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"        return predicate.equals(((ContactedWithinRangeCommand) other).predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"pyk595":60}},{"path":"src/main/java/seedu/address/logic/commands/DeleteContactedInfoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_CONTACTED_INFO;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":" * Deletes a specified contacted info from an existing person in the address book, if list is not empty.","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"public class DeleteContactedInfoCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"    public static final String COMMAND_WORD \u003d \"unlog\";","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"            + \": Deletes a contacted information from an existing contact, \\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"            + \"as specified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"            + \"The log will be deleted only if \"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"            + \"the contacted information list is not empty.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"            + PREFIX_DELETE_CONTACTED_INFO + \"INDEX\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 \"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"            + PREFIX_DELETE_CONTACTED_INFO + \"1\";","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"    public static final String MESSAGE_DELETE_CONTACTED_INFO_SUCCESS \u003d \"Deleted contacted information: %1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"    public static final String MESSAGE_INVALID_CONTACTED_INFO_INDEX \u003d \"The specified log entry does not exist.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"    public static final String MESSAGE_EMPTY_CONTACTED_INFO_LIST \u003d \"Cannot delete, list is empty!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"    private final Index index;","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"    private final Index indexToDel;","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"     * Constructs an {@code DeleteContactedInfoCommand} with the given {@code Index} and {@code ContactedInfo}.","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"     * @param index of the person in the filtered person list to add the {@code Tag}.","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"     * @param indexToDel  to be deleted from the {@code Person} specified by {@code index}.","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"    public DeleteContactedInfoCommand(Index index, Index indexToDel) {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(indexToDel);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"        this.indexToDel \u003d indexToDel;","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"     * Deletes a tag from an existing person in the address book, if the tag exists.","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"bloodofme"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"     * @return the command result after the command execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"     * @throws CommandException if the {@code Tag} do not exist or the {@code Index} is invalid.","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"bloodofme"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"        if (personToEdit.isContactedInfoListEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"            throw new CommandException(MESSAGE_EMPTY_CONTACTED_INFO_LIST);","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"pyk595"},"content":"        if (indexToDel.getOneBased() \u003e personToEdit.getContactedInfoListSize()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"            throw new CommandException(MESSAGE_INVALID_CONTACTED_INFO_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"pyk595"},"content":"        ContactedInfo contactedInfo \u003d personToEdit.getContactedInfoEntry(indexToDel);","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"pyk595"},"content":"        Person editedPerson \u003d createPersonWithDeletedContactedInfo(personToEdit, contactedInfo);","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"bloodofme"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"pyk595"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CONTACTED_INFO_SUCCESS, contactedInfo));","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"bloodofme"},"content":"     * Creates and returns a {@code Person} with the details of personToEdit {@code Person}","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"bloodofme"},"content":"     * with tagToDelete {@code Tag} deleted.","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"bloodofme"},"content":"     * @param personToEdit the {@code Person} to delete the {@code ContactedInfo} from.","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"bloodofme"},"content":"     * @param contactedInfoToDel the {@code ContactedInfo} to delete from {@code Person}.","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"bloodofme"},"content":"     * @return the edited {@code Person} with contactedInfoToDel {@code ContactedInfo} deleted.","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"bloodofme"},"content":"    private static Person createPersonWithDeletedContactedInfo(Person personToEdit, ContactedInfo contactedInfoToDel) {","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"bloodofme"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"bloodofme"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"bloodofme"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"bloodofme"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"bloodofme"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"bloodofme"},"content":"        BirthDate updatedBirthDate \u003d personToEdit.getBirthDate();","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"bloodofme"},"content":"        List\u003cContactedInfo\u003e updatedContactedInfo \u003d deleteContactedInfoFromList(","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"bloodofme"},"content":"                personToEdit.getContactedInfoList(), contactedInfoToDel);","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"bloodofme"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"bloodofme"},"content":"        ReminderList updatedReminders \u003d personToEdit.getReminderList();","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"bloodofme"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthDate,","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"bloodofme"},"content":"                updatedContactedInfo, updatedTags, updatedReminders);","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"bloodofme"},"content":"     * Deletes a {@code ContactedInfo} from a list by creating a new {@code List} (immutable)","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"bloodofme"},"content":"     * if the contacted info exists.","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"bloodofme"},"content":"     * @param contactedInfoArrayList the list to delete a {@code ContactedInfo} from.","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"bloodofme"},"content":"     * @param contactedInfoToDel the {@code ContactedInfo} to be deleted.","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"bloodofme"},"content":"     * @return an immutable list consisting of the existing {@code ContactedInfo} and {@code contactedInfoToDel}.","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"bloodofme"},"content":"    private static List\u003cContactedInfo\u003e deleteContactedInfoFromList(","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"bloodofme"},"content":"            List\u003cContactedInfo\u003e contactedInfoArrayList, ContactedInfo contactedInfoToDel) {","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"bloodofme"},"content":"        ArrayList\u003cContactedInfo\u003e updatedList \u003d new ArrayList\u003c\u003e(contactedInfoArrayList);","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"bloodofme"},"content":"        updatedList.remove(contactedInfoToDel);","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"bloodofme"},"content":"        return Collections.unmodifiableList(updatedList);","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"bloodofme"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"bloodofme"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"bloodofme"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"bloodofme"},"content":"            return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"bloodofme"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"bloodofme"},"content":"        if (!(other instanceof DeleteContactedInfoCommand)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"bloodofme"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"bloodofme"},"content":"        // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"bloodofme"},"content":"        DeleteContactedInfoCommand e \u003d (DeleteContactedInfoCommand) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"bloodofme"},"content":"        return this.index.equals(e.index) \u0026\u0026 this.indexToDel.equals(e.indexToDel);","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"pyk595":13,"bloodofme":140}},{"path":"src/main/java/seedu/address/logic/commands/DeleteReminderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMINDER_DESCRIPTION;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":" * Deletes a reminder from a contact.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"public class DeleteReminderCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"    public static final String COMMAND_WORD \u003d \"forget\";","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a reminder from an existing contact, \"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"            + \"as specified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"cashewnade"},"content":"            + PREFIX_REMINDER_DESCRIPTION + \"REMINDER\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cashewnade"},"content":"            + PREFIX_REMINDER_DESCRIPTION + \"meeting\";","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"cashewnade"},"content":"    public static final String MESSAGE_DELETE_REMINDER_SUCCESS \u003d \"Deleted reminder: %1$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"cashewnade"},"content":"    private final Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"cashewnade"},"content":"    private final ReminderDescription reminderDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"cashewnade"},"content":"     * Creates an DeleteReminderCommand to delete the specified {@code ReminderDescription} from the","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"cashewnade"},"content":"     * specified {@code Person}","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"cashewnade"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"cashewnade"},"content":"     * @param index of the person","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cashewnade"},"content":"     * @param reminderDescription of the reminder to be deleted.","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"cashewnade"},"content":"    public DeleteReminderCommand(Index index, ReminderDescription reminderDescription) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"cashewnade"},"content":"        this.reminderDescription \u003d reminderDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"cashewnade"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"cashewnade"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"cashewnade"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"cashewnade"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"cashewnade"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"cashewnade"},"content":"        Person personToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"cashewnade"},"content":"        ReminderList reminderList \u003d personToDelete.getReminderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"cashewnade"},"content":"        Reminder reminderToDelete \u003d reminderList.find(reminderDescription);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"cashewnade"},"content":"        Name updatedName \u003d personToDelete.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"cashewnade"},"content":"        Phone updatedPhone \u003d personToDelete.getPhone();","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"cashewnade"},"content":"        Email updatedEmail \u003d personToDelete.getEmail();","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"cashewnade"},"content":"        Address updatedAddress \u003d personToDelete.getAddress();","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"cashewnade"},"content":"        BirthDate updatedBirthDate \u003d personToDelete.getBirthDate();","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"        List\u003cContactedInfo\u003e updatedContactedInfo \u003d personToDelete.getContactedInfoList();","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"cashewnade"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToDelete.getTags();","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"cashewnade"},"content":"        ReminderList updatedReminderList \u003d reminderList.delete(reminderToDelete);","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"cashewnade"},"content":"        Person updatedPerson \u003d new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthDate,","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"                updatedContactedInfo, updatedTags, updatedReminderList);","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"cashewnade"},"content":"        model.setPerson(personToDelete, updatedPerson);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"cashewnade"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"cashewnade"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_REMINDER_SUCCESS, reminderToDelete));","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"cashewnade":82,"bloodofme":3}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":" * Deletes a tag from an existing person in the address book, if the tag exists.","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"public class DeleteTagCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    public static final String COMMAND_WORD \u003d \"untag\";","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a tag from the tags of an existing contact, \"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"            + \"as specified by the index number used in the displayed person list. The tag will be deleted only if \"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"            + \"the tag is valid and is tagged to the contact (case-insensitive).\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 \"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"            + PREFIX_TAG + \"friends\";","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_DELETE_TAG_SUCCESS \u003d \"Deleted tag: %1$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_MISSING_TAG \u003d \"This person is not tagged to %1$s.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"    private final Index index;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"    private final Tag tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"     * Constructs an {@code DeleteTagCommand} with the given {@code Index} and {@code Tag}.","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"     * @param index of the person in the filtered person list to add the {@code Tag}.","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"     * @param tag to be deleted from the {@code Person} specified by {@code index}.","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"    public DeleteTagCommand(Index index, Tag tag) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"     * Deletes a tag from an existing person in the address book, if the tag exists.","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"     * @return the command result after the command execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"     * @throws CommandException if the {@code Tag} do not exist or the {@code Index} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"        if (!personToEdit.hasTag(this.tag)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"            throw new CommandException(String.format(MESSAGE_MISSING_TAG, this.tag));","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"        Person editedPerson \u003d createPersonWithDeletedTag(personToEdit, this.tag);","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TAG_SUCCESS, editedPerson));","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"     * Creates and returns a {@code Person} with the details of personToEdit {@code Person}","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"     * with tagToDelete {@code Tag} deleted.","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"     * @param personToEdit the {@code Person} to delete the {@code Tag} from.","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"     * @param tagToDelete the {@code Tag} to delete from {@code Person}.","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"     * @return the edited {@code Person} with tagToDelete {@code Tag} deleted.","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"    private static Person createPersonWithDeletedTag(Person personToEdit, Tag tagToDelete) {","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"        BirthDate updatedBirthDate \u003d personToEdit.getBirthDate();","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"bloodofme"},"content":"        List\u003cContactedInfo\u003e updatedContactedInfo \u003d personToEdit.getContactedInfoList();","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e updatedTags \u003d deleteTagFromSet(personToEdit.getTags(), tagToDelete);","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"cashewnade"},"content":"        ReminderList updatedReminders \u003d personToEdit.getReminderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthDate,","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"bloodofme"},"content":"                updatedContactedInfo, updatedTags, updatedReminders);","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"     * Deletes a {Tag} from a tag set by creating a new {@code HashSet} (immutable) if the tag exists.","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"     * @param tags the tag set to delete a {@code Tag} from.","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"     * @param tagToDelete the {@code Tag} to be deleted.","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"     * @return an immutable tag set consisting of the existing {@code Tag} and {@code tagToDelete} (only unique tags).","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"    private static Set\u003cTag\u003e deleteTagFromSet(Set\u003cTag\u003e tags, Tag tagToDelete) {","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"ngjunkang"},"content":"        updatedTags.remove(tagToDelete);","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"ngjunkang"},"content":"        return Collections.unmodifiableSet(updatedTags);","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"ngjunkang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"ngjunkang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"ngjunkang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"ngjunkang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"ngjunkang"},"content":"        if (!(other instanceof DeleteTagCommand)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"ngjunkang"},"content":"        // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand e \u003d (DeleteTagCommand) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"ngjunkang"},"content":"        return this.index.equals(e.index)","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"ngjunkang"},"content":"                \u0026\u0026 this.tag.equals(e.tag);","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"cashewnade":2,"ngjunkang":139,"bloodofme":3}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"            + \": Edits the details of the person identified \"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"bloodofme"},"content":"        BirthDate updatedBirthDate \u003d editPersonDescriptor.getBirthDate().orElse(personToEdit.getBirthDate());","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bloodofme"},"content":"        List\u003cContactedInfo\u003e updatedContactedInfoList \u003d personToEdit.getContactedInfoList();","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"cashewnade"},"content":"        ReminderList updatedReminderList \u003d personToEdit.getReminderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"bloodofme"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"bloodofme"},"content":"                updatedBirthDate, updatedContactedInfoList, updatedTags, updatedReminderList);","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"bloodofme"},"content":"        private BirthDate birthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"bloodofme"},"content":"            setBirthdate(toCopy.birthDate);","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"bloodofme"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address,","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"bloodofme"},"content":"                    birthDate, tags);","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"bloodofme"},"content":"        public void setBirthdate(BirthDate birthDate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"bloodofme"},"content":"            this.birthDate \u003d birthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"bloodofme"},"content":"        public Optional\u003cBirthDate\u003e getBirthDate() {","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"bloodofme"},"content":"            return Optional.ofNullable(birthDate);","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"bloodofme"},"content":"                    \u0026\u0026 getBirthDate().equals(e.getBirthDate())","lastModifiedDate":"2022-03-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"cashewnade":2,"-":223,"bloodofme":21}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonListSize()));","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"pyk595":1,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/HashtagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.PersonWithTagPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":" * Finds and lists all persons in address book who is tagged to the given tag.","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"public class HashtagCommand extends Command {","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    public static final String COMMAND_WORD \u003d \"#\";","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all contacts that is tagged to \"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"            + \"the specified tag (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"            + \"Parameters: TAG\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"            + \"Example: \" + COMMAND_WORD + \"client\";","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    private final PersonWithTagPredicate predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code HashtagCommand} object with the given {@code PersonWithTagPredicate}.","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"     * @param predicate the predicate for the command execution in the context of {@code HashtagCommand}.","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    public HashtagCommand(PersonWithTagPredicate predicate) {","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonListSize()));","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"        if (!(other instanceof HashtagCommand)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        return predicate.equals(((HashtagCommand) other).predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"ngjunkang":56,"pyk595":1}},{"path":"src/main/java/seedu/address/logic/commands/ListContactRemindersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":" * Lists all reminders for a contact.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"public class ListContactRemindersCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"    public static final String COMMAND_WORD \u003d \"reminder\";","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all reminders for a specified contact. \"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"            + \"INDEX\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"            + \"3\\n\";","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all reminders for %1$s:\\n%2$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"    private final Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"     * Creates a ListContactRemindersCommand to list the reminders.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"    public ListContactRemindersCommand(Index index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cashewnade"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cashewnade"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"cashewnade"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"cashewnade"},"content":"        Person personSpecified \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"cashewnade"},"content":"        ReminderList reminderList \u003d personSpecified.getReminderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"cashewnade"},"content":"        for (Reminder reminder : reminderList.getPriorityQueue()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"cashewnade"},"content":"            output.append(String.format(\"%1$d. %2$s\\n\", counter, reminder.toString()));","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"cashewnade"},"content":"            counter++;","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"cashewnade"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personSpecified.getName(), output.toString()));","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"cashewnade":51}},{"path":"src/main/java/seedu/address/logic/commands/ListContactedInfoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":" * Lists all reminders for a contact.","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"public class ListContactedInfoCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"    public static final String COMMAND_WORD \u003d \"logs\";","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"            + \": Lists all contacted information for a specified contact. \\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"            + \"INDEX \"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"            + \"3\";","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"    public static final String MESSAGE_LIST_CONTACTED_INFO_SUCCESS \u003d \"Listed all contacted information for %1$s:\\n%2$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"    private final Index index;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"     * Creates a ListContactRemindersCommand to list the reminders.","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"    public ListContactedInfoCommand(Index index) {","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"        if (index.getOneBased() \u003e lastShownList.size()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"        Person personSpecified \u003d model.getFilteredPerson(index);","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"        return new CommandResult(String.format(MESSAGE_LIST_CONTACTED_INFO_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"                personSpecified.getName(),","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"                personSpecified.getContactedInfoListToString()));","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"        return (other \u003d\u003d this) // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"                || (other instanceof ListContactedInfoCommand) // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"                \u0026\u0026 index.equals(((ListContactedInfoCommand) other).index); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"pyk595":7,"bloodofme":53}},{"path":"src/main/java/seedu/address/logic/commands/ListDateRemindersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMINDER_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.date.ReminderDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":" * Lists all reminders happening on a specified date.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"public class ListDateRemindersCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"    public static final String COMMAND_WORD \u003d \"reminders\";","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all reminders on the specified date. \"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"            + PREFIX_REMINDER_DATE + \"DATE\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"            + PREFIX_REMINDER_DATE + \"2022-03-15\\n\";","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all reminders on the date %1$s:\\n %2$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"    private final ReminderDate reminderDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"     * Creates a ListDateRemindersCommand to list the reminders.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"    public ListDateRemindersCommand(ReminderDate reminderDate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"cashewnade"},"content":"        this.reminderDate \u003d reminderDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"cashewnade"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cashewnade"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"cashewnade"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"cashewnade"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"cashewnade"},"content":"        ObservableList\u003cPerson\u003e personList \u003d FXCollections.observableArrayList(model.getAddressBook().getPersonList());","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"cashewnade"},"content":"        for (Person person : personList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"cashewnade"},"content":"            ReminderList temp \u003d person.getReminderList().sameDateAs(reminderDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"cashewnade"},"content":"            for (Reminder reminder : temp.getPriorityQueue()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"                output.append(String.format(\"%1$d. %2$s (%3$s)\\n\", counter, reminder.toString(),","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"cashewnade"},"content":"                        person.getName().toString()));","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"cashewnade"},"content":"                counter++;","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"cashewnade"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"cashewnade"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, reminderDate.toString(), output.toString()));","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"cashewnade":59}},{"path":"src/main/java/seedu/address/logic/commands/ListTagsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.ReadOnlyUniqueTagList;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":" * Lists all unique tags in the address book to the user.","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"public class ListTagsCommand extends Command {","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    public static final String COMMAND_WORD \u003d \"tags\";","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tags: \\n%1$s\";","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_NO_TAGS \u003d \"You have no tags.\";","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"        ReadOnlyUniqueTagList tagList \u003d model.getUniqueTagList();","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"        assert model.getNumberOfUniqueTags() \u003e\u003d 0;","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"        if (model.getNumberOfUniqueTags() \u003d\u003d 0) {","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"            return new CommandResult(MESSAGE_NO_TAGS);","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tagList));","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ngjunkang":30}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTH_DATE;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"                        PREFIX_BIRTH_DATE,","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"                        PREFIX_ADDRESS,","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_BIRTH_DATE)","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        BirthDate birthDate \u003d ParserUtil.parseBirthDate(argMultimap.getValue(PREFIX_BIRTH_DATE).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"        ArrayList\u003cContactedInfo\u003e contactedInfoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"        contactedInfoList.add(ContactedInfo.getDefaultContactedInfo());","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"cashewnade"},"content":"        ReminderList reminderList \u003d new ReminderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"        Person person \u003d new Person(name, phone, email, address, birthDate,","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"                contactedInfoList, tagList, reminderList);","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"cashewnade":2,"pyk595":11,"-":57,"bloodofme":6}},{"path":"src/main/java/seedu/address/logic/parser/AddContactedCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.AddContactedInfoCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":" * Parses input arguments and creates a new {@code AddContactedCommandParser} object","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"public class AddContactedCommandParser implements Parser\u003cAddContactedInfoCommand\u003e {","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddContactedCommand}","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"     * and returns a {@code AddContactedCommand} object for execution.","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"     * @return a {@code AddContactedCommand} object for execution.","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"    public AddContactedInfoCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CONTACTED_DATE, PREFIX_CONTACTED_DESC);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CONTACTED_DATE, PREFIX_CONTACTED_DESC)","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"                    AddContactedInfoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"        Index index;","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"        } catch (ParseException ive) {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"                    AddContactedInfoCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"        ContactedInfo contactedInfo \u003d ParserUtil.parseContactedInfo(","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"                argMultimap.getValue(PREFIX_CONTACTED_DATE).get(),","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"                argMultimap.getValue(PREFIX_CONTACTED_DESC).get());","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"        return new AddContactedInfoCommand(index, contactedInfo);","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bloodofme":59}},{"path":"src/main/java/seedu/address/logic/parser/AddReminderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import static java.lang.String.format;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMINDER_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMINDER_DESCRIPTION;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.AddReminderCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.date.ReminderDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.Reminder;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":" * Parses input arguments and creates a new AddReminderCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"public class AddReminderCommandParser implements Parser\u003cAddReminderCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"     * Parses the given {@code String} of arguments in the context of the AddReminderCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"     * and returns a AddReminderCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"    public AddReminderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"                        PREFIX_REMINDER_DESCRIPTION,","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"                        PREFIX_REMINDER_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"cashewnade"},"content":"        Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"        ReminderDescription reminderDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cashewnade"},"content":"        ReminderDate reminderDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cashewnade"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_REMINDER_DESCRIPTION, PREFIX_REMINDER_DATE)","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"cashewnade"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"cashewnade"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"cashewnade"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"cashewnade"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"cashewnade"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"cashewnade"},"content":"            throw new ParseException(format(MESSAGE_INVALID_COMMAND_FORMAT, AddReminderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"cashewnade"},"content":"        reminderDescription \u003d ParserUtil.parseReminderDescription(","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"                argMultimap.getValue(PREFIX_REMINDER_DESCRIPTION).get());","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"cashewnade"},"content":"        reminderDate \u003d ParserUtil.parseReminderDate(argMultimap.getValue(PREFIX_REMINDER_DATE).get());","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"cashewnade"},"content":"        Reminder toAdd \u003d new Reminder(reminderDescription, reminderDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"cashewnade"},"content":"        return new AddReminderCommand(index, toAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"cashewnade"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"cashewnade"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"cashewnade"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"cashewnade"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"cashewnade":66}},{"path":"src/main/java/seedu/address/logic/parser/AddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":" * Parses input arguments and creates a new {@code AddTagCommand} object.","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddTagCommand}","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     * and returns an {@code AddTagCommand} object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     * @param args the {@code String} of arguments to be parsed.","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     * @returns the created {@code AddTagCommand} object.","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    public AddTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"        Index index;","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        if (argumentMultimap.getValue(PREFIX_TAG).isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d ParserUtil.parseTag(argumentMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        return new AddTagCommand(index, tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"ngjunkang":45}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_ARGUMENTS;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.AddContactedInfoCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.AddReminderCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.BirthdayCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.ContactedOutsideRangeCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.ContactedWithinRangeCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.DeleteContactedInfoCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.DeleteReminderCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.ListContactRemindersCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.ListContactedInfoCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.ListDateRemindersCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.ListTagsCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"    public Command parseCommand(String userInput) throws ParseException, java.text.ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        final String trimmedUserInput \u003d userInput.trim();","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(trimmedUserInput);","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        if (HashtagCommandParser.isHashtagCommand(trimmedUserInput)) { // in hashtag format, it starts with #.","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"            return new HashtagCommandParser().parse(trimmedUserInput);","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"            checkEmptyArguments(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"        case BirthdayCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"            checkEmptyArguments(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"            return new BirthdayCommand();","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"            checkEmptyArguments(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"        case AddContactedInfoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"bloodofme"},"content":"            return new AddContactedCommandParser().parse(arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"pyk595"},"content":"        case ContactedWithinRangeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"pyk595"},"content":"            return new ContactedWithinRangeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"pyk595"},"content":"        case ContactedOutsideRangeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"pyk595"},"content":"            return new ContactedOutsideRangeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"bloodofme"},"content":"        case ListContactedInfoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"bloodofme"},"content":"            return new ListContactedInfoCommandParser().parse(arguments);","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"bloodofme"},"content":"        case DeleteContactedInfoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"bloodofme"},"content":"            return new DeleteContactedInfoCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"        case AddTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"            return new AddTagCommandParser().parse(arguments);","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"        case DeleteTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"            return new DeleteTagCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"        case ListTagsCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"            checkEmptyArguments(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"            return new ListTagsCommand();","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"            checkEmptyArguments(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"            checkEmptyArguments(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":124,"author":{"gitId":"cashewnade"},"content":"        case AddReminderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"cashewnade"},"content":"            return new AddReminderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"cashewnade"},"content":"        case DeleteReminderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"cashewnade"},"content":"            return new DeleteReminderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"cashewnade"},"content":"        case ListContactRemindersCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"cashewnade"},"content":"            return new ListContactRemindersCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"cashewnade"},"content":"        case ListDateRemindersCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"cashewnade"},"content":"            return new ListDateRemindersCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"ngjunkang"},"content":"     * Checks if argument is empty, to be used for commands that do not require arguments.","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"ngjunkang"},"content":"     * @param args the argument to be checked.","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"ngjunkang"},"content":"     * @throws ParseException if argument is not empty.","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"ngjunkang"},"content":"    private void checkEmptyArguments(String args) throws ParseException {","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"pyk595"},"content":"        if (args.length() !\u003d 0) {","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"pyk595"},"content":"            throw new ParseException(MESSAGE_INVALID_ARGUMENTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cashewnade":17,"ngjunkang":32,"pyk595":18,"-":74,"bloodofme":12}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"    public static final Prefix PREFIX_BIRTH_DATE \u003d new Prefix(\"b/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"    public static final Prefix PREFIX_CONTACTED_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"    public static final Prefix PREFIX_CONTACTED_DESC \u003d new Prefix(\"des/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"    public static final Prefix PREFIX_DELETE_CONTACTED_INFO \u003d new Prefix(\"del/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"    public static final Prefix PREFIX_REMINDER_DESCRIPTION \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"    public static final Prefix PREFIX_REMINDER_DATE \u003d new Prefix(\"rd/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"cashewnade":4,"pyk595":1,"-":14,"bloodofme":1}},{"path":"src/main/java/seedu/address/logic/parser/ContactedOutsideRangeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.ContactedOutsideRangeCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.PersonOutsideDateRangePredicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":" * Parses input arguments and creates a new {@code ContactedOutsideRangeCommand} object","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"public class ContactedOutsideRangeCommandParser implements Parser\u003cContactedOutsideRangeCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"     * @param userInput the number of days represented in String format.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format.","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    public ContactedOutsideRangeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"            int days \u003d ParserUtil.parseDays(userInput);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"            return new ContactedOutsideRangeCommand(new PersonOutsideDateRangePredicate(days));","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedOutsideRangeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"pyk595":30}},{"path":"src/main/java/seedu/address/logic/parser/ContactedWithinRangeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.ContactedWithinRangeCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.PersonWithinDateRangePredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":" * Parses input arguments and creates a new {@code ContactedWithinRangeCommand} object","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"public class ContactedWithinRangeCommandParser implements Parser\u003cContactedWithinRangeCommand\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"     * @param userInput the number of days represented in String format.","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format.","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"    public ContactedWithinRangeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"            int days \u003d ParserUtil.parseDays(userInput);","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"            return new ContactedWithinRangeCommand(new PersonWithinDateRangePredicate(days));","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedWithinRangeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"pyk595":32}},{"path":"src/main/java/seedu/address/logic/parser/DeleteContactedInfoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_CONTACTED_INFO;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.DeleteContactedInfoCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"public class DeleteContactedInfoCommandParser implements Parser\u003cDeleteContactedInfoCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteContactedInfoCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"     * and returns a DeleteContactedInfoCommand object for execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"    public DeleteContactedInfoCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DELETE_CONTACTED_INFO);","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"        Index index;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"        Index contactedInfoIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"        if (argumentMultimap.getValue(PREFIX_DELETE_CONTACTED_INFO).isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactedInfoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"        if (argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactedInfoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"            contactedInfoIndex \u003d ParserUtil.parseIndex(","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"                    argumentMultimap.getValue(PREFIX_DELETE_CONTACTED_INFO).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactedInfoCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"        return new DeleteContactedInfoCommand(index, contactedInfoIndex);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"pyk595":10,"bloodofme":35}},{"path":"src/main/java/seedu/address/logic/parser/DeleteReminderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMINDER_DESCRIPTION;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.AddReminderCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.DeleteReminderCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":" * Parses input arguments and creates a new DeleteReminderCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"public class DeleteReminderCommandParser implements Parser\u003cDeleteReminderCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteReminderCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"     * and returns a DeleteReminderCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"    public DeleteReminderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"                        PREFIX_REMINDER_DESCRIPTION);","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"        Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"        ReminderDescription reminderDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_REMINDER_DESCRIPTION)","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"cashewnade"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cashewnade"},"content":"                    DeleteReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"cashewnade"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"cashewnade"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"cashewnade"},"content":"            reminderDescription \u003d ParserUtil.parseReminderDescription(","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"cashewnade"},"content":"                    argMultimap.getValue(PREFIX_REMINDER_DESCRIPTION).get());","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"cashewnade"},"content":"        } catch (seedu.address.logic.parser.exceptions.ParseException pe) {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"cashewnade"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"cashewnade"},"content":"                    AddReminderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"cashewnade"},"content":"        return new DeleteReminderCommand(index, reminderDescription);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"cashewnade"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"cashewnade"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"cashewnade"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"cashewnade"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"cashewnade":59}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":" * Parses input arguments and creates a new {@code DeleteTagCommand} object.","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code DeleteTagCommand}","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     * and returns an {@code DeleteTagCommand} object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     * @param args the {@code String} of arguments to be parsed.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     * @returns the created {@code DeleteTagCommand} object.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"        Index index;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        if (argumentMultimap.getValue(PREFIX_TAG).isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d ParserUtil.parseTag(argumentMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        return new DeleteTagCommand(index, tag);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"ngjunkang":45}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTH_DATE;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"                        PREFIX_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"                        PREFIX_BIRTH_DATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"        if (argMultimap.getValue(PREFIX_BIRTH_DATE).isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bloodofme"},"content":"            editPersonDescriptor.setBirthdate(ParserUtil.parseBirthDate(argMultimap.getValue(PREFIX_BIRTH_DATE).get()));","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":81,"bloodofme":11}},{"path":"src/main/java/seedu/address/logic/parser/HashtagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.HashtagCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.PersonWithTagPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":" * Parses input arguments and creates a new {@code HashtagCommand} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"public class HashtagCommandParser implements Parser\u003cHashtagCommand\u003e {","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    public static final Prefix PREFIX_HASHTAG \u003d new Prefix(HashtagCommand.COMMAND_WORD);","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_CONSTRAINT \u003d String.format(\"input should start with %1$s\",","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"            HashtagCommand.COMMAND_WORD);","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     * Parses the given tag of {@code String} type in the context of the {@code HashtagCommand}","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     * and returns a {@code HashtagCommand} object for execution. {@code isHashtagCommand(String) } must be called and","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     * checked before this method call.","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"     * @param input the hashtag command to be parsed.","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"     * @return a new {@code HashtagCommand} object","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     * @throws ParseException if the user input does not conform the expected format,","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"     *                        either the given tag is empty or invalid (not alphanumerical).","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     * @see HashtagCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"     * @see #isHashtagCommand(String)","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    public HashtagCommand parse(String input) throws ParseException {","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        checkArgument(HashtagCommandParser.isHashtagCommand(input), MESSAGE_CONSTRAINT);","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(trimAndAddOneLeadingSpace(input), PREFIX_HASHTAG);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        String tagName \u003d argMultimap.getValue(PREFIX_HASHTAG).get();","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        if (tagName.isBlank()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, HashtagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        Tag newTag \u003d ParserUtil.parseTag(tagName);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"        return new HashtagCommand(new PersonWithTagPredicate(newTag));","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"     * Returns true if the given input string is a hashtag command (any string that starts with #).","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"     * @param input the input string to verify.","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"     * @return true if the given input string is a hashtag command (any string that starts with #).","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"    public static boolean isHashtagCommand(String input) {","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(input);","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(trimAndAddOneLeadingSpace(input), PREFIX_HASHTAG);","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"        return argMultimap.getValue(PREFIX_HASHTAG).isPresent() \u0026\u0026 argMultimap.getPreamble().isEmpty();","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"     * Trims the input string and add a leading space, used for {@code ArgumentTokenizer#tokenize(String, Prefix...)},","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"     * that requires its {@code String} input to be preceding with a space.","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"     * @param input the {@code String} to be processed.","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"     * @return trimmed input with one leading space.","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"     * @see ArgumentTokenizer#tokenize(String, Prefix...)","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"    private static String trimAndAddOneLeadingSpace(String input) {","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(input);","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"        return \" \" + trimmedInput;","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"ngjunkang":74}},{"path":"src/main/java/seedu/address/logic/parser/ListContactRemindersCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.ListContactRemindersCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":" * Parses input arguments and creates a new ListContactRemindersCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"public class ListContactRemindersCommandParser implements Parser\u003cListContactRemindersCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"     * Parses the given {@code String} of arguments in the context of the ListContactRemindersCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"     * and returns a ListContactRemindersCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":"    public ListContactRemindersCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"        Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"                    ListContactRemindersCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"        return new ListContactRemindersCommand(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"cashewnade":33}},{"path":"src/main/java/seedu/address/logic/parser/ListContactedInfoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.ListContactedInfoCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"public class ListContactedInfoCommandParser implements Parser\u003cListContactedInfoCommand\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"     * Parses the given {@code String} of arguments in the context of the ListContactRemindersCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"     * and returns a ListContactRemindersCommand object for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"    public ListContactedInfoCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"        Index index;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"                    ListContactedInfoCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"        return new ListContactedInfoCommand(index);","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"bloodofme":29}},{"path":"src/main/java/seedu/address/logic/parser/ListDateRemindersCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import static java.lang.String.format;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMINDER_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.commands.ListDateRemindersCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.date.ReminderDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":" * Parses input arguments and creates a new ListDateRemindersCommand object.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"public class ListDateRemindersCommandParser implements Parser\u003cListDateRemindersCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":"     * Parses the given {@code String} of arguments in the context of the ListDateRemindersCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"     * and returns a ListDateRemindersCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"    public ListDateRemindersCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"                        PREFIX_REMINDER_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"        ReminderDate reminderDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"        if (!argMultimap.getValue(PREFIX_REMINDER_DATE).isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"            reminderDate \u003d new ReminderDate(LocalDate.now());","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"            try {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"cashewnade"},"content":"                reminderDate \u003d ParserUtil.parseReminderDate(args);","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cashewnade"},"content":"                throw new ParseException(format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"cashewnade"},"content":"                        ListDateRemindersCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cashewnade"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"cashewnade"},"content":"        return new ListDateRemindersCommand(reminderDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"cashewnade":44}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.date.DocumentedDate;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.RecentDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.date.ReminderDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.description.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"    public static final String MESSAGE_INVALID_NUMBER_OF_DAYS \u003d \"Input number of days given is not a valid number\";","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"     * trimmed.","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"    public static int parseDays(String daysString) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        String trimmedDaysString \u003d daysString.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"        if (!StringUtil.isUnsignedInteger(trimmedDaysString)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"            throw new ParseException(MESSAGE_INVALID_NUMBER_OF_DAYS);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"        return Integer.parseInt(trimmedDaysString);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"bloodofme"},"content":"     * Parses {@code String date} and {@code String description} into a {@code ContactedInfo}.","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"bloodofme"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"bloodofme"},"content":"     * @throws ParseException if the given {@code String date} or {@code String description} is invalid.","lastModifiedDate":"2022-03-19"},{"lineNumber":125,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"bloodofme"},"content":"    public static ContactedInfo parseContactedInfo(String date, String description) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":127,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"bloodofme"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-03-19"},{"lineNumber":130,"author":{"gitId":"bloodofme"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"bloodofme"},"content":"        if (!ContactedInfo.isValidContactedInfo(trimmedDate, trimmedDescription)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":132,"author":{"gitId":"bloodofme"},"content":"            throw new ParseException(ContactedInfo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"bloodofme"},"content":"        RecentDate recentDate \u003d RecentDate.parse(trimmedDate);","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"bloodofme"},"content":"        Description desc \u003d new Description(trimmedDescription);","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"bloodofme"},"content":"        return new ContactedInfo(recentDate, desc);","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"pyk595"},"content":"     * Parses a {@code String} date into a {@code BirthDate}.","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"pyk595"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"pyk595"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"pyk595"},"content":"    public static BirthDate parseBirthDate(String date) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"pyk595"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"pyk595"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":149,"author":{"gitId":"pyk595"},"content":"        if (!DocumentedDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"pyk595"},"content":"            throw new ParseException(DocumentedDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"pyk595"},"content":"        return BirthDate.parse(trimmedDate);","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":154,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":181,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"cashewnade"},"content":"     * Parses a {@code String description} into a {@code ReminderDescription}.","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"cashewnade"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"cashewnade"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"cashewnade"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"cashewnade"},"content":"    public static ReminderDescription parseReminderDescription(String description) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"cashewnade"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"cashewnade"},"content":"        if (!ReminderDescription.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"cashewnade"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"cashewnade"},"content":"        return new ReminderDescription(trimmedDescription);","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"cashewnade"},"content":"     * Parses a {@code String reminderDate} into a {@code ReminderDescription}.","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"cashewnade"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"cashewnade"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"cashewnade"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"cashewnade"},"content":"    public static ReminderDate parseReminderDate(String reminderDate) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(reminderDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"cashewnade"},"content":"        String trimmedDate \u003d reminderDate.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"cashewnade"},"content":"        if (!ReminderDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"cashewnade"},"content":"            throw new ParseException(DocumentedDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":209,"author":{"gitId":"cashewnade"},"content":"        return ReminderDate.parse(trimmedDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":210,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"cashewnade":32,"pyk595":32,"-":124,"bloodofme":23}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.ReadOnlyUniqueTagList;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"    private final UniqueTagList tags;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        tags \u003d new UniqueTagList();","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        tags.clearTags();","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        persons.stream()","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"                .map(Person::getTags)","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"                .forEach(tags::addTags);","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"        tags.addTags(p.getTags());","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"        tags.removeAndAddTags(target.getTags(), editedPerson.getTags());","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"        tags.removeTags(key.getTags());","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"    //// tag-level methods","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"     * Returns an unmodifiable view of {@code UniqueTagList} that stores a list of unique tags,","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"     * used in {@code AddressBook}.","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"     * @return an unmodifiable view of {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"    public ReadOnlyUniqueTagList getUniqueTagList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"        return tags.getCopy();","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"     * Returns the number of unique tags in this {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"ngjunkang"},"content":"     * @return the number of unique tags in this {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"ngjunkang"},"content":"    public int getNumberOfUniqueTags() {","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"ngjunkang"},"content":"        assert tags.getUniqueTagListSize() \u003e\u003d 0;","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"ngjunkang"},"content":"        return tags.getUniqueTagListSize();","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"ngjunkang"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"ngjunkang"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"ngjunkang"},"content":"        AddressBook addressBook \u003d (AddressBook) other;","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"ngjunkang"},"content":"        return persons.equals(addressBook.persons)","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"ngjunkang"},"content":"                \u0026\u0026 tags.equals(addressBook.tags);","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"ngjunkang"},"content":"        return Objects.hash(persons, tags);","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ngjunkang":47,"-":116}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.ReadOnlyUniqueTagList;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS_WITH_BIRTHDAY_TODAY \u003d Person::isBirthdayToday;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"     * Returns the number of persons with the filtered predicate.","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"pyk595"},"content":"    int getFilteredPersonListSize();","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"pyk595"},"content":"     * Returns the {@code Person} at the given index.","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"pyk595"},"content":"     * @param index the {@code Index} used to identify the person.","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"pyk595"},"content":"     * @return the {@code Person} at the given index.","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"pyk595"},"content":"    Person getFilteredPerson(Index index);","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"     * Returns an unmodifiable view of {@code UniqueTagList} that stores a list of unique tags.","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"     * @return an unmodifiable view of {@code UniqueTagList} that stores a list of unique tags.","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"    ReadOnlyUniqueTagList getUniqueTagList();","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"     * Returns the number of unique tags in {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"     * @return the number of unique tags in {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"    int getNumberOfUniqueTags();","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ngjunkang":15,"pyk595":15,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.ReadOnlyUniqueTagList;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"    public ReadOnlyUniqueTagList getUniqueTagList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"        return addressBook.getUniqueTagList();","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"    public int getNumberOfUniqueTags() {","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"ngjunkang"},"content":"        return addressBook.getNumberOfUniqueTags();","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"pyk595"},"content":"    public Person getFilteredPerson(Index index) {","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"pyk595"},"content":"        return filteredPersons.get(index.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"pyk595"},"content":"    public int getFilteredPersonListSize() {","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"pyk595"},"content":"        return filteredPersons.size();","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ngjunkang":11,"pyk595":11,"-":150}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"    private static Path backupAddressBookFilePath \u003d Paths.get(\"data\", \"backup.json\");","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"    public static Path getBackupFilePath() {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        return backupAddressBookFilePath;","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pyk595":5,"-":87}},{"path":"src/main/java/seedu/address/model/contactedinfo/ContactedInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.model.contactedinfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.DocumentedDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.RecentDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.description.Description;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":" * Represents a Person\u0027s recently contacted information in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"public class ContactedInfo implements Comparable\u003cContactedInfo\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"            \"You should provide a valid date and description.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"            + RecentDate.MESSAGE_CONSTRAINTS + \" and should not be in the future.\\n\" + Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"    private final Description description;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"    private final RecentDate recentDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"     * Constructs an {@code ContactedInfo}.","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"     * @param recentDate A valid description.","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"     * @param description a valid date.","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"    public ContactedInfo(RecentDate recentDate, Description description) {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(recentDate);","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"        this.recentDate \u003d recentDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"     * Returns the default contacted info.","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"     * @return the default contacted info.","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"    public static ContactedInfo getDefaultContactedInfo() {","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"        return new ContactedInfo(RecentDate.defaultRecentDate(), Description.defaultDesc());","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"     * Returns true if a given string is a valid contacted information.","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"     * @param dateTest date string to test.","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"     * @param descriptionTest description to test.","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"     * @return true if a given string is a valid contacted information.","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"    public static boolean isValidContactedInfo(String dateTest, String descriptionTest) {","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        return DocumentedDate.isValidDate(dateTest)","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"                \u0026\u0026 Description.isValidDescription(descriptionTest)","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"                \u0026\u0026 RecentDate.isValidRecentDate(dateTest);","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"     * Returns {@code RecentDate} instance.","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"     * @return {@code RecentDate} instance.","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"    public RecentDate getRecentDate() {","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"        return recentDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"     * Returns the number of days passed since the saved ContactedDate.","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"     * @return an integer representing the number of days passed.","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"    public Integer getDaysPassed() {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"        int daysPassed \u003d recentDate.getDaysPassed();","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"        assert daysPassed \u003e\u003d 0 : \"Days passed should not be less than 0\";","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"        return daysPassed;","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"     * Returns {@code Description} instance.","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"     * @return {@code Description} instance.","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"bloodofme"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"bloodofme"},"content":"        return description;","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"bloodofme"},"content":"     * returns contacted information in String format.","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"bloodofme"},"content":"     * @return contacted information in String format.","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"    public String toString() {","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"pyk595"},"content":"        return description.toString()","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"pyk595"},"content":"                + \" (\"","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"pyk595"},"content":"                + recentDate.toString()","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"pyk595"},"content":"                + \")\";","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"bloodofme"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"bloodofme"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"bloodofme"},"content":"                || (other instanceof ContactedInfo // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"bloodofme"},"content":"                \u0026\u0026 recentDate.equals(((ContactedInfo) other).recentDate)","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"bloodofme"},"content":"                \u0026\u0026 description.equals(((ContactedInfo) other).description)); // state check","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"bloodofme"},"content":"    public int compareTo(ContactedInfo o) {","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"bloodofme"},"content":"        return recentDate.compareTo(o.recentDate);","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"bloodofme"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"bloodofme"},"content":"        return description.hashCode() + recentDate.hashCode();","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"pyk595":20,"bloodofme":94}},{"path":"src/main/java/seedu/address/model/date/BirthDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.model.date;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"public class BirthDate extends DocumentedDate {","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"    private static final DateTimeFormatter FORMATTER_INPUT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"    public final String value;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"     * Constructs a {@code BirthDate}.","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"     * @param date A non null LocalDate object.","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"    public BirthDate(LocalDate date) {","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"        super(date);","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"        value \u003d date.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"     * Creates a new {@code BirthDate} using a String.","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"     * @param parsedDate a String to be converted into a date.","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"     * @return A non null {@code BirthDate}.","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"    public static BirthDate parse(String parsedDate) {","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"        LocalDate date \u003d LocalDate.parse(parsedDate);","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"        return new BirthDate(date);","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"     * Returns true if the saved birthdate occurs today, false otherwise.","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"     * @return a boolean checking if the saved birthdate occurs today.","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"    public boolean isToday() {","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"        LocalDate savedDate \u003d super.getDate();","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        savedDate \u003d savedDate.withYear(today.getYear());","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"        return savedDate.equals(today);","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"            return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"        if (!(other instanceof BirthDate)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"            return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"        return value.equals(((BirthDate) other).value);","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"pyk595":59}},{"path":"src/main/java/seedu/address/model/date/DocumentedDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.model.date;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static java.time.temporal.ChronoUnit.DAYS;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":" * Represents a DocumentedDate in the address book.","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"public class DocumentedDate {","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be in the format of YYYY-MM-DD\";","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"    private static final DateTimeFormatter FORMATTER_OUTPUT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"    private LocalDate date;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"     * Constructs a {@code DocumentedDate}.","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"     * @param date A non null LocalDate object.","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"    public DocumentedDate(LocalDate date) {","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"     * Returns the number of days passed since the saved date.","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"     * @return an int representing the number of days passed.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"    public int getDaysPassed() {","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"        int days \u003d (int) DAYS.between(date, today);","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"        return days;","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"        if (test.length() !\u003d 10) {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"            return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"        if (test.charAt(0) \u003d\u003d \u0027-\u0027 || test.charAt(0) \u003d\u003d \u0027+\u0027) {","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"            return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        try {","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        } catch (DateTimeParseException dte) {","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"            return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"        return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"     * Returns true if the saved date occurs today, false otherwise.","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"     * @return a boolean checking if the saved date occurs today.","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"    public boolean isToday() {","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"        return date.equals(today);","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"     * Gets saved date.","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"     * @return saved date.","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"    protected LocalDate getDate() {","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"        return this.date;","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"pyk595"},"content":"     * Returns a string representation of the {@code DocumentedDate}.","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"     * @return a string in the format of Day Month Year.","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"pyk595"},"content":"    public String toString() {","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"        return date.format(FORMATTER_OUTPUT);","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"pyk595":86}},{"path":"src/main/java/seedu/address/model/date/RecentDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.model.date;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static java.time.temporal.ChronoUnit.DAYS;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"public class RecentDate extends DocumentedDate implements Comparable\u003cRecentDate\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"    private static final DateTimeFormatter FORMATTER_INPUT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"    public final String value;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"    private LocalDate date;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"     * Constructs a {@code RecentDate}.","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"     * @param date A non null LocalDate object.","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"    public RecentDate(LocalDate date) {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"        super(date);","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"        value \u003d date.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"     * Creates a new {@code RecentDate} using a String.","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"     * @param parsedDate a String to be converted into a date.","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"     * @return A non null {@code RecentDate}.","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"    public static RecentDate parse(String parsedDate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"        checkArgument(isValidDate(parsedDate));","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"        LocalDate date \u003d LocalDate.parse(parsedDate);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"        return new RecentDate(date);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"     * Returns true if a given string can be converted to a date","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"     * that has either occurred today or in the past.","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"    public static boolean isValidRecentDate(String test) {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"        LocalDate testDate \u003d LocalDate.parse(test);","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"        return DAYS.between(testDate, LocalDate.now()) \u003e\u003d 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"     * Returns today\u0027s date","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"     * @return today\u0027s date {@code RecentDate}.","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"    public static RecentDate defaultRecentDate() {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"        return new RecentDate(LocalDate.now());","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"     * compare two {@code RecentDate} objects","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"     * @param rd RecentDate object to compare to.","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"     * @return an integer corresponding to which date comes first.","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"    public int compareTo(RecentDate rd) {","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"        return date.compareTo(rd.date) * -1;","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"bloodofme"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"            return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"bloodofme"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"        if (!(other instanceof RecentDate)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"            return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"bloodofme"},"content":"        // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"bloodofme"},"content":"        return value.equals(((RecentDate) other).value);","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"pyk595":10,"bloodofme":73}},{"path":"src/main/java/seedu/address/model/date/ReminderDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.model.date;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"public class ReminderDate extends DocumentedDate implements Comparable\u003cReminderDate\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"     * Constructs a {@code DocumentedDate}.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"     * @param date A non null LocalDate object.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":"    public ReminderDate(LocalDate date) {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"        super(date);","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"     * Creates a new {@code ReminderDate} using a String.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"     * @param parsedDate a String to be converted into a date.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"     * @return A non null {@code ReminderDate}.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"    public static ReminderDate parse(String parsedDate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"        LocalDate date \u003d LocalDate.parse(parsedDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"        return new ReminderDate(date);","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"    public int compareTo(ReminderDate reminderDate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"        if (super.getDate().isBefore(reminderDate.getDate())) {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"            return -1;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"        } else if (super.getDate().isAfter(reminderDate.getDate())) {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"            return 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"            return 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"cashewnade":36}},{"path":"src/main/java/seedu/address/model/description/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.model.description;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":" * Represents a Person\u0027s description in the Contacted Date region.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"public class Description {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"            \"Description can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"    /*","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"    public final String value;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"     * Constructs an {@code Description}.","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"     * @param desc A valid description.","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"    public Description(String desc) {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"        requireNonNull(desc);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"        checkArgument(isValidDescription(desc), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"        value \u003d desc;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"     * Returns defulat description","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"    public static Description defaultDesc() {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"        return new Description(\"First Interaction\");","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"     * Returns String representation of description.","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"        return value;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"                \u0026\u0026 value.equalsIgnoreCase(((Description) other).value)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bloodofme"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bloodofme":68}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"    private final BirthDate birthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"    private final List\u003cContactedInfo\u003e contactedInfoList;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"    private final ReminderList reminderList;","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"cashewnade"},"content":"     * Every field must be present and not null. A constructor including the reminder.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"    public Person(Name name, Phone phone, Email email, Address address, BirthDate birthDate,","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"                  List\u003cContactedInfo\u003e contactedInfoList, Set\u003cTag\u003e tags, ReminderList reminderList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"        requireAllNonNull(name, phone, email, address, birthDate, contactedInfoList, tags, reminderList);","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"        this.contactedInfoList \u003d contactedInfoList;","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"        this.reminderList \u003d reminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"    public BirthDate getBirthDate() {","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"        return birthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"    public List\u003cContactedInfo\u003e getContactedInfoList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"bloodofme"},"content":"        return Collections.unmodifiableList(contactedInfoList);","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"     * Returns the string representation of the list of {@code ContactedInfo}","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"     * tethered to the {@code Person}.","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"pyk595"},"content":"     * @return String representing the ContactedInfoList.","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"pyk595"},"content":"    public String getContactedInfoListToString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"        if (contactedInfoList.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"            return Messages.MESSAGE_EMPTY_CONTACTED_INFORMATION;","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"pyk595"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"pyk595"},"content":"        for (int i \u003d 1; i \u003c\u003d contactedInfoList.size(); i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"pyk595"},"content":"            ContactedInfo contactedInfo \u003d contactedInfoList.get(i - 1);","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"pyk595"},"content":"            output.append(String.format(\"%1$d. %2$s\\n\", i, contactedInfo.toString()));","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"pyk595"},"content":"        return output.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"pyk595"},"content":"    public ContactedInfo getContactedInfoEntry(Index index) {","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"pyk595"},"content":"        return contactedInfoList.get(index.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"bloodofme"},"content":"    public int getContactedInfoListSize() {","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"bloodofme"},"content":"        return Collections.unmodifiableList(contactedInfoList).size();","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"bloodofme"},"content":"     * Returns true if contacted information list contains parsed {@code ContactedInfo} object.","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"bloodofme"},"content":"     * @param contactedInfo object for check.","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"bloodofme"},"content":"     * @return true if contacted information list contains parsed {@code ContactedInfo} object.","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"bloodofme"},"content":"    public boolean containsContactedInfo(ContactedInfo contactedInfo) {","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"bloodofme"},"content":"        ArrayList\u003cContactedInfo\u003e list \u003d new ArrayList\u003c\u003e(contactedInfoList);","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"bloodofme"},"content":"        for (ContactedInfo contact : list) {","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"bloodofme"},"content":"            if (contact.equals(contactedInfo)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"bloodofme"},"content":"                return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"bloodofme"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"bloodofme"},"content":"        return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"pyk595"},"content":"    public Optional\u003cContactedInfo\u003e getLatestContactedInfoEntry() {","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"pyk595"},"content":"        return contactedInfoList.size() \u003d\u003d 0 ? Optional.empty() : Optional.of(contactedInfoList.get(0));","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"pyk595"},"content":"    public Integer getContactedDateRange() {","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"pyk595"},"content":"        return getLatestContactedInfoEntry()","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"pyk595"},"content":"                .map(ContactedInfo::getDaysPassed)","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"pyk595"},"content":"                .orElse(Integer.MAX_VALUE);","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"pyk595"},"content":"    public boolean isBirthdayToday() {","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"pyk595"},"content":"        return this.birthDate.isToday();","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"cashewnade"},"content":"    public ReminderList getReminderList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"cashewnade"},"content":"        return reminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":163,"author":{"gitId":"ngjunkang"},"content":"     * Returns true if this {@code Person} is tagged to the specified {@code Tag} (case-insensitive).","lastModifiedDate":"2022-03-07"},{"lineNumber":164,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":165,"author":{"gitId":"ngjunkang"},"content":"     * @param tag the {@code Tag} to verify whether it is tagged to this {@code Person}","lastModifiedDate":"2022-03-07"},{"lineNumber":166,"author":{"gitId":"ngjunkang"},"content":"     * @return true if this {@code Person} is tagged to the specified {@code Tag}.","lastModifiedDate":"2022-03-07"},{"lineNumber":167,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":168,"author":{"gitId":"ngjunkang"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2022-03-07"},{"lineNumber":169,"author":{"gitId":"ngjunkang"},"content":"        return (tag !\u003d null)","lastModifiedDate":"2022-03-07"},{"lineNumber":170,"author":{"gitId":"ngjunkang"},"content":"                \u0026\u0026 this.tags.contains(tag);","lastModifiedDate":"2022-03-07"},{"lineNumber":171,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":172,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":173,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"pyk595"},"content":"     * Returns true if this {@code Person} has an empty {@code contactedInfoList}.","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"pyk595"},"content":"     * @return true if {@code contactedInfoList} is empty.","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"pyk595"},"content":"    public boolean isContactedInfoListEmpty() {","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"pyk595"},"content":"        return getContactedInfoList().isEmpty();","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":201,"author":{"gitId":"bloodofme"},"content":"                \u0026\u0026 otherPerson.getBirthDate().equals(getBirthDate())","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"bloodofme"},"content":"                \u0026\u0026 otherPerson.getContactedInfoList().equals(getContactedInfoList())","lastModifiedDate":"2022-03-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":209,"author":{"gitId":"bloodofme"},"content":"        return Objects.hash(name, phone, email, address, contactedInfoList, tags);","lastModifiedDate":"2022-03-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":221,"author":{"gitId":"bloodofme"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-09"},{"lineNumber":222,"author":{"gitId":"bloodofme"},"content":"                .append(\"; birthday: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":223,"author":{"gitId":"bloodofme"},"content":"                .append(getBirthDate())","lastModifiedDate":"2022-03-10"},{"lineNumber":224,"author":{"gitId":"bloodofme"},"content":"                .append(\"; Last Contacted: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":225,"author":{"gitId":"pyk595"},"content":"                .append(getLatestContactedInfoEntry()","lastModifiedDate":"2022-03-21"},{"lineNumber":226,"author":{"gitId":"pyk595"},"content":"                        .map(ContactedInfo::toString)","lastModifiedDate":"2022-03-21"},{"lineNumber":227,"author":{"gitId":"pyk595"},"content":"                        .orElse(\"No entry yet\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cashewnade":7,"ngjunkang":11,"pyk595":52,"-":118,"bloodofme":49}},{"path":"src/main/java/seedu/address/model/person/PersonOutsideDateRangePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":" * Tests that a {@code Person}\u0027s latest {@code ContactedInfo} is outside a given range.","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"public class PersonOutsideDateRangePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"    private final int numberOfDays;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"     * Constructs a {@code PersonOutsideDateRangePredicate} object.","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"     * @param days the number of days used as a range for this predicate.","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"    public PersonOutsideDateRangePredicate(int days) {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"        assert days \u003e\u003d 0 : \"days should not be less than 0\";","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"        numberOfDays \u003d days;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"     * Evaluates this predicate on the given argument.","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"     * @param person the input argument","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"     * @return {@code true} if the input argument matches the predicate,","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"     * otherwise {@code false}","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"        return person.getContactedDateRange() \u003e numberOfDays;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"     * Returns true if this {@code PersonOutsideDateRangePredicate} object is equal to the given {@code Object}.","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"     * @param other the other {@code Object} to verify the equality.","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"     * @return true if this {@code PersonOutsideDateRangePredicate} object is equal to the given {@code Object}.","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"                || (other instanceof PersonOutsideDateRangePredicate // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"                \u0026\u0026 numberOfDays \u003d\u003d (((PersonOutsideDateRangePredicate) other).numberOfDays)); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"pyk595":44}},{"path":"src/main/java/seedu/address/model/person/PersonWithTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":" * Tests that a {@code Person} is tagged to a {@code Tag}.","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"public class PersonWithTagPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    private final Tag tag;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code PersonWithTagPredicate} object.","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     * @param tag the {@code Tag} for this predicate to verify.","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    public PersonWithTagPredicate(Tag tag) {","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"     * Evaluates whether the specified {@code Person} is tagged to the {@code Tag} in this predicate.","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     * @param person the {@code Person} to evaluate.","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"     * @return true if the specified {@code Person} is tagged to the {@code Tag} in this predicate.","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        return person.hasTag(this.tag);","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"     * Returns true if this {@code PersonWithTagPredicate} object is equal to the given {@code Object}.","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"     * @param other the other {@code Object} to verify the equality.","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"     * @return true if this {@code PersonWithTagPredicate} object is equal to the given {@code Object}.","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"                || (other instanceof PersonWithTagPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"                \u0026\u0026 tag.equals(((PersonWithTagPredicate) other).tag)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"ngjunkang":48}},{"path":"src/main/java/seedu/address/model/person/PersonWithinDateRangePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":" * Tests that a {@code Person}\u0027s latest {@code ContactedInfo} is within a given range.","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"public class PersonWithinDateRangePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"    private final int numberOfDays;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"     * Constructs a {@code PersonWithinDateRangePredicate} object.","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"     * @param days the number of days used as a range for this predicate.","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"    public PersonWithinDateRangePredicate(int days) {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"        assert days \u003e\u003d 0 : \"days should not be less than 0\";","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"        numberOfDays \u003d days;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"     * Evaluates this predicate on the given argument.","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"     * @param person the input argument","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"     * @return {@code true} if the input argument matches the predicate,","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"     * otherwise {@code false}","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"        return person.getContactedDateRange() \u003c\u003d numberOfDays;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"     * Returns true if this {@code PersonWithinDateRangePredicate} object is equal to the given {@code Object}.","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"     * @param other the other {@code Object} to verify the equality.","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"     * @return true if this {@code PersonWithinDateRangePredicate} object is equal to the given {@code Object}.","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"                || (other instanceof PersonWithinDateRangePredicate // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"                \u0026\u0026 numberOfDays \u003d\u003d (((PersonWithinDateRangePredicate) other).numberOfDays)); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"pyk595":44}},{"path":"src/main/java/seedu/address/model/reminder/Reminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.date.DocumentedDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.date.ReminderDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":" * Represents a reminder given to a contact in the address book.","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"public class Reminder implements Comparable\u003cReminder\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Reminder descriptions should be alphanumeric\";","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"    private static final Reminder EMPTY_REMINDER \u003d new Reminder(new ReminderDescription(\"Default reminder\"),","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"            new ReminderDate(LocalDate.now()));","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"    private final ReminderDescription reminderDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":"    private final ReminderDate date;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"     * Constructs a {@code Reminder}","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"     * @param reminderDescription Description of the reminder","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"     * @param date the date which the reminder is on","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"    public Reminder(ReminderDescription reminderDescription, ReminderDate date) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(reminderDescription);","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"        this.reminderDescription \u003d reminderDescription;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"cashewnade"},"content":"     * Returns true if the reminder date is today.","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"cashewnade"},"content":"    public boolean isToday() {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"cashewnade"},"content":"        return date.isToday();","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"cashewnade"},"content":"     * Returns true if the reminder date is on the specified date.","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"cashewnade"},"content":"    public boolean isSameDateAs(DocumentedDate comparedDate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"cashewnade"},"content":"        return this.date.equals(comparedDate);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"cashewnade"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"cashewnade"},"content":"    public int compareTo(Reminder otherReminder) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"cashewnade"},"content":"        if (this.isSameDateAs(otherReminder.date)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"            return this.reminderDescription.compareTo(otherReminder.reminderDescription);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"cashewnade"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"cashewnade"},"content":"            return this.date.compareTo(otherReminder.date);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"cashewnade"},"content":"    public ReminderDescription getDescription() {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"cashewnade"},"content":"        return reminderDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"cashewnade"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"cashewnade"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"cashewnade"},"content":"        return String.format(\"%1$s(%2$s)\", this.reminderDescription.toString(), this.date.toString());","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"cashewnade":65}},{"path":"src/main/java/seedu/address/model/reminder/ReminderDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":" * The description of a Reminder object.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":"public class ReminderDescription implements Comparable\u003cReminderDescription\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":"            \"Descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"    /*","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"    public final String description;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"     * Constructs a {@code ReminderDescription}.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"    public ReminderDescription(String description) {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"cashewnade"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"cashewnade"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"cashewnade"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"cashewnade"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"cashewnade"},"content":"        return description;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"cashewnade"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"cashewnade"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"cashewnade"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cashewnade"},"content":"                || (other instanceof ReminderDescription // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"cashewnade"},"content":"                \u0026\u0026 description.equals(((ReminderDescription) other).description)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"cashewnade"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"cashewnade"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"cashewnade"},"content":"        return description.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"cashewnade"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"cashewnade"},"content":"    public int compareTo(ReminderDescription otherReminderDescription) {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"cashewnade"},"content":"        return this.description.compareTo(otherReminderDescription.description);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"cashewnade":61}},{"path":"src/main/java/seedu/address/model/reminder/ReminderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cashewnade"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cashewnade"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.date.ReminderDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cashewnade"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cashewnade"},"content":" * Represents a list of reminders.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cashewnade"},"content":" * The list is ordered by ReminderDate, in the event where two or more reminders share the same ReminderDate, they will","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cashewnade"},"content":" * be sorted according to their ReminderDescription.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cashewnade"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cashewnade"},"content":"public class ReminderList {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cashewnade"},"content":"    private final PriorityQueue\u003cReminder\u003e reminderPriorityQueue;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cashewnade"},"content":"     * Constructs an empty ReminderList.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"    public ReminderList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cashewnade"},"content":"        this.reminderPriorityQueue \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cashewnade"},"content":"     * Constructs a ReminderList with items provided by the parameter.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"cashewnade"},"content":"     * The main purpose is to clone the original ReminderList.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"cashewnade"},"content":"    public ReminderList(ReminderList reminderList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cashewnade"},"content":"        this.reminderPriorityQueue \u003d new PriorityQueue\u003c\u003e(reminderList.reminderPriorityQueue);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"     * Adds a Reminder object to the current list.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"cashewnade"},"content":"     * @param reminder to be added.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"cashewnade"},"content":"     * @return the updated ReminderList","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cashewnade"},"content":"    public ReminderList add(Reminder reminder) {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"cashewnade"},"content":"        this.reminderPriorityQueue.add(reminder);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cashewnade"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"cashewnade"},"content":"     * Deletes a Reminder object from the current list.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"cashewnade"},"content":"     * @param reminder to be deleted.","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"cashewnade"},"content":"     * @return the updated ReminderList","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cashewnade"},"content":"    public ReminderList delete(Reminder reminder) {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"cashewnade"},"content":"        this.reminderPriorityQueue.remove(reminder);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"cashewnade"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"cashewnade"},"content":"     * Finds a Reminder object to the current list.","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"cashewnade"},"content":"     * @param reminderDescription to search.","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"cashewnade"},"content":"     * @return the Reminder found. If there is no matching searches, returns null.","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"cashewnade"},"content":"    public Reminder find(ReminderDescription reminderDescription) {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"cashewnade"},"content":"        Reminder reminderFound \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"cashewnade"},"content":"        PriorityQueue\u003cReminder\u003e reminderListCopy \u003d new PriorityQueue\u003cReminder\u003e(this.reminderPriorityQueue);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"cashewnade"},"content":"        while (!reminderListCopy.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"cashewnade"},"content":"            reminderFound \u003d reminderListCopy.poll();","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"cashewnade"},"content":"            if (reminderFound.getDescription().equals(reminderDescription)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"cashewnade"},"content":"                break;","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"cashewnade"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"cashewnade"},"content":"        if (reminderFound.getDescription().equals(reminderDescription)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"cashewnade"},"content":"            return reminderFound;","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"cashewnade"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"cashewnade"},"content":"            return null;","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"cashewnade"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"cashewnade"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"cashewnade"},"content":"     * Finds all the Reminder objects with the same ReminderDate as the parameter.","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"cashewnade"},"content":"     * @param reminderDate to check for","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"cashewnade"},"content":"     * @return a ReminderList with Reminder objects happening on the same date as the provided date.","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"cashewnade"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"cashewnade"},"content":"    public ReminderList sameDateAs(ReminderDate reminderDate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"cashewnade"},"content":"        ReminderList newReminderList \u003d new ReminderList(this);","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"cashewnade"},"content":"        newReminderList.reminderPriorityQueue.stream().filter(reminder -\u003e reminder.isSameDateAs(reminderDate));","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"cashewnade"},"content":"        return newReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"cashewnade"},"content":"    public PriorityQueue\u003cReminder\u003e getPriorityQueue() {","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"cashewnade"},"content":"        return this.reminderPriorityQueue;","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"cashewnade"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"cashewnade"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"cashewnade":88,"bloodofme":4}},{"path":"src/main/java/seedu/address/model/tag/ReadOnlyUniqueTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":" * Unmodifiable view of {@code UniqueTagList} that stores a list of unique tags.","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"public interface ReadOnlyUniqueTagList {","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"     * Returns an unmodifiable view of the tags list.","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"     * This list will not contain any duplicate tags.","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"     * @return the tags list.","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    List\u003cTag\u003e getUniqueTagList();","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     * Returns the size of {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     * @return size of {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    int getUniqueTagListSize();","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ngjunkang":24}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"public class Tag implements Comparable\u003cTag\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"     * @param test the {@code String} to be tested.","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"     * @return true if a given string is a valid tag name.","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"    public int compareTo(Tag tag) {","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        return this.tagName.compareToIgnoreCase(tag.tagName);","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"        return tagName.equalsIgnoreCase(((Tag) other).tagName); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        return tagName.toLowerCase().hashCode();","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"     * Returns the string representation of this {@code Tag}.","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"     * @return the string representation of this {@code Tag}.","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ngjunkang":25,"-":47}},{"path":"src/main/java/seedu/address/model/tag/UniqueTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":" * A list of tags that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":" * A tag is considered unique by comparing using {@code Tag#equals(Object)}. As such, adding and updating of","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":" * tags uses {@code Tag#equals(Object)} for equality to ensure that the person being added or updated is","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":" * unique in terms of identity in the {@code UniqueTagList}. {@code UniqueTagList} uses {@code HashMap}","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":" * to keep track of the occurrence frequency of each {@code Tag}. The {Tag} only exists in the hash map if and only","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":" * if the frequency is more than 0.","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":" *","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":" *","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":" * @see Tag#equals(Object)","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":" * @see HashMap","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"public class UniqueTagList implements ReadOnlyUniqueTagList {","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(UniqueTagList.class);","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    private final HashMap\u003cTag, Integer\u003e tagFrequencyMap;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"     * Constructs an {@code UniqueTagList} object.","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    public UniqueTagList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        tagFrequencyMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a copy of the specified {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"     * @param uniqueTagList the {@code UniqueTagList} to be copied.","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"    private UniqueTagList(UniqueTagList uniqueTagList) {","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"        tagFrequencyMap \u003d new HashMap\u003c\u003e(uniqueTagList.tagFrequencyMap);","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"     * Returns a copy of this {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"     * @return a copy of this {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"    public UniqueTagList getCopy() {","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        return new UniqueTagList(this);","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"     * Adds tags in the specified tag set to this {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"     * For every {@code Tag}, the frequency of the {@code Tag} will be incremented if the {@code Tag} already exists.","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"     * Else, the {@code Tag} will be added to this {@code tagFrequencyMap} with a value of 1.","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"     * @param tagSet the tag set containing the tags to be added.","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"    public void addTags(Set\u003cTag\u003e tagSet) {","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(tagSet);","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"        for (Tag tag : tagSet) {","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"            requireNonNull(tag);","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"            if (tagFrequencyMap.containsKey(tag)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"                int updatedCount \u003d tagFrequencyMap.get(tag) + 1;","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"                tagFrequencyMap.put(tag, updatedCount);","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"            } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"                tagFrequencyMap.put(tag, 1);","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"     * Removes tags in the specified tag set from this {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"     * For every {@code Tag}, the frequency of the {@code Tag} will be decremented if the {@code Tag} frequency is","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"     * more than 1. Else, the {@code Tag} will be removed from this {@code tagFrequencyMap}.","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"     * @param tagSet the tag set containing the tags to be removed.","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"    public void removeTags(Set\u003cTag\u003e tagSet) {","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"        requireNonNull(tagSet);","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"        for (Tag tag : tagSet) {","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"            requireNonNull(tag);","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"            if (!tagFrequencyMap.containsKey(tag)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"                String warningMessage \u003d String.format(\"Attempting to remove an un-added Tag: %1$s\", tag);","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"                logger.warning(warningMessage);","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"                assert false : warningMessage;","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"                continue;","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"            if (tagFrequencyMap.get(tag) \u003c\u003d 1) {","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"                assert tagFrequencyMap.get(tag) \u003d\u003d 1 : \"Frequency should not be less than 1.\";","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"                tagFrequencyMap.remove(tag);","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"            } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"                int updatedCount \u003d tagFrequencyMap.get(tag) - 1;","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"                tagFrequencyMap.put(tag, updatedCount);","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"     * Removes tags in the specified tag set {code tagsToRemove} from this {@code UniqueTagList} and then","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"     * adds tags in the specified tag set {code tagsToAdd} from this {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"     * @param tagsToRemove the tag set containing the tags to be removed.","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"     * @param tagsToAdd the tag set containing the tags to be added.","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"    public void removeAndAddTags(Set\u003cTag\u003e tagsToRemove, Set\u003cTag\u003e tagsToAdd) {","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"        removeTags(tagsToRemove);","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"        addTags(tagsToAdd);","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"     * Clears all tags in this {@code UniqueTagList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"ngjunkang"},"content":"    public void clearTags() {","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"ngjunkang"},"content":"        tagFrequencyMap.clear();","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"ngjunkang"},"content":"    public List\u003cTag\u003e getUniqueTagList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"ngjunkang"},"content":"        List\u003cTag\u003e tagList \u003d new ArrayList\u003c\u003e(tagFrequencyMap.keySet());","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"ngjunkang"},"content":"        Collections.sort(tagList);","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"ngjunkang"},"content":"        return Collections.unmodifiableList(tagList);","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"ngjunkang"},"content":"    public int getUniqueTagListSize() {","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"ngjunkang"},"content":"        return tagFrequencyMap.size();","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"ngjunkang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"ngjunkang"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"ngjunkang"},"content":"        if (!(other instanceof UniqueTagList)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"ngjunkang"},"content":"        return tagFrequencyMap.equals(((UniqueTagList) other).tagFrequencyMap);","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"ngjunkang"},"content":"    public String toString() {","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"ngjunkang"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"ngjunkang"},"content":"        List\u003cTag\u003e tagList \u003d getUniqueTagList();","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"ngjunkang"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"ngjunkang"},"content":"        for (Tag tag : tagList) {","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"ngjunkang"},"content":"            output.append(tag);","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"ngjunkang"},"content":"            count++;","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"ngjunkang"},"content":"            if ((count % 5) \u003d\u003d 0) {","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"ngjunkang"},"content":"                output.append(\"\\n\");","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"ngjunkang"},"content":"            } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"ngjunkang"},"content":"                output.append(\" \");","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"ngjunkang"},"content":"        String trimmedOutputString \u003d output.toString().trim();","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"ngjunkang"},"content":"        return trimmedOutputString;","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ngjunkang":173}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.RecentDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.description.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"                BirthDate.parse(\"2000-01-01\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"                getContactedInfoList(\"2020-01-02 Meet up\", \"2021-01-02 Phone call\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"cashewnade"},"content":"                getTagSet(\"friends\"), new ReminderList()),","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"                BirthDate.parse(\"2000-01-02\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"                getContactedInfoList(\"2020-01-02 Meet up\", \"2021-01-02 Phone call\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"cashewnade"},"content":"                getTagSet(\"colleagues\", \"friends\"), new ReminderList()),","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"                BirthDate.parse(\"2000-03-01\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"                getContactedInfoList(\"2020-01-02 Meet up\", \"2021-01-02 Phone call\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"cashewnade"},"content":"                getTagSet(\"neighbours\"), new ReminderList()),","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"                BirthDate.parse(\"2000-01-04\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"                getContactedInfoList(\"2020-01-02 Meet up\", \"2021-01-02 Phone call\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"cashewnade"},"content":"                getTagSet(\"family\"), new ReminderList()),","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"                BirthDate.parse(\"2000-05-01\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"                getContactedInfoList(\"2020-01-02 Meet up\", \"2021-01-02 Phone call\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"cashewnade"},"content":"                getTagSet(\"classmates\"), new ReminderList()),","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"                BirthDate.parse(\"2006-07-01\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"                getContactedInfoList(\"2020-01-02 Meet up\", \"2021-01-02 Phone call\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"cashewnade"},"content":"                getTagSet(\"colleagues\"), new ReminderList())","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"bloodofme"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"bloodofme"},"content":"    public static ArrayList\u003cContactedInfo\u003e getContactedInfoList(String... strings) {","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"bloodofme"},"content":"        return (ArrayList\u003cContactedInfo\u003e) Arrays.stream(strings)","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"bloodofme"},"content":"                .map((str) -\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"                    String[] strArr \u003d str.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"bloodofme"},"content":"                    RecentDate recentDate \u003d RecentDate.parse(strArr[0]);","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"bloodofme"},"content":"                    Description description \u003d new Description(strArr[1]);","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"bloodofme"},"content":"                    return new ContactedInfo(recentDate, description);","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"bloodofme"},"content":"                })","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"cashewnade":7,"pyk595":7,"-":54,"bloodofme":24}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedContactedInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.RecentDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.description.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"public class JsonAdaptedContactedInfo {","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"    private final String description;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"    private final String date;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"     * Constructs a {@code JsonAdaptedContactedInfo} with the given {@code description} and {@code date}.","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"    public JsonAdaptedContactedInfo(@JsonProperty(\"date\") String date,","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"            @JsonProperty(\"description\") String description) {","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"     * Converts a given {@code ContactedInfo} into this class for Jackson use.","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"    public JsonAdaptedContactedInfo(ContactedInfo source) {","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"        date \u003d source.getRecentDate().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"     * Converts this Jackson-friendly adapted contacted info object into the model\u0027s {@code ContactedInfo} object.","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted contacted info.","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"    public ContactedInfo toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"        if (!ContactedInfo.isValidContactedInfo(date, description)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"            throw new IllegalValueException(ContactedInfo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"        RecentDate recentDate \u003d RecentDate.parse(date);","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"        Description desc \u003d new Description(description);","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"        return new ContactedInfo(recentDate, desc);","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"bloodofme":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.DocumentedDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"    private final String birthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"    private final List\u003cJsonAdaptedContactedInfo\u003e contactedInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"            @JsonProperty(\"birthDate\") String birthDate,","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"            @JsonProperty(\"contactedInfo\") List\u003cJsonAdaptedContactedInfo\u003e contactedInfo,","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"        if (contactedInfo !\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"            this.contactedInfo.addAll(contactedInfo);","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"        birthDate \u003d source.getBirthDate().value;","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"        contactedInfo.addAll(source.getContactedInfoList().stream()","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"                .map(JsonAdaptedContactedInfo::new)","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"        final List\u003cContactedInfo\u003e personContactedInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"        for (JsonAdaptedContactedInfo eachContactedInfo : contactedInfo) {","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"bloodofme"},"content":"            personContactedInfo.add(eachContactedInfo.toModelType());","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"bloodofme"},"content":"        if (birthDate \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"bloodofme"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"bloodofme"},"content":"                                                            BirthDate.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"bloodofme"},"content":"        if (!DocumentedDate.isValidDate(birthDate)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"bloodofme"},"content":"            throw new IllegalValueException(DocumentedDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"bloodofme"},"content":"        final BirthDate modelBirthDate \u003d BirthDate.parse(birthDate);","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"bloodofme"},"content":"        final ArrayList\u003cContactedInfo\u003e modelContactedInfo \u003d new ArrayList\u003c\u003e(personContactedInfo);","lastModifiedDate":"2022-03-19"},{"lineNumber":137,"author":{"gitId":"bloodofme"},"content":"        Collections.sort(modelContactedInfo);","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"cashewnade"},"content":"        final ReminderList modelReminderList \u003d new ReminderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"cashewnade"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"bloodofme"},"content":"        return new Person(modelName, modelPhone, modelEmail,","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"bloodofme"},"content":"                modelAddress, modelBirthDate, modelContactedInfo, modelTags, modelReminderList);","lastModifiedDate":"2022-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cashewnade":3,"-":107,"bloodofme":37}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.LogicManager.FILE_OPS_ERROR_MESSAGE;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"    private static final Path BACKUP_PATH \u003d UserPrefs.getBackupFilePath();","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"            try {","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"                backupFiles();","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"                logger.info(FILE_OPS_ERROR_MESSAGE + BACKUP_PATH);","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"     * Creates an exact copy of the current addressbook.json file.","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"     * @throws IOException if the designated file paths are invalid.","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"pyk595"},"content":"    public void backupFiles() throws IOException {","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"        Files.copy(getAddressBookFilePath(), BACKUP_PATH);","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"pyk595":19,"-":80}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-t17-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"pyk595":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"    private static final String LAST_CONTACTED_PREAMBLE \u003d \"Last contacted: \";","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    private static final String DATE_OF_BIRTH_PREAMBLE \u003d \"Date of Birth: \";","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"    private Label contactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"    private Label birthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"        birthDate.setText(DATE_OF_BIRTH_PREAMBLE + person.getBirthDate().toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"        contactedInfo.setText(LAST_CONTACTED_PREAMBLE + person","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"                        .getLatestContactedInfoEntry()","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"                        .map(ContactedInfo::toString)","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"                        .orElse(\"No entry yet\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"pyk595":8,"-":79,"bloodofme":4}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ngjunkang":1,"-":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"         title\u003d\"AIA App\" minWidth\u003d\"680\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"          \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"resultDisplayPlaceholder\" minWidth\u003d\"300\" prefWidth\u003d\"300\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ngjunkang":8,"-":53}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"      \u003cLabel fx:id\u003d\"contactedInfo\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$contacted info\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"      \u003cLabel fx:id\u003d\"birthDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthDate\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":36,"bloodofme":2}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"    public void isUnsignedInteger() {","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        // EP: empty strings","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"  \"));","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"        // EP: not a number","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"a\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"aaa\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"        // EP: zero","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"        assertTrue(StringUtil.isUnsignedInteger(\"0\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"        // EP: zero as prefix","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"        assertTrue(StringUtil.isUnsignedInteger(\"01\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"        // EP: signed numbers","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"-1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"+1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"        // EP: numbers with white space","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"        assertFalse(StringUtil.isUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"pyk595"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"pyk595"},"content":"        assertTrue(StringUtil.isUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"        assertTrue(StringUtil.isUnsignedInteger(\"10\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"pyk595":33,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTH_DATE_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.TypicalPersons.DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"bloodofme"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_DAVID + PHONE_DESC_DAVID + EMAIL_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"bloodofme"},"content":"                + ADDRESS_DESC_DAVID + BIRTH_DATE_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"bloodofme"},"content":"        Person expectedPerson \u003d new PersonBuilder(DAVID).withTags().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":154,"bloodofme":9}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"        Person validPerson \u003d new PersonBuilder().addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":44,"bloodofme":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.ReadOnlyUniqueTagList;","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"        Person validPerson \u003d new PersonBuilder().addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"        Person validPerson \u003d new PersonBuilder().addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"pyk595"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"pyk595"},"content":"        public int getFilteredPersonListSize() {","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"pyk595"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"pyk595"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"pyk595"},"content":"        public Person getFilteredPerson(Index index) {","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"pyk595"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"ngjunkang"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"ngjunkang"},"content":"        public ReadOnlyUniqueTagList getUniqueTagList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"ngjunkang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"ngjunkang"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"ngjunkang"},"content":"        public int getNumberOfUniqueTags() {","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"ngjunkang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"ngjunkang":11,"pyk595":11,"-":190,"bloodofme":4}},{"path":"src/test/java/seedu/address/logic/commands/AddContactedInfoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DATE_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DATE_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.RecentDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.description.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"public class AddContactedInfoCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"    private final Description validDescAmy \u003d new Description(VALID_CONTACTED_DESC_AMY);","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"    private final Description validDescBob \u003d new Description(VALID_CONTACTED_DESC_BOB);","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"    private final RecentDate validDateAmy \u003d RecentDate.parse(VALID_CONTACTED_DATE_AMY);","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"    private final RecentDate validDateBob \u003d RecentDate.parse(VALID_CONTACTED_DATE_BOB);","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"    public void constructor_anyFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"        ContactedInfo contactedInfo \u003d ContactedInfo.getDefaultContactedInfo();","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddContactedInfoCommand(null, contactedInfo));","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"        assertThrows(NullPointerException.class, (","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"                ) -\u003e new AddContactedInfoCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"    public void execute_duplicateContactedInfo_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"        // same contacted information","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"        ContactedInfo contactedInfo \u003d new ContactedInfo(RecentDate.parse(\"2020-02-02\"), new Description(\"Wedding\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"        Person personToAddTag \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"        // Alice must already have the contacted information","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"        assertTrue(personToAddTag.containsContactedInfo(contactedInfo));","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"        AddContactedInfoCommand addContactedInfoCommand \u003d new AddContactedInfoCommand(","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"                INDEX_FIRST_PERSON, contactedInfo);","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"                AddContactedInfoCommand.MESSAGE_DUPLICATE_CONTACTED_INFO, contactedInfo.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"        assertCommandFailure(addContactedInfoCommand, model, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"        // case sensitivity test","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"bloodofme"},"content":"        contactedInfo \u003d new ContactedInfo(RecentDate.parse(\"2020-02-02\"), new Description(\"WedDiNg\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"        addContactedInfoCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON, contactedInfo);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"        expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"bloodofme"},"content":"                AddContactedInfoCommand.MESSAGE_DUPLICATE_CONTACTED_INFO, contactedInfo.toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"        assertCommandFailure(addContactedInfoCommand, model, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"bloodofme"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getAddressBook().getPersonList().size() + 10);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"        // ensures that outOfBoundIndex is out bounds of address book list","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003e\u003d model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"bloodofme"},"content":"        AddContactedInfoCommand contactedCommand \u003d new AddContactedInfoCommand(","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"bloodofme"},"content":"                outOfBoundIndex, new ContactedInfo(validDateAmy, validDescAmy));","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"bloodofme"},"content":"        assertCommandFailure(contactedCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"bloodofme"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"bloodofme"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"bloodofme"},"content":"        ContactedInfo contactedInfo \u003d new ContactedInfo(validDateAmy, validDescAmy);","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"        Person personToAddContactedLog \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"bloodofme"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToAddContactedLog)","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"bloodofme"},"content":"                .addContactedInfo(VALID_CONTACTED_DATE_AMY + \" \" + VALID_CONTACTED_DESC_AMY).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"bloodofme"},"content":"        AddContactedInfoCommand contactedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"bloodofme"},"content":"                contactedInfo);","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"bloodofme"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"bloodofme"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"bloodofme"},"content":"                expectedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"bloodofme"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"bloodofme"},"content":"                AddContactedInfoCommand.MESSAGE_ADD_CONTACTEDINFO_SUCCESS, expectedPerson);","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"bloodofme"},"content":"        assertCommandSuccess(contactedCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"bloodofme"},"content":"    public void equals() {","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"bloodofme"},"content":"        final AddContactedInfoCommand standardCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(validDateAmy, validDescAmy));","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"bloodofme"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"bloodofme"},"content":"        AddContactedInfoCommand commandWithSameValues \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(validDateAmy, validDescAmy));","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"bloodofme"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"bloodofme"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"bloodofme"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"bloodofme"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"bloodofme"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"bloodofme"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"bloodofme"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"bloodofme"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"bloodofme"},"content":"        assertFalse(standardCommand.equals(new AddContactedInfoCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(validDateAmy, validDescAmy))));","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"bloodofme"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"bloodofme"},"content":"        assertFalse(standardCommand.equals(new AddContactedInfoCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(validDateBob, validDescBob))));","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bloodofme":136}},{"path":"src/test/java/seedu/address/logic/commands/AddTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.AddTagCommand.MESSAGE_DUPLICATE_TAG;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH_PERSON;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"class AddTagCommandTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    public void constructor_anyFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(\"foo\");","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagCommand(null, tag));","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagCommand(null, null));","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(\"foo\");","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        assert model.getFilteredPersonList().size() \u003e 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        Person personToAddTag \u003d model.getFilteredPersonList().get(INDEX_FOURTH_PERSON.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToAddTag).addTags(\"foo\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(INDEX_FOURTH_PERSON, tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FOURTH_PERSON.getZeroBased()),","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"                expectedPerson);","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        String expectedMessage \u003d String.format(AddTagCommand.MESSAGE_ADD_TAG_SUCCESS, expectedPerson);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        assertCommandSuccess(addTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"    public void execute_duplicatedTagUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        // same tag","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(\"friends\");","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"        Person personToAddTag \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"        // Alice must already have the tag \"friends\"","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(personToAddTag.hasTag(tag));","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DUPLICATE_TAG, tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"        assertCommandFailure(addTagCommand, model, expectedMessage);","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"        // case sensitivity test","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"        tag \u003d new Tag(\"fRiEnDs\");","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"        addTagCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"        expectedMessage \u003d String.format(MESSAGE_DUPLICATE_TAG, tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"        assertCommandFailure(addTagCommand, model, expectedMessage);","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getAddressBook().getPersonList().size() + 10);","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"        // ensures that outOfBoundIndex is out bounds of address book list","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003e\u003d model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(outOfBoundIndex, new Tag(\"randomTag\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"        assertCommandFailure(addTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(\"foo\");","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"        Person personToAddTag \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToAddTag).addTags(\"foo\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"                expectedPerson);","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"        String expectedMessage \u003d String.format(AddTagCommand.MESSAGE_ADD_TAG_SUCCESS, expectedPerson);","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"        assertCommandSuccess(addTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"    public void execute_duplicatedTagFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"        // same tag","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(\"friends\");","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"        Person personToAddTag \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"        // Alice must already have the tag \"friends\"","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(personToAddTag.hasTag(tag));","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DUPLICATE_TAG, tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"ngjunkang"},"content":"        assertCommandFailure(addTagCommand, model, expectedMessage);","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"ngjunkang"},"content":"        // case sensitivity test","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"ngjunkang"},"content":"        tag \u003d new Tag(\"fRiEnDs\");","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"ngjunkang"},"content":"        addTagCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"ngjunkang"},"content":"        expectedMessage \u003d String.format(MESSAGE_DUPLICATE_TAG, tag);","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"ngjunkang"},"content":"        assertCommandFailure(addTagCommand, model, expectedMessage);","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"ngjunkang"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"ngjunkang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"ngjunkang"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"ngjunkang"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(outOfBoundIndex, new Tag(\"randomTag\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"ngjunkang"},"content":"        assertCommandFailure(addTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"ngjunkang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"ngjunkang"},"content":"        Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"ngjunkang"},"content":"        Index secondIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-08"},{"lineNumber":149,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"ngjunkang"},"content":"        Tag firstTag \u003d new Tag(\"first\");","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"ngjunkang"},"content":"        Tag secondTag \u003d new Tag(\"second\");","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand addTagFirstCommand \u003d new AddTagCommand(firstIndex, firstTag);","lastModifiedDate":"2022-03-08"},{"lineNumber":154,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand addTagSecondCommand \u003d new AddTagCommand(secondIndex, firstTag);","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand addTagThirdCommand \u003d new AddTagCommand(firstIndex, secondTag);","lastModifiedDate":"2022-03-08"},{"lineNumber":156,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand addTagFourthCommand \u003d new AddTagCommand(secondIndex, secondTag);","lastModifiedDate":"2022-03-08"},{"lineNumber":157,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":158,"author":{"gitId":"ngjunkang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(addTagFirstCommand.equals(addTagFirstCommand));","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":161,"author":{"gitId":"ngjunkang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-08"},{"lineNumber":162,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand addTagFirstCommandCopy \u003d new AddTagCommand(firstIndex, firstTag);","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(addTagFirstCommand.equals(addTagFirstCommandCopy));","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"ngjunkang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(addTagFirstCommand.equals(1));","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"ngjunkang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(addTagFirstCommand.equals(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"ngjunkang"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(addTagFirstCommand.equals(addTagSecondCommand));","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(addTagFirstCommand.equals(addTagThirdCommand));","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(addTagFirstCommand.equals(addTagFourthCommand));","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(addTagSecondCommand.equals(addTagThirdCommand));","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(addTagSecondCommand.equals(addTagFourthCommand));","lastModifiedDate":"2022-03-08"},{"lineNumber":177,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(addTagThirdCommand.equals(addTagFourthCommand));","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":179,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"ngjunkang":179}},{"path":"src/test/java/seedu/address/logic/commands/BirthdayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS_WITH_BIRTHDAY_TODAY;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"class BirthdayCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"    private static final DateTimeFormatter FORMATTER_INPUT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"    private Model model;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"    private Model emptyModel;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"    private Person alice;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"    private Person bob;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"    private Person carl;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"        emptyModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        alice \u003d ALICE;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"        bob \u003d BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"        carl \u003d CARL;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"        String todayDate \u003d today.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"        LocalDate yesterday \u003d today.minusDays(1);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"        String yesterdayDate \u003d yesterday.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"        LocalDate tenYearsAgo \u003d today.minusYears(10);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"        String tenYearsAgoDate \u003d tenYearsAgo.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        alice \u003d new PersonBuilder(alice).withBirthDate(todayDate).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        bob \u003d new PersonBuilder(bob).withBirthDate(yesterdayDate).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        carl \u003d new PersonBuilder(carl).withBirthDate(tenYearsAgoDate).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"    public void execute_listHasNoPersons_showsEmptyList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS_WITH_BIRTHDAY_TODAY);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(new BirthdayCommand(),","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"                model,","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"                String.format(BirthdayCommand.MESSAGE_SUCCESS, 0),","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"                emptyModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"    public void execute_listHasNoBirthdaysToday_showsEmptyList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"        model.addPerson(bob);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"        expectedModel.addPerson(bob);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS_WITH_BIRTHDAY_TODAY);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"        int size \u003d expectedModel.getFilteredPersonListSize();","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(new BirthdayCommand(),","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"                model,","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"                String.format(BirthdayCommand.MESSAGE_SUCCESS, size),","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"                expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"    public void execute_listHasBirthdayToday_showsOne() {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"        model.addPerson(alice);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"        expectedModel.addPerson(alice);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"        model.addPerson(bob);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"pyk595"},"content":"        expectedModel.addPerson(bob);","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS_WITH_BIRTHDAY_TODAY);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"pyk595"},"content":"        int size \u003d expectedModel.getFilteredPersonListSize();","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(new BirthdayCommand(),","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"                model,","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"pyk595"},"content":"                String.format(BirthdayCommand.MESSAGE_SUCCESS, size),","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"pyk595"},"content":"                expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"pyk595"},"content":"    public void execute_listHasBirthDateTenYearsAgo_showsOne() {","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"pyk595"},"content":"        model.addPerson(carl);","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"pyk595"},"content":"        expectedModel.addPerson(carl);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"pyk595"},"content":"        model.addPerson(bob);","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"pyk595"},"content":"        expectedModel.addPerson(bob);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"pyk595"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS_WITH_BIRTHDAY_TODAY);","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"pyk595"},"content":"        int size \u003d expectedModel.getFilteredPersonListSize();","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(new BirthdayCommand(),","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"pyk595"},"content":"                model,","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"pyk595"},"content":"                String.format(BirthdayCommand.MESSAGE_SUCCESS, size),","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"pyk595"},"content":"                expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"pyk595":106}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTH_DATE;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"    public static final String VALID_NAME_DAVID \u003d \"David Ng\";","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"    public static final String VALID_PHONE_DAVID \u003d \"33333333\";","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"    public static final String VALID_EMAIL_DAVID \u003d \"david@example.com\";","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"    public static final String VALID_ADDRESS_DAVID \u003d \"Block 213, David Street 3\";","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"    public static final String VALID_CONTACTED_DATE_AMY \u003d \"2023-02-14\";","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"    public static final String VALID_CONTACTED_DATE_BOB \u003d \"2023-02-13\";","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"    public static final String VALID_CONTACTED_DATE_DAVID \u003d \"2023-02-14\";","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"    public static final String VALID_CONTACTED_DESC_AMY \u003d \"Meetup\";","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"    public static final String VALID_CONTACTED_DESC_BOB \u003d \"PhoneCall\";","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"    public static final String VALID_CONTACTED_DESC_DAVID \u003d \"Meeting\";","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"    public static final String VALID_BIRTH_DATE_AMY \u003d \"2000-01-01\";","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"    public static final String VALID_BIRTH_DATE_BOB \u003d \"2000-01-02\";","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"    public static final String VALID_BIRTH_DATE_DAVID \u003d \"2000-01-03\";","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"    public static final String NAME_DESC_DAVID \u003d \" \" + PREFIX_NAME + VALID_NAME_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"    public static final String PHONE_DESC_DAVID \u003d \" \" + PREFIX_PHONE + VALID_PHONE_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"    public static final String EMAIL_DESC_DAVID \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"    public static final String ADDRESS_DESC_DAVID \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"    public static final String CONTACTED_DATE_AMY \u003d \" \" + PREFIX_CONTACTED_DATE + VALID_CONTACTED_DATE_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"bloodofme"},"content":"    public static final String CONTACTED_DATE_BOB \u003d \" \" + PREFIX_CONTACTED_DATE + VALID_CONTACTED_DATE_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"    public static final String CONTACTED_DATE_DAVID \u003d \" \" + PREFIX_CONTACTED_DATE + VALID_CONTACTED_DATE_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"    public static final String CONTACTED_DESC_AMY \u003d \" \" + PREFIX_CONTACTED_DESC + VALID_CONTACTED_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"    public static final String CONTACTED_DESC_BOB \u003d \" \" + PREFIX_CONTACTED_DESC + VALID_CONTACTED_DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"    public static final String CONTACTED_DESC_DAVID \u003d \" \" + PREFIX_CONTACTED_DESC + VALID_CONTACTED_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"    public static final String BIRTH_DATE_DESC_AMY \u003d \" \" + PREFIX_BIRTH_DATE + VALID_BIRTH_DATE_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"    public static final String BIRTH_DATE_DESC_BOB \u003d \" \" + PREFIX_BIRTH_DATE + VALID_BIRTH_DATE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"    public static final String BIRTH_DATE_DESC_DAVID \u003d \" \" + PREFIX_BIRTH_DATE + VALID_BIRTH_DATE_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"bloodofme"},"content":"    public static final String INVALID_CONTACTED_DATE \u003d \" \" + PREFIX_CONTACTED_DATE + \"random string\"; // random string","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"bloodofme"},"content":"    public static final String INVALID_CONTACTED_DESC \u003d \" \" + PREFIX_CONTACTED_DESC; // empty string not allowed","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"pyk595"},"content":"    public static final String INVALID_BIRTH_DATE_DESC \u003d \" \" + PREFIX_BIRTH_DATE + \"1 jan 2000\";","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"pyk595":6,"-":128,"bloodofme":26}},{"path":"src/test/java/seedu/address/logic/commands/ContactedOutsideRangeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.PersonOutsideDateRangePredicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"class ContactedOutsideRangeCommandTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"    private Model model;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"    public void execute_zeroDaysRange_allPersonsFound() {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonListSize());","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate predicate \u003d new PersonOutsideDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"        ContactedOutsideRangeCommand command \u003d new ContactedOutsideRangeCommand(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"    public void execute_zeroDaysRange_noPersonsFound() {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"            person \u003d new PersonBuilder(person).addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"            ab.addPerson(person);","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"        model \u003d new ModelManager(ab, new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"        expectedModel \u003d new ModelManager((model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate predicate \u003d new PersonOutsideDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"        ContactedOutsideRangeCommand command \u003d new ContactedOutsideRangeCommand(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"    public void execute_oneDayRange_noPersonsFound() {","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"            person \u003d new PersonBuilder(person).addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"            ab.addPerson(person);","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"        model \u003d new ModelManager(ab, new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"        expectedModel \u003d new ModelManager((model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate predicate \u003d new PersonOutsideDateRangePredicate(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"        ContactedOutsideRangeCommand command \u003d new ContactedOutsideRangeCommand(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"pyk595"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"pyk595"},"content":"    public void execute_noContactedInfo_onePersonFound() {","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"        Index indexToDel \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"pyk595"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"        Person alice \u003d new PersonBuilder(ALICE).deleteContactedInfo(indexToDel).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"        model.addPerson(alice);","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"pyk595"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate predicate \u003d new PersonOutsideDateRangePredicate(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"pyk595"},"content":"        ContactedOutsideRangeCommand command \u003d new ContactedOutsideRangeCommand(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"pyk595"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"pyk595"},"content":"        assertNotEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"pyk595"},"content":"    public void equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate firstPredicate \u003d new PersonOutsideDateRangePredicate(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate secondPredicate \u003d new PersonOutsideDateRangePredicate(2);","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"pyk595"},"content":"        ContactedOutsideRangeCommand firstCommand \u003d new ContactedOutsideRangeCommand(firstPredicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"pyk595"},"content":"        ContactedOutsideRangeCommand secondCommand \u003d new ContactedOutsideRangeCommand(secondPredicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"pyk595"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"pyk595"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"pyk595"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"pyk595"},"content":"        ContactedOutsideRangeCommand firstCommandCopy \u003d new ContactedOutsideRangeCommand(firstPredicate);","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"pyk595"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"pyk595"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"pyk595"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"pyk595"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"pyk595":120}},{"path":"src/test/java/seedu/address/logic/commands/ContactedWithinRangeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.PersonWithinDateRangePredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"public class ContactedWithinRangeCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"    private Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"    public void execute_zeroDaysRange_noPersonFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate predicate \u003d new PersonWithinDateRangePredicate(0);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"        ContactedWithinRangeCommand command \u003d new ContactedWithinRangeCommand(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"    public void execute_zeroDaysRange_onePersonFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        Person personToAddContactedLog \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToAddContactedLog)","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"                .addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"        model.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"                expectedPerson);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"        ModelManager newExpectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate predicate \u003d new PersonWithinDateRangePredicate(0);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"        ContactedWithinRangeCommand command \u003d new ContactedWithinRangeCommand(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        newExpectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(command, model, expectedMessage, newExpectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        assertEquals(model.getFilteredPersonList(), newExpectedModel.getFilteredPersonList());","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"    public void execute_zeroDaysRange_multiplePersonsFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        Person personToAddContactedLog \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToAddContactedLog)","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"                .addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"        model.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"                expectedPerson);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"        Person secondPersonToAddContactedLog \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"        Person expectedSecondPerson \u003d new PersonBuilder(secondPersonToAddContactedLog)","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"                .addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"        model.setPerson(model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased()),","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"                expectedSecondPerson);","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"        ModelManager newExpectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate predicate \u003d new PersonWithinDateRangePredicate(0);","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"        ContactedWithinRangeCommand command \u003d new ContactedWithinRangeCommand(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"        newExpectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(command, model, expectedMessage, newExpectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"        assertEquals(model.getFilteredPersonList(), newExpectedModel.getFilteredPersonList());","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"pyk595"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate firstPredicate \u003d new PersonWithinDateRangePredicate(1);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate secondPredicate \u003d new PersonWithinDateRangePredicate(2);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"        ContactedWithinRangeCommand firstCommand \u003d new ContactedWithinRangeCommand(firstPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"        ContactedWithinRangeCommand secondCommand \u003d new ContactedWithinRangeCommand(secondPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"pyk595"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"        ContactedWithinRangeCommand firstCommandCopy \u003d new ContactedWithinRangeCommand(firstPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"pyk595"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"pyk595"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"pyk595"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"pyk595"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"pyk595":100}},{"path":"src/test/java/seedu/address/logic/commands/DeleteContactedInfoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"public class DeleteContactedInfoCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"    private final Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"    public void constructor_anyFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteContactedInfoCommand(null, index));","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteContactedInfoCommand(index, null));","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"        Index indexToDel \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToDelete).deleteContactedInfo(indexToDel).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"        DeleteContactedInfoCommand deleteContactedInfoCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"                new DeleteContactedInfoCommand(INDEX_FIRST_PERSON, indexToDel);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"                expectedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(DeleteContactedInfoCommand.MESSAGE_DELETE_CONTACTED_INFO_SUCCESS,","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"                personToDelete.getContactedInfoEntry(indexToDel));","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(deleteContactedInfoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"    public void execute_validIndexEmptyContactedInfoList_failure() {","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        Index indexToDel \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToDelete).deleteContactedInfo(indexToDel).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"        DeleteContactedInfoCommand deleteContactedInfoCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"                new DeleteContactedInfoCommand(INDEX_FIRST_PERSON, indexToDel);","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"                expectedPerson);","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(DeleteContactedInfoCommand.MESSAGE_DELETE_CONTACTED_INFO_SUCCESS,","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"                personToDelete.getContactedInfoEntry(indexToDel));","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(deleteContactedInfoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"        String emptyListMessage \u003d DeleteContactedInfoCommand.MESSAGE_EMPTY_CONTACTED_INFO_LIST;","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"        assertCommandFailure(deleteContactedInfoCommand, model, emptyListMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"    public void execute_boundaryIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(getTypicalPersons().size()); // boundary value","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"        Index contactedInfoIndex \u003d Index.fromOneBased(1); //the default contactedInfo object","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToDelete).deleteContactedInfo(contactedInfoIndex).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"        DeleteContactedInfoCommand deleteContactedInfoCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"                new DeleteContactedInfoCommand(index, contactedInfoIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(index.getZeroBased()),","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"                expectedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(DeleteContactedInfoCommand.MESSAGE_DELETE_CONTACTED_INFO_SUCCESS,","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"                personToDelete.getContactedInfoEntry(contactedInfoIndex));","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(deleteContactedInfoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"    public void execute_boundaryIndexLessOneUnfilteredList_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(getTypicalPersons().size() - 1); //boundary value less one","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"        Index contactedInfoIndex \u003d Index.fromOneBased(1); //the default contactedInfo object","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"pyk595"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToDelete).deleteContactedInfo(contactedInfoIndex).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"pyk595"},"content":"        DeleteContactedInfoCommand deleteContactedInfoCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"                new DeleteContactedInfoCommand(index, contactedInfoIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(index.getZeroBased()),","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"pyk595"},"content":"                expectedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(DeleteContactedInfoCommand.MESSAGE_DELETE_CONTACTED_INFO_SUCCESS,","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"pyk595"},"content":"                personToDelete.getContactedInfoEntry(contactedInfoIndex));","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"        assertCommandSuccess(deleteContactedInfoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"pyk595"},"content":"    public void execute_boundaryIndexMoreOneUnfilteredList_failure() {","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(getTypicalPersons().size() + 1); //boundary value add one","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"pyk595"},"content":"        Index contactedInfoIndex \u003d Index.fromOneBased(1); //the default contactedInfo object","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"pyk595"},"content":"        DeleteContactedInfoCommand deleteContactedInfoCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"pyk595"},"content":"                new DeleteContactedInfoCommand(index, contactedInfoIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d DeleteContactedInfoCommand.MESSAGE_DELETE_CONTACTED_INFO_SUCCESS;","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"pyk595"},"content":"        assertCommandFailure(deleteContactedInfoCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"bloodofme"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"bloodofme"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getAddressBook().getPersonList().size() + 10);","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"bloodofme"},"content":"        Index indexToDelete \u003d Index.fromZeroBased(1);","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"bloodofme"},"content":"        // ensures that outOfBoundIndex is out bounds of address book list","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"bloodofme"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003e\u003d model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"bloodofme"},"content":"        DeleteContactedInfoCommand deleteContactedInfoCommand \u003d new DeleteContactedInfoCommand(","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"bloodofme"},"content":"                outOfBoundIndex, indexToDelete);","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"bloodofme"},"content":"        assertCommandFailure(deleteContactedInfoCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"bloodofme"},"content":"    public void execute_invalidContactedInfoIndex_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"bloodofme"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"bloodofme"},"content":"        Index outOfBoundUpperIndex \u003d Index.fromOneBased(model.getAddressBook().getPersonList().size() + 10);","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"bloodofme"},"content":"        // ensures that outOfBoundIndex is out bounds of address book list","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"bloodofme"},"content":"        assertTrue(outOfBoundUpperIndex.getOneBased() \u003e\u003d model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"bloodofme"},"content":"        DeleteContactedInfoCommand deleteContactedInfoCommandU \u003d new DeleteContactedInfoCommand(","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"bloodofme"},"content":"                index, outOfBoundUpperIndex);","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d DeleteContactedInfoCommand.MESSAGE_INVALID_CONTACTED_INFO_INDEX;","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"pyk595"},"content":"        assertCommandFailure(deleteContactedInfoCommandU, model, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"bloodofme"},"content":"    public void equals() {","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"bloodofme"},"content":"        Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"bloodofme"},"content":"        Index secondIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"bloodofme"},"content":"        Index first \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"bloodofme"},"content":"        Index second \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"bloodofme"},"content":"        DeleteContactedInfoCommand deleteContactedInfoFirstCommand \u003d new DeleteContactedInfoCommand(firstIndex, first);","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"bloodofme"},"content":"        DeleteContactedInfoCommand deleteContactedInfoSecondCommand \u003d new DeleteContactedInfoCommand(","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"bloodofme"},"content":"                secondIndex, second);","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"bloodofme"},"content":"        DeleteContactedInfoCommand deleteContactedInfoThirdCommand \u003d new DeleteContactedInfoCommand(firstIndex, second);","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"bloodofme"},"content":"        DeleteContactedInfoCommand deleteContactedInfoFourthCommand \u003d new DeleteContactedInfoCommand(","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"bloodofme"},"content":"                secondIndex, first);","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"bloodofme"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"bloodofme"},"content":"        assertTrue(deleteContactedInfoFirstCommand.equals(deleteContactedInfoFirstCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"bloodofme"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"bloodofme"},"content":"        DeleteContactedInfoCommand deleteContactedInfoFirstCommandCopy \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"bloodofme"},"content":"                new DeleteContactedInfoCommand(firstIndex, first);","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"bloodofme"},"content":"        assertTrue(deleteContactedInfoFirstCommandCopy.equals(deleteContactedInfoFirstCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"bloodofme"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"bloodofme"},"content":"        assertFalse(deleteContactedInfoFirstCommand.equals(1));","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"bloodofme"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"bloodofme"},"content":"        assertFalse(deleteContactedInfoFirstCommand.equals(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"bloodofme"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"bloodofme"},"content":"        assertFalse(deleteContactedInfoFirstCommand.equals(deleteContactedInfoSecondCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"bloodofme"},"content":"        assertFalse(deleteContactedInfoFirstCommand.equals(deleteContactedInfoThirdCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"bloodofme"},"content":"        assertFalse(deleteContactedInfoFirstCommand.equals(deleteContactedInfoFourthCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"bloodofme"},"content":"        assertFalse(deleteContactedInfoSecondCommand.equals(deleteContactedInfoThirdCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"bloodofme"},"content":"        assertFalse(deleteContactedInfoSecondCommand.equals(deleteContactedInfoFourthCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"bloodofme"},"content":"        assertFalse(deleteContactedInfoThirdCommand.equals(deleteContactedInfoFourthCommand));","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"pyk595":68,"bloodofme":102}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.DeleteTagCommand.MESSAGE_MISSING_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"public class DeleteTagCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    public void constructor_anyFieldsNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(\"foo\");","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagCommand(null, tag));","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagCommand(null, null));","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(\"friends\");","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        Person personToDeleteTag \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        assert personToDeleteTag.hasTag(tag);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToDeleteTag).deleteTags(\"friends\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tag);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"                expectedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_DELETE_TAG_SUCCESS, expectedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        assertCommandSuccess(deleteTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"    public void execute_missingTagUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"        // same tag","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(\"randomTag\");","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        Person personToDeleteTag \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"        // Alice must not have the tag \"randomTag\"","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(personToDeleteTag.hasTag(tag));","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tag);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MISSING_TAG, tag);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"        assertCommandFailure(deleteTagCommand, model, expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getAddressBook().getPersonList().size() + 10);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"        // ensures that outOfBoundIndex is out bounds of address book list","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003e\u003d model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(outOfBoundIndex, new Tag(\"randomTag\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(\"friends\");","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"        Person personToDeleteTag \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToDeleteTag).deleteTags(\"friends\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tag);","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"                expectedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_DELETE_TAG_SUCCESS, expectedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"        assertCommandSuccess(deleteTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"    public void execute_missingTagFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"        // same tag","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(\"randomTag\");","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"        Person personToDeleteTag \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"        // Alice must not have the tag \"randomTag\"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(personToDeleteTag.hasTag(tag));","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tag);","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MISSING_TAG, tag);","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"        assertCommandFailure(deleteTagCommand, model, expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"ngjunkang"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"ngjunkang"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(outOfBoundIndex, new Tag(\"randomTag\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"ngjunkang"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"ngjunkang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"ngjunkang"},"content":"        Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"ngjunkang"},"content":"        Index secondIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"ngjunkang"},"content":"        Tag firstTag \u003d new Tag(\"first\");","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"ngjunkang"},"content":"        Tag secondTag \u003d new Tag(\"second\");","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand deleteTagFirstCommand \u003d new DeleteTagCommand(firstIndex, firstTag);","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand deleteTagSecondCommand \u003d new DeleteTagCommand(secondIndex, firstTag);","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand deleteTagThirdCommand \u003d new DeleteTagCommand(firstIndex, secondTag);","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand deleteTagFourthCommand \u003d new DeleteTagCommand(secondIndex, secondTag);","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"ngjunkang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(deleteTagFirstCommand.equals(deleteTagFirstCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"ngjunkang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand deleteTagFirstCommandCopy \u003d new DeleteTagCommand(firstIndex, firstTag);","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(deleteTagFirstCommand.equals(deleteTagFirstCommandCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"ngjunkang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(deleteTagFirstCommand.equals(1));","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"ngjunkang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(deleteTagFirstCommand.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"ngjunkang"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(deleteTagFirstCommand.equals(deleteTagSecondCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(deleteTagFirstCommand.equals(deleteTagThirdCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(deleteTagFirstCommand.equals(deleteTagFourthCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(deleteTagSecondCommand.equals(deleteTagThirdCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(deleteTagSecondCommand.equals(deleteTagFourthCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(deleteTagThirdCommand.equals(deleteTagFourthCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"ngjunkang":166}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"        Person editedPerson \u003d new PersonBuilder().addContactedInfo(\"2020-02-02 Wedding\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"-":172,"bloodofme":1}},{"path":"src/test/java/seedu/address/logic/commands/HashtagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.PersonWithTagPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"class HashtagCommandTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"    public void execute_noMatchingTag_noPersonFound() {","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        PersonWithTagPredicate predicate \u003d new PersonWithTagPredicate(new Tag(\"randomTag\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        HashtagCommand command \u003d new HashtagCommand(predicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"    public void execute_matchingTag_multiplePersonsFound() {","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        PersonWithTagPredicate predicate \u003d new PersonWithTagPredicate(new Tag(\"friends\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        HashtagCommand command \u003d new HashtagCommand(predicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"        PersonWithTagPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"                new PersonWithTagPredicate(new Tag(\"first\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        PersonWithTagPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"                new PersonWithTagPredicate(new Tag(\"second\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"        HashtagCommand hashtagFirstCommand \u003d new HashtagCommand(firstPredicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        HashtagCommand hashtagSecondCommand \u003d new HashtagCommand(secondPredicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(hashtagFirstCommand.equals(hashtagFirstCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"        HashtagCommand hashtagFirstCommandCopy \u003d new HashtagCommand(firstPredicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(hashtagFirstCommand.equals(hashtagFirstCommandCopy));","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(hashtagFirstCommand.equals(1));","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(hashtagFirstCommand.equals(null));","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(hashtagFirstCommand.equals(hashtagSecondCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"ngjunkang":75}},{"path":"src/test/java/seedu/address/logic/commands/ListContactedInfoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"public class ListContactedInfoCommandTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"    private Model model;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"    public void execute_validIndex_showsSameLogs() {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"        Person expectedPerson \u003d model.getFilteredPerson(index);","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(ListContactedInfoCommand.MESSAGE_LIST_CONTACTED_INFO_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"                expectedPerson.getName(), expectedPerson.getContactedInfoListToString());","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(new ListContactedInfoCommand(index), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"    public void execute_validBoundaryIndex_showsSameLogs() {","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(getTypicalPersons().size());","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"        Person expectedPerson \u003d model.getFilteredPerson(index);","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(ListContactedInfoCommand.MESSAGE_LIST_CONTACTED_INFO_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"                expectedPerson.getName(), expectedPerson.getContactedInfoListToString());","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(new ListContactedInfoCommand(index), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"    public void execute_validBoundaryIndexLessOne_showsSameLogs() {","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(getTypicalPersons().size() - 1);","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"        Person expectedPerson \u003d model.getFilteredPerson(index);","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d String.format(ListContactedInfoCommand.MESSAGE_LIST_CONTACTED_INFO_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"                expectedPerson.getName(), expectedPerson.getContactedInfoListToString());","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"        assertCommandSuccess(new ListContactedInfoCommand(index), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"    public void execute_validBoundaryIndexMoreOne_failure() {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(getTypicalPersons().size() + 1);","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"        assertCommandFailure(new ListContactedInfoCommand(index), model, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"    public void equals() {","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"        Index first \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"        Index second \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"        ListContactedInfoCommand firstCommand \u003d new ListContactedInfoCommand(first);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"        ListContactedInfoCommand secondCommand \u003d new ListContactedInfoCommand(second);","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"pyk595"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"        ListContactedInfoCommand firstCommandCopy \u003d new ListContactedInfoCommand(first);","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"        assertTrue(firstCommandCopy.equals(firstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"pyk595"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"pyk595"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"pyk595":86,"bloodofme":4}},{"path":"src/test/java/seedu/address/logic/commands/ListTagsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.ListTagsCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"public class ListTagsCommandTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    private Model model;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"    public void execute_tagsExist_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SUCCESS, model.getUniqueTagList());","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"        assertCommandSuccess(new ListTagsCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    public void execute_noPerson_noTagMessage() {","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        assertCommandSuccess(new ListTagsCommand(), model, ListTagsCommand.MESSAGE_NO_TAGS, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    public void execute_noTags_noTagMessage() {","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"        addressBook.addPerson(new PersonBuilder().build());","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        model \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        assertCommandSuccess(new ListTagsCommand(), model, ListTagsCommand.MESSAGE_NO_TAGS, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ngjunkang":43}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTH_DATE_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTH_DATE_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTH_DATE_DESC;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.TypicalPersons.DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"        Person expectedPerson \u003d new PersonBuilder(DAVID).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_DAVID + PHONE_DESC_DAVID + EMAIL_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"                + ADDRESS_DESC_DAVID + BIRTH_DATE_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_DAVID + PHONE_DESC_DAVID + EMAIL_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"                + ADDRESS_DESC_DAVID + BIRTH_DATE_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, NAME_DESC_DAVID + PHONE_DESC_AMY + PHONE_DESC_DAVID + EMAIL_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"bloodofme"},"content":"                + ADDRESS_DESC_DAVID + BIRTH_DATE_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, NAME_DESC_DAVID + PHONE_DESC_DAVID + EMAIL_DESC_AMY + EMAIL_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"                + ADDRESS_DESC_DAVID + BIRTH_DATE_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"bloodofme"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, NAME_DESC_DAVID + PHONE_DESC_DAVID + EMAIL_DESC_DAVID + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"bloodofme"},"content":"                + ADDRESS_DESC_DAVID + BIRTH_DATE_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"bloodofme"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"bloodofme"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(DAVID).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":85,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, NAME_DESC_DAVID + PHONE_DESC_DAVID + EMAIL_DESC_DAVID + ADDRESS_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"bloodofme"},"content":"                + BIRTH_DATE_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"bloodofme"},"content":"        Person expectedPerson \u003d new PersonBuilder(DAVID).withTags().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"bloodofme"},"content":"                NAME_DESC_DAVID + PHONE_DESC_DAVID + EMAIL_DESC_DAVID","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"bloodofme"},"content":"                        + ADDRESS_DESC_DAVID + BIRTH_DATE_DESC_DAVID,","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"pyk595"},"content":"                new AddCommand(expectedPerson)","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"pyk595"},"content":"                VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + BIRTH_DATE_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"pyk595"},"content":"                expectedMessage","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"pyk595"},"content":"                NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + BIRTH_DATE_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"pyk595"},"content":"                expectedMessage","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"pyk595"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB + BIRTH_DATE_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"pyk595"},"content":"                expectedMessage","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"pyk595"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB + BIRTH_DATE_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"pyk595"},"content":"                expectedMessage","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"pyk595"},"content":"                VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB + BIRTH_DATE_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"pyk595"},"content":"                expectedMessage","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"pyk595"},"content":"                INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + BIRTH_DATE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"pyk595"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-08"},{"lineNumber":149,"author":{"gitId":"pyk595"},"content":"                Name.MESSAGE_CONSTRAINTS","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":154,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"pyk595"},"content":"                NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + BIRTH_DATE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"pyk595"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-08"},{"lineNumber":157,"author":{"gitId":"pyk595"},"content":"                Phone.MESSAGE_CONSTRAINTS","lastModifiedDate":"2022-03-08"},{"lineNumber":158,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":162,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"pyk595"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB + BIRTH_DATE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"pyk595"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"pyk595"},"content":"                Email.MESSAGE_CONSTRAINTS","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"pyk595"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + BIRTH_DATE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"pyk595"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"pyk595"},"content":"                Address.MESSAGE_CONSTRAINTS","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"pyk595"},"content":"        // invalid birthdate","lastModifiedDate":"2022-03-08"},{"lineNumber":177,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":179,"author":{"gitId":"pyk595"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + INVALID_BIRTH_DATE_DESC","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"pyk595"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-08"},{"lineNumber":181,"author":{"gitId":"pyk595"},"content":"                BirthDate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2022-03-08"},{"lineNumber":182,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":186,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":187,"author":{"gitId":"pyk595"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + BIRTH_DATE_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"pyk595"},"content":"                        + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"pyk595"},"content":"                Tag.MESSAGE_CONSTRAINTS","lastModifiedDate":"2022-03-08"},{"lineNumber":190,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":195,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":196,"author":{"gitId":"bloodofme"},"content":"                INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + BIRTH_DATE_DESC_BOB","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"bloodofme"},"content":"                        + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-03-11"},{"lineNumber":198,"author":{"gitId":"pyk595"},"content":"                Name.MESSAGE_CONSTRAINTS","lastModifiedDate":"2022-03-08"},{"lineNumber":199,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":202,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-08"},{"lineNumber":203,"author":{"gitId":"pyk595"},"content":"                parser,","lastModifiedDate":"2022-03-08"},{"lineNumber":204,"author":{"gitId":"pyk595"},"content":"                PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-08"},{"lineNumber":205,"author":{"gitId":"bloodofme"},"content":"                        + BIRTH_DATE_DESC_BOB","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"bloodofme"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-11"},{"lineNumber":207,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE)","lastModifiedDate":"2022-03-08"},{"lineNumber":208,"author":{"gitId":"pyk595"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"pyk595":79,"-":99,"bloodofme":32}},{"path":"src/test/java/seedu/address/logic/parser/AddContactedInfoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DESC;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.AddContactedInfoCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.RecentDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.description.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"public class AddContactedInfoCommandParserTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    private static final String RECENT_DATE_EMPTY \u003d \" \" + PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"    private static final String RECENT_DESC_EMPTY \u003d \" \" + PREFIX_CONTACTED_DESC;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"    private final AddContactedCommandParser parser \u003d new AddContactedCommandParser();","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"    private final String nonEmptyDate \u003d \"2020-02-02\";","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"    private final String nonEmptyDesc \u003d \"Meeting\";","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"    private final String validDate \u003d RECENT_DATE_EMPTY + nonEmptyDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"    private final String validDesc \u003d RECENT_DESC_EMPTY + nonEmptyDesc;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"        // basic format","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"        AddContactedInfoCommand expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(nonEmptyDate), new Description(nonEmptyDesc)));","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + validDate + validDesc, expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"        // trailing and leading whitespaces","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(nonEmptyDate), new Description(nonEmptyDesc)));","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"                \" \\n \\t  \" + INDEX_FIRST_PERSON.getOneBased() + validDate + validDesc + \" \\n \\t  \",","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"                expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"        // leading spaces","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(nonEmptyDate), new Description(nonEmptyDesc)));","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"                parser,","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"                \"\\n \\t \"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"                + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"                + \" \\n \\t\" + validDate + \" \\n \\t\" + validDesc + \" \\n \\t\",","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"                expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactedInfoCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"        // no parameters","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, AddContactedInfoCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"        // no index","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, AddContactedInfoCommand.COMMAND_WORD","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"                + \" \"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"                + validDate","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"                + \" \"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"                + validDesc,","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"        //no date","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, AddContactedInfoCommand.COMMAND_WORD","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"bloodofme"},"content":"                + \" 1 \"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"                + validDesc,","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"        //no description","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, AddContactedInfoCommand.COMMAND_WORD","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"bloodofme"},"content":"                + \" 1 \"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"                + validDate,","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"bloodofme"},"content":"    public void constructor_invalidInputs_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1\" + RECENT_DATE_EMPTY + RECENT_DESC_EMPTY,","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"bloodofme"},"content":"                ContactedInfo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1\" + RECENT_DATE_EMPTY + \"hello \" + RECENT_DESC_EMPTY + \"meet up\",","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"bloodofme"},"content":"                ContactedInfo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1\" + RECENT_DATE_EMPTY + RECENT_DESC_EMPTY + \" \",","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"bloodofme"},"content":"                ContactedInfo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"bloodofme"},"content":"    public void constructor_invalidInputs_throwsInvalidCommandFormat() {","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1\" + \"test test\" + validDate + validDesc + \" \",","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"bloodofme"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactedInfoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"test test 1\" + \"test test\" + validDate + validDesc + \" \",","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"bloodofme"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactedInfoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"bloodofme"},"content":"    public void parse_multipleDates_acceptsLast() {","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"bloodofme"},"content":"        String firstDate \u003d \"2020-02-02\";","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"bloodofme"},"content":"        String secondDate \u003d \"2020-03-01\";","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"bloodofme"},"content":"        String thirdDate \u003d \"2020-04-03\";","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"bloodofme"},"content":"        // two same dates","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"bloodofme"},"content":"        AddContactedInfoCommand expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(firstDate), new Description(nonEmptyDesc)));","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"bloodofme"},"content":"                INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DATE_EMPTY + firstDate + RECENT_DATE_EMPTY + firstDate","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"bloodofme"},"content":"                + validDesc,","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"bloodofme"},"content":"                expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"bloodofme"},"content":"        // two different dates","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(secondDate), new Description(nonEmptyDesc)));","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"bloodofme"},"content":"                INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DATE_EMPTY + firstDate + RECENT_DATE_EMPTY + secondDate","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"bloodofme"},"content":"                + validDesc,","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"bloodofme"},"content":"                expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"bloodofme"},"content":"        // three different dates","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(thirdDate), new Description(nonEmptyDesc)));","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"bloodofme"},"content":"                INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DATE_EMPTY + firstDate + RECENT_DATE_EMPTY + secondDate + RECENT_DATE_EMPTY + thirdDate","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"bloodofme"},"content":"                + validDesc,","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"bloodofme"},"content":"                expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"bloodofme"},"content":"    public void parse_multipleDesc_acceptsLast() {","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"bloodofme"},"content":"        String firstDesc \u003d \"phone call\";","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"bloodofme"},"content":"        String secondDesc \u003d \"meet up\";","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"bloodofme"},"content":"        String thirdDesc \u003d \"coffee break\";","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"bloodofme"},"content":"        // two same desc","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"bloodofme"},"content":"        AddContactedInfoCommand expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(nonEmptyDate), new Description(firstDesc)));","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DATE_EMPTY + nonEmptyDate","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DESC_EMPTY + firstDesc + RECENT_DESC_EMPTY + firstDesc,","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"bloodofme"},"content":"                expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"bloodofme"},"content":"        // two different desc","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(nonEmptyDate), new Description(secondDesc)));","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"bloodofme"},"content":"                parser,","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"bloodofme"},"content":"                INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DATE_EMPTY + nonEmptyDate","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DESC_EMPTY + firstDesc + RECENT_DESC_EMPTY + secondDesc,","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"bloodofme"},"content":"                expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"bloodofme"},"content":"        // three different desc","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(nonEmptyDate), new Description(thirdDesc)));","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"bloodofme"},"content":"                parser,","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"bloodofme"},"content":"                INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DATE_EMPTY + nonEmptyDate","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DESC_EMPTY + firstDesc + RECENT_DESC_EMPTY + secondDesc + RECENT_DESC_EMPTY + thirdDesc,","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"bloodofme"},"content":"                expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"bloodofme"},"content":"    public void parse_multipleDateAndDesc_acceptsLast() {","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"bloodofme"},"content":"        String firstDate \u003d \"2020-02-02\";","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"bloodofme"},"content":"        String secondDate \u003d \"2020-03-01\";","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"bloodofme"},"content":"        String thirdDate \u003d \"2020-04-03\";","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"bloodofme"},"content":"        String firstDesc \u003d \"phone call\";","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"bloodofme"},"content":"        String secondDesc \u003d \"meet up\";","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"bloodofme"},"content":"        String thirdDesc \u003d \"coffee break\";","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"bloodofme"},"content":"        // two same date and desc","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"bloodofme"},"content":"        AddContactedInfoCommand expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(firstDate), new Description(firstDesc)));","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"bloodofme"},"content":"                parser,","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"bloodofme"},"content":"                INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DATE_EMPTY + firstDate + RECENT_DATE_EMPTY + firstDate","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DESC_EMPTY + firstDesc + RECENT_DESC_EMPTY + firstDesc,","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"bloodofme"},"content":"                expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"bloodofme"},"content":"        // two different date and desc","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(secondDate), new Description(secondDesc)));","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"bloodofme"},"content":"                parser,","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"bloodofme"},"content":"                INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DATE_EMPTY + firstDate + RECENT_DATE_EMPTY + secondDate","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DESC_EMPTY + firstDesc + RECENT_DESC_EMPTY + secondDesc,","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"bloodofme"},"content":"                expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"bloodofme"},"content":"        // three different date and desc","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(thirdDate), new Description(thirdDesc)));","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"bloodofme"},"content":"                parser,","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"bloodofme"},"content":"                INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DATE_EMPTY + firstDate + RECENT_DATE_EMPTY + secondDate + RECENT_DATE_EMPTY + thirdDate","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"bloodofme"},"content":"                + RECENT_DESC_EMPTY + firstDesc + RECENT_DESC_EMPTY + secondDesc + RECENT_DESC_EMPTY + thirdDesc,","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"bloodofme"},"content":"                expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"bloodofme":211}},{"path":"src/test/java/seedu/address/logic/parser/AddTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"class AddTagCommandParserTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    private final AddTagCommandParser parser \u003d new AddTagCommandParser();","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    public void parse_noTag_failure() {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    public void parse_invalidTag_failure() {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + \"hubby*\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + \"hubby and me\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + \"hubby and me\" + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    public void parse_noIndex_failure() {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, TAG_EMPTY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, TAG_EMPTY + \"hubby*\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, TAG_EMPTY + \"hubby and me\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, TAG_EMPTY + \"hubby and me\" + TAG_EMPTY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"string\" + TAG_EMPTY + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"*(\" + TAG_EMPTY + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"*(12sz\" + TAG_EMPTY + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"0\" + TAG_EMPTY + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"-1\" + TAG_EMPTY + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"1 1\" + TAG_EMPTY + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"    public void parse_additionalPrefix_failure() {","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, PREFIX_ADDRESS + \"address \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"                + TAG_EMPTY + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + TAG_EMPTY + VALID_TAG_FRIEND","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"                + PREFIX_EMAIL + \"email\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_PHONE + \"phone\"","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"                + TAG_EMPTY + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"        // basic format","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand expectedCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + TAG_EMPTY + VALID_TAG_FRIEND, expectedCommand);","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"        // trailing and leading whitespaces","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"        expectedCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, \" \\n \\t  \" + INDEX_FIRST_PERSON.getOneBased() + TAG_EMPTY","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"                + VALID_TAG_FRIEND + \" \\n \\t  \", expectedCommand);","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"        // leading spaces in tag","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"        expectedCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, \"  \\n \\t \" + INDEX_FIRST_PERSON.getOneBased() + TAG_EMPTY + \" \\n \\t  \"","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"                + VALID_TAG_FRIEND + \" \\n \\t  \", expectedCommand);","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"    public void parse_multipleTag_acceptsLast() {","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"        // two different tags","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand expectedCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + TAG_EMPTY + VALID_TAG_HUSBAND","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"                + TAG_EMPTY + VALID_TAG_FRIEND, expectedCommand);","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"        // two same tags","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"        expectedCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + TAG_EMPTY + VALID_TAG_FRIEND","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"                + TAG_EMPTY + VALID_TAG_FRIEND, expectedCommand);","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"        // three tags","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"        expectedCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + TAG_EMPTY + VALID_TAG_FRIEND","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"                + TAG_EMPTY + VALID_TAG_FRIEND + TAG_EMPTY + VALID_TAG_HUSBAND, expectedCommand);","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"ngjunkang":104}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_ARGUMENTS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DATE;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACTED_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.AddContactedInfoCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.BirthdayCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.ContactedOutsideRangeCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.ContactedWithinRangeCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.HashtagCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.ListTagsCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.RecentDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.description.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.person.PersonWithTagPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"        Person person \u003d new PersonBuilder().addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_ARGUMENTS, ()","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"            -\u003e parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"        Person person \u003d new PersonBuilder().addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"pyk595"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_ARGUMENTS, ()","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"pyk595"},"content":"            -\u003e parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"    public void parseCommand_hashtag() throws Exception {","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"        HashtagCommand command \u003d (HashtagCommand) parser.parseCommand(HashtagCommand.COMMAND_WORD + VALID_TAG_HUSBAND);","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(new HashtagCommand(new PersonWithTagPredicate(tag)), command);","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"    public void parseCommand_addTag() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"        AddTagCommand command \u003d (AddTagCommand) parser.parseCommand(AddTagCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_TAG + VALID_TAG_FRIEND);","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(new AddTagCommand(INDEX_FIRST_PERSON, tag), command);","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"    public void parseCommand_deleteTag() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"        Tag tag \u003d new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand command \u003d (DeleteTagCommand) parser.parseCommand(DeleteTagCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_TAG + VALID_TAG_FRIEND);","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(new DeleteTagCommand(INDEX_FIRST_PERSON, tag), command);","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"ngjunkang"},"content":"    public void parseCommand_tags() throws Exception {","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(parser.parseCommand(ListTagsCommand.COMMAND_WORD) instanceof ListTagsCommand);","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_ARGUMENTS, ()","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"ngjunkang"},"content":"            -\u003e parser.parseCommand(ListTagsCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"pyk595"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_ARGUMENTS, ()","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"pyk595"},"content":"            -\u003e parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"pyk595"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_ARGUMENTS, ()","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"pyk595"},"content":"            -\u003e parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"pyk595"},"content":"    public void parseCommand_birthday() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"pyk595"},"content":"        assertTrue(parser.parseCommand(BirthdayCommand.COMMAND_WORD) instanceof BirthdayCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"pyk595"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_ARGUMENTS, ()","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"pyk595"},"content":"            -\u003e parser.parseCommand(BirthdayCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"pyk595"},"content":"    public void parseCommand_contactedWithinRange() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"pyk595"},"content":"        assertTrue(","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"pyk595"},"content":"                parser.parseCommand(ContactedWithinRangeCommand.COMMAND_WORD + \" 5\")","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"pyk595"},"content":"                        instanceof ContactedWithinRangeCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"pyk595"},"content":"    public void parseCommand_contactedOutsideRange() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"pyk595"},"content":"        assertTrue(","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"pyk595"},"content":"                parser.parseCommand(ContactedOutsideRangeCommand.COMMAND_WORD + \" 5\")","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"pyk595"},"content":"                        instanceof ContactedOutsideRangeCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"bloodofme"},"content":"    public void parseCommand_contacted() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"bloodofme"},"content":"        final String date \u003d \"2020-02-02\";","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"bloodofme"},"content":"        final String desc \u003d \"Meeting\";","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"bloodofme"},"content":"        final RecentDate recentDate \u003d RecentDate.parse(date);","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"bloodofme"},"content":"        final Description description \u003d new Description(desc);","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"bloodofme"},"content":"        AddContactedInfoCommand command \u003d (AddContactedInfoCommand) parser.parseCommand(","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"bloodofme"},"content":"                AddContactedInfoCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"bloodofme"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2022-03-09"},{"lineNumber":174,"author":{"gitId":"bloodofme"},"content":"                + PREFIX_CONTACTED_DATE + date + \" \"","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"bloodofme"},"content":"                + PREFIX_CONTACTED_DESC + desc);","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"bloodofme"},"content":"        assertEquals(new AddContactedInfoCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(recentDate, description)), command);","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"pyk595"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"pyk595"},"content":"            -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ngjunkang":38,"pyk595":35,"-":96,"bloodofme":22}},{"path":"src/test/java/seedu/address/logic/parser/ContactedOutsideRangeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.ContactedOutsideRangeCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.PersonOutsideDateRangePredicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"class ContactedOutsideRangeCommandParserTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"    private final ContactedOutsideRangeCommandParser parser \u003d new ContactedOutsideRangeCommandParser();","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"    public void parse_notContactedOutsideRangeCommand_throwsParseException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"random\",","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedOutsideRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"random input\",","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedOutsideRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"   \",","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedOutsideRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedOutsideRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"    public void parse_notPositiveInteger_throwsParseException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"-1\",","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedOutsideRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"1.0\",","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedOutsideRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"+1\",","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedOutsideRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"1 n\",","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedOutsideRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"1 and one\",","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedOutsideRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"    public void parse_positiveInteger_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"        int days \u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"        ContactedOutsideRangeCommand expectedCommand \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"               new ContactedOutsideRangeCommand(new PersonOutsideDateRangePredicate(days));","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \"0\", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \"00\", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        days \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        expectedCommand \u003d new ContactedOutsideRangeCommand(new PersonOutsideDateRangePredicate(days));","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \"1\", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \" 1\", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \" 1 \", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \"01\", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"pyk595":57}},{"path":"src/test/java/seedu/address/logic/parser/ContactedWithinRangeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"import seedu.address.logic.commands.ContactedWithinRangeCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.person.PersonWithinDateRangePredicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"class ContactedWithinRangeCommandParserTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"    private final ContactedWithinRangeCommandParser parser \u003d new ContactedWithinRangeCommandParser();","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"    public void parse_notContactedWithinRangeCommand_throwsParseException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"random\",","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedWithinRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"random input\",","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedWithinRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"   \",","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedWithinRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedWithinRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"    public void parse_notPositiveInteger_throwsParseException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"-1\",","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedWithinRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"+1\",","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedWithinRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"1.0\",","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedWithinRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"1 n\",","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedWithinRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"        assertParseFailure(parser, \"1 and one\",","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedWithinRangeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"    public void parse_positiveInteger_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"        int days \u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"        ContactedWithinRangeCommand expectedCommand \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"                new ContactedWithinRangeCommand(new PersonWithinDateRangePredicate(days));","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \"0\", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \"00\", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        days \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        expectedCommand \u003d new ContactedWithinRangeCommand(new PersonWithinDateRangePredicate(days));","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \"1\", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \" 1\", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \" 1 \", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"        assertParseSuccess(parser, \"01\", expectedCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"pyk595":58}},{"path":"src/test/java/seedu/address/logic/parser/DeleteContactedInfoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_CONTACTED_INFO;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.DeleteContactedInfoCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"public class DeleteContactedInfoCommandParserTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    private static final String CONTACTED_INFO_EMPTY \u003d \" \" + PREFIX_DELETE_CONTACTED_INFO;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"    private static final String CONTACTED_INFO \u003d \" \" + PREFIX_DELETE_CONTACTED_INFO + \"1\";","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactedInfoCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"    private final DeleteContactedInfoCommandParser parser \u003d new DeleteContactedInfoCommandParser();","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"    public void parse_noTag_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"    public void parse_noIndex_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, CONTACTED_INFO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, CONTACTED_INFO_EMPTY + \"test\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, CONTACTED_INFO_EMPTY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + CONTACTED_INFO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"string\" + CONTACTED_INFO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"*(\" + CONTACTED_INFO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"*(12sz\" + CONTACTED_INFO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"0\" + CONTACTED_INFO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"-1\" + CONTACTED_INFO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1 1\" + CONTACTED_INFO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"    public void parse_additionalPrefix_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, PREFIX_ADDRESS + \"address \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"                + CONTACTED_INFO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + CONTACTED_INFO","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"                + EMAIL_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_PHONE + \"phone\"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"                + CONTACTED_INFO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"        // basic format","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"        DeleteContactedInfoCommand expectedCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"                new DeleteContactedInfoCommand(INDEX_FIRST_PERSON, index);","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + CONTACTED_INFO, expectedCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"        // trailing and leading whitespaces","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new DeleteContactedInfoCommand(INDEX_FIRST_PERSON, index);","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, \" \\n \\t  \" + INDEX_FIRST_PERSON.getOneBased() + CONTACTED_INFO_EMPTY","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"                + \"1 \" + \" \\n \\t  \", expectedCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"        // leading spaces in tag","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new DeleteContactedInfoCommand(INDEX_FIRST_PERSON, index);","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, \"  \\n \\t \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"                + CONTACTED_INFO_EMPTY + \" \\n \\t  \"","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"                + \" 1 \" + \" \\n \\t  \", expectedCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"bloodofme":80}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"public class DeleteTagCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    private final DeleteTagCommandParser parser \u003d new DeleteTagCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    public void parse_noTag_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"    public void parse_invalidTag_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + \"hubby and me\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + \"hubby and me\" + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    public void parse_noIndex_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, TAG_EMPTY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"string\" + TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"*(\" + TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"*(12sz\" + TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"0\" + TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"-1\" + TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"1 1\" + TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"    public void parse_additionalPrefix_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, PREFIX_ADDRESS + \"address \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"                + TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"                + EMAIL_DESC_AMY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_PHONE + \"phone\"","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"                + TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"        // basic format","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand expectedCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + TAG_EMPTY + VALID_TAG_FRIEND, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"        // trailing and leading whitespaces","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"        expectedCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, \" \\n \\t  \" + INDEX_FIRST_PERSON.getOneBased() + TAG_EMPTY","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"                + VALID_TAG_FRIEND + \" \\n \\t  \", expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"        // leading spaces in tag","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"        expectedCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, \"  \\n \\t \" + INDEX_FIRST_PERSON.getOneBased() + TAG_EMPTY + \" \\n \\t  \"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"                + VALID_TAG_FRIEND + \" \\n \\t  \", expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"    public void parse_multipleTag_acceptsLast() {","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"        // two different tags","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"        DeleteTagCommand expectedCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"                + TAG_DESC_FRIEND, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"        // two same tags","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"        expectedCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"                + TAG_DESC_FRIEND, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"        // three tags","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"        expectedCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"ngjunkang":108}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTH_DATE_DESC_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTH_DATE_DESC;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTH_DATE_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"bloodofme"},"content":"        // invalid name","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"        // invalid phone","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"bloodofme"},"content":"        // invalid email","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"bloodofme"},"content":"        // invalid birth date","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BIRTH_DATE_DESC, BirthDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"bloodofme"},"content":"        // invalid address","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"bloodofme"},"content":"        // invalid tag","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"bloodofme"},"content":"        // birth date","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"bloodofme"},"content":"        userInput \u003d targetIndex.getOneBased() + BIRTH_DATE_DESC_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"bloodofme"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withBirthDate(VALID_BIRTH_DATE_AMY).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"-":206,"bloodofme":22}},{"path":"src/test/java/seedu/address/logic/parser/HashtagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.logic.commands.HashtagCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.person.PersonWithTagPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"class HashtagCommandParserTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    private final HashtagCommandParser parser \u003d new HashtagCommandParser();","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"    public void parse_notHashtagCommand_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"random\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"random input\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"   \"));","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    public void parse_notAlphanumeric_throwsParseException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"#not alphanumeric\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"#no#$@\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        assertParseFailure(parser, \"#\",","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, HashtagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"    public void parse_validArgs_returnsHashtagCommand() {","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"        HashtagCommand expectedHashtagCommand \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"                new HashtagCommand(new PersonWithTagPredicate(new Tag(\"friends\")));","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        // basic format","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, \"#friends\", expectedHashtagCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        // space before tag","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, \"# friends\", expectedHashtagCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        // leading and trailing spaces","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"        assertParseSuccess(parser, \" \\n \\t #friends \\n \\t \", expectedHashtagCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"    public void isHashtagCommand_isHashtagCommand_returnsTrue() {","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(HashtagCommandParser.isHashtagCommand(\" #test\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(HashtagCommandParser.isHashtagCommand(\"#test\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(HashtagCommandParser.isHashtagCommand(\"#test 123\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"    public void isHashtagCommand_notHashtagCommand_returnFalse() {","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(HashtagCommandParser.isHashtagCommand(\"find\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(HashtagCommandParser.isHashtagCommand(\"notTag#test\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"    public void isHashtagCommand_nullInput_throwsNullPointerException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e HashtagCommandParser.isHashtagCommand(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"ngjunkang":68}},{"path":"src/test/java/seedu/address/logic/parser/ListContactedInfoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import seedu.address.logic.commands.ListContactedInfoCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"public class ListContactedInfoCommandParserTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListContactedInfoCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"    private final ListContactedInfoCommandParser parser \u003d new ListContactedInfoCommandParser();","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"        // Expected case","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"        ListContactedInfoCommand expectedCommand \u003d new ListContactedInfoCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, \" 1 \", expectedCommand);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"        // trailing and leading whitespaces","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new ListContactedInfoCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, \" \\n \\t  \" + \" 1 \" + \" \\n \\t  \", expectedCommand);","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"        // leading spaces in tag","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"        expectedCommand \u003d new ListContactedInfoCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"        assertParseSuccess(parser, \"  \\n \\t \" + \" 1 \" + \" \\n \\t  \", expectedCommand);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"    public void parse_noIndex_failure() {","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"*(\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"*(12sz\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"-1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"        assertParseFailure(parser, \"1 1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"bloodofme":47}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_NUMBER_OF_DAYS;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"    public void parseDays_invalidInput_throwsParseException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDays(\"10 a\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"    public void parseDays_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_NUMBER_OF_DAYS, ()","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"            -\u003e ParserUtil.parseDays(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"    public void parseDays_validInput_success() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        // No whitespaces","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"        assertEquals(1, ParserUtil.parseDays(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"        assertEquals(1, ParserUtil.parseDays(\"  1  \"));","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"pyk595":21,"-":196}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(addressBook.equals(5));","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(addressBook.equals(addressBook));","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ngjunkang":6,"-":102}},{"path":"src/test/java/seedu/address/model/contactedinfo/ContactedInfoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.model.contactedinfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DATE_AMY;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DATE_BOB;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DESC_AMY;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DESC_BOB;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.RecentDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.description.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"public class ContactedInfoTest {","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"        RecentDate recentDate \u003d RecentDate.parse(\"2020-02-02\");","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"        Description description \u003d new Description(\"meet up\");","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ContactedInfo(null, description));","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ContactedInfo(recentDate, null));","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ContactedInfo(null, null));","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"    public void equals() {","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"        ContactedInfo first \u003d new ContactedInfo(RecentDate.parse(\"2020-01-02\"), new Description(\"phone call\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"        ContactedInfo second \u003d new ContactedInfo(RecentDate.parse(\"2020-01-01\"), new Description(\"meeting\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"        assertTrue(","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(VALID_CONTACTED_DATE_AMY),","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"                new Description(VALID_CONTACTED_DESC_AMY))","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"                .equals(","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(VALID_CONTACTED_DATE_AMY),","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"                new Description(VALID_CONTACTED_DESC_AMY))));","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"        assertTrue(first.equals(first));","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"        assertFalse(new ContactedInfo(RecentDate.parse(VALID_CONTACTED_DATE_AMY),","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"                new Description(VALID_CONTACTED_DESC_AMY)).equals(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"        assertFalse(first.equals(5));","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"        assertFalse(first.equals(second));","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"        // not equal","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"        assertFalse(","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(VALID_CONTACTED_DATE_AMY),","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"                new Description(VALID_CONTACTED_DESC_AMY))","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"                .equals(","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"                new ContactedInfo(RecentDate.parse(VALID_CONTACTED_DATE_BOB),","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"                new Description(VALID_CONTACTED_DESC_BOB))));","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"bloodofme":61}},{"path":"src/test/java/seedu/address/model/date/BirthDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.model.date;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"class BirthDateTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"    private static final DateTimeFormatter FORMATTER_INPUT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    public void parse_validString_success() {","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"        assertEquals(\"01 Jan 2020\", BirthDate.parse(\"2020-01-01\").toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"    public void parse_invalidString_failure() {","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"        assertThrows(DateTimeParseException.class, ()-\u003eBirthDate.parse(\"hello\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"    public void equals() {","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"        LocalDate test \u003d LocalDate.now();","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"        LocalDate tomorrow \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"        BirthDate testBirthDate \u003d new BirthDate(test);","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"        BirthDate nextDay \u003d new BirthDate(tomorrow);","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"        String testString \u003d test.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"        BirthDate alternate \u003d BirthDate.parse(testString);","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"        assertEquals(testBirthDate, alternate);","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"        assertTrue(testBirthDate.equals(testBirthDate));","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        assertTrue(testBirthDate.equals(alternate));","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"        assertFalse(testBirthDate.equals(1));","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"        assertFalse(testBirthDate.equals(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"        assertFalse(testBirthDate.equals(nextDay));","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"    public void isToday_currentDate_returnsTrue() {","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"        BirthDate test \u003d new BirthDate(LocalDate.now());","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        assertTrue(test.isToday());","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"    public void isToday_currentDateDifferentYear_returnsTrue() {","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"        BirthDate test \u003d new BirthDate(today.withYear(1990));","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        assertTrue(test.isToday());","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"    public void isToday_differentDate_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"        LocalDate yesterday \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"        BirthDate test \u003d new BirthDate(yesterday);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"        assertFalse(test.isToday());","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"    public void isToday_differentDateDifferentYear_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"        LocalDate yesterday \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"        BirthDate test \u003d new BirthDate(yesterday.withYear(1990));","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"        assertFalse(test.isToday());","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"pyk595":72}},{"path":"src/test/java/seedu/address/model/date/DocumentedDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.model.date;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static java.time.temporal.ChronoUnit.DAYS;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"class DocumentedDateTest {","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DocumentedDate(null));","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"    public void getDaysPassed_validTestDate_success() {","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"        String dateString \u003d \"2022-01-01\";","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"        LocalDate testDate \u003d LocalDate.parse(dateString);","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"        int days \u003d (int) DAYS.between(testDate, today);","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"        DocumentedDate date \u003d new DocumentedDate(testDate);","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"        assertEquals(days, date.getDaysPassed());","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"    public void isToday_currentDate_returnsTrue() {","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"        DocumentedDate date \u003d new DocumentedDate(today);","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"        assertTrue(date.isToday());","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"    public void isToday_differentDate_returnsFalse() {","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"        DocumentedDate date \u003d new DocumentedDate(LocalDate.parse(\"2022-01-01\"));","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        assertFalse(date.isToday());","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"    public void isValidDate_validDate_returnsTrue() {","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"        assertTrue(DocumentedDate.isValidDate(\"2000-01-01\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"    public void isValidDate_invalidDate_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        assertFalse(DocumentedDate.isValidDate(\"2000/01/01\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"    public void isValidDate_isoFormattedDate_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"        assertFalse(DocumentedDate.isValidDate(\"01 JANUARY 2020\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"    public void isValidDate_negativeDatePrefix_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"        assertFalse(DocumentedDate.isValidDate(\"-2000-01-01\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"    public void isValidDate_positiveDatePrefix_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"        assertFalse(DocumentedDate.isValidDate(\"+2000-01-01\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"    public void isValidDate_invalidYearLength_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"        assertFalse(DocumentedDate.isValidDate(\"200000-01-01\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"    public void isValidDate_validYearLengthPositive_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"        assertFalse(DocumentedDate.isValidDate(\"+200000-01-01\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"    public void isValidDate_validYearLengthNegative_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"        assertFalse(DocumentedDate.isValidDate(\"-200000-01-01\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"pyk595"},"content":"    public void testToString_standardDate_success() {","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"        DocumentedDate date \u003d new DocumentedDate(LocalDate.parse(\"2022-01-01\"));","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"        assertEquals(\"01 Jan 2022\", date.toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"pyk595":88}},{"path":"src/test/java/seedu/address/model/date/RecentDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.model.date;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import static seedu.address.model.date.RecentDate.isValidRecentDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"class RecentDateTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"    private static final DateTimeFormatter FORMATTER_INPUT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"    private LocalDate test;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    private LocalDate tomorrow;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"    private String testString;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"    private String tomorrowString;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"        test \u003d LocalDate.now();","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"        tomorrow \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"        testString \u003d test.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"        tomorrowString \u003d tomorrow.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    public void parse_validString_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"        assertEquals(\"01 Jan 2020\", RecentDate.parse(\"2020-01-01\").toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"    public void parse_invalidString_failure() {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"        assertThrows(IllegalArgumentException.class, ()-\u003eRecentDate.parse(\"hello\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"    public void isValidRecentDate_variousInput() {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"        assertTrue(isValidRecentDate(testString));","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"        assertFalse(isValidRecentDate(tomorrowString));","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"        LocalDate yesterday \u003d test.minusDays(1);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"        String yesterdayString \u003d yesterday.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"        assertTrue(isValidRecentDate(yesterdayString));","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"        LocalDate future \u003d test.plusMonths(1);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        String futureString \u003d future.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        assertFalse(isValidRecentDate(futureString));","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        LocalDate nextYear \u003d test.plusYears(1);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"        String nextYearString \u003d nextYear.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        assertFalse(isValidRecentDate(nextYearString));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"        RecentDate testRecentDate \u003d new RecentDate(test);","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"        RecentDate nextDay \u003d new RecentDate(tomorrow);","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"        String testString \u003d test.format(FORMATTER_INPUT);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"        RecentDate alternate \u003d RecentDate.parse(testString);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"        assertEquals(testRecentDate, alternate);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"        assertTrue(testRecentDate.equals(testRecentDate));","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"bloodofme"},"content":"        assertTrue(testRecentDate.equals(alternate));","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"        assertFalse(testRecentDate.equals(1));","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"        assertFalse(testRecentDate.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"bloodofme"},"content":"        assertFalse(testRecentDate.equals(nextDay));","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"pyk595":31,"bloodofme":40}},{"path":"src/test/java/seedu/address/model/description/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package seedu.address.model.description;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"    public void equals() {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"        Description desc \u003d new Description(\"Meet up\");","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"        assertTrue(desc.equals(desc));","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"        Description descCopy \u003d new Description(\"Meet up\");","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"        assertTrue(desc.equals(descCopy));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"        assertFalse(desc.equals(1));","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"        assertFalse(desc.equals(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"        Description differentDesc \u003d new Description(\"Phone call\");","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"        assertFalse(desc.equals(differentDesc));","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bloodofme":31}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").addDefaultContactedInfo().build()));","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").addDefaultContactedInfo().build()));","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").addDefaultContactedInfo().build()));","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").addDefaultContactedInfo().build()));","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").addDefaultContactedInfo().build()));","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").addDefaultContactedInfo().build()));","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").addDefaultContactedInfo().build()));","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":68,"bloodofme":7}},{"path":"src/test/java/seedu/address/model/person/PersonOutsideDateRangePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"class PersonOutsideDateRangePredicateTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"    public void test_personOutsideDateRange_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate predicate \u003d new PersonOutsideDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"        assertTrue(predicate.test(ALICE));","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"    public void test_personOutsideDateRange_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate predicate \u003d new PersonOutsideDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"        assertFalse(predicate.test(new PersonBuilder(ALICE).addDefaultContactedInfo().build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"    public void test_personWithNoContactedInfo_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate predicate \u003d new PersonOutsideDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"                new PersonOutsideDateRangePredicate(Integer.MAX_VALUE - 1);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"        assertTrue(predicate.test(new PersonBuilder(ALICE).deleteContactedInfo(index).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"        assertTrue(secondPredicate.test(new PersonBuilder(ALICE).deleteContactedInfo(index).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"    public void test_personWithNoContactedInfo_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"                new PersonOutsideDateRangePredicate(Integer.MAX_VALUE);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"        assertFalse(predicate.test(new PersonBuilder(ALICE).deleteContactedInfo(index).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"    public void equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate firstPredicate \u003d new PersonOutsideDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate secondPredicate \u003d new PersonOutsideDateRangePredicate(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        PersonOutsideDateRangePredicate firstPredicateCopy \u003d new PersonOutsideDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"pyk595":66}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"        Person person \u003d new PersonBuilder().addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"    public void hasTag_hasTagIgnoreCase_returnsTrue() {","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"        Person alice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"        // same tag","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(alice.hasTag(new Tag(VALID_TAG_HUSBAND)));","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"        // all upper case","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(alice.hasTag(new Tag(VALID_TAG_HUSBAND.toUpperCase())));","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"        // all lower case","lastModifiedDate":"2022-03-07"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(alice.hasTag(new Tag(VALID_TAG_FRIEND.toLowerCase())));","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"    public void hasTag_noTagOrNull_returnsFalse() {","lastModifiedDate":"2022-03-07"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"        Person alice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-07"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"        // not tag","lastModifiedDate":"2022-03-07"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(alice.hasTag(new Tag(\"randomTag123\")));","lastModifiedDate":"2022-03-07"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"        // null","lastModifiedDate":"2022-03-07"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(alice.hasTag(null));","lastModifiedDate":"2022-03-07"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":123,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"pyk595"},"content":"    public void showSameContactedInfoList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"pyk595"},"content":"        Person benson \u003d new PersonBuilder(BENSON).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"pyk595"},"content":"        Person carl \u003d new PersonBuilder(CARL).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"pyk595"},"content":"        assertEquals(benson.getContactedInfoListToString(), carl.getContactedInfoListToString());","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"pyk595"},"content":"    public void emptyContactedInfoList_showEmptyMessage() {","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"pyk595"},"content":"        Person alice \u003d new PersonBuilder(ALICE).deleteContactedInfo(index).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"pyk595"},"content":"        assertEquals(alice.getContactedInfoListToString(), Messages.MESSAGE_EMPTY_CONTACTED_INFORMATION);","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ngjunkang":27,"pyk595":21,"-":90,"bloodofme":1}},{"path":"src/test/java/seedu/address/model/person/PersonWithTagPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"class PersonWithTagPredicateTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PersonWithTagPredicate(null));","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    public void test_personWithTag_returnsTrue() {","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"        // one tag","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"        PersonWithTagPredicate predicate \u003d new PersonWithTagPredicate(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(predicate.test(new PersonBuilder(ALICE).withTags(VALID_TAG_FRIEND).build()));","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"        // multiple tag","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"        predicate \u003d new PersonWithTagPredicate(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(predicate.test(new PersonBuilder(ALICE).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build()));","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        // mixed case","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        predicate \u003d new PersonWithTagPredicate(new Tag(\"WIfe\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(predicate.test(new PersonBuilder(ALICE).withTags(\"wiFE\", VALID_TAG_HUSBAND).build()));","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"    public void test_personWithoutTag_returnsFalse() {","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        // non-matching","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        PersonWithTagPredicate predicate \u003d new PersonWithTagPredicate(new Tag(\"randomTag123\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(predicate.test(new PersonBuilder(ALICE).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build()));","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"    void equals() {","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"        Tag firstTag \u003d new Tag(\"firstTag\");","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        Tag secondTag \u003d new Tag(\"secondTag\");","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"        PersonWithTagPredicate firstPredicate \u003d new PersonWithTagPredicate(firstTag);","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"        PersonWithTagPredicate secondPredicate \u003d new PersonWithTagPredicate(secondTag);","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"        PersonWithTagPredicate firstPredicateCopy \u003d new PersonWithTagPredicate(firstTag);","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"ngjunkang":68}},{"path":"src/test/java/seedu/address/model/person/PersonWithinDateRangePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pyk595"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"pyk595"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"pyk595"},"content":"public class PersonWithinDateRangePredicateTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"pyk595"},"content":"    public void test_personWithinDateRange_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate predicate \u003d new PersonWithinDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"pyk595"},"content":"        assertFalse(predicate.test(ALICE));","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"pyk595"},"content":"    public void test_personWithinDateRange_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate predicate \u003d new PersonWithinDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"pyk595"},"content":"        assertTrue(predicate.test(new PersonBuilder(ALICE).addDefaultContactedInfo().build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"pyk595"},"content":"    public void test_personWithinDateBoundary_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate predicate \u003d new PersonWithinDateRangePredicate(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"        assertTrue(predicate.test(new PersonBuilder(ALICE).addDefaultContactedInfo().build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"pyk595"},"content":"    public void test_personOutsideDateBoundary_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate predicate \u003d new PersonWithinDateRangePredicate(Integer.MAX_VALUE - 1);","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"        assertFalse(predicate.test(new PersonBuilder(ALICE).deleteContactedInfo(index).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"    public void test_personWithNoContactedInfo_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate predicate \u003d new PersonWithinDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"pyk595"},"content":"        assertFalse(predicate.test(new PersonBuilder(ALICE).deleteContactedInfo(index).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"pyk595"},"content":"    public void test_personWithNoContactedInfo_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"                new PersonWithinDateRangePredicate(Integer.MAX_VALUE);","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"pyk595"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"pyk595"},"content":"        assertTrue(predicate.test(new PersonBuilder(ALICE).deleteContactedInfo(index).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"pyk595"},"content":"    public void equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate firstPredicate \u003d new PersonWithinDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate secondPredicate \u003d new PersonWithinDateRangePredicate(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"pyk595"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"pyk595"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"pyk595"},"content":"        PersonWithinDateRangePredicate firstPredicateCopy \u003d new PersonWithinDateRangePredicate(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"pyk595"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"pyk595"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"pyk595"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"pyk595"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"pyk595"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"pyk595":75}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    public void compareTo() {","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        Tag firstTag \u003d new Tag(\"apple\");","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        Tag secondTag \u003d new Tag(\"banana\");","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"        Tag thirdTag \u003d new Tag(\"BANANA\");","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        Tag fourthTag \u003d new Tag(\"cat\");","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(secondTag.compareTo(thirdTag) \u003d\u003d 0);","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(secondTag.compareTo(firstTag) \u003e 0);","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(firstTag.compareTo(secondTag) \u003c 0);","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(firstTag.compareTo(fourthTag) \u003c 0);","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(fourthTag.compareTo(firstTag) \u003e 0);","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(firstTag.compareTo(firstTag) \u003d\u003d 0);","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        Tag firstTag \u003d new Tag(\"first\");","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"        Tag secondTag \u003d new Tag(\"second\");","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(new Tag(VALID_TAG_FRIEND).equals(new Tag(VALID_TAG_FRIEND)));","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(firstTag.equals(firstTag));","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(new Tag(VALID_TAG_FRIEND).equals(null));","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(firstTag.equals(5));","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(firstTag.equals(secondTag));","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"        // not equal","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(new Tag(VALID_TAG_FRIEND).equals(new Tag(VALID_TAG_HUSBAND)));","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"        // equal (case insensitive)","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(new Tag(\"TiGeR\").equals(new Tag(\"tIgEr\")));","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(new Tag(\"Tiger\").equals(new Tag(\"Tiger\")));","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"ngjunkang":46,"-":26}},{"path":"src/test/java/seedu/address/model/tag/UniqueTagListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"public class UniqueTagListTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    private final UniqueTagList uniqueTagList \u003d new UniqueTagList();","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    public void getCopy() {","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"        UniqueTagList copy \u003d uniqueTagList.getCopy();","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(copy \u003d\u003d uniqueTagList);","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(copy.equals(uniqueTagList));","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"    public void addTags_validTagSet_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e tagSet \u003d Set.of(new Tag(\"first\"), new Tag(\"second\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(tagSet);","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(2, uniqueTagList.getUniqueTagListSize());","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        // case insensitivity test","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(Set.of(new Tag(\"FirST\")));","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(2, uniqueTagList.getUniqueTagListSize());","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"        // takes first of the same tags","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"first\", uniqueTagList.getUniqueTagList().get(0).tagName);","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"    public void addTags_nullTag_throwsNullPointerException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        tagSet.add(new Tag(\"first\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        tagSet.add(null);","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagList.addTags(tagSet));","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"    public void addTags_nullTagSet_throwsNullPointerException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagList.addTags(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"    public void removeTags_removeExistentTag_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e tagSet \u003d Set.of(new Tag(\"first\"), new Tag(\"second\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(tagSet);","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(Set.of(new Tag(\"Second\")));","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e tagSetToRemove \u003d Set.of(new Tag(\"first\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(2, uniqueTagList.getUniqueTagListSize());","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.removeTags(tagSetToRemove);","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(1, uniqueTagList.getUniqueTagListSize());","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"        tagSetToRemove \u003d Set.of(new Tag(\"Second\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.removeTags(tagSetToRemove);","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(1, uniqueTagList.getUniqueTagListSize());","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.removeTags(tagSetToRemove);","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(0, uniqueTagList.getUniqueTagListSize());","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"    public void removeTags_removeNonExistentTag_throwsAssertionError() {","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e tagSet \u003d Set.of(new Tag(\"first\"), new Tag(\"second\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(AssertionError.class, () -\u003e uniqueTagList.removeTags(tagSet));","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"    public void removeTags_nullTag_throwsNullPointerException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"        tagSet.add(new Tag(\"first\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"        tagSet.add(null);","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagList.removeTags(tagSet));","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"    public void removeTags_nullTagSet_throwsNullPointerException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagList.removeTags(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"    public void clearTags() {","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e tagSet \u003d Set.of(new Tag(\"first\"), new Tag(\"second\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(tagSet);","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(2, uniqueTagList.getUniqueTagListSize());","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.clearTags();","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(0, uniqueTagList.getUniqueTagListSize());","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"    public void getUniqueTagList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(Collections.emptyList(), uniqueTagList.getUniqueTagList());","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"        // sorted and repeated","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"        Tag firstTag \u003d new Tag(\"aaron\");","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"        Tag secondTag \u003d new Tag(\"betty\");","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"        Tag thirdTag \u003d new Tag(\"carl\");","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(Set.of(thirdTag));","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(Set.of(secondTag));","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(Set.of(firstTag));","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(Set.of(firstTag));","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"        List\u003cTag\u003e tagList \u003d uniqueTagList.getUniqueTagList();","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(firstTag, tagList.get(0));","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(secondTag, tagList.get(1));","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(thirdTag, tagList.get(2));","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"    public void getUniqueTagListSize() {","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(0, uniqueTagList.getUniqueTagListSize());","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(uniqueTagList.equals(uniqueTagList));","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(uniqueTagList.equals(6));","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(uniqueTagList.equals(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"ngjunkang"},"content":"    public void toString_moreThanFiveUniqueTags_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e tagSet \u003d Set.of(","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"ngjunkang"},"content":"                new Tag(\"test1\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"ngjunkang"},"content":"                new Tag(\"test2\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"ngjunkang"},"content":"                new Tag(\"test3\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"ngjunkang"},"content":"                new Tag(\"test4\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"ngjunkang"},"content":"                new Tag(\"test5\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"ngjunkang"},"content":"                new Tag(\"test6\")","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"ngjunkang"},"content":"        );","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(tagSet);","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"ngjunkang"},"content":"        String expectedString \u003d \"[test1] [test2] [test3] [test4] [test5]\\n[test6]\";","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(expectedString, uniqueTagList.toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"ngjunkang"},"content":"        tagSet \u003d Set.of(","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"ngjunkang"},"content":"                new Tag(\"test7\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"ngjunkang"},"content":"                new Tag(\"test8\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"ngjunkang"},"content":"                new Tag(\"test9\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"ngjunkang"},"content":"                new Tag(\"test10\")","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"ngjunkang"},"content":"        );","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(tagSet);","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"ngjunkang"},"content":"        expectedString \u003d \"[test1] [test10] [test2] [test3] [test4]\\n[test5] [test6] [test7] [test8] [test9]\";","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(expectedString, uniqueTagList.toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"ngjunkang"},"content":"        tagSet \u003d Set.of(new Tag(\"test11\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"ngjunkang"},"content":"        uniqueTagList.addTags(tagSet);","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"ngjunkang"},"content":"        expectedString \u003d \"[test1] [test10] [test11] [test2] [test3]\\n[test4] [test5] [test6] [test7] [test8]\\n[test9]\";","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(expectedString, uniqueTagList.toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ngjunkang":157}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"    private static final String INVALID_BIRTHDATE \u003d \"1/1/2000\";","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"    private static final String INVALID_RECENT_DATE \u003d \"hello world\";","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"    private static final String VALID_BIRTHDATE \u003d BENSON.getBirthDate().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"    private static final List\u003cJsonAdaptedContactedInfo\u003e VALID_CONTACTED_INFO \u003d BENSON.getContactedInfoList().stream()","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"            .map(JsonAdaptedContactedInfo::new)","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"                        INVALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"                        VALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"                        VALID_CONTACTED_INFO,","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"                        null,","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"                        VALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bloodofme"},"content":"                        VALID_CONTACTED_INFO,","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bloodofme"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bloodofme"},"content":"                        INVALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bloodofme"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"                        VALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"bloodofme"},"content":"                        VALID_CONTACTED_INFO,","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"bloodofme"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bloodofme"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bloodofme"},"content":"                        null,","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bloodofme"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"bloodofme"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bloodofme"},"content":"                        VALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"bloodofme"},"content":"                        VALID_CONTACTED_INFO,","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bloodofme"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"bloodofme"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"bloodofme"},"content":"                        INVALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"bloodofme"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"bloodofme"},"content":"                        VALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"bloodofme"},"content":"                        VALID_CONTACTED_INFO,","lastModifiedDate":"2022-03-19"},{"lineNumber":128,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"bloodofme"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"bloodofme"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"bloodofme"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"bloodofme"},"content":"                        null,","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"bloodofme"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"bloodofme"},"content":"                        VALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"bloodofme"},"content":"                        VALID_CONTACTED_INFO,","lastModifiedDate":"2022-03-19"},{"lineNumber":145,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"bloodofme"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"bloodofme"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"bloodofme"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"bloodofme"},"content":"                        INVALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"bloodofme"},"content":"                        VALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"bloodofme"},"content":"                        VALID_CONTACTED_INFO,","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"bloodofme"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"bloodofme"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"bloodofme"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"bloodofme"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"bloodofme"},"content":"                        null,","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"bloodofme"},"content":"                        VALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"bloodofme"},"content":"                        VALID_CONTACTED_INFO,","lastModifiedDate":"2022-03-19"},{"lineNumber":179,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":186,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"bloodofme"},"content":"    public void toModelType_invalidContactedInfoDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-19"},{"lineNumber":188,"author":{"gitId":"bloodofme"},"content":"        List\u003cJsonAdaptedContactedInfo\u003e invalidDate \u003d new ArrayList\u003c\u003e(VALID_CONTACTED_INFO);","lastModifiedDate":"2022-03-19"},{"lineNumber":189,"author":{"gitId":"bloodofme"},"content":"        invalidDate.add(new JsonAdaptedContactedInfo(INVALID_RECENT_DATE, \"Meet up\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":190,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"bloodofme"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":192,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"bloodofme"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":194,"author":{"gitId":"bloodofme"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":195,"author":{"gitId":"bloodofme"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"bloodofme"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"bloodofme"},"content":"                        VALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"bloodofme"},"content":"                        invalidDate,","lastModifiedDate":"2022-03-19"},{"lineNumber":199,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"bloodofme"},"content":"        String expectedMessage \u003d ContactedInfo.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"bloodofme"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-09"},{"lineNumber":203,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":205,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":206,"author":{"gitId":"bloodofme"},"content":"    public void toModelType_invalidContactedDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-03-19"},{"lineNumber":207,"author":{"gitId":"bloodofme"},"content":"        List\u003cJsonAdaptedContactedInfo\u003e invalidDesc \u003d new ArrayList\u003c\u003e(VALID_CONTACTED_INFO);","lastModifiedDate":"2022-03-19"},{"lineNumber":208,"author":{"gitId":"bloodofme"},"content":"        invalidDesc.add(new JsonAdaptedContactedInfo(\"2020-02-02\", \" \"));","lastModifiedDate":"2022-03-19"},{"lineNumber":209,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":210,"author":{"gitId":"bloodofme"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":211,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"bloodofme"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"bloodofme"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"bloodofme"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"bloodofme"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"bloodofme"},"content":"                        VALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"bloodofme"},"content":"                        invalidDesc,","lastModifiedDate":"2022-03-19"},{"lineNumber":218,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":219,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":220,"author":{"gitId":"bloodofme"},"content":"        String expectedMessage \u003d ContactedInfo.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-19"},{"lineNumber":221,"author":{"gitId":"bloodofme"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-09"},{"lineNumber":222,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":223,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":229,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":230,"author":{"gitId":"bloodofme"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":231,"author":{"gitId":"bloodofme"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":232,"author":{"gitId":"bloodofme"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":233,"author":{"gitId":"bloodofme"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":234,"author":{"gitId":"bloodofme"},"content":"                        VALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":235,"author":{"gitId":"bloodofme"},"content":"                        VALID_CONTACTED_INFO,","lastModifiedDate":"2022-03-19"},{"lineNumber":236,"author":{"gitId":"bloodofme"},"content":"                        invalidTags","lastModifiedDate":"2022-03-10"},{"lineNumber":237,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":238,"author":{"gitId":"bloodofme"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":239,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":240,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":241,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":242,"author":{"gitId":"bloodofme"},"content":"    public void toModelType_nullBirthDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":243,"author":{"gitId":"bloodofme"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":244,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":245,"author":{"gitId":"bloodofme"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":246,"author":{"gitId":"bloodofme"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":247,"author":{"gitId":"bloodofme"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"bloodofme"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":249,"author":{"gitId":"bloodofme"},"content":"                        null,","lastModifiedDate":"2022-03-10"},{"lineNumber":250,"author":{"gitId":"bloodofme"},"content":"                        VALID_CONTACTED_INFO,","lastModifiedDate":"2022-03-19"},{"lineNumber":251,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":252,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":253,"author":{"gitId":"bloodofme"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, BirthDate.class.getSimpleName());","lastModifiedDate":"2022-03-10"},{"lineNumber":254,"author":{"gitId":"bloodofme"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":255,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":256,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":257,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":258,"author":{"gitId":"bloodofme"},"content":"    public void toModelType_invalidBirthDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":259,"author":{"gitId":"bloodofme"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":260,"author":{"gitId":"bloodofme"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-03-10"},{"lineNumber":261,"author":{"gitId":"bloodofme"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":262,"author":{"gitId":"bloodofme"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":263,"author":{"gitId":"bloodofme"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-03-10"},{"lineNumber":264,"author":{"gitId":"bloodofme"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":265,"author":{"gitId":"bloodofme"},"content":"                        INVALID_BIRTHDATE,","lastModifiedDate":"2022-03-10"},{"lineNumber":266,"author":{"gitId":"bloodofme"},"content":"                        VALID_CONTACTED_INFO,","lastModifiedDate":"2022-03-19"},{"lineNumber":267,"author":{"gitId":"bloodofme"},"content":"                        VALID_TAGS","lastModifiedDate":"2022-03-10"},{"lineNumber":268,"author":{"gitId":"bloodofme"},"content":"                );","lastModifiedDate":"2022-03-10"},{"lineNumber":269,"author":{"gitId":"bloodofme"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, BirthDate.class.getSimpleName());","lastModifiedDate":"2022-03-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":101,"bloodofme":172}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"        descriptor.setBirthdate(person.getBirthDate());","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"pyk595"},"content":"     * Sets the {@code BirthDate} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"pyk595"},"content":"     * @param birthDate String to be converted to a BirthDate","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"pyk595"},"content":"     * @return this {@code EditPersonDescriptorBuilder}.","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"pyk595"},"content":"    public EditPersonDescriptorBuilder withBirthDate(String birthDate) {","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"pyk595"},"content":"        descriptor.setBirthdate(BirthDate.parse(birthDate));","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"pyk595"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"pyk595":13,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"pyk595"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import seedu.address.model.contactedinfo.ContactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"pyk595"},"content":"import seedu.address.model.date.BirthDate;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"cashewnade"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"pyk595"},"content":"    public static final String DEFAULT_BIRTHDATE \u003d \"2000-01-01\";","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"    private ArrayList\u003cContactedInfo\u003e contactedInfo;","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"pyk595"},"content":"    private BirthDate birthDate;","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"cashewnade"},"content":"    private ReminderList reminderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"pyk595"},"content":"        birthDate \u003d BirthDate.parse(DEFAULT_BIRTHDATE);","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"        contactedInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"cashewnade"},"content":"        reminderList \u003d new ReminderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"pyk595"},"content":"        birthDate \u003d personToCopy.getBirthDate();","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"        contactedInfo \u003d new ArrayList\u003c\u003e(personToCopy.getContactedInfoList());","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"cashewnade"},"content":"        reminderList \u003d new ReminderList(personToCopy.getReminderList());","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and add it to the tag set of {@code Person}","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"     * that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"     * @param tags the tags to add to the tag set.","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"     * @return this {@code PersonBuilder}.","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"    public PersonBuilder addTags(String ... tags) {","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e newSet \u003d new HashSet\u003c\u003e(this.tags);","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"        newSet.addAll(SampleDataUtil.getTagSet(tags));","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"        this.tags \u003d newSet;","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and deletes them from the tag set of {@code Person}","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"     * that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"     * @param tags the tags to delete from the tag set.","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"     * @return this {@code PersonBuilder}.","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"    public PersonBuilder deleteTags(String ... tags) {","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"        Set\u003cTag\u003e newSet \u003d new HashSet\u003c\u003e(this.tags);","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"        newSet.removeAll(SampleDataUtil.getTagSet(tags));","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"        this.tags \u003d newSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"bloodofme"},"content":"     * Parses the {@code ContactedInfo} into a {@code ArrayList\u003cContactedInfo\u003e}","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"bloodofme"},"content":"     * and add it to the ContactedInfo ArrayList of {@code Person}","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"bloodofme"},"content":"     * that we are building.","lastModifiedDate":"2022-03-19"},{"lineNumber":132,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"bloodofme"},"content":"     * @param contactedInfo the contacted info to add to the contacted info set.","lastModifiedDate":"2022-03-19"},{"lineNumber":134,"author":{"gitId":"bloodofme"},"content":"     * @return this {@code PersonBuilder}.","lastModifiedDate":"2022-03-19"},{"lineNumber":135,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"bloodofme"},"content":"    public PersonBuilder addContactedInfo(String ... contactedInfo) {","lastModifiedDate":"2022-03-19"},{"lineNumber":137,"author":{"gitId":"pyk595"},"content":"        ArrayList\u003cContactedInfo\u003e contactedInfoList \u003d new ArrayList\u003c\u003e(this.contactedInfo);","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"pyk595"},"content":"        contactedInfoList.addAll(SampleDataUtil.getContactedInfoList(contactedInfo));","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"pyk595"},"content":"        Collections.sort(contactedInfoList);","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"pyk595"},"content":"        this.contactedInfo \u003d contactedInfoList;","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"bloodofme"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"bloodofme"},"content":"     * Parses the {@code ContactedInfo} into a {@code ArrayList\u003cContactedInfo\u003e} and","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"bloodofme"},"content":"     * deletes them from the contacted information list of {@code Person}","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"bloodofme"},"content":"     * that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"pyk595"},"content":"     * @param contactedInfoIndex the index of the contacted information to delete from the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"bloodofme"},"content":"     * @return this {@code PersonBuilder}.","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"pyk595"},"content":"    public PersonBuilder deleteContactedInfo(Index contactedInfoIndex) {","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"pyk595"},"content":"        ArrayList\u003cContactedInfo\u003e contactedInfoList \u003d new ArrayList\u003c\u003e(contactedInfo);","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"pyk595"},"content":"        int index \u003d contactedInfoIndex.getZeroBased();","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"pyk595"},"content":"        contactedInfoList.remove(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"pyk595"},"content":"        this.contactedInfo \u003d contactedInfoList;","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"bloodofme"},"content":"        return this;","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"bloodofme"},"content":"     * Returns the default contacted info.","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":164,"author":{"gitId":"bloodofme"},"content":"     * @return this {@code PersonBuilder}.","lastModifiedDate":"2022-03-19"},{"lineNumber":165,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"bloodofme"},"content":"    public PersonBuilder addDefaultContactedInfo() {","lastModifiedDate":"2022-03-19"},{"lineNumber":167,"author":{"gitId":"pyk595"},"content":"        ArrayList\u003cContactedInfo\u003e contactedInfoList \u003d new ArrayList\u003c\u003e(this.contactedInfo);","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"pyk595"},"content":"        contactedInfoList.add(ContactedInfo.getDefaultContactedInfo());","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"pyk595"},"content":"        Collections.sort(contactedInfoList);","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"pyk595"},"content":"        this.contactedInfo \u003d contactedInfoList;","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"bloodofme"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":173,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":182,"author":{"gitId":"pyk595"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":183,"author":{"gitId":"pyk595"},"content":"     * Sets the {@code BirthDate} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":184,"author":{"gitId":"pyk595"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"pyk595"},"content":"     * @param birthDate the String to be used as a date.","lastModifiedDate":"2022-03-08"},{"lineNumber":186,"author":{"gitId":"pyk595"},"content":"     * @return the PersonBuilder.","lastModifiedDate":"2022-03-08"},{"lineNumber":187,"author":{"gitId":"pyk595"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":188,"author":{"gitId":"pyk595"},"content":"    public PersonBuilder withBirthDate(String birthDate) {","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"pyk595"},"content":"        this.birthDate \u003d BirthDate.parse(birthDate);","lastModifiedDate":"2022-03-08"},{"lineNumber":190,"author":{"gitId":"pyk595"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":191,"author":{"gitId":"pyk595"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":192,"author":{"gitId":"pyk595"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":194,"author":{"gitId":"bloodofme"},"content":"        return new Person(name, phone, email, address, birthDate, contactedInfo, tags, reminderList);","lastModifiedDate":"2022-03-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"cashewnade":4,"ngjunkang":28,"pyk595":31,"-":95,"bloodofme":39}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTH_DATE;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"pyk595"},"content":"        sb.append(PREFIX_BIRTH_DATE + person.getBirthDate().value + \" \");","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"        descriptor.getBirthDate().ifPresent(birthDate -\u003e sb.append(PREFIX_BIRTH_DATE).append(birthDate.value)","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"pyk595"},"content":"                .append(\" \"));","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"pyk595":4,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"    public static final Index INDEX_FOURTH_PERSON \u003d Index.fromOneBased(4);","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"ngjunkang":1,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTH_DATE_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"pyk595"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTH_DATE_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTH_DATE_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DATE_AMY;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DATE_BOB;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DESC_AMY;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACTED_DESC_BOB;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_DAVID;","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"pyk595"},"content":"            .withBirthDate(\"2000-01-01\")","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"            .addContactedInfo(\"2020-02-02 Wedding\")","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withBirthDate(\"2000-01-01\")","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"            .addContactedInfo(\"2020-03-02 Meetup\", \"2021-01-01 Wedding\")","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"pyk595"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"            .withBirthDate(\"2000-01-01\")","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"            .addContactedInfo(\"2020-03-02 Meetup\", \"2021-01-01 Wedding\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"pyk595"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"            .withBirthDate(\"2000-01-01\")","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"            .addContactedInfo(\"2020-03-02 Meetup\", \"2021-01-01 Wedding\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"pyk595"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"            .withBirthDate(\"2000-01-01\")","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"            .addContactedInfo(\"2020-03-02 Meetup\", \"2021-01-01 Wedding\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"pyk595"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"            .withBirthDate(\"2000-01-01\")","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"            .addContactedInfo(\"2020-03-02 Meetup\", \"2021-01-01 Wedding\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"pyk595"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"bloodofme"},"content":"            .withBirthDate(\"2000-01-01\")","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"            .addContactedInfo(\"2020-03-02 Meetup\", \"2021-01-01 Wedding\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"pyk595"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"            .withBirthDate(\"2000-01-01\")","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"            .addContactedInfo(\"2020-02-02 Meetup\", \"2021-01-01 PhoneCall\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"pyk595"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"            .withBirthDate(\"2000-01-01\")","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"            .addContactedInfo(\"2020-02-02 Meetup\", \"2021-01-01 PhoneCall\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"pyk595"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"bloodofme"},"content":"            .withBirthDate(VALID_BIRTH_DATE_AMY)","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"bloodofme"},"content":"            .addContactedInfo(VALID_CONTACTED_DATE_AMY + \" \" + VALID_CONTACTED_DESC_AMY).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"bloodofme"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"bloodofme"},"content":"            .addContactedInfo(VALID_CONTACTED_DATE_BOB + \" \" + VALID_CONTACTED_DESC_BOB)","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"bloodofme"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"pyk595"},"content":"            .withBirthDate(VALID_BIRTH_DATE_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"bloodofme"},"content":"    public static final Person DAVID \u003d new PersonBuilder().withName(VALID_NAME_DAVID).withPhone(VALID_PHONE_DAVID)","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"            .withEmail(VALID_EMAIL_DAVID).withAddress(VALID_ADDRESS_DAVID).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"            .withBirthDate(VALID_BIRTH_DATE_DAVID).addDefaultContactedInfo().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"pyk595":12,"-":65,"bloodofme":34}}]
