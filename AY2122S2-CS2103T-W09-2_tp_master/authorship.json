[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# CinnamonBun","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"[![Java CI](https://github.com/AY2122S2-CS2103T-W09-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W09-2/tp/actions)","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"[![Codecov](https://codecov.io/gh/AY2122S2-CS2103T-W09-2/tp/branch/master/graph/badge.svg?token\u003dUJX2NES4W7)](https://codecov.io/gh/AY2122S2-CS2103T-W09-2/tp)","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"## About","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"Small business owners and freelancers may find it difficult to keep track of all their clients.","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"CinnamonBun is an application that helps to record and manage a large number of clients and business transactions, thus allowing business owners to focus more on their business and less on bookkeeping.","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"CinnamonBun comes with a beautiful Graphical User Interface (GUI) while still being optimized for control via a Command Line Interface (CLI).","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"## Links","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"* [User Guide](https://ay2122s2-cs2103t-w09-2.github.io/tp/UserGuide.html)  ","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"* [Developer Guide](https://ay2122s2-cs2103t-w09-2.github.io/tp/DeveloperGuide.html)  ","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"* [About Us](https://ay2122s2-cs2103t-w09-2.github.io/tp/AboutUs.html)","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"## Acknowledgements","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"This project is based on the AddressBook-Level3 project created by the SE-EDU initiative.","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"DaneMarc":3,"TypeDefinition":22,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"run {","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"    archiveName \u003d \u0027CinnamonBun.jar\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"TypeDefinition":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"### Angie","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"\u003cimg src\u003d\"images/lapisraider.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"[[github](https://github.com/LapisRaider)][[portfolio](team/lapisraider.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"* Responsibilities: Code, Project Management","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"### Keith","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"\u003cimg src\u003d\"images/keithczw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"[[github](http://github.com/keithczw)][[portfolio](team/keithczw.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"* Responsibilities: Code, Testing","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"### Terry","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"\u003cimg src\u003d\"images/typedefinition.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"[[github](http://github.com/typedefinition)]","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"[[portfolio](team/typedefinition.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"* Responsibilities: Code, Documentation, Build Engineer","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"### Dane","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"\u003cimg src\u003d\"images/danemarc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"[[github](http://github.com/DaneMarc)]","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"[[portfolio](team/danemarc.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"* Responsibilities: Search, UI","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"### Daffa","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"\u003cimg src\u003d\"images/zunedz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"[[github](http://github.com/zunedz)][[portfolio](team/zunedz.md)]","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"* Responsibilities: Code, Testing","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"DaneMarc":5,"LapisRaider":3,"TypeDefinition":6,"zunedz":5,"-":33,"KeithCZW":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"title: CinnamonBun Developer Guide","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"List of sources of all code and third-party libraries:","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"* This project is based on the AddressBook-Level3 projected created by the [SE-EDU](https://se-education.org/) initiative.","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"* Libraries used: [JavaFX](https://openjfx.io/)","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"* Edit distance algorithm adapted from [geeksforgeeks](https://www.geeksforgeeks.org/edit-distance-dp-5/).","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"* ListView selection adapted from [StackOverflow](https://stackoverflow.com/questions/23622703/deselect-an-item-on-an-javafx-listview-on-click).","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note**\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103T-W09-2/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"![Architecture Diagram](images/ArchitectureDiagram.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"*Figure: High-level architecture diagram of CinnamonBun.*","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103T-W09-2/tp/blob/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"and [`MainApp`](https://github.com/AY2122S2-CS2103T-W09-2/tp/blob/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"It is responsible for,","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"![Architecture Sequence Diagram](images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"*Figure: Sequence diagram of main components\u0027 interaction when use issues the command `delete 1`.*","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"![Component Managers](images/ComponentManagers.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"*Figure: Partial class diagram of interaction of the main components.*","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"![GUI Overview](images/GuiOverview.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"*Figure: Overview of CinnamonBun\u0027s GUI.*","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"TypeDefinition"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103T-W09-2/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"TypeDefinition"},"content":"![UI Class Diagram](images/UiClassDiagram.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"TypeDefinition"},"content":"*Figure: Class diagram of CinnamonBun\u0027s GUI using JavaFX framework.*","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"TypeDefinition"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `TransactionListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"TypeDefinition"},"content":"* depends on some classes in the `Model` component, as it displays `Person` and `Transaction` object residing in the `Model`.","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"TypeDefinition"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103T-W09-2/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"TypeDefinition"},"content":"![Logic Class Diagram](images/LogicClassDiagram.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"TypeDefinition"},"content":"*Figure: Partial class diagram of the `Logic` component.*","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"TypeDefinition"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a client).","lastModifiedDate":"2022-04-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"TypeDefinition"},"content":"![Delete Sequence Diagram](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"TypeDefinition"},"content":"*Figure: Interactions inside the logic component for the `delete 1` command.*","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":118,"author":{"gitId":"TypeDefinition"},"content":"The lifeline for `DeleteCommandParser` and `DeleteCommand` should end at their destroy markers (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"TypeDefinition"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103T-W09-2/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"TypeDefinition"},"content":"![Model Class Diagram](images/ModelClassDiagram.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"TypeDefinition"},"content":"*Figure: Class diagram of `Model` component.*","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"TypeDefinition"},"content":"* stores the client data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2022-04-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"TypeDefinition"},"content":"* stores the transaction data i.e., all `Transaction` objects (which are contained in a `TransactionList` object).","lastModifiedDate":"2022-04-09"},{"lineNumber":142,"author":{"gitId":"TypeDefinition"},"content":"* stores the currently \u0027selected\u0027 `Transaction` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTransaction\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"TypeDefinition"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components).","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"TypeDefinition"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103T-W09-2/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"TypeDefinition"},"content":"![Storage Class Diagram](images/StorageClassDiagram.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"TypeDefinition"},"content":"*Figure: Class diagram of `Storage` component.*","lastModifiedDate":"2022-03-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"TypeDefinition"},"content":"* stores user preference data in json format, and reads it back into corresponding objects.","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"TypeDefinition"},"content":"* stores client and transaction data in binary format, and reads it back into corresponding objects.","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"TypeDefinition"},"content":"* inherits from `AddressBookStorage`, `TempAddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-04-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"TypeDefinition"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2022-04-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"TypeDefinition"},"content":"## **Implementations**","lastModifiedDate":"2022-04-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"TypeDefinition"},"content":"### Person, Field and Tag","lastModifiedDate":"2022-04-10"},{"lineNumber":171,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":172,"author":{"gitId":"TypeDefinition"},"content":"#### Implementation","lastModifiedDate":"2022-04-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":174,"author":{"gitId":"TypeDefinition"},"content":"The `Person` class is used to represent a client. The abstract `Field` class represents the client data, and the `Tag` class represents the tags of the Person.","lastModifiedDate":"2022-04-09"},{"lineNumber":175,"author":{"gitId":"TypeDefinition"},"content":"`Person` contains an immutable `HashMap\u003cPrefix, Field\u003e` of fields, and an immutable `HashSet\u003cTag\u003e` of tags. Since `Person` is immutable, any getters and setters","lastModifiedDate":"2022-04-09"},{"lineNumber":176,"author":{"gitId":"TypeDefinition"},"content":"will return a new instance of `Person`. By using a `HashMap\u003cPrefix, Field\u003e` and `HashSet\u003cTag\u003e`, `Person` can be made modular, as it is easy to add any new data to Person","lastModifiedDate":"2022-04-09"},{"lineNumber":177,"author":{"gitId":"TypeDefinition"},"content":"without needing to edit `Person.java`.","lastModifiedDate":"2022-04-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":179,"author":{"gitId":"TypeDefinition"},"content":"By adding the getter and setter functions, we were able to remove unnecessary classes like `EditPersonDescriptor` \u0026 `PersonBuilder` from the original AB-3 base code.","lastModifiedDate":"2022-04-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":181,"author":{"gitId":"TypeDefinition"},"content":"![Person Class Diagram](images/PersonClassDiagram.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":183,"author":{"gitId":"TypeDefinition"},"content":"*Figure: Simplified class diagram of showing the association between Person, Field and Tag.*","lastModifiedDate":"2022-04-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":185,"author":{"gitId":"TypeDefinition"},"content":"`AddCommand`, `EditCommand`, `RemarkCommand`, `AppendCommand` and `RemoveCommand` adds and removes fields and tags from a `Person`.","lastModifiedDate":"2022-04-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":187,"author":{"gitId":"TypeDefinition"},"content":"![Append Sequence Diagram](images/AppendSequenceDiagram.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":189,"author":{"gitId":"TypeDefinition"},"content":"*Figure: Simplified sequence diagram of `AppendCommand`.*","lastModifiedDate":"2022-04-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":191,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":193,"author":{"gitId":"TypeDefinition"},"content":"The lifeline for `AppendCommandParser` and `AppendCommand` should end at their destroy markers (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":195,"author":{"gitId":"TypeDefinition"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":197,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:bulb: **Note**\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":199,"author":{"gitId":"TypeDefinition"},"content":"* The above sequence diagram has been simplified to provide a more comprehensible overview. It is not completely accurate as some unnecessary details have been omitted.","lastModifiedDate":"2022-04-10"},{"lineNumber":200,"author":{"gitId":"TypeDefinition"},"content":"* While not shown here, `AddCommand`, `EditCommand`, `RemarkCommand`, `RemoveCommand` work very similarly to `AppendCommand`, and their sequence diagram will be almost identical to `AppendCommand`\u0027s.","lastModifiedDate":"2022-04-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":204,"author":{"gitId":"TypeDefinition"},"content":"#### Design considerations","lastModifiedDate":"2022-04-09"},{"lineNumber":205,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":206,"author":{"gitId":"TypeDefinition"},"content":"**Aspect: Structure for storing fields**","lastModifiedDate":"2022-04-09"},{"lineNumber":207,"author":{"gitId":"TypeDefinition"},"content":"* **Alternative 1 (original AB-3 method)**:","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"TypeDefinition"},"content":"  Hard-code every field directly into `Person`.","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"TypeDefinition"},"content":"    * Pros: None.","lastModifiedDate":"2022-04-09"},{"lineNumber":210,"author":{"gitId":"TypeDefinition"},"content":"    * Cons: Extremely highly coupled code that requires many changes to be done everytime a new field is added. Prone to bugs.","lastModifiedDate":"2022-04-10"},{"lineNumber":211,"author":{"gitId":"TypeDefinition"},"content":"* **Alternative 2 (current choice)**","lastModifiedDate":"2022-04-09"},{"lineNumber":212,"author":{"gitId":"TypeDefinition"},"content":"  Make `Person` modular by storing a `HashMap\u003cPrefix, Field\u003e` of fields instead.","lastModifiedDate":"2022-04-09"},{"lineNumber":213,"author":{"gitId":"TypeDefinition"},"content":"    * Pros: Code is much less coupled. Much easier to maintain.","lastModifiedDate":"2022-04-09"},{"lineNumber":214,"author":{"gitId":"TypeDefinition"},"content":"    * Cons: A lot of work was required to decouple the existing `Person` implementation from AB-3.","lastModifiedDate":"2022-04-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":217,"author":{"gitId":"zunedz"},"content":"### Transaction ","lastModifiedDate":"2022-04-11"},{"lineNumber":218,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":219,"author":{"gitId":"TypeDefinition"},"content":"#### Implementation","lastModifiedDate":"2022-04-11"},{"lineNumber":220,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":221,"author":{"gitId":"zunedz"},"content":"The `Transaction` class is used to represent a client\u0027s transaction. The abstract `TransactionField` class represents the transaction data.","lastModifiedDate":"2022-04-11"},{"lineNumber":222,"author":{"gitId":"zunedz"},"content":"`Transaction` contains an immutable `HashMap\u003cPrefix, TransactionField\u003e` of transactionFields as well as identifier of the `Person`","lastModifiedDate":"2022-04-11"},{"lineNumber":223,"author":{"gitId":"zunedz"},"content":"who owns the `Transaction`. This person identifier will be stored as a `long` inside the `Transaction` class. ","lastModifiedDate":"2022-04-11"},{"lineNumber":224,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":225,"author":{"gitId":"zunedz"},"content":"![Transaction Class Diagram](images/TransactionClassDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":226,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":227,"author":{"gitId":"zunedz"},"content":"*Figure: Simplified class diagram of showing the association between Transaction and other related classes.*","lastModifiedDate":"2022-04-11"},{"lineNumber":228,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":229,"author":{"gitId":"zunedz"},"content":"`Transaction` class has 6 commands: `AddTransaction`, `listTransaction`, `findTransaction`, `deleteTransaction`,","lastModifiedDate":"2022-04-11"},{"lineNumber":230,"author":{"gitId":"zunedz"},"content":"`pay`, and `unpay`. All commands have similar implementation, user input will be parsed to","lastModifiedDate":"2022-04-11"},{"lineNumber":231,"author":{"gitId":"zunedz"},"content":"return a `Command` object. `Model` will execute this object to do the desired behavior.","lastModifiedDate":"2022-04-11"},{"lineNumber":232,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":233,"author":{"gitId":"zunedz"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":234,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":235,"author":{"gitId":"zunedz"},"content":"Note that there is a dependencies from class `Transaction` to class `Person`. `Transaction` does not","lastModifiedDate":"2022-04-11"},{"lineNumber":236,"author":{"gitId":"zunedz"},"content":"directly store the reference to the Owner (`Person`) of the `Transaction`, instead `Transaction`","lastModifiedDate":"2022-04-11"},{"lineNumber":237,"author":{"gitId":"zunedz"},"content":"stores an identifier (`personIdentifier`) to identify the owner (`Person`) of the `Transaction`.","lastModifiedDate":"2022-04-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":241,"author":{"gitId":"zunedz"},"content":"#### Design considerations","lastModifiedDate":"2022-04-11"},{"lineNumber":242,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":243,"author":{"gitId":"zunedz"},"content":"The current implementation of `Transaction` class is similar to `Person` class. Every field/attribute of transaction needs to","lastModifiedDate":"2022-04-11"},{"lineNumber":244,"author":{"gitId":"zunedz"},"content":"extend from the `TransactionField` class. The `Transaction` class will have a list of `TransactionField`s in which all of it\u0027s","lastModifiedDate":"2022-04-11"},{"lineNumber":245,"author":{"gitId":"zunedz"},"content":"fields must be registered in the `TransactionFieldRegistry`. Each field is either a required field or an optional field.","lastModifiedDate":"2022-04-11"},{"lineNumber":246,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":247,"author":{"gitId":"zunedz"},"content":"Transaction class consists of fields `Amount`, `TransactionDate`, `DueDate`, `Note`, and `Status`.","lastModifiedDate":"2022-04-11"},{"lineNumber":248,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":249,"author":{"gitId":"zunedz"},"content":"**Aspect: Structure for storing fields**","lastModifiedDate":"2022-04-11"},{"lineNumber":250,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":251,"author":{"gitId":"TypeDefinition"},"content":"* **Alternative 1 (current choice):** Create a list (`FilteredList`) of Transactions, controlled by `ModelManager`.","lastModifiedDate":"2022-04-11"},{"lineNumber":252,"author":{"gitId":"zunedz"},"content":"  Everytime a user create a transaction, a new instance of transaction will be added to the list and a client","lastModifiedDate":"2022-04-11"},{"lineNumber":253,"author":{"gitId":"zunedz"},"content":"  specified by its unique identifier (`personId`) will be referenced by this transaction. To list all the transactions","lastModifiedDate":"2022-04-11"},{"lineNumber":254,"author":{"gitId":"zunedz"},"content":"  of a particular client, the `FilteredList` should be updated to only contain `Transaction`","lastModifiedDate":"2022-04-11"},{"lineNumber":255,"author":{"gitId":"zunedz"},"content":"  with a reference to the client\u0027s id.","lastModifiedDate":"2022-04-11"},{"lineNumber":256,"author":{"gitId":"zunedz"},"content":"    * Pros: Consistent design with the `Person` class.","lastModifiedDate":"2022-04-11"},{"lineNumber":257,"author":{"gitId":"zunedz"},"content":"    * Cons: Have to handle cases when a user is updated/removed. The input specified by the users","lastModifiedDate":"2022-04-11"},{"lineNumber":258,"author":{"gitId":"zunedz"},"content":"      corresponds to the index of the displayed clients/users. Hence we need to retrieve the client\u0027s attributes","lastModifiedDate":"2022-04-11"},{"lineNumber":259,"author":{"gitId":"zunedz"},"content":"      before initializing the Transaction object thus harder to maintain a good design.","lastModifiedDate":"2022-04-11"},{"lineNumber":260,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":261,"author":{"gitId":"zunedz"},"content":"* **Alternative 2:** Every `Person` object has a list of transactions which will be","lastModifiedDate":"2022-04-11"},{"lineNumber":262,"author":{"gitId":"zunedz"},"content":"  initialized with an empty list. Each time a user add a transaction, the object will be","lastModifiedDate":"2022-04-11"},{"lineNumber":263,"author":{"gitId":"zunedz"},"content":"  added into the specified `Person`\u0027s Transaction List.","lastModifiedDate":"2022-04-11"},{"lineNumber":264,"author":{"gitId":"zunedz"},"content":"    * Pros: Easier to implement compared to the other alternative.","lastModifiedDate":"2022-04-11"},{"lineNumber":265,"author":{"gitId":"zunedz"},"content":"    * Cons: `Transaction` class would be coupled to the `Person` class. In addition, inconsistent design","lastModifiedDate":"2022-04-11"},{"lineNumber":266,"author":{"gitId":"zunedz"},"content":"      in comparison to the `Person` class.","lastModifiedDate":"2022-04-11"},{"lineNumber":267,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":268,"author":{"gitId":"zunedz"},"content":"### Add Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":269,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":270,"author":{"gitId":"zunedz"},"content":"### Implementation","lastModifiedDate":"2022-04-11"},{"lineNumber":271,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":272,"author":{"gitId":"zunedz"},"content":"The `Add Transaction` implementation is similar to adding a `Person` with ","lastModifiedDate":"2022-04-11"},{"lineNumber":273,"author":{"gitId":"zunedz"},"content":"an extra step. When adding `Transaction`, user will have to specify ","lastModifiedDate":"2022-04-11"},{"lineNumber":274,"author":{"gitId":"zunedz"},"content":"the owner of the `Transaction` using the index displayed.","lastModifiedDate":"2022-04-11"},{"lineNumber":275,"author":{"gitId":"zunedz"},"content":"However, `Transaction` stores `personIdentifier` as the reference to the `Person` class. Hence there","lastModifiedDate":"2022-04-11"},{"lineNumber":276,"author":{"gitId":"zunedz"},"content":"must be a mechanism to convert the index provided by the user to the correct","lastModifiedDate":"2022-04-11"},{"lineNumber":277,"author":{"gitId":"zunedz"},"content":"`personIdentifier`.","lastModifiedDate":"2022-04-11"},{"lineNumber":278,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":279,"author":{"gitId":"zunedz"},"content":"This issue is addressed by using the class `TransactionBuilder` that takes a `personIdentifier`","lastModifiedDate":"2022-04-11"},{"lineNumber":280,"author":{"gitId":"zunedz"},"content":"and returns the desired `Transaction`. ","lastModifiedDate":"2022-04-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":282,"author":{"gitId":"zunedz"},"content":"![Add Transaction activity diagram](images/AddTransactionActivityDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":284,"author":{"gitId":"zunedz"},"content":"*Figure: Simplified activity diagram showing the sequence of action of Add Transaction command.*","lastModifiedDate":"2022-04-11"},{"lineNumber":285,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":286,"author":{"gitId":"zunedz"},"content":"Given below is an example usage scenario and how `Add Transaction` behaves at each step:","lastModifiedDate":"2022-04-11"},{"lineNumber":287,"author":{"gitId":"zunedz"},"content":"1. The user input `addTransaction 1 a/12.5 td/2020-11-11 dd/2020-12-12 n/This is a note --paid`.","lastModifiedDate":"2022-04-11"},{"lineNumber":288,"author":{"gitId":"zunedz"},"content":"2. `LogicManager` execute the command which will be parsed using `AddressBookParser` and `AddTransactionParser`","lastModifiedDate":"2022-04-11"},{"lineNumber":289,"author":{"gitId":"zunedz"},"content":"   if the input is valid.","lastModifiedDate":"2022-04-11"},{"lineNumber":290,"author":{"gitId":"zunedz"},"content":"3. `AddTransactionParser` will return `AddTransactionCommand` which contains `TransactionBuilder`.","lastModifiedDate":"2022-04-11"},{"lineNumber":291,"author":{"gitId":"zunedz"},"content":"    This `TransactionBuilder` will be used later by `AddTransactionCommand#execute` to ","lastModifiedDate":"2022-04-11"},{"lineNumber":292,"author":{"gitId":"zunedz"},"content":"    generate the appropriate `Transaction`.","lastModifiedDate":"2022-04-11"},{"lineNumber":293,"author":{"gitId":"zunedz"},"content":"4. `AddTransactionCommand` will then update the `Transaction List` by calling `Model#addTransaction`.","lastModifiedDate":"2022-04-11"},{"lineNumber":294,"author":{"gitId":"zunedz"},"content":"5. `CommandResult` will be returned back to the `LogicManager` if there is no failure in execution.","lastModifiedDate":"2022-04-11"},{"lineNumber":295,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":296,"author":{"gitId":"zunedz"},"content":"The above steps are illustrated by the AddTransaction Sequence Diagram below. In the given diagram,","lastModifiedDate":"2022-04-11"},{"lineNumber":297,"author":{"gitId":"zunedz"},"content":"`addTransactionEx` represents `addTransaction 1 a/12.5 td/2020-11-11 dd/2020-12-12 n/This is a note --paid `","lastModifiedDate":"2022-04-11"},{"lineNumber":298,"author":{"gitId":"zunedz"},"content":"and `transaction` represents `1 a/12.5 td/2020-11-11 dd/2020-12-12 n/This is a note --paid` for brevity. ","lastModifiedDate":"2022-04-11"},{"lineNumber":299,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":300,"author":{"gitId":"zunedz"},"content":"![Add Transaction sequence diagram](images/AddTransactionSequenceDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":301,"author":{"gitId":"zunedz"},"content":"*Figure: Simplified sequence diagram showing the sequence of action of Add Transaction command.*","lastModifiedDate":"2022-04-11"},{"lineNumber":302,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":303,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":304,"author":{"gitId":"zunedz"},"content":"#### Design considerations","lastModifiedDate":"2022-04-11"},{"lineNumber":305,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":306,"author":{"gitId":"zunedz"},"content":"**Aspect: How add transaction executes**","lastModifiedDate":"2022-04-11"},{"lineNumber":307,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":308,"author":{"gitId":"zunedz"},"content":"* **Alternative 1 (current choice):** Store `TransactionBuilder` to generate the `Transaction` later.","lastModifiedDate":"2022-04-11"},{"lineNumber":309,"author":{"gitId":"zunedz"},"content":"    * Pros: No need to pass the `ModelManager` to the command parser, makes a better separation of concern.","lastModifiedDate":"2022-04-11"},{"lineNumber":310,"author":{"gitId":"zunedz"},"content":"    * Cons: Harder to do unit tests on this implementation since it uses functinal interface.","lastModifiedDate":"2022-04-11"},{"lineNumber":311,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":312,"author":{"gitId":"zunedz"},"content":"* **Alternative 2:** Pass the ModelManager to `AddTransactionCommandParser`.","lastModifiedDate":"2022-04-11"},{"lineNumber":313,"author":{"gitId":"zunedz"},"content":"    * Pros: easier to implement.","lastModifiedDate":"2022-04-11"},{"lineNumber":314,"author":{"gitId":"zunedz"},"content":"    * Cons: Not a good design as model should only resides inside `Command#execute`.","lastModifiedDate":"2022-04-11"},{"lineNumber":315,"author":{"gitId":"zunedz"},"content":"    ","lastModifiedDate":"2022-04-11"},{"lineNumber":316,"author":{"gitId":"zunedz"},"content":"### Find Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":317,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":318,"author":{"gitId":"zunedz"},"content":"### Implementation","lastModifiedDate":"2022-04-11"},{"lineNumber":319,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":320,"author":{"gitId":"zunedz"},"content":"In `findTransaction` implementation, user will have to specify","lastModifiedDate":"2022-04-11"},{"lineNumber":321,"author":{"gitId":"zunedz"},"content":"the `Person` using the index displayed.","lastModifiedDate":"2022-04-11"},{"lineNumber":322,"author":{"gitId":"zunedz"},"content":"However, we have a similar issue as AddTransaction. To get all transactions ","lastModifiedDate":"2022-04-11"},{"lineNumber":323,"author":{"gitId":"zunedz"},"content":"that the owner has, we need to convert the index to the correct `personIdentifier`.","lastModifiedDate":"2022-04-11"},{"lineNumber":324,"author":{"gitId":"zunedz"},"content":"This `personIdentifier` will be used as the `TransactionPredicate` to filter the `Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":325,"author":{"gitId":"zunedz"},"content":"List`.","lastModifiedDate":"2022-04-11"},{"lineNumber":326,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":327,"author":{"gitId":"zunedz"},"content":"This issue is addressed by using the class `TransactionPredicateBuilder` that takes a `personIdentifier`","lastModifiedDate":"2022-04-11"},{"lineNumber":328,"author":{"gitId":"zunedz"},"content":"and returns the desired `TransactionPredicate`.","lastModifiedDate":"2022-04-11"},{"lineNumber":329,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":330,"author":{"gitId":"zunedz"},"content":"![Find Transaction activity diagram](images/FindTransactionActivityDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":331,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":332,"author":{"gitId":"zunedz"},"content":"*Figure: Simplified activity diagram showing the sequence of action of Find Transaction command.*","lastModifiedDate":"2022-04-11"},{"lineNumber":333,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":334,"author":{"gitId":"zunedz"},"content":"Given below is an example usage scenario and how `Find Transaction` behaves at each step:","lastModifiedDate":"2022-04-11"},{"lineNumber":335,"author":{"gitId":"zunedz"},"content":"1. The user input `findTransaction 1`.","lastModifiedDate":"2022-04-11"},{"lineNumber":336,"author":{"gitId":"zunedz"},"content":"2. `LogicManager` execute the command which will be parsed using `AddressBookParser` and `FindTransactionCommandParser`","lastModifiedDate":"2022-04-11"},{"lineNumber":337,"author":{"gitId":"zunedz"},"content":"   if the input is valid.","lastModifiedDate":"2022-04-11"},{"lineNumber":338,"author":{"gitId":"zunedz"},"content":"3. `FindTransactionCommandParser` will return `FindTransactionCommand` which contains `TransactionPredicateBuilder`.","lastModifiedDate":"2022-04-11"},{"lineNumber":339,"author":{"gitId":"zunedz"},"content":"   This will be used later by `FindTransactionCommand#execute` to","lastModifiedDate":"2022-04-11"},{"lineNumber":340,"author":{"gitId":"zunedz"},"content":"   generate the appropriate `TransactionPredicate`.","lastModifiedDate":"2022-04-11"},{"lineNumber":341,"author":{"gitId":"zunedz"},"content":"4. `AddTransactionCommand` will then update the `Transaction List` by calling `Model#updateFilteredTransactionList`","lastModifiedDate":"2022-04-11"},{"lineNumber":342,"author":{"gitId":"zunedz"},"content":"   using `TransactionPredicate`.","lastModifiedDate":"2022-04-11"},{"lineNumber":343,"author":{"gitId":"zunedz"},"content":"5. `CommandResult` will be returned back to the `LogicManager` if there is no failure in execution.","lastModifiedDate":"2022-04-11"},{"lineNumber":344,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":345,"author":{"gitId":"zunedz"},"content":"![Find Transaction sequence diagram](images/FindTransactionSequenceDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":346,"author":{"gitId":"zunedz"},"content":"*Figure: Simplified sequence diagram showing the sequence of action of Find Transaction command.*","lastModifiedDate":"2022-04-11"},{"lineNumber":347,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":348,"author":{"gitId":"zunedz"},"content":"#### Design considerations","lastModifiedDate":"2022-04-11"},{"lineNumber":349,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":350,"author":{"gitId":"zunedz"},"content":"**Aspect: How find transaction executes**","lastModifiedDate":"2022-04-11"},{"lineNumber":351,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":352,"author":{"gitId":"zunedz"},"content":"* **Alternative 1 (current choice):** Store `TransactionPredicateBuilder` to generate the `TransactionPredicate` later.","lastModifiedDate":"2022-04-11"},{"lineNumber":353,"author":{"gitId":"zunedz"},"content":"    * Pros: No need to pass the `ModelManager` to the command parser, makes a better separation of concern.","lastModifiedDate":"2022-04-11"},{"lineNumber":354,"author":{"gitId":"zunedz"},"content":"    * Cons: Harder to do unit tests on this implementation since it uses functinal interface.","lastModifiedDate":"2022-04-11"},{"lineNumber":355,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":356,"author":{"gitId":"zunedz"},"content":"* **Alternative 2:** Pass the ModelManager to `FindTransactionCommandParser`.","lastModifiedDate":"2022-04-11"},{"lineNumber":357,"author":{"gitId":"zunedz"},"content":"    * Pros: easier to implement.","lastModifiedDate":"2022-04-11"},{"lineNumber":358,"author":{"gitId":"zunedz"},"content":"    * Cons: Not a good design as model should only resides inside `Command#execute`.","lastModifiedDate":"2022-04-11"},{"lineNumber":359,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":360,"author":{"gitId":"zunedz"},"content":"### Pay ","lastModifiedDate":"2022-04-11"},{"lineNumber":361,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":362,"author":{"gitId":"zunedz"},"content":"### Implementation","lastModifiedDate":"2022-04-11"},{"lineNumber":363,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":364,"author":{"gitId":"zunedz"},"content":"This command will update the `Status` of the `Transaction` to `paid` using","lastModifiedDate":"2022-04-11"},{"lineNumber":365,"author":{"gitId":"zunedz"},"content":"the specified `transaction index` by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":366,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":367,"author":{"gitId":"zunedz"},"content":"![Pay activity diagram](images/PayDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":368,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":369,"author":{"gitId":"zunedz"},"content":"*Figure: Simplified activity diagram showing the sequence of action of Pay command.*","lastModifiedDate":"2022-04-11"},{"lineNumber":370,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":371,"author":{"gitId":"zunedz"},"content":"Given below is an example usage scenario and how `Pay` behaves at each step:","lastModifiedDate":"2022-04-11"},{"lineNumber":372,"author":{"gitId":"zunedz"},"content":"1. The user input `pay 1`.","lastModifiedDate":"2022-04-11"},{"lineNumber":373,"author":{"gitId":"zunedz"},"content":"2. `LogicManager` execute the command which will be parsed using `AddressBookParser` and `PayCommandParser`","lastModifiedDate":"2022-04-11"},{"lineNumber":374,"author":{"gitId":"zunedz"},"content":"   if the input is valid.","lastModifiedDate":"2022-04-11"},{"lineNumber":375,"author":{"gitId":"zunedz"},"content":"3. `PayCommand` will return `PayCommand` which contains the index of the transaction.","lastModifiedDate":"2022-04-11"},{"lineNumber":376,"author":{"gitId":"zunedz"},"content":"4. In `PayCommand#execute`, the `transactionToUpdate` will be replaced by `updatedTransaction` by calling","lastModifiedDate":"2022-04-11"},{"lineNumber":377,"author":{"gitId":"zunedz"},"content":"    `Model#setTransaction`.","lastModifiedDate":"2022-04-11"},{"lineNumber":378,"author":{"gitId":"zunedz"},"content":"5. `CommandResult` will be returned back to the `LogicManager` if there is no failure in execution.","lastModifiedDate":"2022-04-11"},{"lineNumber":379,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":380,"author":{"gitId":"zunedz"},"content":"![Pay sequence diagram](images/PaySequenceDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":381,"author":{"gitId":"zunedz"},"content":"*Figure: Simplified sequence diagram showing the sequence of action of Pay command.*","lastModifiedDate":"2022-04-11"},{"lineNumber":382,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":383,"author":{"gitId":"zunedz"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":384,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":385,"author":{"gitId":"zunedz"},"content":"Although `listTransaction`, `deleteTransaction`, and `unpay` are not shown here,","lastModifiedDate":"2022-04-11"},{"lineNumber":386,"author":{"gitId":"zunedz"},"content":"the implementation of these commands are very similar to the other transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":387,"author":{"gitId":"zunedz"},"content":"commands given.","lastModifiedDate":"2022-04-11"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":391,"author":{"gitId":"TypeDefinition"},"content":"### Undo","lastModifiedDate":"2022-03-31"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"TypeDefinition"},"content":"#### Implementation","lastModifiedDate":"2022-03-31"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"TypeDefinition"},"content":"The undo mechanism is facilitated by `SerializableTempAddressBookStorage`.","lastModifiedDate":"2022-04-10"},{"lineNumber":396,"author":{"gitId":"TypeDefinition"},"content":"It extends the `TempAddressBookStorage` interface and is stored and managed at `StorageManager` as `tempAddressBookStorage`.","lastModifiedDate":"2022-04-10"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"TypeDefinition"},"content":"This mechanism will store the previous states of CinnamonBun in temporary files when a modification or change is made to the data.","lastModifiedDate":"2022-04-10"},{"lineNumber":399,"author":{"gitId":"TypeDefinition"},"content":"When users type the `undo` command, the latest stored state will be restored.","lastModifiedDate":"2022-04-10"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"LapisRaider"},"content":"Additionally, it implements the follow operations which are exposed in the `Storage` interface:","lastModifiedDate":"2022-03-30"},{"lineNumber":402,"author":{"gitId":"LapisRaider"},"content":"- `SerializableTempAddressBookStorage#getTempAddressBookFilepath()` --- Gets the file path of where the temporary files are stored.","lastModifiedDate":"2022-03-30"},{"lineNumber":403,"author":{"gitId":"TypeDefinition"},"content":"- `SerializableTempAddressBookStorage#addNewTempAddressBookFile()` --- Saves the current state of CinnamonBun and keep track of the version.","lastModifiedDate":"2022-04-10"},{"lineNumber":404,"author":{"gitId":"LapisRaider"},"content":"- `SerializableTempAddressBookStorage#popTempAddressFileData()` --- Gets the latest state of CinnamonBun stored in `SerializableTempAddressBookStorage`.","lastModifiedDate":"2022-03-30"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"LapisRaider"},"content":"![Undo activity diagram](images/TemporaryAddressBookStorage.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":407,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":408,"author":{"gitId":"LapisRaider"},"content":"Given below is an example usage scenario and how the undo mechanism behaves at each step.","lastModifiedDate":"2022-03-30"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"LapisRaider"},"content":"Step 1. The user launches the application for the first time. The `SerializableTempAddressBookStorage` will be initialized","lastModifiedDate":"2022-03-30"},{"lineNumber":411,"author":{"gitId":"TypeDefinition"},"content":"with the file path of where the temporary files will be saved, and an empty `ArrayList\u003cPath\u003e` named `tempFiles` is created to store the file paths of the","lastModifiedDate":"2022-04-10"},{"lineNumber":412,"author":{"gitId":"LapisRaider"},"content":"temporary files that will be created.","lastModifiedDate":"2022-03-30"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"LapisRaider"},"content":"![State 1 undo image](images/UndoState.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":415,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":416,"author":{"gitId":"TypeDefinition"},"content":"Step 2. The user makes a modification to the client list such as executing the command `delete 5` to delete the 5th client.","lastModifiedDate":"2022-04-10"},{"lineNumber":417,"author":{"gitId":"TypeDefinition"},"content":"In `LogicManager`, before executing the command, it will locally store the current client list\u0027s state.","lastModifiedDate":"2022-04-10"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"TypeDefinition"},"content":"After executing the command, it will compare the previous state with the current state of the client list. If it senses they are different, such as in this","lastModifiedDate":"2022-04-10"},{"lineNumber":420,"author":{"gitId":"LapisRaider"},"content":"case since user has deleted the 5th client, it will call `LogicManager#savePrevAddressBookDataInTemp()`. ","lastModifiedDate":"2022-03-30"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"TypeDefinition"},"content":"From there, it will call `Storage#addNewTempAddressBookFile()` where the previous state of the client list, before the `delete 5` was executed, will be saved as a temporary file.","lastModifiedDate":"2022-04-10"},{"lineNumber":423,"author":{"gitId":"LapisRaider"},"content":"The new temporary file will then be added into `tempFiles` list in `SerializableTempAddressBookStorage`.","lastModifiedDate":"2022-03-30"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":426,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":427,"author":{"gitId":"TypeDefinition"},"content":"Only modifications made to the client list or transaction list will be saved. See the user guide for more info.","lastModifiedDate":"2022-04-10"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"TypeDefinition"},"content":"`SerializableTempAddressBookStorage` also will only store the 10 latest modifications. When the 11th modification is made, it will remove","lastModifiedDate":"2022-04-09"},{"lineNumber":430,"author":{"gitId":"LapisRaider"},"content":"the earliest modification saved and delete the temporary file for it.","lastModifiedDate":"2022-03-30"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"LapisRaider"},"content":"If there are any issues with creating the temporary file and saving the data, an exception will be thrown and the modification will not be saved in","lastModifiedDate":"2022-03-30"},{"lineNumber":433,"author":{"gitId":"LapisRaider"},"content":"a temporary file, thus, the modification cannot be undone.","lastModifiedDate":"2022-03-30"},{"lineNumber":434,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":435,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"LapisRaider"},"content":"![State 2 undo image](images/UndoState1.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":438,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":439,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":440,"author":{"gitId":"TypeDefinition"},"content":"Step 3. The user executed `add n/David...` to add a new client. The steps mentioned in step 2 would be repeated. Thus, `tempFiles` will now store","lastModifiedDate":"2022-04-09"},{"lineNumber":441,"author":{"gitId":"LapisRaider"},"content":"2 file paths to the 2 temporary files created.","lastModifiedDate":"2022-03-30"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"LapisRaider"},"content":"![State 3 undo image](images/UndoState2.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":444,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":445,"author":{"gitId":"TypeDefinition"},"content":"Step 4. The user now decides that adding the client was a mistake and decides to undo that action by executing the `undo` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":446,"author":{"gitId":"LapisRaider"},"content":"The `undo` command will call `LogicManager#undoPrevModification()`, which calls `Storage#popTempAddressFileData()`. This will obtain","lastModifiedDate":"2022-03-30"},{"lineNumber":447,"author":{"gitId":"TypeDefinition"},"content":"the latest temporary file added and restore the client list to the state saved in the temporary file (the state of the client list before add the new client, so before step 3).","lastModifiedDate":"2022-04-11"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":450,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":451,"author":{"gitId":"LapisRaider"},"content":"If there are no previous modifications to be restored (no modifications in the first place, or the user has undone the last 10 modifications and reached","lastModifiedDate":"2022-03-30"},{"lineNumber":452,"author":{"gitId":"LapisRaider"},"content":"the limit) an error message will be shown.","lastModifiedDate":"2022-03-30"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"LapisRaider"},"content":"If the temporary file for the modification user is trying to undo is corrupted or deleted, then for that particular modification it can no longer","lastModifiedDate":"2022-03-30"},{"lineNumber":455,"author":{"gitId":"LapisRaider"},"content":"be undone and an error message will be shown there was issue reading the file.","lastModifiedDate":"2022-03-30"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":457,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"LapisRaider"},"content":"![State 4 undo image](images/UndoState3.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":460,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":461,"author":{"gitId":"LapisRaider"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2022-04-10"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":463,"author":{"gitId":"LapisRaider"},"content":"![Undo sequence diagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":466,"author":{"gitId":"TypeDefinition"},"content":"Step 5. The user executed the command `filter Daniel` to find all Daniels. This command does not modify the client list.","lastModifiedDate":"2022-04-11"},{"lineNumber":467,"author":{"gitId":"LapisRaider"},"content":"Hence, `Storage#addNewTempAddressBookFile()` will not be called and no new temporary files will be added.","lastModifiedDate":"2022-03-30"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"LapisRaider"},"content":"![State 5 undo image](images/UndoState4.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":471,"author":{"gitId":"LapisRaider"},"content":"Step 6. The user closes the CinnamonBun application. All temporary files created will be deleted.","lastModifiedDate":"2022-03-30"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"TypeDefinition"},"content":"#### Design considerations","lastModifiedDate":"2022-04-09"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"TypeDefinition"},"content":"**Aspect: How undo executes**","lastModifiedDate":"2022-04-09"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"TypeDefinition"},"content":"* **Alternative 1 (current choice):** Saves the entire application data in temporary files.","lastModifiedDate":"2022-04-09"},{"lineNumber":478,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"LapisRaider"},"content":"  * Cons: May have performance issues in terms of storage and memory usage.","lastModifiedDate":"2022-03-30"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"LapisRaider"},"content":"* **Alternative 2:** Individual command knows how to undo by itself.","lastModifiedDate":"2022-03-30"},{"lineNumber":482,"author":{"gitId":"TypeDefinition"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the client being deleted).","lastModifiedDate":"2022-04-09"},{"lineNumber":483,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"KeithCZW"},"content":"### Clear Filtered functionality","lastModifiedDate":"2022-04-10"},{"lineNumber":486,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":487,"author":{"gitId":"TypeDefinition"},"content":"The `clearFiltered` commands works in tandem with the `find` or `listMembers` command. After the `find`/`listMembers` function populates","lastModifiedDate":"2022-04-10"},{"lineNumber":488,"author":{"gitId":"TypeDefinition"},"content":"`ModelManager`\u0027s `filteredPersons`, the `clearFiltered` commands retrieves the `filteredPersons` from the `Model` and","lastModifiedDate":"2022-04-10"},{"lineNumber":489,"author":{"gitId":"TypeDefinition"},"content":"deletes all people in `filteredPersons` using the `deletePerson` function from `Model`.","lastModifiedDate":"2022-04-10"},{"lineNumber":490,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":491,"author":{"gitId":"TypeDefinition"},"content":"If the `find` or `listMembers` command had not been executed beforehand, the `clearFiltered` command will still function","lastModifiedDate":"2022-04-10"},{"lineNumber":492,"author":{"gitId":"TypeDefinition"},"content":"as if clearing the entire address book, as by default, the `filteredPersons` will be the whole address book.","lastModifiedDate":"2022-04-10"},{"lineNumber":493,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":494,"author":{"gitId":"TypeDefinition"},"content":"If there are no people in the `filteredPersons`, the `CommandResult` returned has a message \"No clients to delete.\".","lastModifiedDate":"2022-04-10"},{"lineNumber":495,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":496,"author":{"gitId":"KeithCZW"},"content":"Below is a sequence diagram to show how the `ClearFilteredCommand` executes.","lastModifiedDate":"2022-04-10"},{"lineNumber":497,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":498,"author":{"gitId":"KeithCZW"},"content":"![Clear Filtered Sequence Diagram](images/ClearFilteredSequenceDiagram.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":499,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":500,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":501,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":502,"author":{"gitId":"TypeDefinition"},"content":"The lifeline for `ClearFilteredCommand` should end at its destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-10"},{"lineNumber":503,"author":{"gitId":"KeithCZW"},"content":"  ","lastModifiedDate":"2022-04-10"},{"lineNumber":504,"author":{"gitId":"KeithCZW"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":505,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":506,"author":{"gitId":"TypeDefinition"},"content":"### Membership functionality","lastModifiedDate":"2022-03-31"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"TypeDefinition"},"content":"#### Implementation","lastModifiedDate":"2022-03-31"},{"lineNumber":509,"author":{"gitId":"TypeDefinition"},"content":"The membership functionality allows users to be assigned a membership tier, either \u0027Bronze\u0027, \u0027Silver\u0027 or \u0027Gold\u0027.","lastModifiedDate":"2022-04-10"},{"lineNumber":510,"author":{"gitId":"TypeDefinition"},"content":"It inherits from the `Field` abstract class and is stored as a `Field` in fields HashMap of the `Person` class.","lastModifiedDate":"2022-04-10"},{"lineNumber":511,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":512,"author":{"gitId":"KeithCZW"},"content":"Below is a figure of the class diagram of the `Membership` class.","lastModifiedDate":"2022-04-10"},{"lineNumber":513,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":514,"author":{"gitId":"KeithCZW"},"content":"![Membership Class Diagram](images/MembershipClassDiagram.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":515,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":516,"author":{"gitId":"KeithCZW"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":517,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":518,"author":{"gitId":"KeithCZW"},"content":"The `ALL` tier in the `Tier` enum is used for `listMembers` functionality.","lastModifiedDate":"2022-04-10"},{"lineNumber":519,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":520,"author":{"gitId":"KeithCZW"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":521,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":522,"author":{"gitId":"KeithCZW"},"content":"When the user calls the `addMembership` functionality along with a specified client and membership tier, a Membership ","lastModifiedDate":"2022-04-09"},{"lineNumber":523,"author":{"gitId":"TypeDefinition"},"content":"object is created and stored in the fields HashMap of the specified client with the key being the `Membership` prefix and functions like any other `Field`.","lastModifiedDate":"2022-04-10"},{"lineNumber":524,"author":{"gitId":"KeithCZW"},"content":"The `removeMembership` functions in a similar manner to other fields in that the `Field` with the `Membership` prefix is removed","lastModifiedDate":"2022-04-09"},{"lineNumber":525,"author":{"gitId":"KeithCZW"},"content":"from the fields HashMap.","lastModifiedDate":"2022-04-09"},{"lineNumber":526,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":527,"author":{"gitId":"KeithCZW"},"content":"The `listMembers` command functions in a similar fashion to the `Find` command in that it uses a `Predicate` in order to filter","lastModifiedDate":"2022-04-09"},{"lineNumber":528,"author":{"gitId":"KeithCZW"},"content":"clients with a Membership. It utilizes the `PersonContainsMembershipPredicate` which checks if a user has a `Membership` stored","lastModifiedDate":"2022-04-09"},{"lineNumber":529,"author":{"gitId":"KeithCZW"},"content":"in its fields HashMap.","lastModifiedDate":"2022-04-09"},{"lineNumber":530,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":531,"author":{"gitId":"KeithCZW"},"content":"When a client\u0027s membership is displayed on the screen, the colour of the membership `Label` changes according to the membership","lastModifiedDate":"2022-04-09"},{"lineNumber":532,"author":{"gitId":"KeithCZW"},"content":"tier. This is done by having a `FlowPane` stored in the `PersonCard` class. When a membership is displayed, a `Label` with","lastModifiedDate":"2022-04-09"},{"lineNumber":533,"author":{"gitId":"TypeDefinition"},"content":"a different tier is created with a different id. The CSS files (`Cinnamon.css` or `Caramel.css`) then decides what colour to render the label background accordingly.","lastModifiedDate":"2022-04-10"},{"lineNumber":534,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":535,"author":{"gitId":"TypeDefinition"},"content":"#### Design considerations","lastModifiedDate":"2022-04-09"},{"lineNumber":536,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":537,"author":{"gitId":"TypeDefinition"},"content":"**Aspect: How it executes**","lastModifiedDate":"2022-04-09"},{"lineNumber":538,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":539,"author":{"gitId":"TypeDefinition"},"content":"* **Alternative 1 (current choice):** Store a `Membership` object in each user.","lastModifiedDate":"2022-04-10"},{"lineNumber":540,"author":{"gitId":"TypeDefinition"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2022-04-10"},{"lineNumber":541,"author":{"gitId":"TypeDefinition"},"content":"  * Cons: Membership functionality is limited (only able to have predefined membership tiers).","lastModifiedDate":"2022-04-10"},{"lineNumber":542,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":543,"author":{"gitId":"KeithCZW"},"content":"* **Alternative 2:** Create a list of memberships and assign users a membership index.","lastModifiedDate":"2022-04-09"},{"lineNumber":544,"author":{"gitId":"TypeDefinition"},"content":"  * Pros: Allows for more flexible memberships (more than just gold,silver,bronze) with extra details such as descriptions.","lastModifiedDate":"2022-04-10"},{"lineNumber":545,"author":{"gitId":"KeithCZW"},"content":"  * Cons: Harder to implement.","lastModifiedDate":"2022-04-09"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"TypeDefinition"},"content":"### Sort functionality","lastModifiedDate":"2022-03-31"},{"lineNumber":548,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":549,"author":{"gitId":"TypeDefinition"},"content":"**Implementation**","lastModifiedDate":"2022-03-31"},{"lineNumber":550,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":551,"author":{"gitId":"TypeDefinition"},"content":"The sort mechanism is facilitated by `SortCommand`. It extends `Command` and the main logic of sort is in it\u0027s","lastModifiedDate":"2022-03-31"},{"lineNumber":552,"author":{"gitId":"LapisRaider"},"content":"`execute` function which returns a `CommandResult` object.","lastModifiedDate":"2022-03-24"},{"lineNumber":553,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":554,"author":{"gitId":"LapisRaider"},"content":"The `SortCommand#execute()` function would first parse the user\u0027s inputs. For every field parsed, the function would create a ","lastModifiedDate":"2022-03-24"},{"lineNumber":555,"author":{"gitId":"TypeDefinition"},"content":"`Comparator` for that field using either of the functions:","lastModifiedDate":"2022-04-11"},{"lineNumber":556,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":557,"author":{"gitId":"TypeDefinition"},"content":"* `SortCommand#getComparatorDefault()` --- Creates a comparator with the field specified in ascending order.","lastModifiedDate":"2022-04-11"},{"lineNumber":558,"author":{"gitId":"TypeDefinition"},"content":"* `SortCommand#getComparatorDescending()` --- Creates a comparator with the field specified in descending order.","lastModifiedDate":"2022-04-11"},{"lineNumber":559,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":560,"author":{"gitId":"LapisRaider"},"content":"One sort command allows for sorting multiple fields at a time in the order specified. Stating `sort n/ a/` means ","lastModifiedDate":"2022-03-24"},{"lineNumber":561,"author":{"gitId":"LapisRaider"},"content":"sort the list by name in ascending order followed by the client\u0027s addresses. Clients with same name would be then","lastModifiedDate":"2022-03-24"},{"lineNumber":562,"author":{"gitId":"LapisRaider"},"content":"sorted based on their addresses. ","lastModifiedDate":"2022-03-24"},{"lineNumber":563,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":564,"author":{"gitId":"TypeDefinition"},"content":"Thus, after creating the `Comparator` for a particular field, it\u0027ll be added upon a previously created `Comparator` using `Comparator#thenComparing()`.","lastModifiedDate":"2022-04-11"},{"lineNumber":565,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":566,"author":{"gitId":"TypeDefinition"},"content":"To be able to sort the client list, we expose an operation in the `Model` interface as `Model#sortPersonList()`.","lastModifiedDate":"2022-04-11"},{"lineNumber":567,"author":{"gitId":"TypeDefinition"},"content":"We then passed the `Comparator` created to `Model#sortPersonList()` in `SortCommand#execute()`.","lastModifiedDate":"2022-04-11"},{"lineNumber":568,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":569,"author":{"gitId":"TypeDefinition"},"content":"Java\u0027s `List` library will then handle the sorting based on the `Comparator`.","lastModifiedDate":"2022-04-11"},{"lineNumber":570,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":571,"author":{"gitId":"TypeDefinition"},"content":"#### Design considerations","lastModifiedDate":"2022-04-09"},{"lineNumber":572,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":573,"author":{"gitId":"TypeDefinition"},"content":"**Aspect: How it executes**","lastModifiedDate":"2022-04-09"},{"lineNumber":574,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":575,"author":{"gitId":"TypeDefinition"},"content":"* **Alternative 1 (current choice):** Each `Field` class will handle how to sort its own data, `SortCommand` will then","lastModifiedDate":"2022-04-11"},{"lineNumber":576,"author":{"gitId":"LapisRaider"},"content":"wrap it into a comparator and pass to `Model#sortPersonList()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":577,"author":{"gitId":"LapisRaider"},"content":"  * Pros: Easy to implement, each field class can handle their own sorting of its data. Will not clutter `SortCommand`.","lastModifiedDate":"2022-03-24"},{"lineNumber":578,"author":{"gitId":"TypeDefinition"},"content":"  * Cons: Does not allow for more complicated chaining of fields since the way each field is being sorted is independent of others.","lastModifiedDate":"2022-04-11"},{"lineNumber":579,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":580,"author":{"gitId":"LapisRaider"},"content":"* **Alternative 2:** `SortCommand` will determine how the fields are to be sorted.","lastModifiedDate":"2022-03-24"},{"lineNumber":581,"author":{"gitId":"TypeDefinition"},"content":"  * Pros: Allows `SortCommand` to have full flexibility in deciding how the fields are to be sorted and may allow for more complicated chaining of fields.","lastModifiedDate":"2022-04-11"},{"lineNumber":582,"author":{"gitId":"LapisRaider"},"content":"  * Cons: Will clutter `SortCommand` and may not be manageable once there are a lot of fields.","lastModifiedDate":"2022-03-24"},{"lineNumber":583,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":584,"author":{"gitId":"DaneMarc"},"content":"### Command chaining","lastModifiedDate":"2022-03-31"},{"lineNumber":585,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":586,"author":{"gitId":"TypeDefinition"},"content":"#### Implementation","lastModifiedDate":"2022-04-09"},{"lineNumber":587,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":588,"author":{"gitId":"TypeDefinition"},"content":"The command chaining mechanism is handled in the `execute()` function of the `LogicManager` class which is where the user\u0027s input is parsed, executed and then returned as a `CommandResult`.","lastModifiedDate":"2022-04-11"},{"lineNumber":589,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":590,"author":{"gitId":"DaneMarc"},"content":"To handle multiple commands, the program splits the given user input using the `|` delimiter used to separate the multiple commands. Once the input has been split, the program can then evaluate each command sequentially by iterating through the individual commands.","lastModifiedDate":"2022-03-31"},{"lineNumber":591,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":592,"author":{"gitId":"DaneMarc"},"content":"While iterating through the individual commands, the program checks if any of the commands are a special command - `help`, `exit` and `undo` - or if it is invalid. If any of these conditions are met, the program will then set the `isValid` boolean to false, break out of the loop and set the addressBook of the model to one that was taken before the start of command execution, essentially reverting all the changes.","lastModifiedDate":"2022-03-31"},{"lineNumber":593,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":594,"author":{"gitId":"TypeDefinition"},"content":"#### Design considerations","lastModifiedDate":"2022-04-09"},{"lineNumber":595,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":596,"author":{"gitId":"TypeDefinition"},"content":"**Aspect: Behaviour of command chains with special commands and errors**","lastModifiedDate":"2022-04-09"},{"lineNumber":597,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":598,"author":{"gitId":"DaneMarc"},"content":"* **Alternative 1:** The valid commands before a special command `help`, `exit` or `undo` or command error will still be executed","lastModifiedDate":"2022-03-31"},{"lineNumber":599,"author":{"gitId":"DaneMarc"},"content":"    * Pros: Easier to implement as there is no need to check the validity of each command and reset the model.","lastModifiedDate":"2022-03-31"},{"lineNumber":600,"author":{"gitId":"DaneMarc"},"content":"    * Cons: Will only execute certain commands instead of all when a chain is broken which may be confusing. The undo feature may be harder to implement since a command can be partially run.","lastModifiedDate":"2022-03-31"},{"lineNumber":601,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":602,"author":{"gitId":"DaneMarc"},"content":"* **Alternative 2 (current choice):** Disregard all commands in a chain whenever a special command or error is found.","lastModifiedDate":"2022-03-31"},{"lineNumber":603,"author":{"gitId":"DaneMarc"},"content":"    * Pros: Intuitive and plays well with other features such as `undo`.","lastModifiedDate":"2022-03-31"},{"lineNumber":604,"author":{"gitId":"DaneMarc"},"content":"    * Cons: Command validity has to be caught and handled in execution() which may slow down performance.","lastModifiedDate":"2022-03-31"},{"lineNumber":605,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":606,"author":{"gitId":"DaneMarc"},"content":"### Command completion/correction","lastModifiedDate":"2022-03-31"},{"lineNumber":607,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":608,"author":{"gitId":"DaneMarc"},"content":"**Implementation**","lastModifiedDate":"2022-03-31"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":610,"author":{"gitId":"DaneMarc"},"content":"First, the program checks if the given input or the last command is blank. It is hardcoded to complete such cases with an `add` command as I thought that was more fitting and also because it would most probably get completed with `add` anyway after running through the completion algorithm.","lastModifiedDate":"2022-03-31"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":612,"author":{"gitId":"DaneMarc"},"content":"If the input is not blank, it will get the last word in the user\u0027s input and first try to complete it by checking if it is a substring of any command. If it is a substring of a command, it will be completed with that command. If the word is a substring of multiple commands, the shortest command will be used.","lastModifiedDate":"2022-03-31"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":614,"author":{"gitId":"DaneMarc"},"content":"Once the program determines that the last word cannot be completed, it will try to correct it by finding the Levenshtein distance between the word and all commands. The Levenshtein distance between two words is the minimum number of single-character edits (insertions, deletions or substitutions) required to change one word into the other. The command with the smallest distance from the word will be used as the correction. In the event of a tie, the first evaluated command will be used.","lastModifiedDate":"2022-03-31"},{"lineNumber":615,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":616,"author":{"gitId":"DaneMarc"},"content":"The Levenshtein distance is calculated using the `editDistance(String str1, String str2)` method which uses a typical dynamic programming algorithm with a runtime of O(m * n). Unlike standard algorithms, however, this method uses a fixed height matrix with only two rows that the program alternates between during computation. This means the size is bounded by the length of `str2` which in this case will be one of the fixed commands.","lastModifiedDate":"2022-03-31"},{"lineNumber":617,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":618,"author":{"gitId":"TypeDefinition"},"content":"#### Design considerations","lastModifiedDate":"2022-04-09"},{"lineNumber":619,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":620,"author":{"gitId":"TypeDefinition"},"content":"**Aspect: Behaviour of command completion/correction**","lastModifiedDate":"2022-04-09"},{"lineNumber":621,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":622,"author":{"gitId":"DaneMarc"},"content":"* **Alternative 1:** Suggestions will be shown to the user in realtime while they are typing.","lastModifiedDate":"2022-03-31"},{"lineNumber":623,"author":{"gitId":"DaneMarc"},"content":"    * Pros: The user will be able to view each suggestion and will have much more information and freedom to decide whether to take up a suggestion.","lastModifiedDate":"2022-03-31"},{"lineNumber":624,"author":{"gitId":"DaneMarc"},"content":"    * Cons: A lot harder to implement in terms of logic, storage and UI.","lastModifiedDate":"2022-03-31"},{"lineNumber":625,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":626,"author":{"gitId":"DaneMarc"},"content":"* **Alternative 2 (current choice):** Complete/correct on demand. Take away user choice and provide what the program thinks is the most accurate replacement.","lastModifiedDate":"2022-03-31"},{"lineNumber":627,"author":{"gitId":"DaneMarc"},"content":"    * Pros: Less computationally intensive and a lot easier to implement.","lastModifiedDate":"2022-03-31"},{"lineNumber":628,"author":{"gitId":"DaneMarc"},"content":"    * Cons: The user will not have a choice of suggestions and will not know what they\u0027ll get (blackbox).","lastModifiedDate":"2022-03-31"},{"lineNumber":629,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":630,"author":{"gitId":"TypeDefinition"},"content":"### Command history","lastModifiedDate":"2022-04-09"},{"lineNumber":631,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":632,"author":{"gitId":"TypeDefinition"},"content":"#### Implementation","lastModifiedDate":"2022-04-09"},{"lineNumber":633,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":634,"author":{"gitId":"TypeDefinition"},"content":"The command history is handled by `CommandBox`, which also handles the user input.","lastModifiedDate":"2022-04-09"},{"lineNumber":635,"author":{"gitId":"TypeDefinition"},"content":"This mechanism aims to be as close to the history mechanism in the Linux Bash terminal as possible.","lastModifiedDate":"2022-04-09"},{"lineNumber":636,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":637,"author":{"gitId":"TypeDefinition"},"content":"Here is a brief example of how the command history works:","lastModifiedDate":"2022-04-09"},{"lineNumber":638,"author":{"gitId":"TypeDefinition"},"content":"* The command history only begins when the application is launched, and is cleared when the application closes.","lastModifiedDate":"2022-04-09"},{"lineNumber":639,"author":{"gitId":"TypeDefinition"},"content":"* Each time the user presses the up arrow key, the command box will be replaced with the command they previously executed, until they reach the start of their history.","lastModifiedDate":"2022-04-09"},{"lineNumber":640,"author":{"gitId":"TypeDefinition"},"content":"* Each time the user presses the down arrow key, the command box will be replaced with the command they next executed, until they reach the latest command (the current one they have not executed).","lastModifiedDate":"2022-04-09"},{"lineNumber":641,"author":{"gitId":"TypeDefinition"},"content":"* If the user executes duplicate commands one after another, only the first will be added to history.","lastModifiedDate":"2022-04-09"},{"lineNumber":642,"author":{"gitId":"TypeDefinition"},"content":"  * For example, if the user executes `list`, `list`, `list`, only the first `list` is added to history. ","lastModifiedDate":"2022-04-11"},{"lineNumber":643,"author":{"gitId":"TypeDefinition"},"content":"  ","lastModifiedDate":"2022-04-09"},{"lineNumber":644,"author":{"gitId":"TypeDefinition"},"content":"The command history works with the use of two `ArrayList\u003cString\u003e` named `historyBuffer` and `activeBuffer`.","lastModifiedDate":"2022-04-11"},{"lineNumber":645,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":646,"author":{"gitId":"TypeDefinition"},"content":"`historyBuffer` contains the commands that was actually executed by the user (i.e., the user pressed enter).","lastModifiedDate":"2022-04-09"},{"lineNumber":647,"author":{"gitId":"TypeDefinition"},"content":"Whenever the user executes a command, regardless whether it is valid or not, the command is added to a `historyBuffer`.","lastModifiedDate":"2022-04-09"},{"lineNumber":648,"author":{"gitId":"TypeDefinition"},"content":"Commands in `historyBuffer`, once added, will never change.","lastModifiedDate":"2022-04-09"},{"lineNumber":649,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":650,"author":{"gitId":"TypeDefinition"},"content":"`activeBuffer` is a duplicate of `historyBuffer` that allows editing. Whenever the user cycles through their history and edits the command, they are editing the commands of `activeBuffer`.","lastModifiedDate":"2022-04-09"},{"lineNumber":651,"author":{"gitId":"TypeDefinition"},"content":"When the user edits a previous command and executes, the content of that command in `activeBuffer` is restored with the original in `historyBuffer`.","lastModifiedDate":"2022-04-09"},{"lineNumber":652,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":653,"author":{"gitId":"TypeDefinition"},"content":"Example usage (red arrow is what the command box is displaying):","lastModifiedDate":"2022-04-09"},{"lineNumber":654,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":655,"author":{"gitId":"TypeDefinition"},"content":"Step 1. ![Command History Flow 1](images/CommandHistoryFlow1.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":656,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":657,"author":{"gitId":"TypeDefinition"},"content":"*Figure: User starts with a blank command box.*","lastModifiedDate":"2022-04-09"},{"lineNumber":658,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":659,"author":{"gitId":"TypeDefinition"},"content":"Step 2. ![Command History Flow 2](images/CommandHistoryFlow2.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":660,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":661,"author":{"gitId":"TypeDefinition"},"content":"*Figure: User types `append 1 t/vendor`.*","lastModifiedDate":"2022-04-09"},{"lineNumber":662,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":663,"author":{"gitId":"TypeDefinition"},"content":"Step 3. ![Command History Flow 3](images/CommandHistoryFlow3.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":664,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":665,"author":{"gitId":"TypeDefinition"},"content":"*Figure: User executes `append 1 t/vendor`. `append 1 t/vendor` is appended to `historyBuffer` and `activeBuffer`. Command box is blank again.*","lastModifiedDate":"2022-04-09"},{"lineNumber":666,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":667,"author":{"gitId":"TypeDefinition"},"content":"Step 4. ![Command History Flow 4](images/CommandHistoryFlow4.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":668,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":669,"author":{"gitId":"TypeDefinition"},"content":"*Figure: User types `edit 2 e/` but does not execute. User then presses the up arrow key to cycle to `addMembership 1 m/silver`.*","lastModifiedDate":"2022-04-09"},{"lineNumber":670,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":671,"author":{"gitId":"TypeDefinition"},"content":"Step 5. ![Command History Flow 5](images/CommandHistoryFlow5.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":672,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":673,"author":{"gitId":"TypeDefinition"},"content":"*Figure: User changes `addMembership 1 m/silver` to `addMembership 3 m/bronze`.*","lastModifiedDate":"2022-04-09"},{"lineNumber":674,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":675,"author":{"gitId":"TypeDefinition"},"content":"Step 6. ![Command History Flow 6](images/CommandHistoryFlow6.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":676,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":677,"author":{"gitId":"KeithCZW"},"content":"*Figure: User executes `addMembership 3 m/bronze`. `addMembership 3 m/bronze` is appended to `historyBuffer` and `activeBuffer`. Un-executed command `edit 2 e/` is erased. Command box is blank again. `addMembership 1 m/silver` in `activeBuffer` is restored.*","lastModifiedDate":"2022-04-09"},{"lineNumber":678,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":679,"author":{"gitId":"TypeDefinition"},"content":"Step 7. ![Command History Flow 7](images/CommandHistoryFlow7.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":680,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":681,"author":{"gitId":"TypeDefinition"},"content":"*Figure: User cycles to `listTransaction` and changes it to `random invalid string`.*","lastModifiedDate":"2022-04-09"},{"lineNumber":682,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":683,"author":{"gitId":"TypeDefinition"},"content":"Step 8. ![Command History Flow 8](images/CommandHistoryFlow8.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":684,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":685,"author":{"gitId":"TypeDefinition"},"content":"*Figure: User cycles to `delete 5` and changes it to `delete 7`.*","lastModifiedDate":"2022-04-09"},{"lineNumber":686,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":687,"author":{"gitId":"TypeDefinition"},"content":"Step 9. ![Command History Flow 9](images/CommandHistoryFlow9.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":688,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":689,"author":{"gitId":"TypeDefinition"},"content":"*Figure: User executes `delete 7`. `delete 7` is appended to `historyBuffer` and `activeBuffer`. Command box is blank again. `delete 5` in `activeBuffer` is restored. `listTransaction` is not restored.*","lastModifiedDate":"2022-04-09"},{"lineNumber":690,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":691,"author":{"gitId":"TypeDefinition"},"content":"#### Design considerations","lastModifiedDate":"2022-04-09"},{"lineNumber":692,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":693,"author":{"gitId":"TypeDefinition"},"content":"**Aspect: Functionality**","lastModifiedDate":"2022-04-09"},{"lineNumber":694,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":695,"author":{"gitId":"TypeDefinition"},"content":"* **Alternative 1**:","lastModifiedDate":"2022-04-09"},{"lineNumber":696,"author":{"gitId":"TypeDefinition"},"content":"Have a very simple implementation with only one history list.","lastModifiedDate":"2022-04-09"},{"lineNumber":697,"author":{"gitId":"TypeDefinition"},"content":"Do not store edits for every single entry, and simply replace the command box with the previous command. ","lastModifiedDate":"2022-04-09"},{"lineNumber":698,"author":{"gitId":"TypeDefinition"},"content":"If the user presses up or down, any edits are lost.","lastModifiedDate":"2022-04-09"},{"lineNumber":699,"author":{"gitId":"TypeDefinition"},"content":"  * Pros: Very simple to implement.","lastModifiedDate":"2022-04-09"},{"lineNumber":700,"author":{"gitId":"TypeDefinition"},"content":"  * Cons: Less feature rich.","lastModifiedDate":"2022-04-09"},{"lineNumber":701,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":702,"author":{"gitId":"TypeDefinition"},"content":"* **Alternative 2 (current choice)**","lastModifiedDate":"2022-04-09"},{"lineNumber":703,"author":{"gitId":"TypeDefinition"},"content":"Store the history using two lists, and store edits for every command. If the user presses up or down, edits are not lost.","lastModifiedDate":"2022-04-09"},{"lineNumber":704,"author":{"gitId":"TypeDefinition"},"content":"  * Pros: Very similar to Linux Bash terminal, intuitive for experienced command line users.","lastModifiedDate":"2022-04-09"},{"lineNumber":705,"author":{"gitId":"TypeDefinition"},"content":"  * Cons: More complicated to implement.","lastModifiedDate":"2022-04-09"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":707,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":712,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":713,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":714,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":715,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"TypeDefinition"},"content":"A small business owner or freelancer that:","lastModifiedDate":"2022-04-09"},{"lineNumber":726,"author":{"gitId":"TypeDefinition"},"content":"1. has a need to manage not more than 1000 clients.","lastModifiedDate":"2022-04-09"},{"lineNumber":727,"author":{"gitId":"TypeDefinition"},"content":"2. has a need to keep track of transactions with clients.","lastModifiedDate":"2022-04-09"},{"lineNumber":728,"author":{"gitId":"TypeDefinition"},"content":"3. prefers desktop applications over other types.","lastModifiedDate":"2022-04-09"},{"lineNumber":729,"author":{"gitId":"TypeDefinition"},"content":"4. can type fast.","lastModifiedDate":"2022-04-09"},{"lineNumber":730,"author":{"gitId":"TypeDefinition"},"content":"5. prefers keyboard interactions to mouse interactions.","lastModifiedDate":"2022-04-09"},{"lineNumber":731,"author":{"gitId":"TypeDefinition"},"content":"6. is reasonably comfortable using CLI apps.","lastModifiedDate":"2022-04-09"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"TypeDefinition"},"content":"**Value proposition**:","lastModifiedDate":"2022-04-09"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":735,"author":{"gitId":"TypeDefinition"},"content":"CinnamonBun is a free, open source, purpose built application that handles client and transaction information easily.","lastModifiedDate":"2022-04-09"},{"lineNumber":736,"author":{"gitId":"TypeDefinition"},"content":"CinnamonBun helps small businesses and freelancers on a budget to get up and running quickly. ","lastModifiedDate":"2022-04-09"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"TypeDefinition"},"content":"Priorities: High (must have), Medium (nice to have), Low (unlikely to have)","lastModifiedDate":"2022-04-09"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                                               | So that I can…​                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"TypeDefinition"},"content":"|----------|---------|------------------------------------------------------------|-------------------------------------------------------------------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":744,"author":{"gitId":"TypeDefinition"},"content":"| `HIGH`   | user    | add new clients                                            | keep my client list updated.                                            |","lastModifiedDate":"2022-04-09"},{"lineNumber":745,"author":{"gitId":"TypeDefinition"},"content":"| `HIGH`   | user    | delete clients                                             | remove those who are no longer my clients.                              |","lastModifiedDate":"2022-04-09"},{"lineNumber":746,"author":{"gitId":"TypeDefinition"},"content":"| `HIGH`   | user    | edit client information                                    | keep my clients\u0027 information updated.                                   |","lastModifiedDate":"2022-04-09"},{"lineNumber":747,"author":{"gitId":"TypeDefinition"},"content":"| `HIGH`   | user    | list all my clients                                        | see all my client\u0027s information.                                        |","lastModifiedDate":"2022-04-09"},{"lineNumber":748,"author":{"gitId":"TypeDefinition"},"content":"| `HIGH`   | user    | find client via keywords                                   | easily find specific clients.                                           |","lastModifiedDate":"2022-04-09"},{"lineNumber":749,"author":{"gitId":"TypeDefinition"},"content":"| `MEDIUM` | user    | delete clients via filtered keywords                       | easily manipulate and delete people from CinnamonBun.                   |","lastModifiedDate":"2022-04-09"},{"lineNumber":750,"author":{"gitId":"TypeDefinition"},"content":"| `MEDIUM` | user    | add membership to clients                                  | have a rewards program for my clients.                                  |","lastModifiedDate":"2022-04-09"},{"lineNumber":751,"author":{"gitId":"TypeDefinition"},"content":"| `MEDIUM` | user    | sort my clients                                            | sort the clients based on fields I want.                                |","lastModifiedDate":"2022-04-09"},{"lineNumber":752,"author":{"gitId":"TypeDefinition"},"content":"| `LOW`    | user    | store my client\u0027s birthday                                 | give them discounts on their birthday.                                  |","lastModifiedDate":"2022-04-09"},{"lineNumber":753,"author":{"gitId":"TypeDefinition"},"content":"| `LOW`    | user    | store my client\u0027s age                                      | know if I can sell them age restricted items.                           |","lastModifiedDate":"2022-04-09"},{"lineNumber":754,"author":{"gitId":"TypeDefinition"},"content":"| `HIGH`   | user    | add client transaction                                     | store the transaction history of my clients.                            |","lastModifiedDate":"2022-04-09"},{"lineNumber":755,"author":{"gitId":"TypeDefinition"},"content":"| `HIGH`   | user    | delete a transaction                                       | delete the transaction from the transaction list.                       |","lastModifiedDate":"2022-04-11"},{"lineNumber":756,"author":{"gitId":"TypeDefinition"},"content":"| `MEDIUM` | user    | chain multiple commands                                    | execute multiple commands at once.                                      |","lastModifiedDate":"2022-04-09"},{"lineNumber":757,"author":{"gitId":"TypeDefinition"},"content":"| `LOW`    | user    | list all clients who are members.                          |                                                                         |","lastModifiedDate":"2022-04-09"},{"lineNumber":758,"author":{"gitId":"TypeDefinition"},"content":"| `LOW`    | user    | assign different tiers of memberships to my clients.       |                                                                         |","lastModifiedDate":"2022-04-09"},{"lineNumber":759,"author":{"gitId":"TypeDefinition"},"content":"| `MEDIUM` | user    | undo previous modifications made to the data               | undo mistakes.                                                          |","lastModifiedDate":"2022-04-09"},{"lineNumber":760,"author":{"gitId":"TypeDefinition"},"content":"| `MEDIUM` | user    | have to ability to auto-complete/auto-correct the commands | type faster.                                                            |","lastModifiedDate":"2022-04-09"},{"lineNumber":761,"author":{"gitId":"TypeDefinition"},"content":"| `MEDIUM` | user    | append data fields and tags to clients                     | append fields and tags to a client without editing the entire client.   |","lastModifiedDate":"2022-04-09"},{"lineNumber":762,"author":{"gitId":"TypeDefinition"},"content":"| `MEDIUM` | user    | remove data fields and tags from clients                   | remove fields and tags from a client without editing the entire client. |","lastModifiedDate":"2022-04-09"},{"lineNumber":763,"author":{"gitId":"TypeDefinition"},"content":"| `HIGH`   | user    | be able to re-input my previous commands                   | execute similar commands without having to retype the whole command.    |","lastModifiedDate":"2022-04-09"},{"lineNumber":764,"author":{"gitId":"TypeDefinition"},"content":"| `HIGH`   | user    | switch between light and dark themes.                      |                                                                         |","lastModifiedDate":"2022-04-09"},{"lineNumber":765,"author":{"gitId":"zunedz"},"content":"| `HIGH`   | user    | list all transactions                                      |                                                                         |","lastModifiedDate":"2022-04-11"},{"lineNumber":766,"author":{"gitId":"zunedz"},"content":"| `HIGH`   | user    | find a client\u0027s transactions                               | see all the transactions associated with a particular client.           |","lastModifiedDate":"2022-04-11"},{"lineNumber":767,"author":{"gitId":"TypeDefinition"},"content":"| `MEDIUM` | user    | pay a transaction                                          | change the status of the transaction to be paid.                        |","lastModifiedDate":"2022-04-11"},{"lineNumber":768,"author":{"gitId":"TypeDefinition"},"content":"| `MEDIUM` | user    | unpay a transaction                                        | change the status of the transaction to be unpaid.                      |","lastModifiedDate":"2022-04-11"},{"lineNumber":769,"author":{"gitId":"TypeDefinition"},"content":"| `MEDIUM` | user    | flag a transaction as paid or unpaid                       | know if a transaction has been paid.                                    |","lastModifiedDate":"2022-04-09"},{"lineNumber":770,"author":{"gitId":"TypeDefinition"},"content":"| `LOW`    | user    | click on a client to see the list of their transactions    | see a client\u0027s transactions without typing.                             |","lastModifiedDate":"2022-04-09"},{"lineNumber":771,"author":{"gitId":"TypeDefinition"},"content":"| `HIGH`   | user    | remove memberships from clients                            | remove a client from my rewards program.                                |","lastModifiedDate":"2022-04-09"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"TypeDefinition"},"content":"For all use cases below, the **System** is `CinnamonBun` and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2022-04-11"},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"TypeDefinition"},"content":"#### Use case: Get client list","lastModifiedDate":"2022-04-10"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"TypeDefinition"},"content":"1. User requests to list all clients.","lastModifiedDate":"2022-04-09"},{"lineNumber":782,"author":{"gitId":"TypeDefinition"},"content":"2. CinnamonBun displays a list of all clients.","lastModifiedDate":"2022-04-09"},{"lineNumber":783,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"TypeDefinition"},"content":"#### Use case: Add a client","lastModifiedDate":"2022-04-10"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":787,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":789,"author":{"gitId":"TypeDefinition"},"content":"1. User requests to add a new client with specified fields.","lastModifiedDate":"2022-04-09"},{"lineNumber":790,"author":{"gitId":"TypeDefinition"},"content":"2. CinnamonBun adds the client with the specified fields.","lastModifiedDate":"2022-04-09"},{"lineNumber":791,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":792,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":793,"author":{"gitId":"TypeDefinition"},"content":"**Extension**","lastModifiedDate":"2022-04-09"},{"lineNumber":794,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":795,"author":{"gitId":"TypeDefinition"},"content":"* 1a. CinnamonBun detects that the specified fields do not satisfy requirements. ","lastModifiedDate":"2022-04-09"},{"lineNumber":796,"author":{"gitId":"TypeDefinition"},"content":"  * 1a1. CinnamonBun displays error message.","lastModifiedDate":"2022-04-09"},{"lineNumber":797,"author":{"gitId":"TypeDefinition"},"content":"    \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":798,"author":{"gitId":"TypeDefinition"},"content":"* 1b. CinnamonBun detects a duplicate client.","lastModifiedDate":"2022-04-09"},{"lineNumber":799,"author":{"gitId":"TypeDefinition"},"content":"    * 1a1. CinnamonBun displays error message.","lastModifiedDate":"2022-04-09"},{"lineNumber":800,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":801,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":802,"author":{"gitId":"TypeDefinition"},"content":"#### Use case: Edit a client\u0027s information","lastModifiedDate":"2022-04-10"},{"lineNumber":803,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":804,"author":{"gitId":"LapisRaider"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":805,"author":{"gitId":"TypeDefinition"},"content":"1. User specify which client to be edited","lastModifiedDate":"2022-04-09"},{"lineNumber":806,"author":{"gitId":"LapisRaider"},"content":"2. User inputs the values to be edited","lastModifiedDate":"2022-03-03"},{"lineNumber":807,"author":{"gitId":"TypeDefinition"},"content":"3. CinnamonBun edits the value","lastModifiedDate":"2022-04-09"},{"lineNumber":808,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":810,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":812,"author":{"gitId":"TypeDefinition"},"content":"* 1a. No client index specified","lastModifiedDate":"2022-04-09"},{"lineNumber":813,"author":{"gitId":"TypeDefinition"},"content":"    * 1a1. CinnamonBun shows an error message.","lastModifiedDate":"2022-04-09"},{"lineNumber":814,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case resumes at step 1.","lastModifiedDate":"2022-04-11"},{"lineNumber":815,"author":{"gitId":"LapisRaider"},"content":"* 2a. No fields are provided","lastModifiedDate":"2022-03-03"},{"lineNumber":816,"author":{"gitId":"TypeDefinition"},"content":"    * 2a1. CinnamonBun shows an error message.","lastModifiedDate":"2022-04-09"},{"lineNumber":817,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case resumes at step 2.","lastModifiedDate":"2022-04-11"},{"lineNumber":818,"author":{"gitId":"TypeDefinition"},"content":"* 2b. Some fields are inputted wrongly","lastModifiedDate":"2022-04-11"},{"lineNumber":819,"author":{"gitId":"TypeDefinition"},"content":"    * 2b1. CinnamonBun shows the appropriate error message.","lastModifiedDate":"2022-04-09"},{"lineNumber":820,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case resumes at step 2.","lastModifiedDate":"2022-04-11"},{"lineNumber":821,"author":{"gitId":"TypeDefinition"},"content":"* 2c. Value edited is email and there is already an existing email by another client in CinnamonBun","lastModifiedDate":"2022-04-09"},{"lineNumber":822,"author":{"gitId":"TypeDefinition"},"content":"    * 2c1. CinnamonBun shows an error message.","lastModifiedDate":"2022-04-09"},{"lineNumber":823,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case resumes at step 2.","lastModifiedDate":"2022-04-11"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"TypeDefinition"},"content":"#### Use case: Append fields and tags to a client","lastModifiedDate":"2022-04-10"},{"lineNumber":826,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":827,"author":{"gitId":"DaneMarc"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":828,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":829,"author":{"gitId":"TypeDefinition"},"content":"1. User specify which client to be edited.","lastModifiedDate":"2022-04-10"},{"lineNumber":830,"author":{"gitId":"TypeDefinition"},"content":"2. User input the fields and tags to be appended.","lastModifiedDate":"2022-04-10"},{"lineNumber":831,"author":{"gitId":"TypeDefinition"},"content":"3. CinnamonBun appends the fields and tags to the client.","lastModifiedDate":"2022-04-10"},{"lineNumber":832,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":833,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":834,"author":{"gitId":"DaneMarc"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":835,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":836,"author":{"gitId":"TypeDefinition"},"content":"* 1a. CinnamonBun detects that the specified fields do not satisfy requirements.","lastModifiedDate":"2022-04-10"},{"lineNumber":837,"author":{"gitId":"TypeDefinition"},"content":"    * 1a1. CinnamonBun displays error message.","lastModifiedDate":"2022-04-10"},{"lineNumber":838,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":839,"author":{"gitId":"TypeDefinition"},"content":"* 1b. CinnamonBun detects a duplicate client.","lastModifiedDate":"2022-04-10"},{"lineNumber":840,"author":{"gitId":"TypeDefinition"},"content":"    * 1a1. CinnamonBun displays error message.","lastModifiedDate":"2022-04-10"},{"lineNumber":841,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":842,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":843,"author":{"gitId":"TypeDefinition"},"content":"#### Use case: Remove fields and tags from a client","lastModifiedDate":"2022-04-10"},{"lineNumber":844,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":845,"author":{"gitId":"TypeDefinition"},"content":"**MSS**","lastModifiedDate":"2022-04-10"},{"lineNumber":846,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":847,"author":{"gitId":"TypeDefinition"},"content":"1. User specify which client to be edited.","lastModifiedDate":"2022-04-10"},{"lineNumber":848,"author":{"gitId":"TypeDefinition"},"content":"2. User input the fields and tags to be removed.","lastModifiedDate":"2022-04-10"},{"lineNumber":849,"author":{"gitId":"TypeDefinition"},"content":"3. CinnamonBun removes the fields and tags from the client.","lastModifiedDate":"2022-04-10"},{"lineNumber":850,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":851,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":852,"author":{"gitId":"TypeDefinition"},"content":"**Extensions**","lastModifiedDate":"2022-04-10"},{"lineNumber":853,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":854,"author":{"gitId":"TypeDefinition"},"content":"* 1a. CinnamonBun detects that the specified fields do not satisfy requirements.","lastModifiedDate":"2022-04-10"},{"lineNumber":855,"author":{"gitId":"TypeDefinition"},"content":"    * 1a1. CinnamonBun displays error message.","lastModifiedDate":"2022-04-10"},{"lineNumber":856,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":857,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":858,"author":{"gitId":"TypeDefinition"},"content":"#### Use case: Add remark to a client","lastModifiedDate":"2022-04-10"},{"lineNumber":859,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":860,"author":{"gitId":"LapisRaider"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":861,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":862,"author":{"gitId":"TypeDefinition"},"content":"1. User specify which client to be edited.","lastModifiedDate":"2022-04-10"},{"lineNumber":863,"author":{"gitId":"TypeDefinition"},"content":"2. User input the remark to be added.","lastModifiedDate":"2022-04-10"},{"lineNumber":864,"author":{"gitId":"TypeDefinition"},"content":"3. CinnamonBun adds the remark to the client.","lastModifiedDate":"2022-04-10"},{"lineNumber":865,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":867,"author":{"gitId":"TypeDefinition"},"content":"#### Use case: Delete a client","lastModifiedDate":"2022-04-10"},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":869,"author":{"gitId":"TypeDefinition"},"content":"**MSS**","lastModifiedDate":"2022-04-10"},{"lineNumber":870,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":871,"author":{"gitId":"TypeDefinition"},"content":"1.  User requests to list clients.","lastModifiedDate":"2022-04-10"},{"lineNumber":872,"author":{"gitId":"TypeDefinition"},"content":"2.  CinnamonBun shows a list of clients.","lastModifiedDate":"2022-04-10"},{"lineNumber":873,"author":{"gitId":"TypeDefinition"},"content":"3.  User specify which client to be deleted.","lastModifiedDate":"2022-04-10"},{"lineNumber":874,"author":{"gitId":"TypeDefinition"},"content":"4.  CinnamonBun deletes the specified client.","lastModifiedDate":"2022-04-10"},{"lineNumber":875,"author":{"gitId":"TypeDefinition"},"content":"    \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":876,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":877,"author":{"gitId":"LapisRaider"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":878,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":879,"author":{"gitId":"TypeDefinition"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-04-10"},{"lineNumber":880,"author":{"gitId":"TypeDefinition"},"content":"  \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":881,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-04-10"},{"lineNumber":882,"author":{"gitId":"TypeDefinition"},"content":"    * 3a1. CinnamonBun shows an error message.","lastModifiedDate":"2022-04-10"},{"lineNumber":883,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case resumes at step 2.","lastModifiedDate":"2022-04-11"},{"lineNumber":884,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":885,"author":{"gitId":"TypeDefinition"},"content":"#### Use case: Find a client","lastModifiedDate":"2022-04-10"},{"lineNumber":886,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":887,"author":{"gitId":"TypeDefinition"},"content":"**MSS**","lastModifiedDate":"2022-04-10"},{"lineNumber":888,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":889,"author":{"gitId":"TypeDefinition"},"content":"1. User requests to find clients with the specified keyword(s)","lastModifiedDate":"2022-04-10"},{"lineNumber":890,"author":{"gitId":"TypeDefinition"},"content":"2. CinnamonBun shows a list of clients with an attribute containing at least one keyword","lastModifiedDate":"2022-04-10"},{"lineNumber":891,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003e Use case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":892,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":893,"author":{"gitId":"TypeDefinition"},"content":"**Extensions**","lastModifiedDate":"2022-04-10"},{"lineNumber":894,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":895,"author":{"gitId":"TypeDefinition"},"content":"* 1a. No keyword is specified.","lastModifiedDate":"2022-04-10"},{"lineNumber":896,"author":{"gitId":"TypeDefinition"},"content":"    * 1a1. CinnamonBun shows an error message.","lastModifiedDate":"2022-04-10"},{"lineNumber":897,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case resumes at step 2.","lastModifiedDate":"2022-04-11"},{"lineNumber":898,"author":{"gitId":"TypeDefinition"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-04-10"},{"lineNumber":899,"author":{"gitId":"TypeDefinition"},"content":"  \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":900,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":901,"author":{"gitId":"TypeDefinition"},"content":"#### Use case: Sort customer list","lastModifiedDate":"2022-04-10"},{"lineNumber":902,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":903,"author":{"gitId":"LapisRaider"},"content":"**MSS**","lastModifiedDate":"2022-03-24"},{"lineNumber":904,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":905,"author":{"gitId":"LapisRaider"},"content":"1. User inputs the fields the list is to be sorted on.","lastModifiedDate":"2022-03-24"},{"lineNumber":906,"author":{"gitId":"TypeDefinition"},"content":"2. CinnamonBun sorts the client list accordingly in order of the fields specified.","lastModifiedDate":"2022-04-09"},{"lineNumber":907,"author":{"gitId":"LapisRaider"},"content":"3. The sorted list is displayed.","lastModifiedDate":"2022-03-24"},{"lineNumber":908,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":909,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":910,"author":{"gitId":"LapisRaider"},"content":"**Extensions**","lastModifiedDate":"2022-03-24"},{"lineNumber":911,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":912,"author":{"gitId":"LapisRaider"},"content":"* 1a. User inputs no fields","lastModifiedDate":"2022-03-24"},{"lineNumber":913,"author":{"gitId":"LapisRaider"},"content":"  * 1a1. An error message is shown.","lastModifiedDate":"2022-03-24"},{"lineNumber":914,"author":{"gitId":"TypeDefinition"},"content":"    \u003cbr\u003eUse case resumes at step 1.","lastModifiedDate":"2022-04-11"},{"lineNumber":915,"author":{"gitId":"LapisRaider"},"content":"* 1b. User inputs non-existent/not supported fields","lastModifiedDate":"2022-03-24"},{"lineNumber":916,"author":{"gitId":"LapisRaider"},"content":"  * 1b1. An error message is shown","lastModifiedDate":"2022-03-24"},{"lineNumber":917,"author":{"gitId":"TypeDefinition"},"content":"     \u003cbr\u003eUse case resumes at step 1","lastModifiedDate":"2022-04-11"},{"lineNumber":918,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":919,"author":{"gitId":"zunedz"},"content":"#### Use case: Add a transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":920,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":921,"author":{"gitId":"zunedz"},"content":"**MSS**","lastModifiedDate":"2022-04-11"},{"lineNumber":922,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":923,"author":{"gitId":"zunedz"},"content":"1. User specify which client to add the transaction to.","lastModifiedDate":"2022-04-11"},{"lineNumber":924,"author":{"gitId":"zunedz"},"content":"2. User input the parameters of the transactions (Amount, Transaction Date,","lastModifiedDate":"2022-04-11"},{"lineNumber":925,"author":{"gitId":"zunedz"},"content":"   Due Date, Note, and Status).","lastModifiedDate":"2022-04-11"},{"lineNumber":926,"author":{"gitId":"zunedz"},"content":"3. CinnamonBun add the transaction to the transaction list.","lastModifiedDate":"2022-04-11"},{"lineNumber":927,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":928,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":929,"author":{"gitId":"zunedz"},"content":"**Extensions**","lastModifiedDate":"2022-04-11"},{"lineNumber":930,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":931,"author":{"gitId":"zunedz"},"content":"* 1a. CinnamonBun detects that the specified fields do not satisfy requirements.","lastModifiedDate":"2022-04-11"},{"lineNumber":932,"author":{"gitId":"zunedz"},"content":"    * 1a1. CinnamonBun displays error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":933,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":934,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":935,"author":{"gitId":"zunedz"},"content":"#### Use case: Delete a transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":936,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":937,"author":{"gitId":"zunedz"},"content":"**MSS**","lastModifiedDate":"2022-04-11"},{"lineNumber":938,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":939,"author":{"gitId":"zunedz"},"content":"1. User specify which transaction to be deleted.","lastModifiedDate":"2022-04-11"},{"lineNumber":940,"author":{"gitId":"zunedz"},"content":"2. CinnamonBun removes the transaction from the transaction list.","lastModifiedDate":"2022-04-11"},{"lineNumber":941,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":942,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":943,"author":{"gitId":"zunedz"},"content":"**Extensions**","lastModifiedDate":"2022-04-11"},{"lineNumber":944,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":945,"author":{"gitId":"zunedz"},"content":"* 1a. CinnamonBun detects that the specified index does not satisfy requirements.","lastModifiedDate":"2022-04-11"},{"lineNumber":946,"author":{"gitId":"zunedz"},"content":"    * 1a1. CinnamonBun displays error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":947,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":948,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":949,"author":{"gitId":"zunedz"},"content":"#### Use case: List all transactions","lastModifiedDate":"2022-04-11"},{"lineNumber":950,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":951,"author":{"gitId":"zunedz"},"content":"**MSS**","lastModifiedDate":"2022-04-11"},{"lineNumber":952,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":953,"author":{"gitId":"zunedz"},"content":"1. User specify the command keyword.","lastModifiedDate":"2022-04-11"},{"lineNumber":954,"author":{"gitId":"zunedz"},"content":"2. CinnamonBun displays all transactions in the application.","lastModifiedDate":"2022-04-11"},{"lineNumber":955,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":956,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":957,"author":{"gitId":"zunedz"},"content":"#### Use case: Find transactions from a client","lastModifiedDate":"2022-04-11"},{"lineNumber":958,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":959,"author":{"gitId":"zunedz"},"content":"**MSS**","lastModifiedDate":"2022-04-11"},{"lineNumber":960,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":961,"author":{"gitId":"zunedz"},"content":"1. User specify which client\u0027s transactions be displayed. ","lastModifiedDate":"2022-04-11"},{"lineNumber":962,"author":{"gitId":"zunedz"},"content":"2. CinnamonBun displays all transactions from the client.","lastModifiedDate":"2022-04-11"},{"lineNumber":963,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":965,"author":{"gitId":"zunedz"},"content":"**Extensions**","lastModifiedDate":"2022-04-11"},{"lineNumber":966,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":967,"author":{"gitId":"zunedz"},"content":"* 1a. CinnamonBun detects that the specified index does not satisfy requirements.","lastModifiedDate":"2022-04-11"},{"lineNumber":968,"author":{"gitId":"zunedz"},"content":"    * 1a1. CinnamonBun displays error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":969,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":970,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":971,"author":{"gitId":"zunedz"},"content":"#### Use case: Pay a transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":972,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":973,"author":{"gitId":"zunedz"},"content":"**MSS**","lastModifiedDate":"2022-04-11"},{"lineNumber":974,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":975,"author":{"gitId":"zunedz"},"content":"1. User specify which transaction to be paid.","lastModifiedDate":"2022-04-11"},{"lineNumber":976,"author":{"gitId":"zunedz"},"content":"2. CinnamonBun changes the status of the transaction to be paid.","lastModifiedDate":"2022-04-11"},{"lineNumber":977,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":978,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":979,"author":{"gitId":"zunedz"},"content":"**Extensions**","lastModifiedDate":"2022-04-11"},{"lineNumber":980,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":981,"author":{"gitId":"zunedz"},"content":"* 1a. CinnamonBun detects that the specified index does not satisfy requirements.","lastModifiedDate":"2022-04-11"},{"lineNumber":982,"author":{"gitId":"zunedz"},"content":"    * 1a1. CinnamonBun displays error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":983,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":984,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":985,"author":{"gitId":"zunedz"},"content":"#### Use case: Unpay a transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":986,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":987,"author":{"gitId":"zunedz"},"content":"**MSS**","lastModifiedDate":"2022-04-11"},{"lineNumber":988,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":989,"author":{"gitId":"zunedz"},"content":"1. User specify which transaction to be unpaid.","lastModifiedDate":"2022-04-11"},{"lineNumber":990,"author":{"gitId":"zunedz"},"content":"2. CinnamonBun changes the status of the transaction to be unpaid.","lastModifiedDate":"2022-04-11"},{"lineNumber":991,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":992,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":993,"author":{"gitId":"zunedz"},"content":"**Extensions**","lastModifiedDate":"2022-04-11"},{"lineNumber":994,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":995,"author":{"gitId":"zunedz"},"content":"* 1a. CinnamonBun detects that the specified index does not satisfy requirements.","lastModifiedDate":"2022-04-11"},{"lineNumber":996,"author":{"gitId":"zunedz"},"content":"    * 1a1. CinnamonBun displays error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":997,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":998,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":999,"author":{"gitId":"TypeDefinition"},"content":"#### Use case: Undo modifications","lastModifiedDate":"2022-04-10"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1001,"author":{"gitId":"LapisRaider"},"content":"**MSS**","lastModifiedDate":"2022-03-30"},{"lineNumber":1002,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1003,"author":{"gitId":"TypeDefinition"},"content":"1. User undos the latest modification made to the Clients\u0027 list in the CinnamonBun.","lastModifiedDate":"2022-04-09"},{"lineNumber":1004,"author":{"gitId":"LapisRaider"},"content":"2. The modifications have been undone.","lastModifiedDate":"2022-03-30"},{"lineNumber":1005,"author":{"gitId":"TypeDefinition"},"content":"3. CinnamonBun shows the earlier client list without the modifications.","lastModifiedDate":"2022-04-11"},{"lineNumber":1006,"author":{"gitId":"TypeDefinition"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":1007,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1008,"author":{"gitId":"LapisRaider"},"content":"**Extensions**","lastModifiedDate":"2022-03-30"},{"lineNumber":1009,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1010,"author":{"gitId":"LapisRaider"},"content":"* 1a. There have been no modification made prior to calling undo.","lastModifiedDate":"2022-03-30"},{"lineNumber":1011,"author":{"gitId":"TypeDefinition"},"content":"  * 1a1. CinnamonBun shows an error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":1012,"author":{"gitId":"TypeDefinition"},"content":"    \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":1013,"author":{"gitId":"LapisRaider"},"content":"* 1b. The previous data cannot be read due to file reading issues/corruption","lastModifiedDate":"2022-03-30"},{"lineNumber":1014,"author":{"gitId":"TypeDefinition"},"content":"  * 1b1. CinnamonBun shows an error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":1015,"author":{"gitId":"TypeDefinition"},"content":"    \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1017,"author":{"gitId":"TypeDefinition"},"content":"#### Use case: Add membership to a client","lastModifiedDate":"2022-04-10"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1019,"author":{"gitId":"KeithCZW"},"content":"**MSS**","lastModifiedDate":"2022-04-09"},{"lineNumber":1020,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1021,"author":{"gitId":"KeithCZW"},"content":"1.  User specifies which client to add membership to and what membership tier to assign to the client","lastModifiedDate":"2022-04-09"},{"lineNumber":1022,"author":{"gitId":"KeithCZW"},"content":"3.  CinnamonBun assigned the membership to the specified client","lastModifiedDate":"2022-04-09"},{"lineNumber":1023,"author":{"gitId":"KeithCZW"},"content":"4.  CinnamonBun displays the list of clients with updated membership","lastModifiedDate":"2022-04-09"},{"lineNumber":1024,"author":{"gitId":"TypeDefinition"},"content":"    \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":1025,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1026,"author":{"gitId":"KeithCZW"},"content":"**Extensions**","lastModifiedDate":"2022-04-09"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1028,"author":{"gitId":"KeithCZW"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2022-04-09"},{"lineNumber":1029,"author":{"gitId":"KeithCZW"},"content":"    * 1a1. CinnamonBun shows an error message.","lastModifiedDate":"2022-04-09"},{"lineNumber":1030,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":1031,"author":{"gitId":"KeithCZW"},"content":"* 1b. The given membership tier is invalid.","lastModifiedDate":"2022-04-09"},{"lineNumber":1032,"author":{"gitId":"TypeDefinition"},"content":"    * 1b1. CinnamonBun shows an error message.","lastModifiedDate":"2022-04-10"},{"lineNumber":1033,"author":{"gitId":"TypeDefinition"},"content":"      \u003cbr\u003eUse case ends.","lastModifiedDate":"2022-04-11"},{"lineNumber":1034,"author":{"gitId":"LapisRaider"},"content":"    ","lastModifiedDate":"2022-03-24"},{"lineNumber":1035,"author":{"gitId":"TypeDefinition"},"content":"### Non-functional requirements","lastModifiedDate":"2022-04-09"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1038,"author":{"gitId":"TypeDefinition"},"content":"2. Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-04-09"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":1040,"author":{"gitId":"KeithCZW"},"content":"4. A user should be able to easily find a client.","lastModifiedDate":"2022-03-05"},{"lineNumber":1041,"author":{"gitId":"TypeDefinition"},"content":"5. A user should be able to easily navigate the interface.","lastModifiedDate":"2022-04-09"},{"lineNumber":1042,"author":{"gitId":"KeithCZW"},"content":"6. Commands should be able to execute without any noticeable latency.","lastModifiedDate":"2022-04-09"},{"lineNumber":1043,"author":{"gitId":"TypeDefinition"},"content":"7. Error messages when inputting invalid commands will be displayed in the output box.","lastModifiedDate":"2022-04-10"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1055,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:bulb: **Note**\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1056,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1057,"author":{"gitId":"TypeDefinition"},"content":"These instructions only provide a starting point for testers to work on; testers are expected to do more *exploratory* testing.","lastModifiedDate":"2022-04-09"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1063,"author":{"gitId":"TypeDefinition"},"content":"* Initial launch","lastModifiedDate":"2022-04-09"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1065,"author":{"gitId":"TypeDefinition"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2022-04-09"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1067,"author":{"gitId":"TypeDefinition"},"content":"* Saving window preferences","lastModifiedDate":"2022-04-09"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1069,"author":{"gitId":"TypeDefinition"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1072,"author":{"gitId":"TypeDefinition"},"content":"### Adding a client","lastModifiedDate":"2022-04-09"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1074,"author":{"gitId":"TypeDefinition"},"content":"* Adding a new client while all clients are being shown","lastModifiedDate":"2022-04-09"},{"lineNumber":1075,"author":{"gitId":"TypeDefinition"},"content":"  1. Test case: `add n/Gawr Gura p/12345678 e/gura@hololive.com a/123 Atlantis`\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1076,"author":{"gitId":"TypeDefinition"},"content":"     Expected: A new client named `Gawr Gura` should appear at the bottom of the client list.","lastModifiedDate":"2022-04-09"},{"lineNumber":1077,"author":{"gitId":"TypeDefinition"},"content":"  2. Test case: `add n/Ceres Fauna p/12345678`\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1078,"author":{"gitId":"TypeDefinition"},"content":"     Expected: No new client is added as not all required fields are provided. Error message is shown. ","lastModifiedDate":"2022-04-09"},{"lineNumber":1079,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1080,"author":{"gitId":"TypeDefinition"},"content":"### Editing a client","lastModifiedDate":"2022-04-09"},{"lineNumber":1081,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1082,"author":{"gitId":"TypeDefinition"},"content":"* Editing a client while all clients are being shown","lastModifiedDate":"2022-04-09"},{"lineNumber":1083,"author":{"gitId":"TypeDefinition"},"content":"  1. Prerequisites: There needs to be existing client data in the client list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1084,"author":{"gitId":"TypeDefinition"},"content":"  2. Test case: `edit 1 e/client_name@example.com`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1085,"author":{"gitId":"TypeDefinition"},"content":"     Expected: First client\u0027s email is changed to `client_name@example.com`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1086,"author":{"gitId":"TypeDefinition"},"content":"  3. Test case: `edit 2 e/client_name@example.com`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1087,"author":{"gitId":"TypeDefinition"},"content":"     Expected: Second client\u0027s email is not changed as the email is already in use. Error message is shown.","lastModifiedDate":"2022-04-09"},{"lineNumber":1088,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1089,"author":{"gitId":"TypeDefinition"},"content":"### Append fields to a client","lastModifiedDate":"2022-04-09"},{"lineNumber":1090,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1091,"author":{"gitId":"TypeDefinition"},"content":"* Append fields to a client.","lastModifiedDate":"2022-04-09"},{"lineNumber":1092,"author":{"gitId":"TypeDefinition"},"content":"    1. Prerequisites: There needs to be existing client data in the client list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1093,"author":{"gitId":"TypeDefinition"},"content":"    2. Test case: `append 1 b/1999-02-17`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1094,"author":{"gitId":"TypeDefinition"},"content":"       Expected: First client\u0027s birthday is set to `1999-02-17`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1095,"author":{"gitId":"TypeDefinition"},"content":"    3. Test case: `append 1 n/Ookami Mio`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1096,"author":{"gitId":"TypeDefinition"},"content":"       Expected: First client\u0027s name is set to `Ookami Mio`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1097,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1098,"author":{"gitId":"TypeDefinition"},"content":"### Remove fields from a client","lastModifiedDate":"2022-04-09"},{"lineNumber":1099,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1100,"author":{"gitId":"TypeDefinition"},"content":"* Remove fields from a client.","lastModifiedDate":"2022-04-09"},{"lineNumber":1101,"author":{"gitId":"TypeDefinition"},"content":"    1. Prerequisites: There needs to be existing client data in the client list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1102,"author":{"gitId":"TypeDefinition"},"content":"    2. Append a tag and birthday to the first client using the command `append 1 t/vendor b/1999-02-17`.","lastModifiedDate":"2022-04-09"},{"lineNumber":1103,"author":{"gitId":"TypeDefinition"},"content":"    3. Test case: `remove 1 b/`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1104,"author":{"gitId":"TypeDefinition"},"content":"       Expected: First client\u0027s birthday is removed.","lastModifiedDate":"2022-04-09"},{"lineNumber":1105,"author":{"gitId":"TypeDefinition"},"content":"    4. Test case: `remove 1 t/vendor`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1106,"author":{"gitId":"TypeDefinition"},"content":"       Expected: First client\u0027s `vendor` tag is removed.","lastModifiedDate":"2022-04-09"},{"lineNumber":1107,"author":{"gitId":"TypeDefinition"},"content":"    5. Test case: `remove 1 n/`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1108,"author":{"gitId":"TypeDefinition"},"content":"       Expected: First client\u0027s name is not removed as every client must have a name. Error message is shown.","lastModifiedDate":"2022-04-09"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1110,"author":{"gitId":"TypeDefinition"},"content":"### Add or remove remark from a client","lastModifiedDate":"2022-04-10"},{"lineNumber":1111,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1112,"author":{"gitId":"TypeDefinition"},"content":"* Add or remove remark from a client.","lastModifiedDate":"2022-04-10"},{"lineNumber":1113,"author":{"gitId":"TypeDefinition"},"content":"    1. Prerequisites: There needs to be existing client data in the client list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1114,"author":{"gitId":"TypeDefinition"},"content":"    2. Test case: `remark 1 r/High shipping cost.`\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1115,"author":{"gitId":"TypeDefinition"},"content":"       Expected: First client\u0027s remark is set to `High shipping cost.`.","lastModifiedDate":"2022-04-10"},{"lineNumber":1116,"author":{"gitId":"TypeDefinition"},"content":"    3. Test case: `remark 1 r/`\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":1117,"author":{"gitId":"TypeDefinition"},"content":"       Expected: First client\u0027s remark removed.","lastModifiedDate":"2022-04-10"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1119,"author":{"gitId":"TypeDefinition"},"content":"### Deleting a client","lastModifiedDate":"2022-04-09"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1121,"author":{"gitId":"TypeDefinition"},"content":"* Deleting a client while all clients are being shown","lastModifiedDate":"2022-04-09"},{"lineNumber":1122,"author":{"gitId":"TypeDefinition"},"content":"    1. Prerequisites: There needs to be existing client data in the client list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1123,"author":{"gitId":"TypeDefinition"},"content":"    2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1124,"author":{"gitId":"TypeDefinition"},"content":"       Expected: First client is deleted from the list.","lastModifiedDate":"2022-04-09"},{"lineNumber":1125,"author":{"gitId":"TypeDefinition"},"content":"    3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1126,"author":{"gitId":"TypeDefinition"},"content":"       Expected: No client is deleted. Error message is shown.","lastModifiedDate":"2022-04-09"},{"lineNumber":1127,"author":{"gitId":"TypeDefinition"},"content":"    4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1128,"author":{"gitId":"TypeDefinition"},"content":"       Expected: No client is deleted. Error message is shown.","lastModifiedDate":"2022-04-09"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1130,"author":{"gitId":"TypeDefinition"},"content":"### Sorting the client list","lastModifiedDate":"2022-04-11"},{"lineNumber":1131,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1132,"author":{"gitId":"TypeDefinition"},"content":"* Sorting the client list based on certain fields","lastModifiedDate":"2022-04-11"},{"lineNumber":1133,"author":{"gitId":"TypeDefinition"},"content":"   1. Prerequisites: There needs to be existing client data in the client list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1134,"author":{"gitId":"LapisRaider"},"content":"   2. Test case: `sort n/`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1135,"author":{"gitId":"TypeDefinition"},"content":"      Expected: The client list will display the clients in ascending alphabetical order.","lastModifiedDate":"2022-04-11"},{"lineNumber":1136,"author":{"gitId":"LapisRaider"},"content":"   3. Test case: `sort n/ a/ p/ desc`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1137,"author":{"gitId":"TypeDefinition"},"content":"      Expected: The client list will display the clients in ascending alphabetical order. Clients with the same name will","lastModifiedDate":"2022-04-11"},{"lineNumber":1138,"author":{"gitId":"LapisRaider"},"content":"      then be displayed according to their addresses in ascending order. And if they also have the same address, they\u0027ll be ","lastModifiedDate":"2022-03-24"},{"lineNumber":1139,"author":{"gitId":"LapisRaider"},"content":"      displayed based on their phone number in descending order.","lastModifiedDate":"2022-03-24"},{"lineNumber":1140,"author":{"gitId":"LapisRaider"},"content":"   4. Test case: `sort l:)/ djewijw p/`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":1141,"author":{"gitId":"LapisRaider"},"content":"      Expected: An error would be thrown as the fields specified do not exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":1142,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1143,"author":{"gitId":"zunedz"},"content":"### Adding a Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":1144,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1145,"author":{"gitId":"zunedz"},"content":"* Adding a new transaction while all transactions are being shown","lastModifiedDate":"2022-04-11"},{"lineNumber":1146,"author":{"gitId":"zunedz"},"content":"    1. Test case: `addTransaction 1 a/12 td/2020-11-11 dd/2020-12-12 n/this is a note --paid` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1147,"author":{"gitId":"zunedz"},"content":"       Expected: A new paid transaction with `Amount` 12 should appear at the bottom of the transaction list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1148,"author":{"gitId":"zunedz"},"content":"    2. Test case: `addTransaction 1 a/12 td/2020-11-11 dd/2020-12-12 n/this is a note` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1149,"author":{"gitId":"zunedz"},"content":"       Expected: A new unpaid transaction with `Amount` 12 should appear at the bottom of the transaction list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1150,"author":{"gitId":"zunedz"},"content":"    3. Test case: `addTransaction 1 td/2020-11-11 dd/2020-12-12 n/this is a note` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1151,"author":{"gitId":"zunedz"},"content":"       Expected: No new transaction is added as not all required fields are provided. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1152,"author":{"gitId":"zunedz"},"content":"    4. Test case: `addTransaction 1 a/12 td/2020-11-11 dd/2002-12-12 n/this is a note` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1153,"author":{"gitId":"zunedz"},"content":"       Expected: No new transaction is added as not the due date is before the transaction date. Error message is shown. ","lastModifiedDate":"2022-04-11"},{"lineNumber":1154,"author":{"gitId":"zunedz"},"content":"  ","lastModifiedDate":"2022-04-11"},{"lineNumber":1155,"author":{"gitId":"zunedz"},"content":"### Deleting a Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":1156,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1157,"author":{"gitId":"zunedz"},"content":"* Deleting a transaction while all transactions are being shown","lastModifiedDate":"2022-04-11"},{"lineNumber":1158,"author":{"gitId":"zunedz"},"content":"    1. Test case: `deleteTransaction 1` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1159,"author":{"gitId":"zunedz"},"content":"       Expected: The first transaction is deleted.","lastModifiedDate":"2022-04-11"},{"lineNumber":1160,"author":{"gitId":"zunedz"},"content":"    2. Test case: `deleteTransaction 0` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1161,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction is deleted as the provided index is invalid. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1162,"author":{"gitId":"zunedz"},"content":"    3. Test case: `deleteTransaction x` where x is larger than the transaction list size \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1163,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction is deleted as the provided index is invalid. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1164,"author":{"gitId":"zunedz"},"content":"    4. Test case: `deleteTransaction` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1165,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction is deleted as the required field is not provided. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1166,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1167,"author":{"gitId":"zunedz"},"content":"### List a Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":1168,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1169,"author":{"gitId":"zunedz"},"content":"* list all transactions","lastModifiedDate":"2022-04-11"},{"lineNumber":1170,"author":{"gitId":"zunedz"},"content":"    1. Test case: `listTransaction` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1171,"author":{"gitId":"zunedz"},"content":"       Expected: All transactions will be listed.","lastModifiedDate":"2022-04-11"},{"lineNumber":1172,"author":{"gitId":"zunedz"},"content":"  1. Test case: `listTransaction abcd` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1173,"author":{"gitId":"zunedz"},"content":"     Expected: All transactions will be listed.","lastModifiedDate":"2022-04-11"},{"lineNumber":1174,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1175,"author":{"gitId":"zunedz"},"content":"### Find Transactions","lastModifiedDate":"2022-04-11"},{"lineNumber":1176,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1177,"author":{"gitId":"zunedz"},"content":"* Find transactions while all clients are being shown","lastModifiedDate":"2022-04-11"},{"lineNumber":1178,"author":{"gitId":"zunedz"},"content":"    1. Test case: `findTransaction 1` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1179,"author":{"gitId":"zunedz"},"content":"       Expected: All transactions from the first client are listed.","lastModifiedDate":"2022-04-11"},{"lineNumber":1180,"author":{"gitId":"zunedz"},"content":"    2. Test case: `findTransaction 0` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1181,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction is shown as the provided index is invalid. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1182,"author":{"gitId":"zunedz"},"content":"    3. Test case: `findTransaction x` where x is larger than the client list size \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1183,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction is listed as the provided index is invalid. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1184,"author":{"gitId":"zunedz"},"content":"    4. Test case: `findTransaction` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1185,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction is listed as the required field is not provided. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1186,"author":{"gitId":"zunedz"},"content":"    ","lastModifiedDate":"2022-04-11"},{"lineNumber":1187,"author":{"gitId":"zunedz"},"content":"### Pay","lastModifiedDate":"2022-04-11"},{"lineNumber":1188,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1189,"author":{"gitId":"zunedz"},"content":"* Pay a transaction while all transactions are being shown","lastModifiedDate":"2022-04-11"},{"lineNumber":1190,"author":{"gitId":"zunedz"},"content":"    1. Test case: `pay 1` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1191,"author":{"gitId":"zunedz"},"content":"       Expected: Status of the first transaction of the transaction list is changed to `paid`.","lastModifiedDate":"2022-04-11"},{"lineNumber":1192,"author":{"gitId":"zunedz"},"content":"    2. Test case: `pay 0` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1193,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction status is changed to `paid` as the provided index is invalid. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1194,"author":{"gitId":"zunedz"},"content":"    3. Test case: `pay x` where x is larger than the transaction list size \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1195,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction status is changed to `paid` as the provided index is invalid. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1196,"author":{"gitId":"zunedz"},"content":"    4. Test case: `pay` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1197,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction status is changed to `paid` as the required field is not provided. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1198,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1199,"author":{"gitId":"zunedz"},"content":"### Unpay","lastModifiedDate":"2022-04-11"},{"lineNumber":1200,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1201,"author":{"gitId":"zunedz"},"content":"* Unpay a transaction while all transactions are being shown","lastModifiedDate":"2022-04-11"},{"lineNumber":1202,"author":{"gitId":"zunedz"},"content":"    1. Test case: `unpay 1` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1203,"author":{"gitId":"zunedz"},"content":"       Expected: Status of the first transaction of the transaction list is changed to `unpaid`.","lastModifiedDate":"2022-04-11"},{"lineNumber":1204,"author":{"gitId":"zunedz"},"content":"    2. Test case: `unpay 0` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1205,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction status is changed to `unpaid` as the provided index is invalid. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1206,"author":{"gitId":"zunedz"},"content":"    3. Test case: `unpay x` where x is larger than the transaction list size \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1207,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction status is changed to `unpaid` as the provided index is invalid. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1208,"author":{"gitId":"zunedz"},"content":"    4. Test case: `unpay` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1209,"author":{"gitId":"zunedz"},"content":"       Expected: No transaction status is changed to `unpaid` as the required field is not provided. Error message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1210,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1211,"author":{"gitId":"LapisRaider"},"content":"### Undo data modifications","lastModifiedDate":"2022-03-30"},{"lineNumber":1212,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1213,"author":{"gitId":"TypeDefinition"},"content":"* Undo a modification that was previously made","lastModifiedDate":"2022-04-09"},{"lineNumber":1214,"author":{"gitId":"TypeDefinition"},"content":"   1. Prerequisites: There needs to be modifications made to the client list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1215,"author":{"gitId":"LapisRaider"},"content":"   2. Test case: `undo` \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1216,"author":{"gitId":"LapisRaider"},"content":"      Expected: The previous modification done will be reverted and the application will display the previous version","lastModifiedDate":"2022-03-30"},{"lineNumber":1217,"author":{"gitId":"TypeDefinition"},"content":"      of the client list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1218,"author":{"gitId":"TypeDefinition"},"content":"* Undo a modification when there are none","lastModifiedDate":"2022-04-09"},{"lineNumber":1219,"author":{"gitId":"LapisRaider"},"content":"   1. Prerequisites: No modifications were made since the start of the application or all modifications have been reverted.","lastModifiedDate":"2022-03-30"},{"lineNumber":1220,"author":{"gitId":"LapisRaider"},"content":"   2. Test case: `undo` \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1221,"author":{"gitId":"LapisRaider"},"content":"      Expected: An error message will be shown stating that there is nothing to undo since there are no modifications.","lastModifiedDate":"2022-03-30"},{"lineNumber":1222,"author":{"gitId":"TypeDefinition"},"content":"* Only able to undo the 10 latest modifications.","lastModifiedDate":"2022-04-09"},{"lineNumber":1223,"author":{"gitId":"LapisRaider"},"content":"   1. Prerequisites: More than 10 modifications were made without reverting any of them.","lastModifiedDate":"2022-03-30"},{"lineNumber":1224,"author":{"gitId":"LapisRaider"},"content":"   2. Test case: `undo` 11 times \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1225,"author":{"gitId":"TypeDefinition"},"content":"      Expected: Notice that it can only revert the client list by the latest 10 modifications made and not the modifications before those.","lastModifiedDate":"2022-04-11"},{"lineNumber":1226,"author":{"gitId":"LapisRaider"},"content":"      At the 11th `undo`, will show an error message stating that there is nothing to undo since there are no modifications.","lastModifiedDate":"2022-03-30"},{"lineNumber":1227,"author":{"gitId":"TypeDefinition"},"content":"* Handling temporary file corruption.","lastModifiedDate":"2022-04-09"},{"lineNumber":1228,"author":{"gitId":"LapisRaider"},"content":"   1. Prerequisites: Some modifications were made, but the latest temporary files in the `data\\.tempdata` are either corrupted or deleted","lastModifiedDate":"2022-03-30"},{"lineNumber":1229,"author":{"gitId":"LapisRaider"},"content":"   by the user and not the application.","lastModifiedDate":"2022-03-30"},{"lineNumber":1230,"author":{"gitId":"LapisRaider"},"content":"   2. Test case: `undo` \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":1231,"author":{"gitId":"LapisRaider"},"content":"      Expected: An error message would be shown stating it cannot read the temporary file. The temporary file if it\u0027s not","lastModifiedDate":"2022-03-30"},{"lineNumber":1232,"author":{"gitId":"TypeDefinition"},"content":"      already deleted by the user, will then be deleted by the application. The client list will not be able to revert to before the modification stored ","lastModifiedDate":"2022-04-11"},{"lineNumber":1233,"author":{"gitId":"LapisRaider"},"content":"      in the corrupted temporary file. ","lastModifiedDate":"2022-03-30"},{"lineNumber":1234,"author":{"gitId":"LapisRaider"},"content":"   ","lastModifiedDate":"2022-03-30"},{"lineNumber":1235,"author":{"gitId":"TypeDefinition"},"content":"      However, if the user were to call `undo` again, and if the second-latest temporary file data","lastModifiedDate":"2022-04-11"},{"lineNumber":1236,"author":{"gitId":"TypeDefinition"},"content":"      is not corrupted or deleted by user, the application will be able to revert the client list to the state stored in the temporary file.","lastModifiedDate":"2022-04-11"},{"lineNumber":1237,"author":{"gitId":"TypeDefinition"},"content":"      Thus, effectively undoing the latest 2 modifications.","lastModifiedDate":"2022-04-09"},{"lineNumber":1238,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":1239,"author":{"gitId":"KeithCZW"},"content":"### Adding membership","lastModifiedDate":"2022-04-09"},{"lineNumber":1240,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1241,"author":{"gitId":"KeithCZW"},"content":"* Adding a membership to a user","lastModifiedDate":"2022-04-09"},{"lineNumber":1242,"author":{"gitId":"TypeDefinition"},"content":"    1. Prerequisites: There needs to be existing client data in the client list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1243,"author":{"gitId":"KeithCZW"},"content":"    2. Test case: `addMembership 1 m/gold`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1244,"author":{"gitId":"KeithCZW"},"content":"       Expected: The client at index 1 will have a gold membership assigned to him.","lastModifiedDate":"2022-04-09"},{"lineNumber":1245,"author":{"gitId":"KeithCZW"},"content":"    3. Test case: `addMembership 3 m/bronze`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1246,"author":{"gitId":"KeithCZW"},"content":"       Expected: The client at index 3 will have a bronze membership assigned to him.","lastModifiedDate":"2022-04-09"},{"lineNumber":1247,"author":{"gitId":"KeithCZW"},"content":"    4. Test case: `addMembership 1 m/platinum`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1248,"author":{"gitId":"KeithCZW"},"content":"       Expected: An error will be displayed as there is no tier called \u0027platinum\u0027.","lastModifiedDate":"2022-04-09"},{"lineNumber":1249,"author":{"gitId":"KeithCZW"},"content":"    5. Test case: `addMembership -1 m/silver`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1250,"author":{"gitId":"KeithCZW"},"content":"       Expected: An error will be displayed as -1 is an invalid index.","lastModifiedDate":"2022-04-09"},{"lineNumber":1251,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1252,"author":{"gitId":"KeithCZW"},"content":"### Removing membership","lastModifiedDate":"2022-04-09"},{"lineNumber":1253,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1254,"author":{"gitId":"KeithCZW"},"content":"* Removing a membership from a user","lastModifiedDate":"2022-04-09"},{"lineNumber":1255,"author":{"gitId":"TypeDefinition"},"content":"    1. Prerequisites: There needs to be existing client data in the client list with a membership.","lastModifiedDate":"2022-04-11"},{"lineNumber":1256,"author":{"gitId":"KeithCZW"},"content":"    2. Test case: `removeMembership 1` (User at index 1 has a membership)\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1257,"author":{"gitId":"KeithCZW"},"content":"       Expected: The client at index 1 will have his membership removed.","lastModifiedDate":"2022-04-09"},{"lineNumber":1258,"author":{"gitId":"KeithCZW"},"content":"    3. Test case: `removeMembership 1` (User at index 1 has no membership)\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1259,"author":{"gitId":"KeithCZW"},"content":"       Expected: Error message showing that user at that index has no membership.","lastModifiedDate":"2022-04-09"},{"lineNumber":1260,"author":{"gitId":"KeithCZW"},"content":"    4. Test case: `removeMembership -1`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1261,"author":{"gitId":"KeithCZW"},"content":"       Expected: An error will be displayed as -1 is an invalid index.","lastModifiedDate":"2022-04-09"},{"lineNumber":1262,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1263,"author":{"gitId":"KeithCZW"},"content":"### Listing all members","lastModifiedDate":"2022-04-09"},{"lineNumber":1264,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1265,"author":{"gitId":"KeithCZW"},"content":"* Listing members","lastModifiedDate":"2022-04-09"},{"lineNumber":1266,"author":{"gitId":"TypeDefinition"},"content":"    1. Prerequisites: There needs to be existing client data in the client list with memberships.","lastModifiedDate":"2022-04-11"},{"lineNumber":1267,"author":{"gitId":"KeithCZW"},"content":"    2. Test case: `listMembers` (Some users have memberships)\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1268,"author":{"gitId":"KeithCZW"},"content":"       Expected: List of all members will be displayed.","lastModifiedDate":"2022-04-09"},{"lineNumber":1269,"author":{"gitId":"KeithCZW"},"content":"    3. Test case: `listMembers` (No users have memberships)\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1270,"author":{"gitId":"KeithCZW"},"content":"       Expected: No clients displayed.","lastModifiedDate":"2022-04-09"},{"lineNumber":1271,"author":{"gitId":"KeithCZW"},"content":"    4. Test case: `listMembers gold` (Some users have gold memberships)\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1272,"author":{"gitId":"KeithCZW"},"content":"       Expected: All members with gold membership will be displayed. ","lastModifiedDate":"2022-04-09"},{"lineNumber":1273,"author":{"gitId":"KeithCZW"},"content":"    5. Test case: `listMembers hello`\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1274,"author":{"gitId":"KeithCZW"},"content":"       Expected: Error message shown as hello is not a valid membership tier.","lastModifiedDate":"2022-04-09"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1279,"author":{"gitId":"TypeDefinition"},"content":"* Dealing with missing/corrupted data files","lastModifiedDate":"2022-04-09"},{"lineNumber":1280,"author":{"gitId":"KeithCZW"},"content":"   1. Test case: Delete the `CinnamonBun.save` file in the data folder which should be in the same folder as the jar file.","lastModifiedDate":"2022-04-09"},{"lineNumber":1281,"author":{"gitId":"KeithCZW"},"content":"    This will simulate a missing save file.\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1282,"author":{"gitId":"KeithCZW"},"content":"    Expected: A data set with some default users will be used and a new save file will be created after running any command.","lastModifiedDate":"2022-04-09"},{"lineNumber":1283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1284,"author":{"gitId":"TypeDefinition"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-04-10"},{"lineNumber":1285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1286,"author":{"gitId":"TypeDefinition"},"content":"## **Appendix: Effort**","lastModifiedDate":"2022-04-10"},{"lineNumber":1287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1288,"author":{"gitId":"TypeDefinition"},"content":"This appendix will highlight the difficulty level, challenges faced, effort required, and achievements of CinnamonBun.","lastModifiedDate":"2022-04-10"},{"lineNumber":1289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1290,"author":{"gitId":"TypeDefinition"},"content":"### Time constraint and high workload","lastModifiedDate":"2022-04-10"},{"lineNumber":1291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1292,"author":{"gitId":"TypeDefinition"},"content":"This semester, all of our team members had high workload from multiple modules. The amount of effort that TP required was very taxing on all members of the team.","lastModifiedDate":"2022-04-10"},{"lineNumber":1293,"author":{"gitId":"TypeDefinition"},"content":"We felt that the requirements of TP was too much (application, UG, DG, weekly quizzes).","lastModifiedDate":"2022-04-10"},{"lineNumber":1294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1295,"author":{"gitId":"TypeDefinition"},"content":"Despite that, the team still managed to deliver a high quality product at the end.","lastModifiedDate":"2022-04-10"},{"lineNumber":1296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1297,"author":{"gitId":"TypeDefinition"},"content":"### Person, Field and Tag","lastModifiedDate":"2022-04-10"},{"lineNumber":1298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1299,"author":{"gitId":"TypeDefinition"},"content":"The `Person` and `Tag` classes were modified from AB-3, while `Field` is an abstract class representing existing classes such as `Name`, `Email` etc. as well as new classes such as `Birthday`, `Remark` etc.","lastModifiedDate":"2022-04-10"},{"lineNumber":1300,"author":{"gitId":"TypeDefinition"},"content":"Originally, all of `Person`\u0027s fields were hard-coded into the `Person` class, resulting in extremely high coupling, and it was very difficult to add new fields to `Person`.","lastModifiedDate":"2022-04-10"},{"lineNumber":1301,"author":{"gitId":"TypeDefinition"},"content":"A lot of effort had to be put into fixing this issue. Due to the extremely high coupling, this changed affected multiple systems across the entire project, including the saving system, edit command, and many more.","lastModifiedDate":"2022-04-10"},{"lineNumber":1302,"author":{"gitId":"TypeDefinition"},"content":"It took almost two weeks to rewrite multiple systems while ensuring compatibility with other existing systems and test cases.","lastModifiedDate":"2022-04-10"},{"lineNumber":1303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":1304,"author":{"gitId":"TypeDefinition"},"content":"Fortunately, these changes allowed some features we added later on to be done much more easily compared to when the project first started.","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"DaneMarc":46,"TypeDefinition":492,"LapisRaider":105,"zunedz":300,"-":273,"KeithCZW":88}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"title: CinnamonBun User Guide","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"CinnamonBun is a **desktop app for managing client information, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"## CinnamonBun - As good as it sounds.","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"Are you a small business owner or freelancer? Want an easy way to store your client\u0027s information, but there\u0027s no free and easy solution available?","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"No worries, CinnamonBun has got you covered! CinnamonBun enables you to keep track of your clients and their transaction records.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"As a Command-line Interface (CLI) app, you\u0027ll never have to move your hands away from the keyboard to get all your tasks done.","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"If you can type fast, the CLI will allow you to execute your tasks quickly. While this may be daunting for a new user, it only takes a short time to get accustomed to CinnamonBun.","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"This guide aims to be the one-stop shop to get you up and running.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"## Quick Start","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"2. Download the latest `CinnamonBun.jar` from [here](https://github.com/AY2122S2-CS2103T-W09-2/tp/releases).","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for CinnamonBun.","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"5. Alternatively, you can run the application via the terminal using `java -jar ./CinnamonBun.jar` from `CinnamonBun.jar`\u0027s home folder.","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"6. If are unable to run it due to lack of permissions, run `chmod +x ./CinnamonBun` in the terminal from `CinnamonBun.jar`\u0027s home folder.","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"7. Type the command in the command box and press `Enter` to execute it. For example, typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"   * `list`: Lists all clients.","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`: Adds a client named `John Doe` to CinnamonBun.","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"   * `delete 3`: Deletes the 3rd client shown in the current list.","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"   * `clear`: Deletes all client records.","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"   * `undo`: Undo the last executed command.","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"   * `exit`: Exits the app.  ","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"8. Refer to the [commands](#commands) below for details of each command.","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"## Graphical User Interface (GUI) Overview","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"![GuiOverview](images/GuiOverview.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"## Commands","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"### Command Syntax","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"Commands in CinnamonBun can be broken down into several components.","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"`COMMAND_WORD PREAMBLE PREFIX/ARGUMENT...`","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"| Component      | Description                                                                                                                          |","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"|----------------|--------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":" | `COMMAND_WORD` | Trigger for the command to be executed.                                                                                              |","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":" | `PREAMBLE`     | Text before the first valid parameter prefix in the command. Certain commands may require a preamble.                                | ","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"| `PREFIX`       | Commands may have one or more arguments. The prefix specifies which arguments to map to the parameters. All prefixes end with a `/`. |","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":" | `ARGUMENT`     | The argument to pass to the command.                                                                                                 |","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-primary\"\u003e:bangbang: **Attention**","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"TypeDefinition"},"content":"* Commands and their arguments are case-sensitive","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"DaneMarc"},"content":"* If a parameter is expected only once in the command but is specified multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"* Any invalid parameters for commands will be regarded as part of the value of the preceding parameter. For example:","lastModifiedDate":"2022-04-06"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"  * In `addTransaction 1 a/123 td/2020-11-11 n/this is a note --not paid`, `--not paid` will be regarded ","lastModifiedDate":"2022-04-06"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"  as part of the note `n/this is a note --not paid` since `--not paid` is not a valid attribute. ","lastModifiedDate":"2022-04-06"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"  * In `add n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/vendor c/not a prefix t/owesMoney`, ","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"  `c/not a prefix` will be regarded as part of the preceding tag `t/vendor c/not a prefix` since `c/not a prefix` is ","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"  not a valid attribute/prefix.","lastModifiedDate":"2022-04-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"TypeDefinition"},"content":"### User Guide Syntax","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"TypeDefinition"},"content":"* Words in `UPPER_CASE` are the arguments to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"TypeDefinition"},"content":"  e.g. in `add n/NAME`, `NAME` is an argument which can be used as `add n/John Doe`.","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"TypeDefinition"},"content":"* Items with `…`​ after them can be used zero or more times.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"TypeDefinition"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family t/colleague` etc.","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"TypeDefinition"},"content":"### Fields and Tags","lastModifiedDate":"2022-04-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"TypeDefinition"},"content":"A client can have many fields and tags, including both optional and compulsory ones.","lastModifiedDate":"2022-04-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-primary\"\u003e:bangbang: **Attention**","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"TypeDefinition"},"content":"* Multiple clients can have the same data (e.g. same name, phone number, address, etc.), **except** emails. Emails must be unique to the client. ","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"TypeDefinition"},"content":"| Field    | Prefix   | Constraints                                                                                                                                | Compulsory         | Example                                 |","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"TypeDefinition"},"content":"|----------|----------|--------------------------------------------------------------------------------------------------------------------------------------------|--------------------|-----------------------------------------|","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"TypeDefinition"},"content":"| Name     | `n/`     | Alphanumeric and spaces only.                                                                                                              | :heavy_check_mark: | `n/Regina Lee`                          |","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"TypeDefinition"},"content":"| Email    | `e/`     | Must be in *username@domain.suffix* format and unique to each client.\u003cbr/\u003e\u003cbr/\u003e Alphanumeric and special characters, *+_.-* only.          | :heavy_check_mark: | `e/lovelee@mailinator.com`              |","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"TypeDefinition"},"content":"| Phone    | `p/`     | Minimum 3 numeric characters.                                                                                                              | :heavy_check_mark: | `p/81312224`                            |","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"TypeDefinition"},"content":"| Address  | `a/`     | No constraints.                                                                                                                            | :heavy_check_mark: | `a/123 Sesame Street`                   |","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"TypeDefinition"},"content":"| Birthday | `b/`     | Must be in *YYYY-MM-DD* format and a valid date.                                                                                           |                    | `b/2022-03-12`                          |","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"TypeDefinition"},"content":"| Remark   | `r/`     | No constraints.                                                                                                                            |                    | `r/Foreman of Project Zero Dawn.`       |       ","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"TypeDefinition"},"content":"| Tags     | `t/`     | Alphanumeric only.\u003cbr/\u003e\u003cbr/\u003e No spaces allowed.\u003cbr/\u003e\u003cbr/\u003e Multiple tags are allowed per client.                                            |                    | `t/Frequentclient t/AppointmentOverdue` | ","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"zunedz"},"content":"A transaction also have compulsory and optional fields.","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"zunedz"},"content":"| Field            | Prefix    | Constraints                                                                                                     | Compulsory         | Example                |","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"zunedz"},"content":"|------------------|-----------|-----------------------------------------------------------------------------------------------------------------|--------------------|------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":127,"author":{"gitId":"zunedz"},"content":"| Index            | NO PREFIX | Must be an Integer greater than 0.                                                                              | :heavy_check_mark: | `1`                    |","lastModifiedDate":"2022-04-06"},{"lineNumber":128,"author":{"gitId":"zunedz"},"content":"| Amount           | `a/`      | Must be a number between 0 and 9999999.99 inclusive. The number will be rounded to 2 decimal places.            | :heavy_check_mark: | `a/12.45`              |","lastModifiedDate":"2022-04-01"},{"lineNumber":129,"author":{"gitId":"zunedz"},"content":"| Transaction Date | `td/`     | Must be in *YYY-MM-DD* format and a valid date.                                                                 | :heavy_check_mark: | `td/2020-11-11`        |","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"zunedz"},"content":"| Due Date         | `dd/`     | Must be in *YYY-MM-DD* format and a valid date and not before the transaction date.                             |                    | `dd/2020-11-11`        |","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"zunedz"},"content":"| Note             | `n/`      | No constraints.                                                                                                 |                    | `n/2 Box of ice cream` |","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"zunedz"},"content":"| Status           | NO PREFIX | Use `--paid` flag to set the transaction status to `paid`. Otherwise, the status is set to `unpaid` by default. |                    | `--paid`               |       ","lastModifiedDate":"2022-04-06"},{"lineNumber":133,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"TypeDefinition"},"content":"### Command Summary","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"TypeDefinition"},"content":"| Action                                                        | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"zunedz"},"content":"|---------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"TypeDefinition"},"content":"| [Help](#getting-help-help)                                    | `help`                                                                                                                                                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"TypeDefinition"},"content":"| [Add](#add-client-add)                                        | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"TypeDefinition"},"content":"| [Edit](#edit-client-edit)                                     | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [r/remark] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"TypeDefinition"},"content":"| [Remark](#append-remark-to-client-remark)                     | `remark INDEX r/REMARK`\u003cbr\u003e e.g., `remark 5 r/Needs marble flooring delivered by next Tuesday.`                                                                       |","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"TypeDefinition"},"content":"| [Append](#append-fields-to-client-append)                     | `append INDEX r/REMARK b/BIRTHDAY e/wolololol@aoe.net t/senior`                                                                                                       |","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"TypeDefinition"},"content":"| [Remove](#remove-fields-from-client-remove)                   | `remove INDEX r/ b/`                                                                                                                                                  |","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"TypeDefinition"},"content":"| [Delete](#delete-client-delete)                               | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                   |","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"TypeDefinition"},"content":"| [Clear](#delete-all-entries-clear)                            | `clear`                                                                                                                                                               |","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"TypeDefinition"},"content":"| [List](#list-all-clients-list)                                | `list`                                                                                                                                                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"TypeDefinition"},"content":"| [Sort](#sort-client-list-sort)                                | `sort [n/] [desc] [p/] [desc] [e/] [desc] [a/] [desc] [r/] [desc] [b/] [desc]` \u003cbr\u003e e.g., `sort n/ desc p/`, `sort b/ a/`                                             |","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"TypeDefinition"},"content":"| [Find](#find-client-by-keyword-find)                          | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                            | ","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"KeithCZW"},"content":"| [Clear Filtered](#clear-filtered-clients-clearfiltered)       | `clearFiltered`                                                                                                                                                       |","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"TypeDefinition"},"content":"| [Undo](#undo-last-modification-undo)                          | `undo`                                                                                                                                                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"zunedz"},"content":"| [Add Transaction](#add-transaction-addtransaction)            | `addTransaction INDEX a/AMOUNT td/TRANSACTION_DATE [dd/DUE_DATE] [n/NOTE] [--paid]`                                                                                   |","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"zunedz"},"content":"| [List Transaction](#list-all-transactions-listtransaction)    | `listTransaction`                                                                                                                                                     |","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"zunedz"},"content":"| [Find Transaction](#find-clients-transaction-findtransaction) | `findTransaction INDEX`                                                                                                                                               |","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"zunedz"},"content":"| [Delete Transaction](#delete-transaction-deletetransaction)   | `deleteTransaction INDEX_TRANSACTION`                                                                                                                                 |","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"zunedz"},"content":"| [Pay Transaction](#pay-transaction-pay)                       | `pay INDEX_TRANSACTION`                                                                                                                                               | ","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"zunedz"},"content":"| [Unpay Transaction](#unpay-transaction-unpay)                 | `unpay INDEX_TRANSACTION`                                                                                                                                             |","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"KeithCZW"},"content":"| [Add Membership](#add-membership-addmembership)               | `addMembership INDEX m/TIER [d/DATE]`                                                                                                                                 |","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"KeithCZW"},"content":"| [Remove Membership](#remove-membership-removemembership)      | `removeMembership INDEX`                                                                                                                                              |","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"KeithCZW"},"content":"| [List Members](#list-members-listmembers)                     | `listMembers [TIER]`                                                                                                                                                  |","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"TypeDefinition"},"content":" | [Exit](#exit-program-exit)                                    | `exit`                                                                                                                                                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"TypeDefinition"},"content":"### Getting Help (`help`)","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"TypeDefinition"},"content":"Opens a window that includes a link to this user guide.","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"TypeDefinition"},"content":"![Help Message](images/helpMessage.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"TypeDefinition"},"content":"### Add Client (`add`)","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"TypeDefinition"},"content":"Adds a client to CinnamonBun.","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"TypeDefinition"},"content":"* `add n/Andy Lau p/98765432 e/andy_lau@example.com a/Pasir Ris Grove, Block 73, #02-38, Singapore 518206`","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"TypeDefinition"},"content":"### Edit Client (`edit`)","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"TypeDefinition"},"content":"Edits an existing client in CinnamonBun.","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"TypeDefinition"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/REMARK] [b/BIRTHDAY] [t/TAG]…​`","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"TypeDefinition"},"content":"* Edits the client at the specified `INDEX`.","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"TypeDefinition"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"TypeDefinition"},"content":"* The index **must be between 1 and 2147483647 inclusive**. e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"TypeDefinition"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"TypeDefinition"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"TypeDefinition"},"content":"    * Note: Editing email value to an existing email in the addressBook is not allowed.","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"TypeDefinition"},"content":"* When editing tags, the existing tags of the client will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"TypeDefinition"},"content":"* You can remove all the client’s tags by typing `t/` without specifying any other tags.","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"TypeDefinition"},"content":"* You can also remove a client\u0027s remarks by typing `r/` without anything else.","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"TypeDefinition"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"TypeDefinition"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"TypeDefinition"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st client to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"TypeDefinition"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd client to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"zunedz"},"content":"### Append Remark to Client (`remark`)","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"TypeDefinition"},"content":"Appends a remark to an existing client.","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"TypeDefinition"},"content":"Format: `remark INDEX r/REMARK`","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"TypeDefinition"},"content":"* Edits the client at the specified `INDEX`.","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"TypeDefinition"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"TypeDefinition"},"content":"* The index **must be between 1 and 2147483647 inclusive**. e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":215,"author":{"gitId":"TypeDefinition"},"content":"* You can also remove a client\u0027s remarks by typing `r/` without anything else.","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"TypeDefinition"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"TypeDefinition"},"content":"### Append Fields to Client (`append`)","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"TypeDefinition"},"content":"Append fields to an existing client.","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"TypeDefinition"},"content":"Format: `append INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/REMARK] [b/BIRTHDAY] [t/TAG]…​`","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"TypeDefinition"},"content":"* Edits the client at the specified `INDEX`.","lastModifiedDate":"2022-03-31"},{"lineNumber":228,"author":{"gitId":"TypeDefinition"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"TypeDefinition"},"content":"* The index **must be between 1 and 2147483647 inclusive**. e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"DaneMarc"},"content":"* Fields and tags that did not previously exist in the client will be added. Fields and tags that already existed will be replaced.","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"TypeDefinition"},"content":"* Unlike `edit`, typing `t/` without anything else is invalid.","lastModifiedDate":"2022-04-07"},{"lineNumber":232,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":233,"author":{"gitId":"TypeDefinition"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":234,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"TypeDefinition"},"content":"### Remove Fields from Client (`remove`)","lastModifiedDate":"2022-03-27"},{"lineNumber":236,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":237,"author":{"gitId":"TypeDefinition"},"content":"Remove optional fields from an existing client.","lastModifiedDate":"2022-03-30"},{"lineNumber":238,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":239,"author":{"gitId":"TypeDefinition"},"content":"Format: `remove INDEX [r/] [b/] [t/TAG]…​`","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"TypeDefinition"},"content":"* **Compulsory fields cannot be removed.**","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"TypeDefinition"},"content":"* Edits the client at the specified `INDEX`.","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"TypeDefinition"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"TypeDefinition"},"content":"* The index **must be between 1 and 2147483647 inclusive**. e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"TypeDefinition"},"content":"* Unlike `edit`, typing `t/` without anything else is invalid.","lastModifiedDate":"2022-04-07"},{"lineNumber":248,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":249,"author":{"gitId":"TypeDefinition"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":250,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":251,"author":{"gitId":"TypeDefinition"},"content":"### Delete Client (`delete`)","lastModifiedDate":"2022-03-27"},{"lineNumber":252,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":253,"author":{"gitId":"TypeDefinition"},"content":"Deletes a client in CinnamonBun.","lastModifiedDate":"2022-03-27"},{"lineNumber":254,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":255,"author":{"gitId":"TypeDefinition"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-03-27"},{"lineNumber":256,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":257,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":258,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":259,"author":{"gitId":"TypeDefinition"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2022-03-27"},{"lineNumber":260,"author":{"gitId":"TypeDefinition"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"TypeDefinition"},"content":"* The index **must be between 1 and 2147483647 inclusive**. e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":262,"author":{"gitId":"TypeDefinition"},"content":"* When the client is deleted, all of its transactions are also deleted.","lastModifiedDate":"2022-03-31"},{"lineNumber":263,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"TypeDefinition"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":265,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":266,"author":{"gitId":"TypeDefinition"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":267,"author":{"gitId":"TypeDefinition"},"content":"* `list` followed by `delete 2` deletes the 2nd client in the client list.","lastModifiedDate":"2022-04-09"},{"lineNumber":268,"author":{"gitId":"TypeDefinition"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command.","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":270,"author":{"gitId":"TypeDefinition"},"content":"### Delete All Data (`clear`)","lastModifiedDate":"2022-03-31"},{"lineNumber":271,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"TypeDefinition"},"content":"Clears all data from CinnamonBun.","lastModifiedDate":"2022-03-31"},{"lineNumber":273,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":274,"author":{"gitId":"TypeDefinition"},"content":"Format: `clear`","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":276,"author":{"gitId":"TypeDefinition"},"content":"### List All Clients (`list`)","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":278,"author":{"gitId":"TypeDefinition"},"content":"Shows a list of all clients in CinnamonBun.","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":282,"author":{"gitId":"TypeDefinition"},"content":"### Sort Client List (`sort`)","lastModifiedDate":"2022-03-27"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"LapisRaider"},"content":"Sorts the client list based on the order of the fields specified.","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":286,"author":{"gitId":"TypeDefinition"},"content":"Format: `sort [n/] [desc] [p/] [desc] [e/] [desc] [a/] [desc] [r/] [desc] [b/] [desc]`  ","lastModifiedDate":"2022-03-27"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":288,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":289,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":290,"author":{"gitId":"TypeDefinition"},"content":"* Fields that can be sorted:","lastModifiedDate":"2022-03-27"},{"lineNumber":291,"author":{"gitId":"TypeDefinition"},"content":"  * Name `n/`","lastModifiedDate":"2022-03-27"},{"lineNumber":292,"author":{"gitId":"TypeDefinition"},"content":"  * Phone number `p/`","lastModifiedDate":"2022-03-27"},{"lineNumber":293,"author":{"gitId":"TypeDefinition"},"content":"  * Email `e/`","lastModifiedDate":"2022-03-27"},{"lineNumber":294,"author":{"gitId":"TypeDefinition"},"content":"  * Address `a/`","lastModifiedDate":"2022-03-27"},{"lineNumber":295,"author":{"gitId":"TypeDefinition"},"content":"  * Birthday `b/`","lastModifiedDate":"2022-03-27"},{"lineNumber":296,"author":{"gitId":"TypeDefinition"},"content":"  * Remark `r/`","lastModifiedDate":"2022-03-27"},{"lineNumber":297,"author":{"gitId":"TypeDefinition"},"content":"* At least one of the above fields must be specified.","lastModifiedDate":"2022-03-27"},{"lineNumber":298,"author":{"gitId":"DaneMarc"},"content":"* Specifying `desc` after a field will sort it in descending order. By default, fields are sorted in ascending order.","lastModifiedDate":"2022-03-27"},{"lineNumber":299,"author":{"gitId":"TypeDefinition"},"content":"* The fields are to be specified in their prefix. They can be specified in any order, however, priority will be given","lastModifiedDate":"2022-03-27"},{"lineNumber":300,"author":{"gitId":"TypeDefinition"},"content":"  based on the order specified.","lastModifiedDate":"2022-03-27"},{"lineNumber":301,"author":{"gitId":"TypeDefinition"},"content":"* Clients with null values in the fields to be sorted will have lesser priority. ","lastModifiedDate":"2022-03-27"},{"lineNumber":302,"author":{"gitId":"TypeDefinition"},"content":"  * For example `sort n/ b/`, \u0027Alice\u0027 will be at the top of the list. However, if there are multiple clients with the same name \u0027Alice\u0027,","lastModifiedDate":"2022-03-27"},{"lineNumber":303,"author":{"gitId":"TypeDefinition"},"content":"  the client whose birthday field is empty, will be sorted to the bottom of the other clients named \u0027Alice\u0027.","lastModifiedDate":"2022-03-27"},{"lineNumber":304,"author":{"gitId":"LapisRaider"},"content":"* After sorting, the application will show the full client list, regardless if it was filtered","lastModifiedDate":"2022-04-07"},{"lineNumber":305,"author":{"gitId":"LapisRaider"},"content":"  beforehand or not. This is to prevent confusion where users filter first, then sort and realized some data is \u0027missing\u0027","lastModifiedDate":"2022-04-07"},{"lineNumber":306,"author":{"gitId":"LapisRaider"},"content":"  as they had unintentionally filtered it out.","lastModifiedDate":"2022-04-07"},{"lineNumber":307,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":308,"author":{"gitId":"TypeDefinition"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-24"},{"lineNumber":311,"author":{"gitId":"LapisRaider"},"content":"* `sort n/ desc p/`: Clients will be sorted in descending order of their name. Clients with the same name will be then sorted ","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"LapisRaider"},"content":"based on their phone numbers in ascending order.","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"LapisRaider"},"content":"* `sort b/ a/`: Clients will be sorted in ascending order of their birthday. Clients with the same birthday will then be sorted","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"LapisRaider"},"content":"based on their addresses in ascending order.","lastModifiedDate":"2022-03-24"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"TypeDefinition"},"content":"### Find Client by Keyword (`find`)","lastModifiedDate":"2022-03-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"DaneMarc"},"content":"Finds clients whose attributes contain any of the given keywords.","lastModifiedDate":"2022-03-27"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":323,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":324,"author":{"gitId":"DaneMarc"},"content":"* `find` always searches all clients and not filtered clients.","lastModifiedDate":"2022-04-09"},{"lineNumber":325,"author":{"gitId":"DaneMarc"},"content":"* The search is case-insensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":326,"author":{"gitId":"DaneMarc"},"content":"* The order of the keywords does not matter. e.g. `find Hans Bob` will work the same as `find Bob Hans`.","lastModifiedDate":"2022-03-30"},{"lineNumber":327,"author":{"gitId":"DaneMarc"},"content":"* Partial matches are allowed e.g. `find Bob` will match a client named `Bobs`.","lastModifiedDate":"2022-03-30"},{"lineNumber":328,"author":{"gitId":"DaneMarc"},"content":"* Clients with attributes or tags matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-30"},{"lineNumber":329,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":330,"author":{"gitId":"TypeDefinition"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"DaneMarc"},"content":"* `find bob` returns clients with attributes containing `bob` e.g. clients named `Sponge Bob` and `Bobs Doe`","lastModifiedDate":"2022-03-30"},{"lineNumber":334,"author":{"gitId":"DaneMarc"},"content":"* `find kent ridge` returns clients with attributes containing `kent` or `ridge`. e.g. A client named `Clark Kent` and a client who lives at `123 Ridgeview Cres`.","lastModifiedDate":"2022-03-27"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"KeithCZW"},"content":"### Clear Filtered Clients (`clearFiltered`)","lastModifiedDate":"2022-03-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":338,"author":{"gitId":"TypeDefinition"},"content":"Deletes the clients filtered after using the `find` function.","lastModifiedDate":"2022-03-27"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":340,"author":{"gitId":"KeithCZW"},"content":"Format: `clearFiltered`","lastModifiedDate":"2022-03-31"},{"lineNumber":341,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":342,"author":{"gitId":"TypeDefinition"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-28"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":344,"author":{"gitId":"KeithCZW"},"content":"* `clearFiltered` deletes all the clients shown in the filtered client list.","lastModifiedDate":"2022-03-31"},{"lineNumber":345,"author":{"gitId":"TypeDefinition"},"content":"* Use [`find`](#find-client-by-keyword-find) to filter the clients to delete.","lastModifiedDate":"2022-03-28"},{"lineNumber":346,"author":{"gitId":"KeithCZW"},"content":"* Alternatively, use [`listMembers`](#list-members-listmembers) to filter clients by membership to delete.","lastModifiedDate":"2022-04-10"},{"lineNumber":347,"author":{"gitId":"TypeDefinition"},"content":"* Otherwise, if the client list is not filtered, it acts like [`clear`](#delete-all-entries-clear).","lastModifiedDate":"2022-03-28"},{"lineNumber":348,"author":{"gitId":"TypeDefinition"},"content":"* When the client is deleted, all of its transactions are also deleted.","lastModifiedDate":"2022-03-31"},{"lineNumber":349,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":350,"author":{"gitId":"TypeDefinition"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":352,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-03"},{"lineNumber":353,"author":{"gitId":"KeithCZW"},"content":"* `find Bob` followed by `clearFiltered` deletes all people named Bob. Alternatively, `find Bob | clearFiltered` does the same thing.","lastModifiedDate":"2022-03-31"},{"lineNumber":354,"author":{"gitId":"KeithCZW"},"content":"* `listMembers` followed by `clearFiltered` deletes all people with a membership.","lastModifiedDate":"2022-04-10"},{"lineNumber":355,"author":{"gitId":"KeithCZW"},"content":"* `listMembers gold` followed by `clearFiltered` deletes all people with a gold membership.","lastModifiedDate":"2022-04-10"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":357,"author":{"gitId":"zunedz"},"content":"### Add Transaction (`addTransaction`)","lastModifiedDate":"2022-03-27"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":359,"author":{"gitId":"zunedz"},"content":"Add a transaction associated with a client.","lastModifiedDate":"2022-03-27"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":361,"author":{"gitId":"zunedz"},"content":"Format: `addTransaction INDEX a/AMOUNT td/TRANSACTION_DATE [dd/DUE_DATE] [n/NOTE] [--paid]`","lastModifiedDate":"2022-03-30"},{"lineNumber":362,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":363,"author":{"gitId":"zunedz"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":365,"author":{"gitId":"zunedz"},"content":"* Add a transaction to the client at the specified `INDEX`.","lastModifiedDate":"2022-03-27"},{"lineNumber":366,"author":{"gitId":"zunedz"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-03-27"},{"lineNumber":367,"author":{"gitId":"TypeDefinition"},"content":"* The index **must be between 1 and 2147483647 inclusive**. e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":368,"author":{"gitId":"zunedz"},"content":"* The `AMOUNT` specified **must be between** 0 and 9999999.99 inclusive. The number will be rounded to two decimal places.","lastModifiedDate":"2022-04-01"},{"lineNumber":369,"author":{"gitId":"zunedz"},"content":"* The `TRANSACTION_DATE` and `DUE_DATE` specified **must be a valid date** in `YYY-MM-DD` format.","lastModifiedDate":"2022-03-27"},{"lineNumber":370,"author":{"gitId":"zunedz"},"content":"* The flag `--paid` will set the transaction status to `paid`","lastModifiedDate":"2022-03-30"},{"lineNumber":371,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":372,"author":{"gitId":"zunedz"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":373,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":374,"author":{"gitId":"zunedz"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":375,"author":{"gitId":"zunedz"},"content":"* `addTransaction 1 a/123.456 td/2020-11-11`","lastModifiedDate":"2022-03-27"},{"lineNumber":376,"author":{"gitId":"zunedz"},"content":"* `addTransaction 1 a/123.456 td/2020-11-11 dd/2020-12-11 n/Unpaid order CONTACT ASAP --paid`","lastModifiedDate":"2022-03-30"},{"lineNumber":377,"author":{"gitId":"zunedz"},"content":"* `find Bob | addTransaction 1 a/123.456 td/2020-11-11` will add the transaction to the first client that contains Bob ","lastModifiedDate":"2022-03-30"},{"lineNumber":378,"author":{"gitId":"zunedz"},"content":" in its\u0027 attributes","lastModifiedDate":"2022-03-27"},{"lineNumber":379,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":380,"author":{"gitId":"zunedz"},"content":"### List All Transactions (`listTransaction`)","lastModifiedDate":"2022-03-27"},{"lineNumber":381,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":382,"author":{"gitId":"zunedz"},"content":"List all the clients\u0027 Transactions.","lastModifiedDate":"2022-03-27"},{"lineNumber":383,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":384,"author":{"gitId":"zunedz"},"content":"Format: `listTransaction`","lastModifiedDate":"2022-03-27"},{"lineNumber":385,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":386,"author":{"gitId":"zunedz"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":387,"author":{"gitId":"zunedz"},"content":"* `listTransaction`","lastModifiedDate":"2022-03-27"},{"lineNumber":388,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":389,"author":{"gitId":"zunedz"},"content":"### Find Client\u0027s Transaction (`findTransaction`)","lastModifiedDate":"2022-03-27"},{"lineNumber":390,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":391,"author":{"gitId":"zunedz"},"content":"List all the transactions associated with a client.","lastModifiedDate":"2022-03-27"},{"lineNumber":392,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":393,"author":{"gitId":"zunedz"},"content":"Format: `findTransaction INDEX`","lastModifiedDate":"2022-03-27"},{"lineNumber":394,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":395,"author":{"gitId":"zunedz"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":396,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":397,"author":{"gitId":"zunedz"},"content":"* List all transactions of the client at the specified `INDEX`.","lastModifiedDate":"2022-03-27"},{"lineNumber":398,"author":{"gitId":"zunedz"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-03-27"},{"lineNumber":399,"author":{"gitId":"TypeDefinition"},"content":"* The index **must be between 1 and 2147483647 inclusive**. e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":400,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":401,"author":{"gitId":"zunedz"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":402,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":403,"author":{"gitId":"zunedz"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":404,"author":{"gitId":"zunedz"},"content":"* `find Bob | findTransaction 1` will list the transactions of the first client that contains Bob","lastModifiedDate":"2022-03-30"},{"lineNumber":405,"author":{"gitId":"zunedz"},"content":"  in its\u0027 attributes.","lastModifiedDate":"2022-03-27"},{"lineNumber":406,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":407,"author":{"gitId":"zunedz"},"content":"### Delete Transaction (`deleteTransaction`)","lastModifiedDate":"2022-03-27"},{"lineNumber":408,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":409,"author":{"gitId":"zunedz"},"content":"Delete a transaction.","lastModifiedDate":"2022-03-27"},{"lineNumber":410,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":411,"author":{"gitId":"zunedz"},"content":"Format: `deleteTransaction INDEX_TRANSACTION`","lastModifiedDate":"2022-03-27"},{"lineNumber":412,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":413,"author":{"gitId":"zunedz"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":414,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":415,"author":{"gitId":"zunedz"},"content":"* Delete the transaction at the specified `INDEX_TRANSACTION`.","lastModifiedDate":"2022-03-27"},{"lineNumber":416,"author":{"gitId":"zunedz"},"content":"* The index refers to the index number shown in the displayed **transaction list NOT the client list**.","lastModifiedDate":"2022-03-30"},{"lineNumber":417,"author":{"gitId":"TypeDefinition"},"content":"* The index **must be between 1 and 2147483647 inclusive**. e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":418,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":419,"author":{"gitId":"zunedz"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":420,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":421,"author":{"gitId":"zunedz"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":422,"author":{"gitId":"zunedz"},"content":"* `deleteTransaction 2`","lastModifiedDate":"2022-03-27"},{"lineNumber":423,"author":{"gitId":"zunedz"},"content":"* `findTransaction 1 | deleteTransaction 1` will delete the first transaction of the first client.","lastModifiedDate":"2022-03-30"},{"lineNumber":424,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":425,"author":{"gitId":"zunedz"},"content":"### Pay Transaction (`pay`)","lastModifiedDate":"2022-03-30"},{"lineNumber":426,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":427,"author":{"gitId":"zunedz"},"content":"Set the status of a transaction to `paid`.","lastModifiedDate":"2022-03-30"},{"lineNumber":428,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":429,"author":{"gitId":"zunedz"},"content":"Format: `pay INDEX_TRANSACTION`","lastModifiedDate":"2022-03-30"},{"lineNumber":430,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":431,"author":{"gitId":"zunedz"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-30"},{"lineNumber":432,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":433,"author":{"gitId":"zunedz"},"content":"* Set the status of the transaction at the specified `INDEX_TRANSACTION` to `paid`.","lastModifiedDate":"2022-03-30"},{"lineNumber":434,"author":{"gitId":"TypeDefinition"},"content":"* The index refers to the index number shown in the displayed **transaction list NOT the client list**.","lastModifiedDate":"2022-03-31"},{"lineNumber":435,"author":{"gitId":"TypeDefinition"},"content":"* The index **must be a positive integer** e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":436,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":437,"author":{"gitId":"zunedz"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":438,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":439,"author":{"gitId":"zunedz"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":440,"author":{"gitId":"zunedz"},"content":"* `pay 2`","lastModifiedDate":"2022-03-30"},{"lineNumber":441,"author":{"gitId":"zunedz"},"content":"* `findTransaction 1 | pay 1` will set the first transaction of the first client to `paid`","lastModifiedDate":"2022-04-06"},{"lineNumber":442,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":443,"author":{"gitId":"zunedz"},"content":"### Unpay Transaction (`unpay`)","lastModifiedDate":"2022-03-30"},{"lineNumber":444,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":445,"author":{"gitId":"zunedz"},"content":"Set the status of a transaction to `unpaid`.","lastModifiedDate":"2022-03-30"},{"lineNumber":446,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":447,"author":{"gitId":"zunedz"},"content":"Format: `unpay INDEX_TRANSACTION`","lastModifiedDate":"2022-03-30"},{"lineNumber":448,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":449,"author":{"gitId":"zunedz"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-30"},{"lineNumber":450,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":451,"author":{"gitId":"zunedz"},"content":"* Set the status of the transaction at the specified `INDEX_TRANSACTION` to `unpaid`.","lastModifiedDate":"2022-03-30"},{"lineNumber":452,"author":{"gitId":"TypeDefinition"},"content":"* The index refers to the index number shown in the displayed **transaction list NOT the client list**.","lastModifiedDate":"2022-03-31"},{"lineNumber":453,"author":{"gitId":"TypeDefinition"},"content":"* The index **must be between 1 and 2147483647 inclusive**. e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":454,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":455,"author":{"gitId":"zunedz"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":456,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":457,"author":{"gitId":"zunedz"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":458,"author":{"gitId":"zunedz"},"content":"* `unpay 2`","lastModifiedDate":"2022-03-30"},{"lineNumber":459,"author":{"gitId":"zunedz"},"content":"* `findTransaction 1 | unpay 1` will set the first transaction of the first client to `unpaid`","lastModifiedDate":"2022-04-06"},{"lineNumber":460,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":461,"author":{"gitId":"KeithCZW"},"content":"### Add Membership (`addMembership`)","lastModifiedDate":"2022-03-27"},{"lineNumber":462,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":463,"author":{"gitId":"KeithCZW"},"content":"Adds a membership to a specified user.","lastModifiedDate":"2022-03-27"},{"lineNumber":464,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":465,"author":{"gitId":"KeithCZW"},"content":"Format: `addMembership INDEX m/TIER [d/Date]`","lastModifiedDate":"2022-03-31"},{"lineNumber":466,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":467,"author":{"gitId":"KeithCZW"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":468,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":469,"author":{"gitId":"KeithCZW"},"content":"* Adds a membership to the specified `INDEX`.","lastModifiedDate":"2022-03-27"},{"lineNumber":470,"author":{"gitId":"KeithCZW"},"content":"* If the user already has an existing membership, the membership is overwritten.","lastModifiedDate":"2022-04-07"},{"lineNumber":471,"author":{"gitId":"KeithCZW"},"content":"* The index refers to the user at the index number displayed.","lastModifiedDate":"2022-03-27"},{"lineNumber":472,"author":{"gitId":"TypeDefinition"},"content":"* The index **must be between 1 and 2147483647 inclusive**. e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":473,"author":{"gitId":"KeithCZW"},"content":"* The tier can be either Bronze,Silver or Gold. This is not case-sensitive.","lastModifiedDate":"2022-03-31"},{"lineNumber":474,"author":{"gitId":"KeithCZW"},"content":"* The date has to be in the format \u0027YYYY-MM-DD\u0027","lastModifiedDate":"2022-03-27"},{"lineNumber":475,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":476,"author":{"gitId":"KeithCZW"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":477,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":478,"author":{"gitId":"KeithCZW"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":479,"author":{"gitId":"KeithCZW"},"content":"* `addMembership 1 m/Gold d/2022-02-02`","lastModifiedDate":"2022-03-31"},{"lineNumber":480,"author":{"gitId":"KeithCZW"},"content":"* `find Bob | addMembership 1 m/Silver` will add the silver membership to the first client that has Bob","lastModifiedDate":"2022-03-31"},{"lineNumber":481,"author":{"gitId":"KeithCZW"},"content":"  in its\u0027 attributes.","lastModifiedDate":"2022-03-27"},{"lineNumber":482,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":483,"author":{"gitId":"KeithCZW"},"content":"### Remove Membership (`removeMembership`)","lastModifiedDate":"2022-03-31"},{"lineNumber":484,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":485,"author":{"gitId":"KeithCZW"},"content":"Removes a membership from the specified user.","lastModifiedDate":"2022-03-31"},{"lineNumber":486,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":487,"author":{"gitId":"KeithCZW"},"content":"Format: `removeMembership INDEX`","lastModifiedDate":"2022-03-31"},{"lineNumber":488,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":489,"author":{"gitId":"KeithCZW"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-31"},{"lineNumber":490,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":491,"author":{"gitId":"KeithCZW"},"content":"* Removes a membership from the specified `INDEX`.","lastModifiedDate":"2022-03-31"},{"lineNumber":492,"author":{"gitId":"KeithCZW"},"content":"* The index refers to the user at the index number displayed.","lastModifiedDate":"2022-03-31"},{"lineNumber":493,"author":{"gitId":"KeithCZW"},"content":"* The index **must be between 1 and 2147483647 inclusive**. e.g. 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":494,"author":{"gitId":"KeithCZW"},"content":"* If the user has no membership, it simply does nothing.","lastModifiedDate":"2022-03-31"},{"lineNumber":495,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":496,"author":{"gitId":"KeithCZW"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":497,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":498,"author":{"gitId":"KeithCZW"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":499,"author":{"gitId":"KeithCZW"},"content":"* `removeMembership 1`","lastModifiedDate":"2022-03-31"},{"lineNumber":500,"author":{"gitId":"KeithCZW"},"content":"* `find Bob | removeMembership` remove the membership from the first client that has Bob","lastModifiedDate":"2022-03-31"},{"lineNumber":501,"author":{"gitId":"KeithCZW"},"content":"  in its\u0027 attributes.","lastModifiedDate":"2022-03-31"},{"lineNumber":502,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":503,"author":{"gitId":"KeithCZW"},"content":"### List Members (`listMembers`)","lastModifiedDate":"2022-03-31"},{"lineNumber":504,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":505,"author":{"gitId":"KeithCZW"},"content":"List all members belonging to the specified tier.","lastModifiedDate":"2022-03-31"},{"lineNumber":506,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":507,"author":{"gitId":"KeithCZW"},"content":"Format: `listMembers [TIER]`","lastModifiedDate":"2022-03-31"},{"lineNumber":508,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":509,"author":{"gitId":"KeithCZW"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-31"},{"lineNumber":510,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":511,"author":{"gitId":"KeithCZW"},"content":"* Lists all members belonging to the specified TIER.","lastModifiedDate":"2022-03-31"},{"lineNumber":512,"author":{"gitId":"KeithCZW"},"content":"* The tier is optional. If no tier is specified, it simply lists all members.","lastModifiedDate":"2022-03-31"},{"lineNumber":513,"author":{"gitId":"KeithCZW"},"content":"* The tier can be either Bronze,Silver or Gold. This is not case-sensitive.","lastModifiedDate":"2022-03-31"},{"lineNumber":514,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":515,"author":{"gitId":"KeithCZW"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":516,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":517,"author":{"gitId":"KeithCZW"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":518,"author":{"gitId":"KeithCZW"},"content":"* `listMembers gold` list all users with gold membership.","lastModifiedDate":"2022-03-31"},{"lineNumber":519,"author":{"gitId":"KeithCZW"},"content":"* `addMembership 2 m/silver | listMembers` will add the silver membership to the second client displayed and then","lastModifiedDate":"2022-03-31"},{"lineNumber":520,"author":{"gitId":"KeithCZW"},"content":"list all existing members.","lastModifiedDate":"2022-03-31"},{"lineNumber":521,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":522,"author":{"gitId":"LapisRaider"},"content":"### Undo Last Modification (`undo`)","lastModifiedDate":"2022-03-27"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"LapisRaider"},"content":"Undo last modification made to the clients list.","lastModifiedDate":"2022-03-27"},{"lineNumber":525,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":526,"author":{"gitId":"LapisRaider"},"content":"Format: `undo`","lastModifiedDate":"2022-03-27"},{"lineNumber":527,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":528,"author":{"gitId":"LapisRaider"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-27"},{"lineNumber":529,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":530,"author":{"gitId":"LapisRaider"},"content":"* Saves your latest 10 modifications to the clients or the clients list.","lastModifiedDate":"2022-03-27"},{"lineNumber":531,"author":{"gitId":"TypeDefinition"},"content":"* If the previous command have multiple modifications through [command chains](#command-chains), it is counted as one modification.","lastModifiedDate":"2022-03-27"},{"lineNumber":532,"author":{"gitId":"LapisRaider"},"content":"* Calling undo will show the entire list, regardless of whether you filtered the list previously. (Filtering through the [Find command](#find-client-by-keyword-find) is not considered a modification)","lastModifiedDate":"2022-03-27"},{"lineNumber":533,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":534,"author":{"gitId":"LapisRaider"},"content":"Types of modification that will be undone:","lastModifiedDate":"2022-03-27"},{"lineNumber":535,"author":{"gitId":"LapisRaider"},"content":"* [Adding a new client](#add-client-add)","lastModifiedDate":"2022-03-27"},{"lineNumber":536,"author":{"gitId":"LapisRaider"},"content":"* [Deleting a client](#delete-client-delete)","lastModifiedDate":"2022-03-27"},{"lineNumber":537,"author":{"gitId":"LapisRaider"},"content":"* [Deleting filtered list](#delete-filtered-clients-deletefiltered)","lastModifiedDate":"2022-03-27"},{"lineNumber":538,"author":{"gitId":"LapisRaider"},"content":"* [Sorting clients](#sort-client-list-sort)","lastModifiedDate":"2022-03-27"},{"lineNumber":539,"author":{"gitId":"LapisRaider"},"content":"* [Clearing list of clients](#delete-all-entries-clear)","lastModifiedDate":"2022-03-27"},{"lineNumber":540,"author":{"gitId":"LapisRaider"},"content":"* Editing client information","lastModifiedDate":"2022-03-27"},{"lineNumber":541,"author":{"gitId":"LapisRaider"},"content":"  * [Adding remark](#append-remark-to-client-remark)","lastModifiedDate":"2022-03-27"},{"lineNumber":542,"author":{"gitId":"LapisRaider"},"content":"  * [Appending extra information](#append-fields-to-client-append)","lastModifiedDate":"2022-03-27"},{"lineNumber":543,"author":{"gitId":"LapisRaider"},"content":"  * [Adding transactions](#add-transaction-addtransaction)","lastModifiedDate":"2022-03-27"},{"lineNumber":544,"author":{"gitId":"LapisRaider"},"content":"  * [Deleting transactions](#delete-transaction-deletetransaction)","lastModifiedDate":"2022-03-27"},{"lineNumber":545,"author":{"gitId":"LapisRaider"},"content":"  * [Editing or removing any field value of ](#edit-client-edit)","lastModifiedDate":"2022-03-27"},{"lineNumber":546,"author":{"gitId":"LapisRaider"},"content":"  * [Adding membership](#add-membership-addmembership)","lastModifiedDate":"2022-03-27"},{"lineNumber":547,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"TypeDefinition"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":549,"author":{"gitId":"TypeDefinition"},"content":"  ","lastModifiedDate":"2022-03-27"},{"lineNumber":550,"author":{"gitId":"TypeDefinition"},"content":"### Exit Program (`exit`)","lastModifiedDate":"2022-03-27"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"TypeDefinition"},"content":"## Special Features","lastModifiedDate":"2022-03-27"},{"lineNumber":559,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":560,"author":{"gitId":"TypeDefinition"},"content":"### Command Chains","lastModifiedDate":"2022-03-27"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":562,"author":{"gitId":"TypeDefinition"},"content":"Multiple commands can be chained by separating each command with the `|` character.","lastModifiedDate":"2022-03-27"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":564,"author":{"gitId":"DaneMarc"},"content":"\u003cdiv markdown\u003d\"1\" class\u003d\"alert alert-info\"\u003e:information_source: **Info**","lastModifiedDate":"2022-03-30"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":566,"author":{"gitId":"DaneMarc"},"content":"* Each command is run sequentially from first to last.","lastModifiedDate":"2022-03-30"},{"lineNumber":567,"author":{"gitId":"DaneMarc"},"content":"* Take note of indexes. E.g. `delete 7 | delete 8` may not work as expected as deleting item 7 will in turn cause item 8 to become item 7 which may result in unintended consequences. Instead, run `delete 7 | delete 7` which is what you would do anyway if you wanted to achieve the same effect by running each command individually. This is intended behaviour.","lastModifiedDate":"2022-03-30"},{"lineNumber":568,"author":{"gitId":"DaneMarc"},"content":"* If invalid commands and the special commands `help`, `exit` and `undo` are found anywhere in the command chain, the whole chain will be invalidated causing none of the commands in the chain - even valid commands - to execute.","lastModifiedDate":"2022-03-30"},{"lineNumber":569,"author":{"gitId":"DaneMarc"},"content":"* Anything bounded by the start of the command, the end of command and the `|` separators will be considered a command. E.g. `find alex | clearFiltered |` will be considered three commands, namely \"find alex\", \"clearFiltered\" and \" \". Since the third command, \" \", is empty and thus invalid, the first two will not execute.","lastModifiedDate":"2022-03-31"},{"lineNumber":570,"author":{"gitId":"DaneMarc"},"content":"* The user will only receive the command feedback of the last command. E.g. Running `delete 2 | add n/John p/81234567 e/john@email.com a/42 Doe St` will only show `Added John.` in the result box.","lastModifiedDate":"2022-03-31"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":572,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":575,"author":{"gitId":"TypeDefinition"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":576,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":577,"author":{"gitId":"DaneMarc"},"content":"* Valid command chain:","lastModifiedDate":"2022-03-30"},{"lineNumber":578,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":579,"author":{"gitId":"DaneMarc"},"content":"`add n/John p/81234567 e/john@email.com a/42 Doe St | edit 5 p/999 | delete 2`","lastModifiedDate":"2022-03-31"},{"lineNumber":580,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":581,"author":{"gitId":"DaneMarc"},"content":"* Invalid command chains:","lastModifiedDate":"2022-03-30"},{"lineNumber":582,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":583,"author":{"gitId":"DaneMarc"},"content":"`add n/John p/81234567 e/john@email.com a/42 Doe St | invalidCommand | delete 2` (add and delete commands will not execute as an invalid command was found)","lastModifiedDate":"2022-03-31"},{"lineNumber":584,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":585,"author":{"gitId":"DaneMarc"},"content":"`add n/John p/81234567 e/john@email.com a/42 Doe St | delete 2 | undo` (add and delete commands will not execute as a special command, in this case `undo`, was found)","lastModifiedDate":"2022-03-31"},{"lineNumber":586,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":587,"author":{"gitId":"DaneMarc"},"content":"`add n/John p/81234567 e/john@email.com a/42 Doe St |` (add command will not execute as the second command is empty and is thus invalid)","lastModifiedDate":"2022-03-31"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":589,"author":{"gitId":"TypeDefinition"},"content":"### Command History","lastModifiedDate":"2022-03-27"},{"lineNumber":590,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":591,"author":{"gitId":"TypeDefinition"},"content":"You can navigate through your command history by using the up and down arrow keys.","lastModifiedDate":"2022-03-27"},{"lineNumber":592,"author":{"gitId":"TypeDefinition"},"content":"The command history works similarly to the Linux bash terminal.","lastModifiedDate":"2022-03-27"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":594,"author":{"gitId":"zunedz"},"content":"### Clickable Client Card","lastModifiedDate":"2022-03-27"},{"lineNumber":595,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":596,"author":{"gitId":"TypeDefinition"},"content":"You can list all transactions of a client by left-clicking the client\u0027s card.","lastModifiedDate":"2022-03-27"},{"lineNumber":597,"author":{"gitId":"DaneMarc"},"content":"This is equivalent to typing `findTransaction INDEX` in the command box. Left-clicking a selected client card will deselect that card and list all transactions. Up to one client card can be selected at anytime.","lastModifiedDate":"2022-03-30"},{"lineNumber":598,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":599,"author":{"gitId":"TypeDefinition"},"content":"### Themes","lastModifiedDate":"2022-03-27"},{"lineNumber":600,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":601,"author":{"gitId":"TypeDefinition"},"content":"You can change between the light or dark theme by click on the menu bar and selecting `Theme \u003e Cinnamon` or `Theme \u003e Caramel`.","lastModifiedDate":"2022-03-27"},{"lineNumber":602,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":603,"author":{"gitId":"TypeDefinition"},"content":"![ChangeTheme](images/ChangeTheme.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":605,"author":{"gitId":"TypeDefinition"},"content":"### Command Correction/Completion","lastModifiedDate":"2022-03-27"},{"lineNumber":606,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":607,"author":{"gitId":"DaneMarc"},"content":"Pressing `TAB` while typing a command will change the last word of the command into the closest command word.","lastModifiedDate":"2022-03-30"},{"lineNumber":608,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":609,"author":{"gitId":"TypeDefinition"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":610,"author":{"gitId":"TypeDefinition"},"content":"* `dele` -\u003e `delete`","lastModifiedDate":"2022-03-27"},{"lineNumber":611,"author":{"gitId":"TypeDefinition"},"content":"* `sddTranssaction` -\u003e `addTransaction`","lastModifiedDate":"2022-03-27"},{"lineNumber":612,"author":{"gitId":"DaneMarc"},"content":"* `delete 7 | ed` -\u003e `delete 7 | edit`","lastModifiedDate":"2022-03-30"},{"lineNumber":613,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":614,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":616,"author":{"gitId":"TypeDefinition"},"content":"## Save Data","lastModifiedDate":"2022-03-27"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"DaneMarc"},"content":"CinnamonBun\u0027s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-27"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"TypeDefinition"},"content":"**A**: Install the app in the other computer and overwrite the empty `data/` file it creates with the file that contains the data of your previous CinnamonBun home folder.","lastModifiedDate":"2022-03-27"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"KeithCZW"},"content":"**Q**: Why is this named CinnamonBun?\u003cbr\u003e","lastModifiedDate":"2022-03-05"},{"lineNumber":628,"author":{"gitId":"KeithCZW"},"content":"**A**: Because we like Cinnamon Buns.","lastModifiedDate":"2022-03-05"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":630,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"DaneMarc":37,"TypeDefinition":250,"LapisRaider":31,"zunedz":122,"-":116,"KeithCZW":74}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"TypeDefinition"},"content":"    content: \"CinnamonBun\";","lastModifiedDate":"2022-03-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"TypeDefinition":1,"-":294}},{"path":"docs/diagrams/AddTransactionActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"@startuml","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"start","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":": User enter add transaction command;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":": Parses command;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"if () then ([valid command provided])","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"  :Create transaction builder;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"  :Create add transaction command;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"  :Execute add transaction Command;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"  if () then ([valid parameter provided])","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"  : Create new transaction;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"  : add the transaction to transaction list;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"  : Display success message;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"  else ([invalid])","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"   : Throw exception;","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"   : Display invalid parameter message;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"  endif","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"else ([invalid])","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"  :Throw parse exception;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"  :Display invalid command message;","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"endif","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"stop","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"@enduml","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"zunedz":24}},{"path":"docs/diagrams/AddTransactionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"@startuml","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"!include style.puml","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"participant \":AddTransactionParser\" as AddTransactionParser LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"participant \"a:AddTransactionCommand\" as AddTransactionCommand LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"participant \"tb:TransactionBuilder\" as TransactionBuilder LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"end box","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"participant \"nt:Transaction\" as Transaction MODEL_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"end box","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"[-\u003e LogicManager : execute(addTransactionEx)","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"activate LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(addTransactionEx)","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"create AddTransactionParser","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"AddressBookParser -\u003e AddTransactionParser","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"activate AddTransactionParser","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"AddTransactionParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"deactivate AddTransactionParser","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"AddressBookParser -\u003e AddTransactionParser : parse(transaction)","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"activate AddTransactionParser","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"create AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"AddTransactionParser -\u003e AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"activate AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"create TransactionBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"AddTransactionCommand --\u003e TransactionBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"activate TransactionBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"TransactionBuilder --\u003e AddTransactionCommand : tb","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"deactivate TransactionBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"AddTransactionCommand --\u003e AddTransactionParser : a","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"deactivate AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"AddTransactionParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"deactivate AddTransactionParser","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"AddTransactionParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"destroy AddTransactionParser","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"LogicManager -\u003e AddTransactionCommand : execute()","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"activate AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"AddTransactionCommand -\u003e Model : Get person\u0027s identifier at index 1.","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"activate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"Model --\u003e AddTransactionCommand : personIdentifier","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"deactivate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"AddTransactionCommand -\u003e TransactionBuilder : tb.createTransaction(personIdentifier)","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"activate TransactionBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"create Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"TransactionBuilder -\u003e Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"activate Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"Transaction --\u003e TransactionBuilder :  nt","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"deactivate Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"TransactionBuilder --\u003e AddTransactionCommand : nt","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"deactivate TransactionBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"TransactionBuilder -[hidden]-\u003e AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"destroy TransactionBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"AddTransactionCommand -\u003e Model : addTransaction(nt)","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"activate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"Model -[hidden]-\u003e AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"Model -[hidden]-\u003e AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"Model --\u003e AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"deactivate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"AddTransactionCommand -[hidden]-\u003e AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"create CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"AddTransactionCommand -\u003e CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"activate CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"CommandResult --\u003e AddTransactionCommand : result","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"AddTransactionCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"deactivate AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"AddTransactionCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"destroy AddTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"@enduml","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"zunedz":104}},{"path":"docs/diagrams/AppendSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"@startuml","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"!include style.puml","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"participant \":AppendCommandParser\" as AppendCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"participant \"a:AppendCommand\" as AppendCommand LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"end box","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"end box","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"[-\u003e LogicManager : execute(\"append 1 t/vendor\")","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"activate LogicManager","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"append 1 t/vendor\")","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"create AppendCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"AddressBookParser -\u003e AppendCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"activate AppendCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"AppendCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"deactivate AppendCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"AddressBookParser -\u003e AppendCommandParser : parse(\"1 t/vendor\")","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"activate AppendCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"create AppendCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"AppendCommandParser -\u003e AppendCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"activate AppendCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"AppendCommand --\u003e AppendCommandParser : a","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"deactivate AppendCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"AppendCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"deactivate AppendCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"AppendCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"destroy AppendCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"LogicManager -\u003e AppendCommand : execute()","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"activate AppendCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"AppendCommand -\u003e Model : Get person at index 1.","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"activate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"Model --\u003e AppendCommand : personToEdit","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"deactivate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"create Person","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"AppendCommand -\u003e Person : personToEdit.setTag(new Tag(\"vendor\"))","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"activate Person","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"Person --\u003e AppendCommand : editedPerson","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"deactivate Person","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"AppendCommand -\u003e Model : setPerson(editedPerson)","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"activate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"Model --\u003e AppendCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"deactivate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"create CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"AppendCommand -\u003e CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"activate CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"CommandResult --\u003e AppendCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"AppendCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"deactivate AppendCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"AppendCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"destroy AppendCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"TypeDefinition"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"TypeDefinition"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"TypeDefinition"},"content":"@enduml","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"TypeDefinition":85}},{"path":"docs/diagrams/ClearFilteredSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"@startuml","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"!include style.puml","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"box ClearFiltered LOGIC_COLOR_T1","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"participant \"cf:ClearFilteredCommand\" as ClearFilteredCommand LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"end box","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"end box","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"[-\u003e LogicManager : execute(\"clearFiltered\")","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"activate LogicManager","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"clearFiltered\")","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"create ClearFilteredCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"AddressBookParser -\u003e ClearFilteredCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"activate ClearFilteredCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"ClearFilteredCommand --\u003e AddressBookParser : cf","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"deactivate ClearFilteredCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"AddressBookParser --\u003e LogicManager : cf","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"LogicManager -\u003e ClearFilteredCommand : execute()","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"activate ClearFilteredCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"ClearFilteredCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"activate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"Model --\u003e ClearFilteredCommand : filteredList","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"deactivate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"ClearFilteredCommand -\u003e Model : deletePerson(filteredList)","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"activate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"Model --\u003e ClearFilteredCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"deactivate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"create CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"ClearFilteredCommand -\u003e CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"activate CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"CommandResult --\u003e ClearFilteredCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"ClearFilteredCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"deactivate ClearFilteredCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"ClearFilteredCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"destroy ClearFilteredCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"@enduml","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"KeithCZW":61}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"DeleteCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"destroy DeleteCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TypeDefinition":3,"-":69}},{"path":"docs/diagrams/FindTransactionActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"@startuml","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"start","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":": User enter find transaction command;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":": Parses command;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"if () then ([valid command provided])","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"  :Create transaction predicate builder;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"  :Create find transaction command;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"  :Execute find transaction command;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"  if () then ([valid person index provided])","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"  : Get personIdentifier of person","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"    at the specified index;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"  : Create the transaction predicate","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"  using personIdentifier;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"  : Update the transaction list according","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"    to the transaction predicate;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"  : Display success message;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"  else ([invalid])","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"   : Throw exception;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"   : Display invalid index message;","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"  endif","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"else ([invalid])","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"  :Throw parse exception;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"  :Display invalid command message;","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"endif","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"stop","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"@enduml","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"zunedz":28}},{"path":"docs/diagrams/FindTransactionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"@startuml","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"!include style.puml","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"participant \":FindTransactionCommandParser\" as FindTransactionCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"participant \"a:FindTransactionCommand\" as FindTransactionCommand LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"participant \"tp:TransactionPredicateBuilder\" as TransactionPredicateBuilder LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"end box","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"end box","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"[-\u003e LogicManager : execute(\"findTransaction 1\")","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"activate LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"findTransaction 1\")","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"create FindTransactionCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"AddressBookParser -\u003e FindTransactionCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"activate FindTransactionCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"FindTransactionCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"deactivate FindTransactionCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"AddressBookParser -\u003e FindTransactionCommandParser : parse(1)","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"activate FindTransactionCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"create FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"FindTransactionCommandParser -\u003e FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"activate FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"create TransactionPredicateBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"FindTransactionCommand --\u003e TransactionPredicateBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"activate TransactionPredicateBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"TransactionPredicateBuilder --\u003e FindTransactionCommand : tp","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"deactivate TransactionPredicateBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"FindTransactionCommand --\u003e FindTransactionCommandParser : a","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"deactivate FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"FindTransactionCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"deactivate FindTransactionCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"FindTransactionCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"destroy FindTransactionCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"LogicManager -\u003e FindTransactionCommand : execute()","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"activate FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"FindTransactionCommand -\u003e Model : Get person\u0027s identifier at index 1.","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"activate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"Model --\u003e FindTransactionCommand : personId","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"deactivate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"FindTransactionCommand -\u003e TransactionPredicateBuilder : tp.createTransactionPredicate(personId)","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"activate TransactionPredicateBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"TransactionPredicateBuilder -[hidden]-\u003e FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"TransactionPredicateBuilder --\u003e FindTransactionCommand : predicate","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"deactivate TransactionPredicateBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"TransactionPredicateBuilder -[hidden]\u003e FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"destroy TransactionPredicateBuilder","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"FindTransactionCommand -\u003e Model : updateFilteredTransaction(predicate)","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"activate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"Model -[hidden]-\u003e FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"Model -[hidden]-\u003e FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"Model --\u003e FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"deactivate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"FindTransactionCommand -[hidden]-\u003e FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"create CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"FindTransactionCommand -\u003e CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"activate CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"CommandResult --\u003e FindTransactionCommand : result","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"FindTransactionCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"deactivate FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"FindTransactionCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"destroy FindTransactionCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"@enduml","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"zunedz":98}},{"path":"docs/diagrams/MembershipClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"@startuml","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"hide empty members","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"class Membership {","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"    + {static}PREFIX : final Prefix","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"    + {static}DATE_PREFIX: final Prefix","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"    + {static}MESSAGE_CONSTRAINTS: final String","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"    + {static}MESSAGE_DATE_CONSTRAINTS: final String","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"    - tier : Tier","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"    - date : LocalDate","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"    + {static}getTierFromString(String) : Tier","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"    + {static}isValidName(String) : boolean","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"    + {static}isValidDate(String) : boolean","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"    + getValue() : String","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"class Field {","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"    + prefix : Prefix","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"    + getValue() : String","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"enum Tier \u003c\u003cenumeration\u003e\u003e {","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"    GOLD","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"    SILVER","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"    BRONZE","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"    ALL","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"Membership --|\u003e Field","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"Tier +-- Membership","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"@enduml","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"KeithCZW":34}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"Class Email","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"Class Address","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"Class Remark","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"Class Birthday","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"Class Membership","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"Class TransactionList","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"Class Transaction","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"Class Amount","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"Class Status","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"Class TransactionDate","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"Class DueDate","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"Class Note","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"AddressBook *--\u003e \"1\" TransactionList","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"Person *--\u003e \"0..1\" Remark","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"Person *--\u003e \"0..1\" Birthday","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"Person *--\u003e \"0..1\" Membership","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"Name -[hidden]right-\u003e Email","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"Phone -[hidden]up-\u003e Name","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"Address -[hidden]up-\u003e Email","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"Remark -[hidden]up-\u003e Phone","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"Remark -[hidden]right-\u003e Birthday","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"Birthday -[hidden]up-\u003e Address","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"Membership -[hidden]up-\u003e Remark","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"Membership -[hidden]right-\u003e Tag","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"Tag -[hidden]up-\u003e Birthday","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"TypeDefinition"},"content":"TransactionList --\u003e \"~* all\" Transaction","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"Transaction *--\u003e \"1\" Amount","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"Transaction *--\u003e \"1\" Status","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"Transaction *--\u003e \"1\" TransactionDate","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"Transaction *--\u003e \"0..1\" DueDate","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"TypeDefinition"},"content":"Transaction *--\u003e \"0..1\" Note","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"TypeDefinition"},"content":"Amount -[hidden]down-\u003e Status","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"TypeDefinition"},"content":"Status -[hidden]down-\u003e TransactionDate","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"TypeDefinition"},"content":"TransactionDate -[hidden]down-\u003e DueDate","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"TypeDefinition"},"content":"DueDate -[hidden]down-\u003e Note","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"TypeDefinition"},"content":"ModelManager --\u003e\"~* filtered\" Transaction","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TypeDefinition":45,"-":39,"KeithCZW":7}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"Class IndexParser","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"XYZCommandParser ..\u003e IndexParser","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"TypeDefinition":2,"-":35}},{"path":"docs/diagrams/PayDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"@startuml","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"start","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":": User enter pay command;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":": Parses command;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"if () then ([valid command provided])","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"  :Create pay command;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"  :Execute pay command;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"  if () then ([valid transaction index provided])","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"  : update the specified transaction;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"  : Display success message;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"  else ([invalid transaction index])","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"   : Throw exception;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"   : Display invalid index message;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"  endif","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"else ([invalid])","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"  :Throw parse exception;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"  :Display invalid command message;","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"endif","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"stop","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"@enduml","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"zunedz":22}},{"path":"docs/diagrams/PaySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"@startuml","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"!include style.puml","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"participant \":PayCommandParser\" as PayCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"participant \"a:PayCommand\" as PayCommand LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"end box","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"participant \":Transaction\" as Transaction MODEL_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"end box","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"[-\u003e LogicManager : execute(\"pay 1\")","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"activate LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"pay 1\")","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"create PayCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"AddressBookParser -\u003e PayCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"activate PayCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"PayCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"deactivate PayCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"AddressBookParser -\u003e PayCommandParser : parse(1)","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"activate PayCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"create PayCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"PayCommandParser -\u003e PayCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"activate PayCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"PayCommand --\u003e PayCommandParser : a","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"deactivate PayCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"PayCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"deactivate PayCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"PayCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"destroy PayCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"LogicManager -\u003e PayCommand : execute()","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"activate PayCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"PayCommand -\u003e Model : Get transaction at index 1.","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"activate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"Model --\u003e PayCommand : transactionToEdit","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"deactivate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"create Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"PayCommand -\u003e Transaction : transactionToEdit.setStatusTo(PayCommand.class)","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"activate Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"Transaction --\u003e PayCommand : editedTransaction","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"deactivate Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"PayCommand -\u003e Model : setTransaction(editedTransaction)","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"activate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"Model --\u003e PayCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"deactivate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"PayCommand -[hidden]-\u003e PayCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"create CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"PayCommand -\u003e CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"activate CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"CommandResult --\u003e PayCommand : result","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"PayCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"deactivate PayCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"PayCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"destroy PayCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"@enduml","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"zunedz":87}},{"path":"docs/diagrams/PersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"@startuml","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"hide empty members","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"class Person {","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"    - fields : final HashMap\u003cPrefix, Field\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"    - tags: final HastSet\u003cTag\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"    + hasField(Prefix) : boolean","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"    + addFields(Field...) : Person","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"    + removeFields(Field...) : Person","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"    + setFields(Collection\u003cField\u003e) : Person","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"    + getFields() : List\u003cField\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"    + getField(Prefix) : Optional\u003cField\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"    + hasTag(Tag) : boolean","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"    + addTags(Tag...) : Person","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"    + removeTags(Tag...) : Person","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"    + setTags(Tag...) : Person","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"abstract class Field {","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"    + prefix : Prefix","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"    + getValue() : String","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"class Name","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"class Email","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"class Address","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"class Phone","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"class Remark","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"class Birthday","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"class Membership","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"class Tag","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"Person o--\u003e \"1\" Name","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"Person o--\u003e \"1\" Email","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"Person o--\u003e \"1\" Address","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"Person o--\u003e \"1\" Phone","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"Person o--\u003e \"0..1\" Remark","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"Person o--\u003e \"0..1\" Birthday","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"Person o--\u003e \"0..1\" Membership","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"Person o--\u003e \"*\" Tag","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"Name --|\u003e Field","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"Email --|\u003e Field","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"Address --|\u003e Field","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"Phone --|\u003e Field","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"Remark --|\u003e Field","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"Birthday --|\u003e Field","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"Membership --|\u003e Field","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"@enduml","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"TypeDefinition":51,"zunedz":1}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"Class SerializableAddressBookStorage","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nTempAddressBookStorage\" as TempAddressBookStorage","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"Class SerializableTempAddressBookStorage","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"StorageManager -up-\u003e \"1\" TempAddressBookStorage","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"Storage -right-|\u003e UserPrefsStorage","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"Storage -left-|\u003e AddressBookStorage","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"Storage -left-|\u003e TempAddressBookStorage","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"SerializableAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"SerializableTempAddressBookStorage .up.|\u003e TempAddressBookStorage","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TypeDefinition":10,"-":33}},{"path":"docs/diagrams/TemporaryAddressBookStorage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"@startuml","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"start","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":":User executes a command;","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":":Locally save current state of","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"AddressBook clients\u0027 list;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":":Command executed;","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"if () then ([Undo command executed])","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"    :Read latest temporary file","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"    of AddressBook saved;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"    :Update AddressBook","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"    with data from temporary file;","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"else ([else])","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"    if () then ([Clients\u0027 list state changed])","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"        :Store previous locally saved state of","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"        AddressBook clients\u0027 list in a temporary file;","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"    else ([else])","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"    endif","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"endif","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"stop","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"@enduml","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"LapisRaider":23}},{"path":"docs/diagrams/TransactionClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"@startuml","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"hide empty members","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"class Transaction {","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"    - fields : final HashMap\u003cPrefix, TransactionField\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"    - personId : int","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"    + addField(TransactionField) : Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"    + removeField(Prefix) : Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"    + setField(TransactionField) : Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"    + getFields() : List\u003cTransactionField\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"    + isValid() : boolean","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"    + getTransactionField(Prefix) : Optional\u003cTransactionField\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"    + setStatusTo(Class\u003c? extends Command\u003e) : Transaction","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    + isPaid() : boolean","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    + hasIdentifier(long) : boolean","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"class Transaction {","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"abstract class TransactionField {","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"    + prefix : Prefix","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"    + getValue() : String","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"class Amount","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"class TransactionDate","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"class DueDate","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"class Note","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"class Status","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"Transaction o--\u003e \"1\" Amount","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"Transaction o--\u003e \"1\" TransactionDate","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"Transaction o--\u003e \"0..1\" DueDate","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"Transaction o--\u003e \"0..1\" Note","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"Transaction o--\u003e \"1\" Status","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"Amount --|\u003e TransactionField","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"TransactionDate --|\u003e TransactionField","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"DueDate --|\u003e TransactionField","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"Note --|\u003e TransactionField","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"Status --|\u003e TransactionField","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"Transaction .right.\u003e Person","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"@enduml","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"zunedz":49}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"Class TransactionListPanel","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"Class TransactionCard","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"MainWindow *-down-\u003e \"1\" TransactionListPanel","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"TransactionListPanel -down-\u003e \"*\" TransactionCard","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"TransactionCard --|\u003e UiPart","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"TransactionCard ..\u003e Model","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TypeDefinition":7,"-":59}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"box \u003cfont color\u003dblack\u003eLogic\u003c/font\u003e LOGIC_COLOR_T1","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"participant \"u:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"box \u003cfont color\u003dblack\u003eStorage\u003c/font\u003e STORAGE_COLOR_T1","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"participant \":Storage\" as Storage STORAGE_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"end box","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"box \u003cfont color\u003dblack\u003eModel\u003c/font\u003e MODEL_COLOR_T1","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"create CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"UndoCommand -\u003e CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"activate CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"CommandResult --\u003e UndoCommand : result","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"LapisRaider"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"LapisRaider"},"content":"LogicManager -[hidden]-\u003e Storage : popTempAddressFileData","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"LapisRaider"},"content":"LogicManager -\u003e Storage : popTempAddressFileData()","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"activate Storage","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"LapisRaider"},"content":"Storage --\u003e LogicManager : tempAddressFileData","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"LapisRaider"},"content":"deactivate Storage","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"LapisRaider"},"content":"LogicManager -[hidden]-\u003e Model : setAddressBook","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"LogicManager -\u003e Model : setAddressBook(tempAddressFileData)","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"LapisRaider"},"content":"activate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"LapisRaider"},"content":"Model --\u003e LogicManager","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"LapisRaider"},"content":"deactivate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LapisRaider":28,"-":38}},{"path":"docs/diagrams/UndoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"package TempAddressBookStorage {","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"Pointer -up[hidden]-\u003e TempAddressBookStorage","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"Pointer -right-\u003e \"__ab0:AddressBook__\"","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LapisRaider":4,"-":10}},{"path":"docs/diagrams/UndoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"package TempAddressBookStorage {","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"Pointer -up[hidden]-\u003e TempAddressBookStorage","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"Pointer -right-\u003e \"__ab1:AddressBook__\"","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LapisRaider":4,"-":12}},{"path":"docs/diagrams/UndoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"package TempAddressBookStorage \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"Pointer -up[hidden]-\u003e TempAddressBookStorage","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"Pointer -right-\u003e \"__ab2:AddressBook__\"","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LapisRaider":6,"-":15}},{"path":"docs/diagrams/UndoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"package TempAddressBookStorage \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"Pointer -up[hidden]-\u003e TempAddressBookStorage","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"Pointer -right-\u003e \"__ab1:AddressBook__\"","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LapisRaider":4,"-":12}},{"path":"docs/diagrams/UndoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"title After command \"filter Daniel\"","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"package TempAddressBookStorage \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"Pointer -up[hidden]-\u003e TempAddressBookStorage","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"Pointer -right-\u003e \"__ab1:AddressBook__\"","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LapisRaider":5,"-":11}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"hide empty members","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TypeDefinition":1,"-":74}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"title: CinnamonBun","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"[![Java CI](https://github.com/AY2122S2-CS2103T-W09-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W09-2/tp/actions)","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"[![Codecov](https://codecov.io/gh/AY2122S2-CS2103T-W09-2/tp/branch/master/graph/badge.svg?token\u003dUJX2NES4W7)](https://codecov.io/gh/AY2122S2-CS2103T-W09-2/tp)","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"## About","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"Small business owners and freelancers may find it difficult to keep track of all their clients.","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"CinnamonBun is an application that helps to record and manage a large number of clients and business transactions, thus allowing business owners to focus more on their business and less on bookkeeping.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"CinnamonBun comes with a beautiful Graphical User Interface (GUI) while still being optimized for control via a Command Line Interface (CLI).","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"## Getting Started","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"* If you are interested in using CinnamonBun, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"* If you are interested about developing CinnamonBun, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"## Acknowledgements","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"This project is based on the AddressBook-Level3 project created by the SE-EDU initiative.","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"DaneMarc":3,"TypeDefinition":17,"-":13,"KeithCZW":2}},{"path":"docs/team/danemarc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"title: Dane\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"### Project: CinnamonBun","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"Small business owners and freelancers may find it difficult to keep track of all their clients.","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"CinnamonBun is an application that helps to record and manage a large number of clients and business transactions, thus allowing business owners to focus more on their business and less on bookkeeping.","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"CinnamonBun comes with a beautiful Graphical User Interface (GUI) while still being optimized for control via a Command Line Interface (CLI).","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"### My Contributions","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"* **New Feature**: Added the ability to chain multiple commands in a single command.","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"  * Functionality: Allows the user to execute multiple commands sequentially using only a single command.","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"  * Justification: This feature removes the hassle of individually executing each command which is especially helpful for power users who like to run a series of commands.","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"* **New Feature**: Added the ability to complete or correct a command while typing.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"  * Functionality: Allows the user complete or correct a command they are currently typing by pressing the `tab` key.","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"  * Justification: This feature makes typing commands significantly quicker and reduces input error.","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"  * Credits: Adapted the edit distance algorithm from this [site](https://www.geeksforgeeks.org/edit-distance-dp-5/)","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"* **New Feature**: Added the ability to switch color schemes (themes).","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"  * Functionality: Allows the user to switch between a light and dark theme.","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"  * Justification: This feature is a quality-of-life improvement that gives the user more choice in customizing the interface.","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"  * Expanded the find feature to include all Person attributes (Pull request [\\#7](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/7))","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"  * Enhanced clickable person cards by adding the handling deselection (Pull request [\\#121](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/121))","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"  * Updated GUI (Pull request [\\#72](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/72))","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"  * Enhanced GUI by saving the currently selected theme as a user preference (Pull request [\\#118](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/118))","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003ddanemarc\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dDaneMarc\u0026tabRepo\u003dAY2122S2-CS2103T-W09-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"* **Project management**:","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"  * Created and assigned issues to milestones.","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"  * Reviewed pull requests and provided non-trivial feedback for a few of them. [\\#68](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/68)","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"  * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"    * Updated documentation for the `find` feature [\\#7](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/7)","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"    * Added documentation for the command chaining feature [\\#35](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/35)","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"    * Added documentation for the command completion/correction feature [\\#112](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/112)","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"    * Added implementation details of the command chaining feature [\\#154](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/154)","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"    * Added implementation details of the command completion/correction feature [\\#154](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/154)","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"    ","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"  ","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"DaneMarc":57}},{"path":"docs/team/keithczw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"layout: page","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"title: Keith\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"### Project: CinnamonBun","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"Small business owners and freelancers may find it difficult to keep track of all their clients.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"CinnamonBun is an application that helps to record and manage a large number of clients and business transactions, thus allowing business owners to focus more on their business and less on bookkeeping.","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"CinnamonBun comes with a beautiful Graphical User Interface (GUI) while still being optimized for control via a Command Line Interface (CLI).","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"### My Contributions","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"* **New Feature**:","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"  * Added ability to add/remove memberships to/from clients (Pull request [\\#69](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/69))","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"    * Functionality: Allow the user to add membership to a client by specifying the client and membership ","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"    tier (Gold,Silver,Bronze). The membership is displayed on the UI as a different color based on the tier.","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"    * Justification: This function allows business owners to award their clients by giving them memberships.","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"* **New Feature**:","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"  * Allowed ability to find all clients by membership (Pull request [\\#127](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/127))","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"    * Functionality: Allow the user to filter clients based on their membership tier, or filter all clients with a membership.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"    * Justification: This function allows business owners more easily find their members.","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"* **New Feature**:","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"  * Added ability to delete filtered contacts from find function or listMembers function (Pull request [\\#9](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/9))","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"    * Functionality: Allow the user to delete clients based on what they have filtered from either the find function or listMembers function.","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"    * Justification: This function allows business owners to more easily manage their clients by removing groups of them based on filters.","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"  * Made the find function able to search for membership start dates","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dKeithCZW)","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"* **Project management**:","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"  * Assisted to create issues and assign them to various members","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"  * Assigned some issues to milestones","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"  ","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"  * User Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"    * Added documentation for the `clearFiltered` feature [\\#158](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/158)","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"    * Added documentation for `Memberships` [\\#158](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/158)","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"      * Includes documentation for  `addMembership`,`removeMembership` and `listMembers`","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"    * Added implementation details of `ClearFiltered`","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"    * Added manual testing instructions for `Membership` functionality and clearing filtered clients","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"    * Added implementation details of `Memberships`","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"* **Community**:","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"  * Helped to review teammates pull requests and provide feedback","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"  ","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"TypeDefinition":7,"KeithCZW":52}},{"path":"docs/team/lapisraider.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"layout: page","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"title: Angie\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"### Project: CinnamonBun","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"Small business owners and freelancers may find it difficult to keep track of all their clients.","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"CinnamonBun is an application that helps to record and manage a large number of clients and business transactions, thus allowing business owners to focus more on their business and less on bookkeeping.","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"CinnamonBun comes with a beautiful Graphical User Interface (GUI) while still being optimized for control via a Command Line Interface (CLI).","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"### My Contributions","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"* **New Feature**: Add ability to undo modifications made to the clients list. [\\#80](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/80)","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"  * Functionality: Allows the user to undo previous modifications made to the clients list in the event they realized they made a mistake.","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"  * Justification: This feature is necessary as it gives user the ability to undo possible mistakes they have made instead and give them an easy way out to do so. Originally","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"  if they made a mistake, they would have to try and remember their past command, and try to reverse it manually.","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"* **New Feature**: Add sorting of clients list. [\\#38](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/38)","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"  * Functionality: Users are able to sort the list by attributes and even chain the sorting order.","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"  * Justification: Users who need the clients to be in certain orders are now able to obtain the data ","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":"  they need easily, for example they want to obtain the first 10 names in alphabetical order etc.","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"LapisRaider"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dlapisraider)","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"* **Project management**:","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"  * Managed milestones `v1.1` to `v1.4` on GitHub","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"  * Helped create issues/user tasks and track and update their progress before closing them.","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"  * Updated and wrote additional test cases to increase code coverage. ","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"  (Pull requests [\\#58](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/58), [\\#139](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/139))","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"  * Updated edit command to support remark field, and made client\u0027s email to be the unique value instead. [\\#17](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/17)","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"LapisRaider"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"  * User Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"    * Added documentation for the feature `undo` [\\#119](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/119)","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"    * Added documentation for the feature `sort` [\\#81](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/81)","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"LapisRaider"},"content":"    * Added implementation details of the `undo` feature. [\\#141](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/141)","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"LapisRaider"},"content":"    * Added implementation details of the `sort` feature. [\\#81](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/81)","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"LapisRaider"},"content":"* **Community**:","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"LapisRaider"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#7](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/7),","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"LapisRaider"},"content":"  [\\#9](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/9),","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"LapisRaider"},"content":"  [\\#16](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/16)","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"LapisRaider"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [\\#184](https://github.com/AY2122S2-CS2103-F09-3/tp/issues/184),","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"LapisRaider"},"content":"  [\\#152](https://github.com/AY2122S2-CS2103-F09-3/tp/issues/152), [\\#173](https://github.com/AY2122S2-CS2103-F09-3/tp/issues/173))","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"LapisRaider":51}},{"path":"docs/team/typedefinition.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"layout: page","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"title: Terry\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"### Project: CinnamonBun","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"Small business owners and freelancers may find it difficult to keep track of all their clients.","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"CinnamonBun is an application that helps to record and manage a large number of clients and business transactions, thus allowing business owners to focus more on their business and less on bookkeeping.","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"CinnamonBun comes with a beautiful Graphical User Interface (GUI) while still being optimized for control via a Command Line Interface (CLI).","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"### My Contributions","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"* **New Feature**: Add the ability to add remarks to clients.","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"  * Functionality: Allow the user to add remarks to clients so that they can note down things about the client.","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"  * Justification: This function is necessary for users to add notes about the client that may not fit into any of the other fields.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"* **New Feature**: Add the ability to append or remove fields from clients.","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"    * Functionality: Allow the user to only append, or only remove fields from clients.","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"    * Justification: Previously, there was only the `edit` function, which did not work well in certain situations. For example, it could not remove existing fields. If the client had multiple tags, and the user wanted to remove one tag, she would have to input every other tag except that one.","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dTypeDefinition)","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"* **Project management**:","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"    * Managed releases `v1.2.0`, `v1.3.0-alpha` and `v1.3.0` (3 release) on GitHub.","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"    * User Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"        * [Commands - Command Syntax](../UserGuide.md#command-syntax)","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"        * [Commands - User Guide Syntax](../UserGuide.md#user-guide-syntax)","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        * [Commands - Fields and Tags](../UserGuide.md#fields-and-tags)","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        * [Commands - Append Remark to Client](../UserGuide.md#append-remark-to-client-remark)","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        * [Commands - Append Fields to Client](../UserGuide.md#append-fields-to-client-append)","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        * [Commands - Remove Fields from Client](../UserGuide.md#remove-fields-from-client-remove)","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        * [Special Features - Command History](../UserGuide.md#command-history)","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"        * [Design - Update diagrams](../DeveloperGuide.md#design)","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        * [Implementations - Person, Field and Tag](../DeveloperGuide.md#person-field-and-tag)","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"        * [Implementations - Command history](../DeveloperGuide.md#command-history)","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"        * [Manual Testing - Adding a client](../DeveloperGuide.md#adding-a-client)","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"        * [Manual Testing - Append fields to a client](../DeveloperGuide.md#append-fields-to-a-client)","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"        * [Manual Testing - Remove fields from a client](../DeveloperGuide.md#remove-fields-from-a-client)","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"        * [Manual Testing - Add or remove remark from a client](../DeveloperGuide.md#add-or-remove-remark-from-a-client)","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"TypeDefinition":45}},{"path":"docs/team/zunedz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"layout: page","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"title: Daffa\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"### Project: CinnamonBun","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"Small business owners and freelancers may find it difficult to keep track of all their clients.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"CinnamonBun is an application aimed at business owners to help managing their","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"clients with beautiful and minimalist User Interface (UI). CinnamonBun provides ","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"functionalities to store and manage client\u0027s information as well as their transactions.","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"By using CinnamonBun, users are able to manage clients\u0027 membership, tags, and tracking clients\u0027","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"transactions. ","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"CinnamonBun is specialized for fast-typing users, as most of the interaction with the","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"application is through command-line, so, business owners who are familiar with using","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"command-line will have a great time using CinnamonBun!. ","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"* **New Feature**: Add the ability to add transaction to clients. [\\#57](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/57)","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"    * Functionality: Allow the user to add transactions to clients by specifying the client,","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"    amount, transaction date, due date, notes, and the status of the transaction of whether it","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"    has been paid. ","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"    * Justification: This function is necessary for users to add clients\u0027 transaction as this application ","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    is intended to help business owners manage clients as well as their transactions. ","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"  ","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"* **New Feature**: Add the ability to delete transactions. [\\#87](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/87)","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    * Functionality: Allow the user to delete transactions.","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"    * Justification: Expired transactions that will not be needed anymore (e.g. paid transactions from 5 years ago)","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    are better to be deleted. Another use case is when the user input the incorrect parameter, the transaction","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    could be deleted.","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"* **New Feature**: Find and List transactions. [\\#87](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/87)","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    * Functionality: Allow the user to list all transactions and find client-specific transactions.","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    * Justification: Users will need to look at a particular client\u0027s transactions to check for","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    overdue transactions, unpaid transactions, etc. ","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"* **New Feature**: Pay and Unpay transactions. [\\#125](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/125)","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"    * Functionality: Allow the user to change the status of a transaction to paid or unpaid.","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"    * Justification: When a client paid a transaction, the status of the transaction need to change","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    to paid. If the user mistakenly set the status to paid, they can change the status back to unpaid.","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dzunedz\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"* **Project management**:","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"    * Add todo features/user story, tasks, bugs, and enhancement as Github Issues.","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    * Help reviewing pull requests and give feedback for improvement.","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"    * Improve the UI of the application by adding one more panel to display the list","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"    of transactions. Also implement the transaction card to display each transaction\u0027s information.","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"    * Find and fix bugs from existing features such as handling of invalid input date.","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"    * Implement the base feature of clickable person card. ","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"    * Refactor the whole `transaction` feature to follow the same patterns in `client` feature. ","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"* **Contribution to team based tasks**:","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"  * Contributed adding user stories","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"  * Contributed creating weekly demos","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"  * Adding and tracking issues","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"    * User Guide:","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        * Added documentation for the `addTransaction` feature. [\\#113](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/113/files)","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"        * Added documentation for the `deleteTransaction` feature. [\\#113](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/113/files)","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"        * Added documentation for the `listTransaction` feature. [\\#113](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/113/files)","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"        * Added documentation for the `findTransaction` feature. [\\#113](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/113/files)","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"        * Added documentation for the `pay` feature. [\\#153](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/153/files)","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"        * Added documentation for the `unpay` feature. [\\#153](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/153/files)","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"           ","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"        * Added implementation details for the `addTransaction` feature. [\\#250](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/250)","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"        * Added implementation details for the `deleteTransaction` feature. [\\#250](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/250/files)","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"        * Added implementation details for the `listTransaction` feature. [\\#250](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/250/files)","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"        * Added implementation details for the `findTransaction` feature. [\\#250](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/250/files)","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"        * Added implementation details for the `pay` feature. [\\#250](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/250/files)","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        * Added implementation details for the `unpay` feature. [\\#250](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/250/files)","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"* **Reviewed PRs**: [\\#69](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/69), [\\#91](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/91),","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":" [\\#100](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/100), [\\#35](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/35)","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"* **Tests**:","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"  * Add test cases for various transaction features. [\\#78](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/78),","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"    [\\#138](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/138), ","lastModifiedDate":"2022-04-08"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"    [\\#144](https://github.com/AY2122S2-CS2103T-W09-2/tp/pull/144)","lastModifiedDate":"2022-04-08"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"* **Contribution to Developer Guide (extracts)**","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"  * Sequence diagrams","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"    * Add Transaction Sequence Diagram","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"      [Add Transaction sequence diagram](../images/AddTransactionSequenceDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"    * Find Transaction Sequence Diagram","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"      [Find Transaction sequence diagram](../images/PaySequenceDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"    * Pay Sequence Diagram","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"      [Pay sequence diagram](../images/FindTransactionSequenceDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"  * Activity diagrams","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"    * Add Transaction Activity Diagram","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"      [Add Transaction activity diagram](../images/AddTransactionActivityDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"    * Find Transaction Activity Diagram","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"      [Find Transaction activity diagram](../images/PayDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"    * Pay Activity Diagram","lastModifiedDate":"2022-04-11"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"      [Pay activity diagram](../images/FindTransactionActivityDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"  * Class diagrams","lastModifiedDate":"2022-04-11"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"    * Transaction Class Diagram","lastModifiedDate":"2022-04-11"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"      [Transaction Class diagram](../images/TransactionClassDiagram.png)","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"zunedz":105}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"            + \"Parameters: INDEX (between 1 and 2147483647 inclusive) \"","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"TypeDefinition"},"content":"Now let’s move on to writing a commandParser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2022-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"TypeDefinition"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.commandParser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"TypeDefinition"},"content":"        Remark.PREFIX);","lastModifiedDate":"2022-03-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"TypeDefinition"},"content":"    String remark \u003d argMultimap.getValue(Remark.PREFIX).orElse(\"\");","lastModifiedDate":"2022-03-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"TypeDefinition":5,"-":396}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.storage.SerializableAddressBookStorage;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.storage.SerializableTempAddressBookStorage;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, false);","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"        AddressBookStorage addressBookStorage \u003d new SerializableAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"LapisRaider"},"content":"        //@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"LapisRaider"},"content":"        SerializableTempAddressBookStorage tempAddressBookStorage \u003d new SerializableTempAddressBookStorage(","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"                userPrefs.getTempAddressBookFileDirectoryPath());","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, tempAddressBookStorage);","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"        //@@author","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"LapisRaider"},"content":"        //@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":187,"author":{"gitId":"LapisRaider"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"LapisRaider"},"content":"            storage.deleteAllTempFilesData();","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"LapisRaider"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"LapisRaider"},"content":"            logger.severe(\"Unable to delete temporary files.\" + StringUtil.getDetails(e));","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"LapisRaider"},"content":"        //@@author","lastModifiedDate":"2022-04-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TypeDefinition":3,"LapisRaider":13,"-":178}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"    private static final double DEFAULT_HEIGHT \u003d 700;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"    private static final double DEFAULT_WIDTH \u003d 1000;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"    private static final String DEFAULT_STYLESHEET \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"            GuiSettings.class.getResource(\"/view/Cinnamon.css\").toExternalForm();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"    private final String stylesheet;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"        stylesheet \u003d DEFAULT_STYLESHEET;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition, String stylesheet) {","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"        this.stylesheet \u003d stylesheet;","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"    public String getStylesheet() {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"        return stylesheet;","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"                \u0026\u0026 stylesheet.equals(o.stylesheet)","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"DaneMarc"},"content":"        sb.append(\"Stylesheet : \" + stylesheet + \"\\n\");","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DaneMarc":14,"-":76}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"    private static final String LOG_FILE \u003d \"CinnamonBun.log\";","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TypeDefinition":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_INTERNAL_ERROR \u003d \"Internal server error.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_UNRECOGNIZED_COMMAND \u003d \"Unrecognized command.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format.\\n\\n%1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"Invalid client index.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX \u003d \"Invalid transaction index.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_PERSONS_FOUND_OVERVIEW \u003d \"%1$d client(s) found.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_NO_PERSONS_FOUND_OVERVIEW \u003d \"No clients found.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_TRANSACTIONS_LISTED_OVERVIEW \u003d \"%s\u0027s transactions listed.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_NO_TRANSACTIONS_LISTED_OVERVIEW \u003d \"%s has no transactions.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":9,"-":7}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"        String preppedWord \u003d word.trim().toUpperCase();","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"        String preppedSentence \u003d sentence.toUpperCase();","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"        return preppedSentence.contains(preppedWord);","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DaneMarc":3,"-":62}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException, IllegalArgumentException;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"     * @return an unmodifiable view of the transaction list of","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"     * the selected person","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    ObservableList\u003cTransaction\u003e getFilteredTransactionList();","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LapisRaider":1,"zunedz":7,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"    //@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"    public static final String TEMP_FILE_OPS_ERROR_MESSAGE \u003d \"Could not save temp data to file: \";","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"    public static final String TEMP_FILE_READ_ERROR_MESSAGE \u003d \"Could not read temp file data, might be corrupted: \";","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"    //@@author","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"    public CommandResult execute(String userInput) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"        logger.info(\"----------------[USER INPUT][\" + userInput + \"]\");","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"        CommandResult commandResult \u003d null;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"        String[] commands \u003d userInput.split(\"\\\\|\", -1); // -1 to stop split from ignoring trailing whitespace","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"LapisRaider"},"content":"        //@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"LapisRaider"},"content":"        ReadOnlyAddressBook addressBookBeforeCommand \u003d new AddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"        //@@author","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"        boolean isChain \u003d commands.length \u003e 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"        for (String commandText : commands) {","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"            try {","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"DaneMarc"},"content":"                // Checks if any of the special commands are in a command chain; throws exception if found","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"DaneMarc"},"content":"                if (isChain \u0026\u0026 (commandResult.isExit() || commandResult.isShowHelp()","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"DaneMarc"},"content":"                        || commandResult.isUndoPrevCommand())) {","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"DaneMarc"},"content":"                    throw new CommandException(\"Special command should not be in a command chain\");","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"DaneMarc"},"content":"                }","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"DaneMarc"},"content":"            } catch (CommandException | ParseException | IllegalArgumentException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"                if (isChain) {","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"DaneMarc"},"content":"                    model.setAddressBook(addressBookBeforeCommand);","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"DaneMarc"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"DaneMarc"},"content":"                throw new CommandException(\"\\\"\" + commandText.trim() + \"\\\" - \" + e.getMessage());","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"DaneMarc"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"DaneMarc"},"content":"        // Saves the updated addressBook if commands are valid","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"        assert commandResult !\u003d null : \"CommandResult is null, should not happen\";","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"        handleTempAddressBookFiles(addressBookBeforeCommand, commandResult.isUndoPrevCommand());","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"LapisRaider"},"content":"    //@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"LapisRaider"},"content":"     * Handles managing reading and writing address book temporary files.","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"LapisRaider"},"content":"     * @param addressBookBeforeCommand Data of the address book before modification.","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"LapisRaider"},"content":"     * @param isUndoPrevCommand If it\u0027s undo command, read from the temporary files. If not write to it.","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"LapisRaider"},"content":"     * @throws CommandException If there are any issues reading and writing the address book temporary files.","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"LapisRaider"},"content":"    private void handleTempAddressBookFiles(ReadOnlyAddressBook addressBookBeforeCommand, boolean isUndoPrevCommand)","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"LapisRaider"},"content":"            throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"LapisRaider"},"content":"        if (isUndoPrevCommand) {","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"LapisRaider"},"content":"            undoPrevModification();","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"LapisRaider"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"LapisRaider"},"content":"            savePrevAddressBookDataInTemp(addressBookBeforeCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"LapisRaider"},"content":"     * Undos previous modification made to the address book data.","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"LapisRaider"},"content":"     * @throws CommandException If there are any issues reading previous address book data or no undos can be done.","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"LapisRaider"},"content":"    public void undoPrevModification() throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"LapisRaider"},"content":"        Optional\u003cReadOnlyAddressBook\u003e tempAddressFileData;","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"LapisRaider"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"LapisRaider"},"content":"            tempAddressFileData \u003d storage.popTempAddressFileData();","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"LapisRaider"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"LapisRaider"},"content":"            throw new CommandException(TEMP_FILE_READ_ERROR_MESSAGE + exception, exception);","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"LapisRaider"},"content":"        if (tempAddressFileData.isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"LapisRaider"},"content":"            model.setAddressBook(tempAddressFileData.get());","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"LapisRaider"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"LapisRaider"},"content":"            throw new CommandException(UndoCommand.REACHED_UNDO_LIMIT);","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"LapisRaider"},"content":"     * Saves address book data before the data modification made into a temporary file.","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"LapisRaider"},"content":"     * @param addressBookBeforeCommand Data of the address book before modification.","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"LapisRaider"},"content":"     * @return Whether a temporary file is created. If no modifications were made, no temporary file will be created.","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"LapisRaider"},"content":"     * @throws CommandException If there are issues saving the data into the temporary file.","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"LapisRaider"},"content":"    public boolean savePrevAddressBookDataInTemp(ReadOnlyAddressBook addressBookBeforeCommand) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"LapisRaider"},"content":"        if (addressBookBeforeCommand.equals(model.getAddressBook())) {","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"LapisRaider"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"LapisRaider"},"content":"        //address book data before command saved to temp file","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"LapisRaider"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"LapisRaider"},"content":"            storage.addNewTempAddressBookFile(addressBookBeforeCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"LapisRaider"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"LapisRaider"},"content":"            throw new CommandException(TEMP_FILE_OPS_ERROR_MESSAGE + exception, exception);","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"LapisRaider"},"content":"        return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"LapisRaider"},"content":"    //@@author","lastModifiedDate":"2022-04-06"},{"lineNumber":152,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":163,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"zunedz"},"content":"    public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"zunedz"},"content":"        return model.getFilteredTransactionList();","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"DaneMarc":21,"LapisRaider":67,"zunedz":13,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a client.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"            + \"Required Parameters: \"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"            + Name.PREFIX + \"NAME \"","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"            + Phone.PREFIX + \"PHONE \"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"            + Email.PREFIX + \"EMAIL \"","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"            + Address.PREFIX + \"ADDRESS \\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"            + \"Optional Parameters: \"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Birthday.PREFIX + \"BIRTHDAY] \"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Remark.PREFIX + \"REMARK] \"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Tag.PREFIX + \"TAG]...\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"            + Name.PREFIX + \"John Doe \"","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"            + Phone.PREFIX + \"98765432 \"","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"            + Email.PREFIX + \"johnd@example.com \"","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"            + Address.PREFIX + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"            + Tag.PREFIX + \"vendor \"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"            + Tag.PREFIX + \"owesMoney\";","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added %s.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Another client is already using this email.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":25,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/AddMembershipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":" * Adds a membership to a person in the address book.","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"public class AddMembershipCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"    public static final String COMMAND_WORD \u003d \"addMembership\";","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"            + \": Add a membership to the client in the list as specified by the index. \"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"            + \"There are 3 membership tiers: Bronze, Silver \u0026 Gold.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"            + \"INDEX (between 1 and 2147483647 inclusive) \"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"            + Membership.PREFIX + \"MEMBERSHIP \"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Membership.DATE_PREFIX + \"DATE]\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"            + \"1 \"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"            + Membership.PREFIX + \"gold \"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"            + Membership.DATE_PREFIX + \"2022-02-03\";","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added membership to %s (%s).\";","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"    private final Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"    private final Membership membership;","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"    public AddMembershipCommand(Index index, Membership membership) {","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"        requireNonNull(membership);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"        this.membership \u003d membership;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"        Person editedPerson \u003d personToEdit.addMembership(membership);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToEdit, membership));","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"                || (other instanceof AddMembershipCommand // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"                \u0026\u0026 membership.equals(((AddMembershipCommand) other).membership)","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"                \u0026\u0026 index.equals(((AddMembershipCommand) other).index));","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"TypeDefinition":8,"zunedz":1,"KeithCZW":61}},{"path":"src/main/java/seedu/address/logic/commands/AddTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Amount;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.DueDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Note;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Status;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.TransactionDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.TransactionBuilder;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"public class AddTransactionCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"    public static final String COMMAND_WORD \u003d \"addTransaction\";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"            + \": Add a transaction to the client in the list as specified by the index.\"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"            + \"If specified, the transaction date can\u0027t be after the due date.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"            + \"Parameters: INDEX (between 1 and 2147483647 inclusive)\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"            + Amount.PREFIX + \"AMOUNT \"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"            + TransactionDate.PREFIX + \"TRANSACTION_DATE \"","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + DueDate.PREFIX + \"DUE_DATE] \"","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Note.PREFIX + \"NOTE] \"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Status.PREFIX + \"]\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"            + \"a/12.50 \"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"            + \"td/2022-11-11 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"            + \"dd/2022-11-11 \"","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"            + \"n/Paid $12.50 for haircut.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added transaction to %s.\\nDetails: %s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"    private final Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    private final TransactionBuilder transactionBuilder;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"     * Constructs AddTransaction command with the specified index","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"     * of the person and the transaction.","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"     * @param index","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"     * @param transactionBuilder","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"    public AddTransactionCommand(Index index, TransactionBuilder transactionBuilder) {","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        requireAllNonNull(index, transactionBuilder);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"        this.transactionBuilder \u003d transactionBuilder;","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        Person person \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"        long personIdentifier \u003d person.getUniqueId();","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"        Transaction transaction \u003d transactionBuilder.createTransaction(personIdentifier);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"        if (!transaction.isValid()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"            throw new CommandException(MESSAGE_USAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"        model.addTransaction(transaction);","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, person, transaction));","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"                || (other instanceof AddTransactionCommand // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 index.equals(((AddTransactionCommand) other).index))","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 transactionBuilder.equals(((AddTransactionCommand) other).transactionBuilder);","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"TypeDefinition":10,"zunedz":76}},{"path":"src/main/java/seedu/address/logic/commands/AppendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"public class AppendCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"    public static final String COMMAND_WORD \u003d \"append\";","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"        + \": Append fields from the client in the list as specified by the index.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Appended fields to %s.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Another client is already using this email.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"    private final Index index;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"    private final Collection\u003cField\u003e fields;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"    private final Collection\u003cTag\u003e tags;","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"     * Creates an AppendCommand to append {@code Field}s to the specified {@code Person}.","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"     * @param index the index of the person","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"     * @param fields the fields to append","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"     * @param tags the tags to append","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"    public AppendCommand(Index index, Collection\u003cField\u003e fields, Collection\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        this.fields \u003d fields;","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d personToEdit.addFields(this.fields).addTags(this.tags);","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson));","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"TypeDefinition":61}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All data cleared.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":1,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/ClearFilteredCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import java.util.List;","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":" * Deletes a person identified using keywords from the address book.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"public class ClearFilteredCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"    public static final String COMMAND_WORD \u003d \"clearFiltered\";","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"            + \": Deletes all filtered clients.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"            + \"Parameters: none\\n\"","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"            + \"Example: \" + COMMAND_WORD + \"\";","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_NO_PERSONS_DELETED_OVERVIEW \u003d \"No clients to delete.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_PERSONS_DELETED_OVERVIEW \u003d \"%d clients deleted.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"    public ClearFilteredCommand() {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"        List\u003cPerson\u003e lastShownList \u003d List.copyOf(model.getFilteredPersonList());","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"            model.deletePerson(person);","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        int numPerson \u003d lastShownList.size();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        if (numPerson \u003d\u003d 0) {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"            return new CommandResult(MESSAGE_NO_PERSONS_DELETED_OVERVIEW);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_DELETED_OVERVIEW, lastShownList.size()));","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-01"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"        return other \u003d\u003d this; // short circuit if same object","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"TypeDefinition":8,"KeithCZW":40}},{"path":"src/main/java/seedu/address/logic/commands/CommandRegistry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.AddMembershipParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.AddTransactionParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.AppendCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.DeleteCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.DeleteTransactionCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.EditCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.FindCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.FindTransactionCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.parser.ListMembersCommandParser;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.PayCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.RemarkCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.RemoveCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.parser.RemoveMembershipParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.SortCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.UnpayCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"public class CommandRegistry {","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"    public static final Map\u003cString, Parser\u003c? extends Command\u003e\u003e PARSERS;","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"    static {","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"        HashMap\u003cString, Parser\u003c? extends Command\u003e\u003e parsers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"        // --- Do not modify above this line unless you know what you\u0027re doing. (Trust me, you don\u0027t.) ---","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(AddCommand.COMMAND_WORD, new AddCommandParser());","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(EditCommand.COMMAND_WORD, new EditCommandParser());","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(AppendCommand.COMMAND_WORD, new AppendCommandParser());","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(RemoveCommand.COMMAND_WORD, new RemoveCommandParser());","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(DeleteCommand.COMMAND_WORD, new DeleteCommandParser());","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(ClearCommand.COMMAND_WORD, (String args) -\u003e new ClearCommand());","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(FindCommand.COMMAND_WORD, new FindCommandParser());","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(ListCommand.COMMAND_WORD, (String args) -\u003e new ListCommand());","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(ExitCommand.COMMAND_WORD, (String args) -\u003e new ExitCommand());","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(HelpCommand.COMMAND_WORD, (String args) -\u003e new HelpCommand());","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"        parsers.put(ClearFilteredCommand.COMMAND_WORD, (String args) -\u003e new ClearFilteredCommand());","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(RemarkCommand.COMMAND_WORD, new RemarkCommandParser());","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"        parsers.put(AddMembershipCommand.COMMAND_WORD, new AddMembershipParser());","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"LapisRaider"},"content":"        parsers.put(SortCommand.COMMAND_WORD, new SortCommandParser());","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"        parsers.put(AddTransactionCommand.COMMAND_WORD, new AddTransactionParser());","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"        parsers.put(ListTransactionCommand.COMMAND_WORD, (String args) -\u003e new ListTransactionCommand());","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        parsers.put(FindTransactionCommand.COMMAND_WORD, new FindTransactionCommandParser());","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"        parsers.put(UndoCommand.COMMAND_WORD, (String args) -\u003e new UndoCommand());","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        parsers.put(DeleteTransactionCommand.COMMAND_WORD, new DeleteTransactionCommandParser());","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"        parsers.put(PayCommand.COMMAND_WORD, new PayCommandParser());","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"        parsers.put(UnpayCommand.COMMAND_WORD, new UnpayCommandParser());","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"        parsers.put(RemoveMembershipCommand.COMMAND_WORD, new RemoveMembershipParser());","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"        parsers.put(ListMembersCommand.COMMAND_WORD, new ListMembersCommandParser());","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"        // --- Do not modify below this line unless you know what you\u0027re doing. (Trust me, you don\u0027t.) ---","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"        PARSERS \u003d Collections.unmodifiableMap(parsers);","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"TypeDefinition":29,"LapisRaider":1,"zunedz":25,"KeithCZW":6}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"    //@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"    /** The application should undo the effects of the prev command. */","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"    private final boolean undoPrevCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"        this.undoPrevCommand \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"    //@@author","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean undoPrevCommand) {","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"LapisRaider"},"content":"        this.undoPrevCommand \u003d undoPrevCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"    //@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"    public boolean isUndoPrevCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"        return undoPrevCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"    //@@author","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"LapisRaider"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"LapisRaider"},"content":"                \u0026\u0026 undoPrevCommand \u003d\u003d otherCommandResult.undoPrevCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LapisRaider":31,"-":63}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"            + \": Delete the client in the list as specified by the index.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"            + \"Parameters: INDEX (between 1 and 2147483647 inclusive)\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted %s.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":3,"zunedz":1,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"public class DeleteTransactionCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTransaction\";","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"            + \": Delete the transaction in the list as specified by the index.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"            + \"Parameters: INDEX (between 1 and 2147483647 inclusive)\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_DELETE_TRANSACTION_SUCCESS \u003d \"Deleted %s.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"    public DeleteTransactionCommand(Index targetIndex) {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"        List\u003cTransaction\u003e lastShownList \u003d model.getFilteredTransactionList();","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"        Transaction transactionToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"        model.deleteTransaction(transactionToDelete);","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TRANSACTION_SUCCESS, transactionToDelete));","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"                || (other instanceof DeleteTransactionCommand // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTransactionCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"TypeDefinition":3,"zunedz":50}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"            + \": Edit the fields of the client in the list as specified by the index. \"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"            + \"Existing values will be overwritten.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"            + \"Parameters: INDEX (between 1 and 2147483647 inclusive) \"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Name.PREFIX + \"NAME] \"","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Phone.PREFIX + \"PHONE] \"","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Email.PREFIX + \"EMAIL] \"","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Address.PREFIX + \"ADDRESS] \"","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Remark.PREFIX + \"REMARK] \"","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Birthday.PREFIX + \"BIRTHDAY] \"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Tag.PREFIX + \"TAG]...\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"            + Phone.PREFIX + \"91234567 \"","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"            + Email.PREFIX + \"johndoe@example.com \"","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"            + Remark.PREFIX + \"Filing for bankruptcy.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited %s.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Another client is already using this email.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"    private final List\u003cField\u003e fields;","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"     * Creates an EditCommand to edit the specified {@code Person}.","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"     * @param index the index of the person","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"     * @param fields the fields to edit","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"     * @param tags the tags to edit","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"    public EditCommand(Index index, List\u003cField\u003e fields, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"        requireAllNonNull(index, fields);","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"        this.fields \u003d Collections.unmodifiableList(fields);","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d personToEdit.addFields(this.fields);","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"TypeDefinition"},"content":"        // Update tags.","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"TypeDefinition"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"TypeDefinition"},"content":"            editedPerson \u003d editedPerson.setTags(tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"TypeDefinition"},"content":"        // Compare tags.","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"TypeDefinition"},"content":"        if (tags !\u003d null \u0026\u0026 !tags.equals(e.tags)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"TypeDefinition"},"content":"            return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"TypeDefinition"},"content":"        return index.equals(e.index) \u0026\u0026 new HashSet\u003c\u003e(fields).equals(new HashSet\u003c\u003e(e.fields));","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"TypeDefinition":40,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting program...\";","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"TypeDefinition":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.util.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":" * Finds and lists all persons in address book whose name, phone, email, address or tags","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":" * contains any of the argument keywords.","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"            + \": Find all clients whose name, phone, email, address, tags or membership contain any of \"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"            + \"the specified keywords (case-insensitive).\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"    private final PersonContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"    public FindCommand(PersonContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        int numPersons \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        if (numPersons \u003d\u003d 0) {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"            return new CommandResult(Messages.MESSAGE_NO_PERSONS_FOUND_OVERVIEW);","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_PERSONS_FOUND_OVERVIEW, numPersons));","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"DaneMarc":4,"TypeDefinition":9,"zunedz":1,"-":34}},{"path":"src/main/java/seedu/address/logic/commands/FindTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.TransactionPredicateBuilder;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.TransactionWithIdentifierPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"public class FindTransactionCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    public static final String COMMAND_WORD \u003d \"findTransaction\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"            + \": Find all transactions of the client in the list as specified by the index.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"            + \"Parameters: INDEX (between 1 and 2147483647 inclusive) \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    private final Index index;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"    private final TransactionPredicateBuilder predicateProducer;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"     * Creates a FindTransactionCommand with the specified index","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"     * and predicateProducer that returns a TransactionPredicate.","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    public FindTransactionCommand(Index index, TransactionPredicateBuilder predicateProducer) {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"        this.predicateProducer \u003d predicateProducer;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"        Person person \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"        long personIdentifier \u003d person.getUniqueId();","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"        TransactionWithIdentifierPredicate predicate \u003d predicateProducer.createTransactionPredicate(personIdentifier);","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        model.updateFilteredTransactionList(predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"        if (model.getFilteredTransactionList().size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"            return new CommandResult(","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"                    String.format(Messages.MESSAGE_NO_TRANSACTIONS_LISTED_OVERVIEW, person.toString()));","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_TRANSACTIONS_LISTED_OVERVIEW, person.toString()));","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"                || (other instanceof FindTransactionCommand // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 index.equals(((FindTransactionCommand) other).index))","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 predicateProducer.equals(((FindTransactionCommand) other).predicateProducer);","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"TypeDefinition":7,"zunedz":60}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows link to the user guide.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All clients listed.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/ListMembersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.util.PersonContainsMembershipPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":" * Lists all persons in address book membership matches the provided tier","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"public class ListMembersCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"    public static final String COMMAND_WORD \u003d \"listMembers\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"            + \": Lists all clients of the specified tier. \"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"            + \"It displays all members if no tier is specified. \"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"            + \"There are 3 membership tiers: Bronze, Silver \u0026 Gold.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"            + \"[MEMBERSHIP]\\n\"","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"            + \"Example: \" + COMMAND_WORD + \" gold\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"    private final PersonContainsMembershipPredicate predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"    public ListMembersCommand(PersonContainsMembershipPredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        int numPersons \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        if (numPersons \u003d\u003d 0) {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"            return new CommandResult(Messages.MESSAGE_NO_PERSONS_FOUND_OVERVIEW);","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_PERSONS_FOUND_OVERVIEW, numPersons));","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"                || (other instanceof ListMembersCommand // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"                \u0026\u0026 predicate.equals(((ListMembersCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"TypeDefinition":12,"KeithCZW":36}},{"path":"src/main/java/seedu/address/logic/commands/ListTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TRANSACTIONS;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"public class ListTransactionCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"    public static final String COMMAND_WORD \u003d \"listTransaction\";","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All clients\u0027 transactions listed.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"        model.updateFilteredTransactionList(PREDICATE_SHOW_ALL_TRANSACTIONS);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"TypeDefinition":1,"zunedz":25}},{"path":"src/main/java/seedu/address/logic/commands/PayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"public class PayCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    public static final String COMMAND_WORD \u003d \"pay\";","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"            + \": Set the status of the transaction at specified index to \u0027Paid\u0027.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"            + \"Parameters: INDEX (between 1 and 2147483647 inclusive) \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"            + \"Format: \" + COMMAND_WORD + \" INDEX\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Transaction set to paid.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    private final Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"    public PayCommand(Index index) {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"        List\u003cTransaction\u003e transactionList \u003d model.getFilteredTransactionList();","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"        if (index.getZeroBased() \u003e\u003d transactionList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        Transaction transactionToEdit \u003d transactionList.get(index.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        Transaction editedTransaction \u003d transactionToEdit.setStatusTo(PayCommand.class);","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"        model.setTransaction(transactionToEdit, editedTransaction);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"                || (other instanceof PayCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 index.equals(((PayCommand) other).index)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"TypeDefinition":4,"zunedz":50}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.util.List;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"        + \": Add/Remove a remark to the client in the list as specified by the index.\"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"        + \"Existing remarks will be overwritten.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"        + \"Parameters: INDEX (between 1 and 2147483647 inclusive) \"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"        + \"r/[REMARK]\\n\"","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"        + \"Example: \" + COMMAND_WORD + \" 2 \"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"        + \"r/Goods to be delivered by next Thursday.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to %s.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from %s.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"    private final Index index;","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"    private final Remark remark;","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d personToEdit.addFields(remark);","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"            return true;","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"TypeDefinition"},"content":"            return false;","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"        // state check","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"TypeDefinition"},"content":"            \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"TypeDefinition":84}},{"path":"src/main/java/seedu/address/logic/commands/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"            + \": Remove the optional fields from the client in the list as specified by the index.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Removed fields from %s.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Another client is already using this email.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"    private final Index index;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"    private final Collection\u003cPrefix\u003e fieldPrefixes;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"    private final Collection\u003cTag\u003e tags;","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"     * Creates a RemoveCommand to remove {@code Field}s from the specified {@code Person}.","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"     * @param index the index of the person","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"     * @param prefixes the prefixes of the fields to remove","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"     * @param tags the tags to remove","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"    public RemoveCommand(Index index, Collection\u003cPrefix\u003e prefixes, Collection\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        this.fieldPrefixes \u003d prefixes;","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d personToEdit.removeFields(this.fieldPrefixes).removeTags(this.tags);","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson));","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"TypeDefinition":61}},{"path":"src/main/java/seedu/address/logic/commands/RemoveMembershipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":" * Removes a membership from a person in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"public class RemoveMembershipCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"    public static final String COMMAND_WORD \u003d \"removeMembership\";","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"            + \": Remove membership from the client in the list as specified by the index.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"            + \"INDEX (between 1 and 2147483647 inclusive)\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"            + \"Example: \" + COMMAND_WORD + \"1\";","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Removed membership from %s.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_NO_MEMBERSHIP \u003d \"%1$s does not have a membership\";","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"    private final Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"    public RemoveMembershipCommand(Index index) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"        if (!personToEdit.hasField(Membership.PREFIX)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"            return new CommandResult(String.format(MESSAGE_NO_MEMBERSHIP, personToEdit));","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"        Person editedPerson \u003d personToEdit.removeFields(Membership.PREFIX);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToEdit));","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"                || (other instanceof RemoveMembershipCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"                \u0026\u0026 index.equals(((RemoveMembershipCommand) other).index));","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"TypeDefinition":8,"KeithCZW":59}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":" * Sorts the person list in address book based on fields given.","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"LapisRaider"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Client list sorted accordingly.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_EMPTY_ERROR \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"        \"No fields specified. Client list remains unchanged.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"    public static final String DESCENDING_KEYWORD \u003d \"desc\";","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"            + \": Sort the client list according to the order of the fields specified.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"            + \"[\" + Name.PREFIX + \"] \"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"            + \"[\" + Phone.PREFIX + \"] \"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"LapisRaider"},"content":"            + \"[\" + Email.PREFIX + \"] \"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"            + \"[\" + Address.PREFIX + \"] \"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"            + \"[\" + Remark.PREFIX + \"] \"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"            + \"[\" + Birthday.PREFIX + \"]\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"            + \"Add keyword\" + DESCENDING_KEYWORD + \" after a prefix to sort in descending order.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"LapisRaider"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/ e/ desc a/ n/\";","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"LapisRaider"},"content":"    private final List\u003cFieldSortOrder\u003e fieldSortOrderList;","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"LapisRaider"},"content":"     * Creates a SortCommand to sort the person list in address book based on fields given.","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"LapisRaider"},"content":"     * @param fieldSortOrderList a list of information about the fields to be sorted in the order of the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"LapisRaider"},"content":"    public SortCommand(List\u003cFieldSortOrder\u003e fieldSortOrderList) {","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"        requireNonNull(fieldSortOrderList);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"LapisRaider"},"content":"        this.fieldSortOrderList \u003d fieldSortOrderList;","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"     * Sorts the person list based on fields and information provided.","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"LapisRaider"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"LapisRaider"},"content":"     * @return CommandResult stating whether it has been successful.","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"LapisRaider"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"        Comparator\u003cPerson\u003e comparator \u003d null;","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"        for (FieldSortOrder fieldSortOrder : fieldSortOrderList) {","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"            Comparator\u003cPerson\u003e currComperator;","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"            if (fieldSortOrder.getIsDescendingOrder()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"                currComperator \u003d getComparatorDescending(fieldSortOrder.getFieldPrefix());","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"            } else {","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"LapisRaider"},"content":"                currComperator \u003d getComparatorDefault(fieldSortOrder.getFieldPrefix());","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"LapisRaider"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"LapisRaider"},"content":"            if (comparator \u003d\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"LapisRaider"},"content":"                comparator \u003d currComperator;","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"LapisRaider"},"content":"            } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"LapisRaider"},"content":"                comparator \u003d comparator.thenComparing(currComperator);","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"LapisRaider"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"LapisRaider"},"content":"        if (comparator \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"LapisRaider"},"content":"            throw new CommandException(MESSAGE_EMPTY_ERROR);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"LapisRaider"},"content":"        model.sortPersonList(comparator);","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"LapisRaider"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"LapisRaider"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"LapisRaider"},"content":"     * Get Comparator lambda function on how the people are to be sorted based on certain fields.","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"LapisRaider"},"content":"     * @param fieldPrefix the field to be sorted by","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"LapisRaider"},"content":"     * @return Comparator lambda function.","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"LapisRaider"},"content":"    private Comparator\u003cPerson\u003e getComparatorDefault(Prefix fieldPrefix) {","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"LapisRaider"},"content":"        return (p1, p2) -\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"LapisRaider"},"content":"            Optional\u003cField\u003e p1Field \u003d p1.getField(fieldPrefix);","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"LapisRaider"},"content":"            Optional\u003cField\u003e p2Field \u003d p2.getField(fieldPrefix);","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"LapisRaider"},"content":"            //null values are given lower priority","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"LapisRaider"},"content":"            if (p1Field.isEmpty() || p2Field.isEmpty()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"LapisRaider"},"content":"                return compareNullField(p1Field, p2Field);","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"LapisRaider"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"LapisRaider"},"content":"            return p1Field.get().compareTo(p2Field.get());","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"LapisRaider"},"content":"        };","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"LapisRaider"},"content":"    private Comparator\u003cPerson\u003e getComparatorDescending(Prefix fieldPrefix) {","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"LapisRaider"},"content":"        return (p1, p2) -\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"LapisRaider"},"content":"            Optional\u003cField\u003e p1Field \u003d p1.getField(fieldPrefix);","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"LapisRaider"},"content":"            Optional\u003cField\u003e p2Field \u003d p2.getField(fieldPrefix);","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"LapisRaider"},"content":"            //null values are given lower priority","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"LapisRaider"},"content":"            if (p1Field.isEmpty() || p2Field.isEmpty()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"LapisRaider"},"content":"                return compareNullField(p1Field, p2Field);","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"LapisRaider"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"LapisRaider"},"content":"            return p2Field.get().compareTo(p1Field.get());","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"LapisRaider"},"content":"        };","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"LapisRaider"},"content":"    private int compareNullField(Optional\u003cField\u003e p1Field, Optional\u003cField\u003e p2Field) {","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"LapisRaider"},"content":"        //null values would be the last in list in ascending order","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"LapisRaider"},"content":"        if (p1Field.isEmpty() \u0026\u0026 p2Field.isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"LapisRaider"},"content":"            return 1;","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"LapisRaider"},"content":"        } else if (p1Field.isPresent() \u0026\u0026 p2Field.isEmpty()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"LapisRaider"},"content":"            return -1;","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"LapisRaider"},"content":"        return 0; //both empty","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"LapisRaider"},"content":"     * Stores the details on how a field is to be sorted.","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":138,"author":{"gitId":"LapisRaider"},"content":"    public static class FieldSortOrder {","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"LapisRaider"},"content":"        private final Prefix fieldPrefix;","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"LapisRaider"},"content":"        private final boolean isDescendingOrder;","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":142,"author":{"gitId":"LapisRaider"},"content":"        /**","lastModifiedDate":"2022-03-12"},{"lineNumber":143,"author":{"gitId":"LapisRaider"},"content":"         * Constructor of FieldSortOrder.","lastModifiedDate":"2022-03-12"},{"lineNumber":144,"author":{"gitId":"LapisRaider"},"content":"         *","lastModifiedDate":"2022-03-12"},{"lineNumber":145,"author":{"gitId":"LapisRaider"},"content":"         * @param fieldPrefix the field.","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"LapisRaider"},"content":"         * @param isDescendingOrder whether the field should be sorted in descending order.","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"LapisRaider"},"content":"         */","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"LapisRaider"},"content":"        public FieldSortOrder(Prefix fieldPrefix, boolean isDescendingOrder) {","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"LapisRaider"},"content":"            requireAllNonNull(fieldPrefix, isDescendingOrder);","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"LapisRaider"},"content":"            this.fieldPrefix \u003d fieldPrefix;","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"LapisRaider"},"content":"            this.isDescendingOrder \u003d isDescendingOrder;","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"LapisRaider"},"content":"        public Prefix getFieldPrefix() {","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"LapisRaider"},"content":"            return fieldPrefix;","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"LapisRaider"},"content":"        public boolean getIsDescendingOrder() {","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"LapisRaider"},"content":"            return isDescendingOrder;","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"LapisRaider"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"LapisRaider"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"LapisRaider"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"LapisRaider"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"LapisRaider"},"content":"                return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"LapisRaider"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"LapisRaider"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"LapisRaider"},"content":"            if (!(other instanceof FieldSortOrder)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"LapisRaider"},"content":"                return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"LapisRaider"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"LapisRaider"},"content":"            // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"LapisRaider"},"content":"            FieldSortOrder f \u003d (FieldSortOrder) other;","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"LapisRaider"},"content":"            return fieldPrefix.equals(f.fieldPrefix) \u0026\u0026 isDescendingOrder \u003d\u003d f.isDescendingOrder;","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"LapisRaider"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"LapisRaider"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"LapisRaider"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"LapisRaider"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"LapisRaider"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"LapisRaider"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"LapisRaider"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"LapisRaider"},"content":"        // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"LapisRaider"},"content":"        SortCommand s \u003d (SortCommand) other;","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"LapisRaider"},"content":"        return fieldSortOrderList.equals(s.fieldSortOrderList);","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":197,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"LapisRaider":190,"TypeDefinition":7}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"//@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":" * Undo previous modification made to the addressBook personList data.","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"    public static final String MESSAGE_UNDO_ACKNOWLEDGEMENT \u003d \"Undid previous modification.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"    public static final String REACHED_UNDO_LIMIT \u003d \"Cannot undo. Undo limit reached.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"        //show full list when undoing","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"        return new CommandResult(MESSAGE_UNDO_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"LapisRaider":24}},{"path":"src/main/java/seedu/address/logic/commands/UnpayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"public class UnpayCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    public static final String COMMAND_WORD \u003d \"unpay\";","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"            + \": Set the status of the transaction at specified index to \u0027Unpaid\u0027.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"            + \"Parameters: INDEX (between 1 and 2147483647 inclusive) \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"            + \"Format: \" + COMMAND_WORD + \" INDEX\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Transaction set to unpaid.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    private final Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"    public UnpayCommand(Index index) {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"        List\u003cTransaction\u003e transactionList \u003d model.getFilteredTransactionList();","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        if (index.getZeroBased() \u003e\u003d transactionList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        Transaction transactionToEdit \u003d transactionList.get(index.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"        Transaction editedTransaction \u003d transactionToEdit.setStatusTo(UnpayCommand.class);","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"        model.setTransaction(transactionToEdit, editedTransaction);","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"                || (other instanceof UnpayCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 index.equals(((UnpayCommand) other).index)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"TypeDefinition":4,"zunedz":51}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.FieldRegistry;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    public AddCommand parse(String args) throws ParseException, IllegalArgumentException {","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        Prefix[] allPrefixes \u003d Arrays.copyOf(FieldRegistry.PREFIXES, FieldRegistry.PREFIXES.length + 1);","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        allPrefixes[allPrefixes.length - 1] \u003d Tag.PREFIX;","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, allPrefixes);","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        // Ensure that the preamble is empty, and that all required fields are present.","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        if (!arePrefixesPresent(argMultimap, FieldRegistry.REQUIRED_PREFIXES)","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"        // Parse tags.","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"        Set\u003cTag\u003e tags \u003d Tag.createSet(argMultimap.getAllValues(Tag.PREFIX));","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        // Parse all fields.","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"        for (Prefix p : FieldRegistry.PREFIXES) {","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"            Optional\u003cString\u003e argOpt \u003d argMultimap.getValue(p);","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"            if (!argOpt.isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"                continue;","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"            FieldParser\u003c? extends Field\u003e parser \u003d FieldRegistry.PARSERS.get(p);","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"            Field field \u003d parser.parse(argOpt.get());","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"            fields.add(field);","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"        Person person \u003d new Person(fields, tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"TypeDefinition":24,"zunedz":4,"-":41,"KeithCZW":1}},{"path":"src/main/java/seedu/address/logic/parser/AddMembershipParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.commands.AddMembershipCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":" * Parses input arguments and creates a new AddMembershipCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"public class AddMembershipParser implements Parser\u003cAddMembershipCommand\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMembershipCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"     * and returns an AddMembershipCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"    public AddMembershipCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, Membership.PREFIX, Membership.DATE_PREFIX);","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"        Index index;","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"            index \u003d IndexParser.parse(argMultimap.getPreamble());","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"                    AddMembershipCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"        String membershipName \u003d argMultimap.getValue(Membership.PREFIX).orElse(\"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"        if (!Membership.isValidName(membershipName)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"            throw new ParseException(Membership.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"        Membership membership;","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        String date \u003d argMultimap.getValue(Membership.DATE_PREFIX).orElse(\"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"        if (!date.equals(\"\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"            if (!Membership.isValidDate(date)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"                throw new ParseException(Membership.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"            membership \u003d new Membership(membershipName, LocalDate.parse(date));","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"            membership \u003d new Membership(membershipName);","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"        return new AddMembershipCommand(index, membership);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"KeithCZW":53}},{"path":"src/main/java/seedu/address/logic/parser/AddTransactionParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.AddTransactionCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.TransactionField;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.TransactionFieldRegistry;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"public class AddTransactionParser implements Parser\u003cAddTransactionCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"     * AddTransactionCommand and returns an AddTransactionCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"     * object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"    public AddTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"        List\u003cPrefix\u003e prefixList \u003d new ArrayList\u003c\u003e(List.of(TransactionFieldRegistry.PREFIXES));","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"        prefixList.addAll(List.of(TransactionFieldRegistry.FLAGS));","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"        Prefix[] allPrefixes \u003d prefixList.toArray(new Prefix[0]);","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, allPrefixes);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        String preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        // Ensure that all required fields are present.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        if (!arePrefixesPresent(argMultimap, TransactionFieldRegistry.REQUIRED_PREFIXES)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"                    AddTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"        // Get the index of person we want to modify, throw error if there isn\u0027t one.","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"        Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"            index \u003d IndexParser.parse(argMultimap.getPreamble());","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"                    AddTransactionCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"        // Parse all transaction fields.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"        ArrayList\u003cTransactionField\u003e transactionFields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"        for (Prefix p : TransactionFieldRegistry.PREFIXES) {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"            Optional\u003cString\u003e argOpt \u003d argMultimap.getValue(p);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"            if (argOpt.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"                continue;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"            TransactionFieldParser\u003c? extends TransactionField\u003e parser \u003d TransactionFieldRegistry.PARSERS.get(p);","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"            TransactionField field \u003d parser.parse(argOpt.get());","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"            transactionFields.add(field);","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"        // throwing random shits here, basically parse all the flags using FP lol","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"        List\u003cTransactionField\u003e transactionFieldsFlags \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"            Arrays.stream(TransactionFieldRegistry.FLAGS)","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"                    .map(x -\u003e parseFlag(x, argMultimap))","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"                    .filter(Optional::isPresent)","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"                    .map(Optional::get)","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"        transactionFields.addAll(transactionFieldsFlags);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"        return new AddTransactionCommand(index, (long identifier) -\u003e new Transaction(transactionFields, identifier));","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"     * parse the flag to return TransactionField","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"    private static Optional\u003cTransactionField\u003e parseFlag(Prefix prefix, ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"            return Optional.of(TransactionFieldRegistry.PARSERS.get(prefix)","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"                    .parse(argumentMultimap.getValue(prefix)","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"                            .map(y -\u003e \"true\")","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"                            .orElse(\"false\")));","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zunedz":102}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNRECOGNIZED_COMMAND;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.commands.CommandRegistry;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    public Command parseCommand(String userInput) throws ParseException, IllegalArgumentException {","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        if (!CommandRegistry.PARSERS.containsKey(commandWord)) {","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"            throw new ParseException(MESSAGE_UNRECOGNIZED_COMMAND);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"        return CommandRegistry.PARSERS.get(commandWord).parse(arguments);","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":5,"zunedz":1,"-":40}},{"path":"src/main/java/seedu/address/logic/parser/AppendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.commands.AppendCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.FieldRegistry;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"public class AppendCommandParser implements Parser\u003cAppendCommand\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"     * Parses the given {@code String} of arguments in the context of the AppendCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"     * and returns an AppendCommand object for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"    public AppendCommand parse(String args) throws ParseException, IllegalArgumentException {","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"        Prefix[] allPrefixes \u003d Arrays.copyOf(FieldRegistry.PREFIXES, FieldRegistry.PREFIXES.length + 1);","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        allPrefixes[allPrefixes.length - 1] \u003d Tag.PREFIX;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, allPrefixes);","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"        Index index;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"            index \u003d IndexParser.parse(argMultimap.getPreamble());","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AppendCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        // Parse all fields.","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        for (Prefix p : FieldRegistry.PREFIXES) {","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"            Optional\u003cString\u003e argOpt \u003d argMultimap.getValue(p);","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"            if (argOpt.isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"                FieldParser\u003c? extends Field\u003e parser \u003d FieldRegistry.PARSERS.get(p);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"                Field field \u003d parser.parse(argOpt.get());","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"                fields.add(field);","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"        Set\u003cTag\u003e tags \u003d Tag.createSet(argMultimap.getAllValues(Tag.PREFIX));","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"        return new AppendCommand(index, fields, tags);","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"TypeDefinition":53}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"     * Returns all the prefixes in the multimap.","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"     * @return all the prefixes in the multimap.","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"    public List\u003cPrefix\u003e getPrefixes() {","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"        return new ArrayList\u003c\u003e(argMultimap.keySet());","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"TypeDefinition":8,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"            Index index \u003d IndexParser.parse(args);","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"TypeDefinition":1,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.DeleteTransactionCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":" * Parses input arguments and creates a new DeleteTransactionCommand object","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"public class DeleteTransactionCommandParser implements Parser\u003cDeleteTransactionCommand\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    public DeleteTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"            Index index \u003d IndexParser.parse(args);","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"            return new DeleteTransactionCommand(index);","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTransactionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"zunedz":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.FieldRegistry;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        Prefix[] allPrefixes \u003d Arrays.copyOf(FieldRegistry.PREFIXES, FieldRegistry.PREFIXES.length + 1);","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        allPrefixes[allPrefixes.length - 1] \u003d Tag.PREFIX;","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, allPrefixes);","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        Index index;","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"            index \u003d IndexParser.parse(argMultimap.getPreamble());","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"        // Parse all fields.","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        for (Prefix p : FieldRegistry.PREFIXES) {","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"            Optional\u003cString\u003e argOpt \u003d argMultimap.getValue(p);","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"            if (argOpt.isPresent()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"                FieldParser\u003c? extends Field\u003e parser \u003d FieldRegistry.PARSERS.get(p);","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"                Field field \u003d parser.parse(argOpt.get());","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"                fields.add(field);","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"        // Parse tags. Null represents no change. Empty set represents clear tags.","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"        Set\u003cTag\u003e tags \u003d parseTagsForEdit(argMultimap.getAllValues(Tag.PREFIX)).orElse(null);","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"        // Check that something was edited.","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"        if (tags \u003d\u003d null \u0026\u0026 fields.isEmpty()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"        return new EditCommand(index, fields, tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"        return Optional.of(Tag.createSet(tagSet));","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"TypeDefinition":24,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/FieldParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":" * Utility class for parsing a {@code String field} into a {@code Field}.","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"public interface FieldParser\u003cT extends Field\u003e {","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"    T parse(String arguments) throws ParseException;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"TypeDefinition":11}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.util.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"        return new FindCommand(new PersonContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"DaneMarc":1,"zunedz":1,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/FindTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.FindTransactionCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.TransactionWithIdentifierPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"public class FindTransactionCommandParser implements Parser\u003cFindTransactionCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"    public FindTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"        Index index;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"            index \u003d IndexParser.parse(args.trim());","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"                    FindTransactionCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"        return new FindTransactionCommand(index, TransactionWithIdentifierPredicate::new);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"zunedz":33}},{"path":"src/main/java/seedu/address/logic/parser/IndexParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":" * Utility class for parsing a {@code String index} into a {@code Index}.","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"public class IndexParser {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"     * trimmed.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"    public static Index parse(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"TypeDefinition":25}},{"path":"src/main/java/seedu/address/logic/parser/ListMembersCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.commands.ListMembersCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.util.PersonContainsMembershipPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"public class ListMembersCommandParser implements Parser\u003cListMembersCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"    public ListMembersCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"            return new ListMembersCommand(new PersonContainsMembershipPredicate(Membership.Tier.ALL));","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"        trimmedArgs \u003d trimmedArgs.toLowerCase();","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        if (!trimmedArgs.equals(\"gold\") \u0026\u0026 !trimmedArgs.equals(\"silver\") \u0026\u0026 !trimmedArgs.equals(\"bronze\")) {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListMembersCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"        return new ListMembersCommand(new PersonContainsMembershipPredicate(Membership.getTierFromString(trimmedArgs)));","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"KeithCZW":34}},{"path":"src/main/java/seedu/address/logic/parser/PayCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.PayCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"public class PayCommandParser implements Parser\u003cPayCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    public PayCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"        Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"            index \u003d IndexParser.parse(args.trim());","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"                    PayCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"        return new PayCommand(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zunedz":32}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"public class Prefix implements Serializable {","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"    private final boolean isRequired;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"    private final boolean isFlag;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"     * Creates a prefix with a string. The prefix defaults to a non-required, non-flag prefix.","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"        this.isRequired \u003d false;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"        this.isFlag \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"     * Creates a prefix with a string. The prefix defaults to a non-flag prefix.","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"    public Prefix(String prefix, boolean isRequired) {","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        this.isRequired \u003d isRequired;","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"        this.isFlag \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"     * Creates a prefix with a string.","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    public Prefix(String prefix, boolean isRequired, boolean isFlag) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        this.isRequired \u003d isRequired;","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        this.isFlag \u003d isFlag;","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    public boolean isFlag() {","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"        return isFlag;","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        return this.prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"    public boolean isRequired() {","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"        return this.isRequired;","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"TypeDefinition":22,"zunedz":15,"-":37}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"     * Parses the given {@code String} of arguments in the context of the RemarkCommand","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"     * and returns a RemarkCommand object for execution.","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, Remark.PREFIX);","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"        Index index;","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"            index \u003d IndexParser.parse(argMultimap.getPreamble());","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"        Remark remark \u003d new Remark(argMultimap.getValue(Remark.PREFIX).orElse(\"\"));","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"TypeDefinition":34}},{"path":"src/main/java/seedu/address/logic/parser/RemoveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.commands.RemoveCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.FieldRegistry;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"public class RemoveCommandParser implements Parser\u003cRemoveCommand\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"     * and returns an RemoveCommand object for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"    public RemoveCommand parse(String args) throws ParseException, IllegalArgumentException {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"        Prefix[] allPrefixes \u003d Arrays.copyOf(FieldRegistry.PREFIXES, FieldRegistry.PREFIXES.length + 1);","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"        allPrefixes[allPrefixes.length - 1] \u003d Tag.PREFIX;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, allPrefixes);","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"        Index index;","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"            index \u003d IndexParser.parse(argMultimap.getPreamble());","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        return new RemoveCommand(index, argMultimap.getPrefixes(), Tag.createSet(argMultimap.getAllValues(Tag.PREFIX)));","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"TypeDefinition":36}},{"path":"src/main/java/seedu/address/logic/parser/RemoveMembershipParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.commands.RemoveMembershipCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":" * Parses input arguments and creates a new RemoveMembershipCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"public class RemoveMembershipParser implements Parser\u003cRemoveMembershipCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveMembershipCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"     * and returns an RemoveMembershipCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"    public RemoveMembershipCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"        Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"            index \u003d IndexParser.parse(argMultimap.getPreamble());","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"                    RemoveMembershipCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"        return new RemoveMembershipCommand(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"KeithCZW":35}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.FieldRegistry;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":" * Parses user input for sorting the person list in address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":"     * @param args Arguments for sorting.","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":"     * @return SortCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"LapisRaider"},"content":"     * @throws ParseException if there is invalid input or arguments given are empty.","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"        Prefix[] allPrefixes \u003d Arrays.copyOf(FieldRegistry.PREFIXES, FieldRegistry.PREFIXES.length);","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"        Map\u003cString, Prefix\u003e prefixMap \u003d Arrays.stream(allPrefixes)","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"                .collect(Collectors.toMap(Prefix::getPrefix, prefix -\u003e prefix));","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"        String delimiters \u003d \"\\\\s|((?\u003d\" + Arrays.stream(allPrefixes).map(Prefix::getPrefix).collect(","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"                Collectors.joining(\"))|((?\u003d\")) + \"))\";","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"        String[] arguments \u003d args.split(delimiters);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"        return new SortCommand(getFieldSortOrderList(arguments, prefixMap));","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"LapisRaider"},"content":"     * Gets the list on how the fields should be sorted based on the arguments provided.","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"LapisRaider"},"content":"     * @param arguments information split in proper format based on what the user input.","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"LapisRaider"},"content":"     * @param prefixMap hashmap on the prefix and it\u0027s corresponding object.","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"LapisRaider"},"content":"     * @return list on how the fields should be sorted based on the arguments provided.","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"LapisRaider"},"content":"    private List\u003cSortCommand.FieldSortOrder\u003e getFieldSortOrderList(String[] arguments, Map\u003cString, Prefix\u003e prefixMap)","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"LapisRaider"},"content":"            throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"        List\u003cSortCommand.FieldSortOrder\u003e fieldSortOrderList \u003d new ArrayList\u003cSortCommand.FieldSortOrder\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"LapisRaider"},"content":"        for (int i \u003d 0; i \u003c arguments.length; ++i) {","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"LapisRaider"},"content":"            if (arguments[i].equals(\"\")) {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"LapisRaider"},"content":"                continue;","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"LapisRaider"},"content":"            //check if there is a prefix before desc keyword","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"LapisRaider"},"content":"            if (arguments[i].equals(SortCommand.DESCENDING_KEYWORD)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"LapisRaider"},"content":"                if (i - 1 \u003c 0 || !prefixMap.containsKey(arguments[i - 1])) {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"LapisRaider"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"LapisRaider"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"                continue;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"            if (!prefixMap.containsKey(arguments[i])) {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"LapisRaider"},"content":"            boolean isDescending \u003d false;","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"LapisRaider"},"content":"            if (i + 1 \u003c arguments.length) {","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"LapisRaider"},"content":"                isDescending \u003d arguments[i + 1].equals(SortCommand.DESCENDING_KEYWORD);","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"LapisRaider"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"LapisRaider"},"content":"            fieldSortOrderList.add(new SortCommand.FieldSortOrder(prefixMap.get(arguments[i]), isDescending));","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"LapisRaider"},"content":"        if (fieldSortOrderList.isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"LapisRaider"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"LapisRaider"},"content":"        return fieldSortOrderList;","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"LapisRaider":85}},{"path":"src/main/java/seedu/address/logic/parser/TransactionFieldParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.TransactionField;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"public interface TransactionFieldParser\u003cT extends TransactionField\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"    T parse(String arguments) throws ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zunedz":8}},{"path":"src/main/java/seedu/address/logic/parser/UnpayCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.UnpayCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"public class UnpayCommandParser implements Parser\u003cUnpayCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    public UnpayCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"        Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"            index \u003d IndexParser.parse(args.trim());","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"                    UnpayCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"        return new UnpayCommand(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zunedz":32}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.hash;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.TransactionList;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":" * Duplicates are not allowed (by .isSamePerson comparison) for Person object","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"    private final TransactionList transactions;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        transactions \u003d new TransactionList();","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"     * Creates an AddressBook using the Persons in the {@code persons}","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"    public AddressBook(List\u003cPerson\u003e persons, List\u003cTransaction\u003e transactions) {","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"        setPersons(persons);","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"        setTransactions(transactions);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"     * Creates an Address book using the Persons list and Transactions list","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"     * stored in a Map.","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"    public AddressBook(Map\u003cString, Object\u003e storageMap) {","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"        List\u003cPerson\u003e personList \u003d (List\u003cPerson\u003e) storageMap.get(Person.MAP_PREFIX);","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"        List\u003cTransaction\u003e transactionList \u003d (List\u003cTransaction\u003e) storageMap.get(Transaction.MAP_PREFIX);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"        setPersons(personList);","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"        setTransactions(transactionList);","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"     * Replaces the contents of the transaction list with {@code transactions}.","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"    public void setTransactions(List\u003cTransaction\u003e transactions) {","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"        this.transactions.setTransactions(transactions);","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"        setTransactions(newData.getTransactionList());","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"LapisRaider"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book based","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"LapisRaider"},"content":"     * certain fields defined in person.","lastModifiedDate":"2022-03-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"LapisRaider"},"content":"     * Sorts the person list based on the comparator provided.","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":138,"author":{"gitId":"LapisRaider"},"content":"     * @param comparator use to sort the person list.","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"LapisRaider"},"content":"    public void sortPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"LapisRaider"},"content":"        persons.sortPersonList(comparator);","lastModifiedDate":"2022-03-12"},{"lineNumber":142,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":143,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":144,"author":{"gitId":"zunedz"},"content":"    /// transaction methods","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"zunedz"},"content":"     * Adds a transaction to the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"zunedz"},"content":"    public void addTransaction(Transaction t) {","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"zunedz"},"content":"        transactions.add(t);","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"zunedz"},"content":"     * Replaces the given transaction {@code target} in the list with {@code editedTransaction}.","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"zunedz"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"zunedz"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"zunedz"},"content":"    public void setTransaction(Transaction target, Transaction editedTransaction) {","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"zunedz"},"content":"        requireNonNull(editedTransaction);","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"zunedz"},"content":"        transactions.setTransaction(target, editedTransaction);","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"zunedz"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"zunedz"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"zunedz"},"content":"    public void removeTransaction(Transaction key) {","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"zunedz"},"content":"        transactions.remove(key);","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"zunedz"},"content":"     * Removes all transactions from person with personId","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"zunedz"},"content":"    public void removeTransactionWithId(long personId) {","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"zunedz"},"content":"        transactions.removeWithId(personId);","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"zunedz"},"content":"    public Map\u003cString, List\u003cObject\u003e\u003e generateStorageMap() {","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"zunedz"},"content":"        Map\u003cString, List\u003cObject\u003e\u003e storageMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"zunedz"},"content":"        storageMap.put(Person.MAP_PREFIX, new ArrayList\u003c\u003e(persons.asUnmodifiableObservableList()));","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"zunedz"},"content":"        storageMap.put(Transaction.MAP_PREFIX, new ArrayList\u003c\u003e(transactions.asUnmodifiableObservableList()));","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"zunedz"},"content":"        return Collections.unmodifiableMap(storageMap);","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":203,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"zunedz"},"content":"    public ObservableList\u003cTransaction\u003e getTransactionList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"zunedz"},"content":"        return transactions.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons))","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 transactions.equals(((AddressBook) other).transactions);","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"zunedz"},"content":"        return hash(persons, transactions);","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TypeDefinition":6,"LapisRaider":11,"zunedz":89,"-":115}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    Predicate\u003cTransaction\u003e PREDICATE_SHOW_ALL_TRANSACTIONS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"LapisRaider"},"content":"     * Sorts the person list based on {@code comparator} given.","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"LapisRaider"},"content":"     * @param comparator {@code comparator} to sort the person list by.","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"LapisRaider"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"LapisRaider"},"content":"    void sortPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"     * Deletes the given transaction.","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"    void deleteTransaction(Transaction target);","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"    void deleteTransactionWithId(long personId);","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"zunedz"},"content":"     * Adds the given transaction.","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"zunedz"},"content":"    void addTransaction(Transaction transaction);","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"zunedz"},"content":"     * Replaces the given transaction {@code target} with {@code editedTransaction}.","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"zunedz"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"zunedz"},"content":"    void setTransaction(Transaction target, Transaction editedPerson);","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"zunedz"},"content":"    /** Returns an unmodifiable view of the filtered transaction list */","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"zunedz"},"content":"    ObservableList\u003cTransaction\u003e getFilteredTransactionList();","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"zunedz"},"content":"     * Updates the filter of the filtered transaction list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"zunedz"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"zunedz"},"content":"    void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LapisRaider":9,"zunedz":31,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"    private final FilteredList\u003cTransaction\u003e filteredTransactions;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        filteredTransactions \u003d new FilteredList\u003c\u003e(this.addressBook.getTransactionList());","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"        deleteTransactionWithId(target.getUniqueId());","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"zunedz"},"content":"    public void deleteTransaction(Transaction target) {","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"zunedz"},"content":"        addressBook.removeTransaction(target);","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"zunedz"},"content":"    };","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"zunedz"},"content":"    public void deleteTransactionWithId(long personId) {","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"zunedz"},"content":"        addressBook.removeTransactionWithId(personId);","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"zunedz"},"content":"    public void addTransaction(Transaction transaction) {","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"zunedz"},"content":"        requireNonNull(transaction);","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"zunedz"},"content":"        addressBook.addTransaction(transaction);","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"zunedz"},"content":"        updateFilteredTransactionList(PREDICATE_SHOW_ALL_TRANSACTIONS);","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"zunedz"},"content":"    };","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"zunedz"},"content":"    public void setTransaction(Transaction target, Transaction editedPerson) {","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"zunedz"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"zunedz"},"content":"        addressBook.setTransaction(target, editedPerson);","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"zunedz"},"content":"    };","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":161,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"LapisRaider"},"content":"    public void sortPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"LapisRaider"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-03-12"},{"lineNumber":164,"author":{"gitId":"LapisRaider"},"content":"        addressBook.sortPersonList(comparator);","lastModifiedDate":"2022-03-12"},{"lineNumber":165,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"zunedz"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Transaction List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"zunedz"},"content":"    public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"zunedz"},"content":"        return filteredTransactions;","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"zunedz"},"content":"    };","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"zunedz"},"content":"    public void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"zunedz"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"zunedz"},"content":"        filteredTransactions.setPredicate(predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":197,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 filteredTransactions.equals(other.filteredTransactions);","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LapisRaider":7,"zunedz":45,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"     * Returns an unmodifiable hashmap view of the persons","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"     * and transactions list.","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    Map\u003cString, List\u003cObject\u003e\u003e generateStorageMap();","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"     * Returns an unmodifiable view of the transactions list.","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    ObservableList\u003cTransaction\u003e getTransactionList();","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zunedz":14,"-":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"    Path getTempAddressBookFileDirectoryPath();","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"LapisRaider":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data/CinnamonBun.save\");","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"    private Path tempAddressBookFileDirectoryPath \u003d Paths.get(\"data/.temp\");","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"        setTempAddressBookFileDirectoryPath(newUserPrefs.getTempAddressBookFileDirectoryPath());","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"    //@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"LapisRaider"},"content":"    public Path getTempAddressBookFileDirectoryPath() {","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"LapisRaider"},"content":"        return tempAddressBookFileDirectoryPath;","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"LapisRaider"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"LapisRaider"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"    public void setTempAddressBookFileDirectoryPath(Path tempAddressBookFileDirectoryPath) {","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"        requireNonNull(tempAddressBookFileDirectoryPath);","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"        this.tempAddressBookFileDirectoryPath \u003d tempAddressBookFileDirectoryPath;","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"    //@@author","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TypeDefinition":2,"LapisRaider":17,"-":81}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"public class Address extends Field {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"a/\", true);","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"    private final String value;","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"        value \u003d address.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"    public static boolean isValid(String str) {","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        return str.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"        return value;","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"    public int compareTo(Field other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"            return -1;","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"LapisRaider"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"LapisRaider"},"content":"        return value.toLowerCase().compareTo(otherAddress.value.toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":14,"LapisRaider":9,"-":51}},{"path":"src/main/java/seedu/address/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import java.time.Period;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":" * Represents a Person\u0027s birthday in the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"public class Birthday extends Field {","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"b/\", false);","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"        \"Birthday must be in YYYY-MM-DD format, must exist, and cannot be in the future.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"    private final LocalDate value;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"     * @param birthday A valid birthday.","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"    public Birthday(String birthday) {","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"        birthday \u003d birthday.trim(); // Wow, look at that, we don\u0027t need a whole fucking parser to do one line.","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"        checkArgument(Birthday.isValid(birthday), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        value \u003d LocalDate.parse(birthday);","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"    public static boolean isValid(String str) {","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        LocalDate date;","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"            date \u003d LocalDate.parse(str);","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"            return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        return date.isBefore(LocalDate.now());","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"    public int getAge() {","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"        return Period.between(value, LocalDate.now()).getYears();","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"        return value.toString() + \" (\" + getAge() + \"yrs)\";","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"    public String toString() {","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"        return value.toString();","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"            || (other instanceof Birthday // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"            \u0026\u0026 value.equals(((Birthday) other).getValue())); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"LapisRaider"},"content":"    public int compareTo(Field other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"LapisRaider"},"content":"        if (!(other instanceof Birthday)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"LapisRaider"},"content":"            return -1;","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"LapisRaider"},"content":"        Birthday otherBirthday \u003d (Birthday) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"LapisRaider"},"content":"        return value.compareTo(otherBirthday.value);","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"TypeDefinition":74,"LapisRaider":10}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"public class Email extends Field {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"e/\", true);","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"    private final String value;","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        value \u003d email.trim().toLowerCase();","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"    public static boolean isValid(String str) {","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"        return str.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"        return value;","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"LapisRaider"},"content":"    public int compareTo(Field other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"LapisRaider"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"LapisRaider"},"content":"            return -1;","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"LapisRaider"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"LapisRaider"},"content":"        return value.toLowerCase().compareTo(otherEmail.value.toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":14,"LapisRaider":9,"-":65}},{"path":"src/main/java/seedu/address/model/person/Field.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"public abstract class Field implements Serializable, Comparable\u003cField\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"    public final Prefix prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"    Field(Prefix prefix) {","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"    public abstract String getValue();","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"TypeDefinition":14,"LapisRaider":1}},{"path":"src/main/java/seedu/address/model/person/FieldRegistry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.FieldParser;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"public class FieldRegistry {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"    public static final Map\u003cPrefix, FieldParser\u003c? extends Field\u003e\u003e PARSERS;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"    public static final Prefix[] REQUIRED_PREFIXES;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"    public static final Prefix[] PREFIXES;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"    static {","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"        HashMap\u003cPrefix, FieldParser\u003c? extends Field\u003e\u003e parsers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"        // --- Do not modify above this line unless you know what you\u0027re doing. (Trust me, you don\u0027t.) ---","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(Name.PREFIX, Name::new);","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(Phone.PREFIX, Phone::new);","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(Email.PREFIX, Email::new);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(Address.PREFIX, Address::new);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(Remark.PREFIX, Remark::new);","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"        parsers.put(Birthday.PREFIX, Birthday::new);","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"        // --- Do not modify below this line unless you know what you\u0027re doing. (Trust me, you don\u0027t.) ---","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"        PARSERS \u003d Collections.unmodifiableMap(parsers);","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        PREFIXES \u003d PARSERS.keySet().toArray(new Prefix[0]);","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"        REQUIRED_PREFIXES \u003d Arrays.stream(PREFIXES).filter(Prefix::isRequired).toArray(Prefix[]::new);","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"TypeDefinition":33}},{"path":"src/main/java/seedu/address/model/person/Membership.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":" * Represents a Person\u0027s Membership in the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"public class Membership extends Field {","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"    public enum Tier {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"        GOLD,","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"        SILVER,","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"        BRONZE,","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"        ALL","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"m/\", true);","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"    public static final Prefix DATE_PREFIX \u003d new Prefix(\"d/\", false);","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"            \"Membership tier must be either \u0027bronze\u0027, \u0027silver\u0027 or \u0027gold\u0027.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"    public static final String MESSAGE_DATE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"            \"Date must be in YYYY-MM-DD format, must exist, and cannot be in the future.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"    private final Tier tier;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"     * Constructs a {@code Membership}.","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"     * @param name A valid membership.","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"    public Membership(String name) {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"        name \u003d name.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"        name \u003d name.toLowerCase();","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"        tier \u003d getTierFromString(name);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"        date \u003d null;","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded Constructs a {@code Membership}.","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"     * @param name A valid membership name.","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"    public Membership(String name, LocalDate date) {","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"        name \u003d name.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"        name \u003d name.toLowerCase();","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"        tier \u003d getTierFromString(name);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"     * Returns a tier based on the given string.","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"    public static Tier getTierFromString(String name) {","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"        if (name.equals(\"gold\")) {","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"KeithCZW"},"content":"            return Tier.GOLD;","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"KeithCZW"},"content":"        } else if (name.equals(\"silver\")) {","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"KeithCZW"},"content":"            return Tier.SILVER;","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"KeithCZW"},"content":"        } else if (name.equals(\"bronze\")) {","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"KeithCZW"},"content":"            return Tier.BRONZE;","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"KeithCZW"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"KeithCZW"},"content":"            return Tier.ALL;","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"     * Returns a tier based on the given string.","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"    public Tier getTier() {","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"KeithCZW"},"content":"        return tier;","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"KeithCZW"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"KeithCZW"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"KeithCZW"},"content":"        test \u003d test.toLowerCase();","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"KeithCZW"},"content":"        return test.equals(\"gold\") || test.equals(\"silver\") || test.equals(\"bronze\");","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"KeithCZW"},"content":"     * Returns true if a given date is a valid date.","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"KeithCZW"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"TypeDefinition"},"content":"        LocalDate date;","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"TypeDefinition"},"content":"            date \u003d LocalDate.parse(test);","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"KeithCZW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"KeithCZW"},"content":"            return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"TypeDefinition"},"content":"        return date.isBefore(LocalDate.now());","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"KeithCZW"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"KeithCZW"},"content":"        String value \u003d \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"KeithCZW"},"content":"        if (tier \u003d\u003d Tier.GOLD) {","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"TypeDefinition"},"content":"            value \u003d \"Gold\";","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"KeithCZW"},"content":"        } else if (tier \u003d\u003d Tier.SILVER) {","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"TypeDefinition"},"content":"            value \u003d \"Silver\";","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"KeithCZW"},"content":"        } else if (tier \u003d\u003d Tier.BRONZE) {","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"TypeDefinition"},"content":"            value \u003d \"Bronze\";","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"KeithCZW"},"content":"        String datePostFix \u003d \"\";","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"KeithCZW"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"KeithCZW"},"content":"            datePostFix \u003d \" since \" + date.toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"KeithCZW"},"content":"        return value + \" member\" + datePostFix;","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"KeithCZW"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"KeithCZW"},"content":"        return date;","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"KeithCZW"},"content":"    public String toString() {","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"KeithCZW"},"content":"        return getValue();","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"KeithCZW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"KeithCZW"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"KeithCZW"},"content":"            return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"KeithCZW"},"content":"                    || (other instanceof Membership // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"KeithCZW"},"content":"                    \u0026\u0026 tier.equals(((Membership) other).tier) \u0026\u0026 date.equals(((Membership) other).date));","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"KeithCZW"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":143,"author":{"gitId":"KeithCZW"},"content":"                || (other instanceof Membership // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":144,"author":{"gitId":"KeithCZW"},"content":"                \u0026\u0026 tier.equals(((Membership) other).tier));","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"KeithCZW"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"KeithCZW"},"content":"        return tier.hashCode();","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"LapisRaider"},"content":"    public int compareTo(Field other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"LapisRaider"},"content":"        if (!(other instanceof Membership)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"LapisRaider"},"content":"            return -1;","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":157,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":158,"author":{"gitId":"LapisRaider"},"content":"        //compare by name of membership first followed by date","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"LapisRaider"},"content":"        Membership otherMembership \u003d (Membership) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"KeithCZW"},"content":"        return Comparator.comparing(Membership::getTier)","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"LapisRaider"},"content":"                .thenComparing(Membership::getDate)","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"LapisRaider"},"content":"                .compare(this, otherMembership);","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"LapisRaider":12,"TypeDefinition":8,"KeithCZW":144}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"public class Name extends Field {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"n/\", true);","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"    private final String value;","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        value \u003d name.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"    public static boolean isValid(String str) {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"        return str.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        return value;","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"        return value;","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"                \u0026\u0026 value.equals(((Name) other).value)); // state check","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"    public int compareTo(Field other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"            return -1;","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"LapisRaider"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"LapisRaider"},"content":"        return value.toLowerCase().compareTo(otherName.value.toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":19,"LapisRaider":9,"-":47}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Date;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import java.util.List;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"public class Person implements Serializable {","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    public static final String MAP_PREFIX \u003d \"P\";","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"    private final long uniqueId;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"    private final HashMap\u003cPrefix, Field\u003e fields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"    private final HashSet\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"    private Person(long uniqueId, Collection\u003cField\u003e fields, Collection\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        requireAllNonNull(tags, fields);","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        // Set unique ID.","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        this.uniqueId \u003d uniqueId;","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        // Add tags.","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"        for (Tag t : tags) {","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"            requireAllNonNull(t);","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"            this.tags.add(t);","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        // Add fields.","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"        for (Field f : fields) {","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"            requireAllNonNull(f);","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"            this.fields.put(f.prefix, f);","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"        // Check for required fields.","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"        for (Prefix p : FieldRegistry.REQUIRED_PREFIXES) {","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"            checkArgument(this.fields.containsKey(p), \"Client must have all required fields.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"     * Person constructor","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"     * @param fields A collection of all the person\u0027s attributes","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"     * @param tags   A collection of all the person\u0027s tags","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"    public Person(Collection\u003cField\u003e fields, Collection\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"        this(new Date().getTime(), fields, tags);","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"        // Sleep for 2 microseconds to ensure that it is impossible for another Person to have the same unique ID.","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"            TimeUnit.MILLISECONDS.sleep(2);","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"    public long getUniqueId() {","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"TypeDefinition"},"content":"        return uniqueId;","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"     * Returns true if the person contains the specified field.","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"TypeDefinition"},"content":"     * @param prefix the field prefix","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"TypeDefinition"},"content":"     * @return return true if the person contains the specified field","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"TypeDefinition"},"content":"    public boolean hasField(Prefix prefix) {","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"TypeDefinition"},"content":"        requireAllNonNull(prefix);","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"TypeDefinition"},"content":"        return fields.containsKey(prefix);","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"TypeDefinition"},"content":"     * Add fields to the person. If the field already exists, it is replaced.","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"TypeDefinition"},"content":"     * @param fields the fields to add","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"TypeDefinition"},"content":"     * @return a person with the fields added","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"TypeDefinition"},"content":"    public Person addFields(Field... fields) {","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"TypeDefinition"},"content":"        return addFields(List.of(fields));","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"TypeDefinition"},"content":"     * Add fields to the person. If the field already exists, it is replaced.","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"TypeDefinition"},"content":"     * @param fields the fields to add","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"TypeDefinition"},"content":"     * @return a person with the fields added","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"TypeDefinition"},"content":"    public Person addFields(Collection\u003cField\u003e fields) {","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"TypeDefinition"},"content":"        requireAllNonNull(fields);","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"TypeDefinition"},"content":"        Map\u003cPrefix, Field\u003e updatedFields \u003d new HashMap\u003c\u003e(this.fields);","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"TypeDefinition"},"content":"        for (Field f : fields) {","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"TypeDefinition"},"content":"            requireAllNonNull(f);","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"TypeDefinition"},"content":"            updatedFields.put(f.prefix, f);","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"TypeDefinition"},"content":"        return new Person(this.uniqueId, updatedFields.values(), tags);","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"TypeDefinition"},"content":"     * Remove fields from the person. If the field does not exist, this does nothing.","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"TypeDefinition"},"content":"     * @param prefixes the prefixes of the fields to remove","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"TypeDefinition"},"content":"     * @return a person with the fields removed","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"TypeDefinition"},"content":"    public Person removeFields(Prefix prefixes) {","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"TypeDefinition"},"content":"        return removeFields(List.of(prefixes));","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"TypeDefinition"},"content":"     * Remove fields from the person. If the field does not exist, this does nothing.","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"TypeDefinition"},"content":"     * @param prefixes the prefixes of the fields to remove","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"TypeDefinition"},"content":"     * @return a person with the fields removed","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"TypeDefinition"},"content":"    public Person removeFields(Collection\u003cPrefix\u003e prefixes) {","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"TypeDefinition"},"content":"        requireAllNonNull(prefixes);","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"TypeDefinition"},"content":"        Map\u003cPrefix, Field\u003e updatedFields \u003d new HashMap\u003c\u003e(this.fields);","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"TypeDefinition"},"content":"        for (Prefix p : prefixes) {","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"TypeDefinition"},"content":"            requireAllNonNull(p);","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"TypeDefinition"},"content":"            updatedFields.remove(p);","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"TypeDefinition"},"content":"        return new Person(this.uniqueId, updatedFields.values(), tags);","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"TypeDefinition"},"content":"    public Person setFields(Collection\u003cField\u003e fields) {","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"TypeDefinition"},"content":"        return new Person(this.uniqueId, fields, this.tags);","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":146,"author":{"gitId":"TypeDefinition"},"content":"    public Optional\u003cField\u003e getField(Prefix prefix) {","lastModifiedDate":"2022-03-04"},{"lineNumber":147,"author":{"gitId":"TypeDefinition"},"content":"        requireAllNonNull(prefix);","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"TypeDefinition"},"content":"        return Optional.ofNullable(fields.get(prefix));","lastModifiedDate":"2022-03-04"},{"lineNumber":149,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":150,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":151,"author":{"gitId":"TypeDefinition"},"content":"    public List\u003cField\u003e getFields() {","lastModifiedDate":"2022-03-04"},{"lineNumber":152,"author":{"gitId":"TypeDefinition"},"content":"        return Collections.unmodifiableList(new ArrayList\u003c\u003e(fields.values()));","lastModifiedDate":"2022-03-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":156,"author":{"gitId":"TypeDefinition"},"content":"        return (Name) this.fields.get(Name.PREFIX);","lastModifiedDate":"2022-03-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":160,"author":{"gitId":"TypeDefinition"},"content":"        return (Phone) this.fields.get(Phone.PREFIX);","lastModifiedDate":"2022-03-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":164,"author":{"gitId":"TypeDefinition"},"content":"        return (Email) this.fields.get(Email.PREFIX);","lastModifiedDate":"2022-03-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":168,"author":{"gitId":"TypeDefinition"},"content":"        return (Address) this.fields.get(Address.PREFIX);","lastModifiedDate":"2022-03-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":171,"author":{"gitId":"KeithCZW"},"content":"    public Membership getMembership() {","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"KeithCZW"},"content":"        return (Membership) this.fields.get(Membership.PREFIX);","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":174,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":175,"author":{"gitId":"TypeDefinition"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"TypeDefinition"},"content":"        return tags.contains(tag);","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"TypeDefinition"},"content":"     * Add tags to the person.","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"TypeDefinition"},"content":"     * @param tags the tags to add","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"TypeDefinition"},"content":"     * @return a person with the tags added","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"TypeDefinition"},"content":"    public Person addTags(Collection\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"TypeDefinition"},"content":"        HashSet\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(this.tags);","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"TypeDefinition"},"content":"        updatedTags.addAll(tags);","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"TypeDefinition"},"content":"        return new Person(this.uniqueId, this.fields.values(), updatedTags);","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"TypeDefinition"},"content":"     * Add tags to the person.","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"TypeDefinition"},"content":"     * @param tags the tags to add","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"TypeDefinition"},"content":"     * @return a person with the tags added","lastModifiedDate":"2022-03-13"},{"lineNumber":196,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":197,"author":{"gitId":"TypeDefinition"},"content":"    public Person addTags(Tag... tags) {","lastModifiedDate":"2022-03-13"},{"lineNumber":198,"author":{"gitId":"TypeDefinition"},"content":"        return addTags(List.of(tags));","lastModifiedDate":"2022-03-13"},{"lineNumber":199,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":200,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":201,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":202,"author":{"gitId":"TypeDefinition"},"content":"     * Remove tags from the person.","lastModifiedDate":"2022-03-13"},{"lineNumber":203,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"TypeDefinition"},"content":"     * @param tags the tags to remove","lastModifiedDate":"2022-03-13"},{"lineNumber":205,"author":{"gitId":"TypeDefinition"},"content":"     * @return a person with the tags remove","lastModifiedDate":"2022-03-13"},{"lineNumber":206,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":207,"author":{"gitId":"TypeDefinition"},"content":"    public Person removeTags(Collection\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-13"},{"lineNumber":208,"author":{"gitId":"TypeDefinition"},"content":"        requireAllNonNull(tags);","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"TypeDefinition"},"content":"        HashSet\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(this.tags);","lastModifiedDate":"2022-03-13"},{"lineNumber":210,"author":{"gitId":"TypeDefinition"},"content":"        for (Tag t : tags) {","lastModifiedDate":"2022-03-13"},{"lineNumber":211,"author":{"gitId":"TypeDefinition"},"content":"            requireAllNonNull(t);","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"TypeDefinition"},"content":"            updatedTags.remove(t);","lastModifiedDate":"2022-03-13"},{"lineNumber":213,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":214,"author":{"gitId":"TypeDefinition"},"content":"        return new Person(this.uniqueId, this.fields.values(), updatedTags);","lastModifiedDate":"2022-03-26"},{"lineNumber":215,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":216,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":217,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":218,"author":{"gitId":"TypeDefinition"},"content":"     * Remove tags from the person.","lastModifiedDate":"2022-03-13"},{"lineNumber":219,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"TypeDefinition"},"content":"     * @param tags the tags to remove","lastModifiedDate":"2022-03-13"},{"lineNumber":221,"author":{"gitId":"TypeDefinition"},"content":"     * @return a person with the tags remove","lastModifiedDate":"2022-03-13"},{"lineNumber":222,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":223,"author":{"gitId":"TypeDefinition"},"content":"    public Person removeTags(Tag... tags) {","lastModifiedDate":"2022-03-13"},{"lineNumber":224,"author":{"gitId":"TypeDefinition"},"content":"        return removeTags(tags);","lastModifiedDate":"2022-03-13"},{"lineNumber":225,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":226,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":227,"author":{"gitId":"TypeDefinition"},"content":"    public Person setTags(Collection\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-26"},{"lineNumber":228,"author":{"gitId":"TypeDefinition"},"content":"        return new Person(this.uniqueId, this.fields.values(), tags);","lastModifiedDate":"2022-03-26"},{"lineNumber":229,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":230,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":231,"author":{"gitId":"TypeDefinition"},"content":"    public Person setTags(Tag... tags) {","lastModifiedDate":"2022-03-26"},{"lineNumber":232,"author":{"gitId":"TypeDefinition"},"content":"        return setTags(List.of(tags));","lastModifiedDate":"2022-03-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":244,"author":{"gitId":"KeithCZW"},"content":"     * Adds a membership to the person","lastModifiedDate":"2022-03-12"},{"lineNumber":245,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":246,"author":{"gitId":"KeithCZW"},"content":"     * @param membership Membership to add","lastModifiedDate":"2022-03-12"},{"lineNumber":247,"author":{"gitId":"KeithCZW"},"content":"     * @return A copy of the person with added membership","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":249,"author":{"gitId":"KeithCZW"},"content":"    public Person addMembership(Membership membership) {","lastModifiedDate":"2022-03-12"},{"lineNumber":250,"author":{"gitId":"KeithCZW"},"content":"        HashMap\u003cPrefix, Field\u003e newFields \u003d new HashMap\u003c\u003e(this.fields);","lastModifiedDate":"2022-03-12"},{"lineNumber":251,"author":{"gitId":"KeithCZW"},"content":"        newFields.put(Membership.PREFIX, membership);","lastModifiedDate":"2022-03-12"},{"lineNumber":252,"author":{"gitId":"TypeDefinition"},"content":"        return new Person(this.uniqueId, newFields.values(), tags);","lastModifiedDate":"2022-03-26"},{"lineNumber":253,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":254,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":255,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"zunedz"},"content":"     * Returns true if both persons have the same email.","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":264,"author":{"gitId":"TypeDefinition"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2022-03-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":270,"author":{"gitId":"TypeDefinition"},"content":"     * @param other the other Person to compare to","lastModifiedDate":"2022-03-26"},{"lineNumber":271,"author":{"gitId":"TypeDefinition"},"content":"     * @return true if both persons have the same identity and data fields","lastModifiedDate":"2022-03-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":283,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2022-03-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":294,"author":{"gitId":"zunedz"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getAddress(), tags);","lastModifiedDate":"2022-03-26"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":299,"author":{"gitId":"TypeDefinition"},"content":"        return getName().getValue();","lastModifiedDate":"2022-03-30"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":199,"zunedz":4,"-":84,"KeithCZW":14}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"public class Phone extends Field {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"p/\", true);","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"        value \u003d phone.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"    public static boolean isValid(String str) {","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        return str.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        return value;","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"LapisRaider"},"content":"    public int compareTo(Field other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"LapisRaider"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"            return -1;","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"        return value.toLowerCase().compareTo(otherPhone.value.toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":13,"LapisRaider":9,"-":47}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"public class Remark extends Field {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"r/\", false);","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"    public final String value;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"    public Remark(String remark) {","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"        value \u003d remark.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        return value;","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        return value;","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"            || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"            \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"LapisRaider"},"content":"    public int compareTo(Field other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"LapisRaider"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"            return -1;","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"LapisRaider"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"LapisRaider"},"content":"        return value.toLowerCase().compareTo(otherRemark.value.toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"TypeDefinition":47,"LapisRaider":10}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"LapisRaider"},"content":"    public void sortPersonList(Comparator\u003cPerson\u003e comperator) {","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"LapisRaider"},"content":"        internalList.sort(comperator);","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LapisRaider":5,"-":137}},{"path":"src/main/java/seedu/address/model/person/util/PersonContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.person.util;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"import java.util.List;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":" * Tests that a {@code Person}\u0027s {@code Name}, {@code Phone}, {@code Email}, {@code Address} and","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":" * {@code Tag} matches any of the keywords given.","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"public class PersonContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"    public PersonContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"        return keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"                    person.getFields().stream().anyMatch(field -\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"                            StringUtil.containsWordIgnoreCase(field.getValue(), keyword))","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"                            || person.getTags().stream().anyMatch(tag -\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"                            StringUtil.containsWordIgnoreCase(tag.value, keyword)));","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"                || (other instanceof PersonContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"                \u0026\u0026 keywords.equals(((PersonContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"DaneMarc":34,"zunedz":2}},{"path":"src/main/java/seedu/address/model/person/util/PersonContainsMembershipPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.model.person.util;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":" * Tests that a person has a membership based on the tier provided","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"public class PersonContainsMembershipPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"    private final Membership.Tier tier;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"    public PersonContainsMembershipPredicate(Membership.Tier tier) {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"        this.tier \u003d tier;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"    public boolean test(Person member) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"        if (!member.hasField(Membership.PREFIX)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"        if (tier \u003d\u003d Membership.getTierFromString(\"ALL\")) {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"            return member.hasField(Membership.PREFIX);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"            return member.getMembership().getTier().equals(tier);","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"                || (other instanceof PersonContainsMembershipPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"                \u0026\u0026 tier.equals(((PersonContainsMembershipPredicate) other).tier)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"KeithCZW":37}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"public class Tag implements Serializable {","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"t/\", false);","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names must be alphanumeric without spaces.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"    public final String value;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"        value \u003d tagName.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"    public static boolean isValid(String str) {","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        return str.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"                \u0026\u0026 value.equals(((Tag) other).value)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"        return \u0027[\u0027 + value + \u0027]\u0027;","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"     * Create a set of tags using a list of tag names.","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"     * @param tagNames the list of tag names.","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"     * @return a set of tags","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"    public static Set\u003cTag\u003e createSet(Collection\u003cString\u003e tagNames) {","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"        for (String str : tagNames) {","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"            tags.add(new Tag(str));","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"        return tags;","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"TypeDefinition"},"content":"     * Create a set of tags using a list of tag names.","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"     * @param tagNames the list of tag names.","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"     * @return a set of tags","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"    public static Set\u003cTag\u003e createSet(String... tagNames) {","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"        return createSet(List.of(tagNames));","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TypeDefinition":39,"-":44}},{"path":"src/main/java/seedu/address/model/transaction/Amount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.hash;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"public class Amount extends TransactionField {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"    public static final String FIELD_NAME \u003d \"Amount\";","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"    public static final Double MAXIMUM_INPUT \u003d 9999999.99;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"a/\", true);","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    public static final String MESSAGE_CONSTRAINT \u003d \"Transaction amount must be \"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"            + \"numeric and the number specified \"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"            + \"must be between 0 (zero) and 9999999.99 inclusive\";","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"    private final double value;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"     * Constructs the amount object","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"     * @param value the value of the amount","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"    public Amount(String value) {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"        checkArgument(isValid(value), MESSAGE_CONSTRAINT);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"        double number \u003d Double.parseDouble(value);","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"        String formattedNumber \u003d String.format(\"%.2f\", number);","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"        number \u003d Double.parseDouble(formattedNumber);","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"        this.value \u003d Math.abs(number);","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"    private String generateStringRep() {","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        return FIELD_NAME + \": \" + this.value;","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"        return generateStringRep();","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"        return \"\" + this.value;","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"     *  Checks the validity of the amount inserted","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"     * @param value of the transaction","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"     * @return whether or not the amount is valid","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"    public static boolean isValid(String value) {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"            double number \u003d Double.parseDouble(value);","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"            return number \u003e\u003d 0 \u0026\u0026 number \u003c\u003d MAXIMUM_INPUT;","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"        if (!(other instanceof Amount)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"        return ((Amount) other).getValue().equals(getValue());","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        return hash(value);","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zunedz":80}},{"path":"src/main/java/seedu/address/model/transaction/DueDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.DateFieldInterface;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":" * Represents a Due date of the transaction.","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":" * Optional to have.","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"public class DueDate extends TransactionField implements DateFieldInterface {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    public static final String FIELD_NAME \u003d \"Due Date\";","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"dd/\", false);","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"    public static final String MESSAGE_CONSTRAINT \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"            \"Due date (if specified) should be in YYYY-MM-DD format and must exist\";","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"    public static final String EMPTY_DUE_DATE \u003d \"\";","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    private final LocalDate value;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"     * @param dueDate A valid due date.","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    public DueDate(String dueDate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        requireNonNull(dueDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        dueDate \u003d dueDate.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        checkArgument(DueDate.isValid(dueDate), MESSAGE_CONSTRAINT);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"        value \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    public static boolean isValid(String str) {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        requireNonNull(str);","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"            LocalDate.parse(str);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"        return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"        return value;","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"        return value.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"        return generateStringRep();","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"        if (!(other instanceof DueDate)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"        return ((DueDate) other).value.equals(value);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"    private String generateStringRep() {","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"        return FIELD_NAME + \": \" + this.value;","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zunedz":90}},{"path":"src/main/java/seedu/address/model/transaction/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":" * Represents the Note of a particular transaction.","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":" * Is not required/optional.","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"public class Note extends TransactionField {","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    public static final String FIELD_NAME \u003d \"Note\";","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"n/\", false);","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    public static final String EMPTY_NOTE \u003d \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    private final String value;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"     * Constructs the note of a transaction. consists","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"     * of String","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"     * @param note of the transaction.","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    public Note(String note) {","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"        requireNonNull(note);","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"        this.value \u003d note;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"        return this.value;","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"    private String generateStringRep() {","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        return FIELD_NAME + \": \" + this.value;","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"        return generateStringRep();","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"        return this.value.hashCode();","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"zunedz":52}},{"path":"src/main/java/seedu/address/model/transaction/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"public class Status extends TransactionField {","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"    public static final String FIELD_NAME \u003d \"Status\";","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"    public static final String STATUS_PAID \u003d \"true\";","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"    public static final String STATUS_NOTPAID \u003d \"false\";","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"--paid\", false, true);","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    private final boolean isPaid;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"     * Parses and constructs a status object","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    public Status(String isPaid) {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"        this.isPaid \u003d Boolean.parseBoolean(isPaid);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"        return isPaid ? \"Paid\" : \"Not Paid\";","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    public boolean isPaid() {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"        return isPaid;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    public String generateStringRep() {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"        return FIELD_NAME + \": \" + getValue();","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        return generateStringRep();","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zunedz":42}},{"path":"src/main/java/seedu/address/model/transaction/Transaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import java.util.Date;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.StatusFactory;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.StatusFactoryInterface;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"public class Transaction implements Serializable {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"    public static final String MAP_PREFIX \u003d \"T\";","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"    private final HashMap\u003cPrefix, TransactionField\u003e fields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    private final long personId;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    private final long transactionId;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"     * Transaction constructor","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"     * @param fields A collection of all the transaction\u0027s attributes","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"    public Transaction(long transactionId, Collection\u003cTransactionField\u003e fields, long personId) {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        requireAllNonNull(fields, personId);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        this.transactionId \u003d transactionId;","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"        // Add fields.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"        for (TransactionField f : fields) {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"            checkArgument(f !\u003d null, \"All fields in Person constructor cannot be null.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"            this.fields.put(f.prefix, f);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        // Check for required fields.","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"        for (Prefix p : TransactionFieldRegistry.REQUIRED_PREFIXES) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"            checkArgument(this.fields.containsKey(p), \"All required fields must be given.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"            TimeUnit.MILLISECONDS.sleep(2);","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"     * Transaction constructor","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"     * @param fields A collection of all the transaction\u0027s attributes","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"    public Transaction(Collection\u003cTransactionField\u003e fields, long personId) {","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"        this(new Date().getTime(), fields, personId);","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"     * Copy constructor","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"    public Transaction(Transaction otherTransaction) {","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"        this(otherTransaction.getTransactionId(), otherTransaction.getFields(), otherTransaction.getPersonId());","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"    public long getTransactionId() {","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"        return transactionId;","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"     * Returns whether the transaction object is valid","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"    public boolean isValid() {","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"        if (!fields.containsKey(DueDate.PREFIX)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"            return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"        // Check whether due date \u003e\u003d transaction date","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"        return ((TransactionDate) fields.get(TransactionDate.PREFIX))","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"                .isBefore((DueDate) fields.get(DueDate.PREFIX));","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"    public Optional\u003cTransactionField\u003e getField(Prefix prefix) {","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"        requireAllNonNull(prefix);","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"        return Optional.ofNullable(fields.get(prefix));","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"     * Removes a field from transaction fields","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"     * @param prefix","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"     * @return updated Transaction","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"    public Transaction removeField(Prefix prefix) {","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"        requireAllNonNull(prefix);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"zunedz"},"content":"        HashMap\u003cPrefix, TransactionField\u003e fieldsCopy \u003d new HashMap\u003c\u003e(fields);","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"zunedz"},"content":"        fieldsCopy.remove(prefix);","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"zunedz"},"content":"        return new Transaction(getTransactionId(), fieldsCopy.values(), getPersonId());","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"zunedz"},"content":"     * Adds a field to the transaction.","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"zunedz"},"content":"     * @param field","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"zunedz"},"content":"     * @return updated transactions","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"zunedz"},"content":"    public Transaction addField(TransactionField field) {","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"zunedz"},"content":"        requireAllNonNull(field);","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"zunedz"},"content":"        HashMap\u003cPrefix, TransactionField\u003e fieldsCopy \u003d new HashMap\u003c\u003e(fields);","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"zunedz"},"content":"        fieldsCopy.put(field.prefix, field);","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"zunedz"},"content":"        return new Transaction(getTransactionId(), fieldsCopy.values(), getPersonId());","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"zunedz"},"content":"    public Transaction setField(TransactionField field) {","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"zunedz"},"content":"        requireAllNonNull(field);","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"zunedz"},"content":"        return this.removeField(field.prefix).addField(field);","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"zunedz"},"content":"    public Transaction setStatusTo(Class\u003c? extends Command\u003e command) {","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"zunedz"},"content":"        return this.setField(new StatusFactory().getStatus(command));","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"zunedz"},"content":"    public Transaction setStatusTo(Class\u003c? extends Command\u003e command, StatusFactoryInterface factory) {","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"zunedz"},"content":"        return this.setField(factory.getStatus(command));","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"zunedz"},"content":"    public List\u003cTransactionField\u003e getFields() {","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"zunedz"},"content":"        return Collections.unmodifiableList(new ArrayList\u003c\u003e(fields.values()));","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"zunedz"},"content":"     * Gets the amount of the transaction","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"zunedz"},"content":"     * @return Amount of the transaction","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"zunedz"},"content":"    public Amount getAmount() {","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"zunedz"},"content":"        return (Amount) this.fields.get(Amount.PREFIX);","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"zunedz"},"content":"     * Gets the Due date of the transaction","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"zunedz"},"content":"     * @return Due date of the transaction","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"zunedz"},"content":"    public Optional\u003cDueDate\u003e getDueDate() {","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"zunedz"},"content":"        return Optional.ofNullable((DueDate) this.fields.get(DueDate.PREFIX));","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"zunedz"},"content":"     * Gets the transaction date of the transaction","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"zunedz"},"content":"     * @return transaction date of the transaction","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"zunedz"},"content":"    public TransactionDate getTransactionDate() {","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"zunedz"},"content":"        return (TransactionDate) this.fields.get(TransactionDate.PREFIX);","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"zunedz"},"content":"     * Gets the person identifier of the transaction","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"zunedz"},"content":"     * @return person\u0027s identifier (uniqueId)","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"zunedz"},"content":"    public long getPersonId() {","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"zunedz"},"content":"        return this.personId;","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"zunedz"},"content":"     * Gets the person unique identifier of the transaction","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"zunedz"},"content":"     * in the string representation","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"zunedz"},"content":"    public String getPersonIdString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"DaneMarc"},"content":"        return String.format(\"Person ID: %d\", getPersonId());","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"zunedz"},"content":"     * Gets the note of the transaction","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":189,"author":{"gitId":"zunedz"},"content":"     * @return Optional note of the transaction","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"zunedz"},"content":"    public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"zunedz"},"content":"        return Optional.ofNullable((Note) this.fields.get(Note.PREFIX));","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"zunedz"},"content":"     * Gets the status of the transaction","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"zunedz"},"content":"     * @return Status of the transaction","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"zunedz"},"content":"    public Status getStatus() {","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"zunedz"},"content":"        return (Status) this.fields.get(Status.PREFIX);","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"zunedz"},"content":"     * Returns whether the transaction has been paid or not","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"zunedz"},"content":"    public boolean isPaid() {","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"zunedz"},"content":"        return getStatus().isPaid();","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"zunedz"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"zunedz"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"zunedz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"zunedz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"zunedz"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"zunedz"},"content":"        if (!(other instanceof Transaction)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"zunedz"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"zunedz"},"content":"        Transaction otherTr \u003d (Transaction) other;","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"zunedz"},"content":"        return otherTr.getAmount().equals(getAmount())","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 otherTr.getDueDate().equals(getDueDate())","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 otherTr.getTransactionDate().equals(getTransactionDate())","lastModifiedDate":"2022-03-26"},{"lineNumber":229,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 (otherTr.getPersonId() \u003d\u003d getPersonId())","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 (otherTr.getTransactionId()) \u003d\u003d getTransactionId();","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"zunedz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":235,"author":{"gitId":"zunedz"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"zunedz"},"content":"        return Objects.hash(getAmount(), getDueDate(),","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"zunedz"},"content":"                getTransactionDate(), getNote(),","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"zunedz"},"content":"                getPersonId(), getTransactionId());","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":240,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":241,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":242,"author":{"gitId":"zunedz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":243,"author":{"gitId":"zunedz"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-16"},{"lineNumber":244,"author":{"gitId":"zunedz"},"content":"        builder.append(getAmount())","lastModifiedDate":"2022-03-29"},{"lineNumber":245,"author":{"gitId":"zunedz"},"content":"                .append(\"; \")","lastModifiedDate":"2022-03-29"},{"lineNumber":246,"author":{"gitId":"zunedz"},"content":"                .append(getTransactionDate())","lastModifiedDate":"2022-03-25"},{"lineNumber":247,"author":{"gitId":"zunedz"},"content":"                .append(\"; \")","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"zunedz"},"content":"                .append(getPersonId())","lastModifiedDate":"2022-03-29"},{"lineNumber":249,"author":{"gitId":"zunedz"},"content":"                .append(\"; \");","lastModifiedDate":"2022-03-29"},{"lineNumber":250,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":251,"author":{"gitId":"zunedz"},"content":"        if (getDueDate().isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":252,"author":{"gitId":"zunedz"},"content":"            builder.append(getDueDate().get())","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"zunedz"},"content":"                    .append(\"; \");","lastModifiedDate":"2022-03-29"},{"lineNumber":254,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":255,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"zunedz"},"content":"        if (getNote().isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":257,"author":{"gitId":"zunedz"},"content":"            builder.append(getNote().get());","lastModifiedDate":"2022-03-29"},{"lineNumber":258,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":259,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":260,"author":{"gitId":"zunedz"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":261,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":262,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"zunedz"},"content":"    public boolean hasIdentifier(long identifier) {","lastModifiedDate":"2022-03-26"},{"lineNumber":264,"author":{"gitId":"zunedz"},"content":"        return this.getPersonId() \u003d\u003d identifier;","lastModifiedDate":"2022-03-26"},{"lineNumber":265,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":266,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":267,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"DaneMarc":1,"zunedz":266}},{"path":"src/main/java/seedu/address/model/transaction/TransactionDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.DateFieldInterface;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":" * Represents a Person\u0027s birthday in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"public class TransactionDate extends TransactionField implements DateFieldInterface {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    public static final String FIELD_NAME \u003d \"Transaction Date\";","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    public static final Prefix PREFIX \u003d new Prefix(\"td/\", true);","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"    public static final String MESSAGE_CONSTRAINT \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"            \"Transaction date should be in YYYY-MM-DD format and must exist\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    private final LocalDate value;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"     * @param  transactionDate A valid due date.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    public TransactionDate(String transactionDate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"        super(PREFIX);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"        requireNonNull(transactionDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"        transactionDate \u003d transactionDate.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"        checkArgument(DueDate.isValid(transactionDate), MESSAGE_CONSTRAINT);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        value \u003d LocalDate.parse(transactionDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"        return value;","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    public static boolean isValid(String str) {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        requireNonNull(str);","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"            LocalDate.parse(str);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"        return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"        return value.toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"    private String generateStringRep() {","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        return FIELD_NAME + \": \" + this.value;","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"        return generateStringRep();","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"        if (!(other instanceof TransactionDate)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        return ((TransactionDate) other).value.equals(value);","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zunedz":85}},{"path":"src/main/java/seedu/address/model/transaction/TransactionField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"public abstract class TransactionField implements Serializable {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"    public final Prefix prefix;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"    public TransactionField(Prefix prefix) {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    public abstract String getValue();","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zunedz":17}},{"path":"src/main/java/seedu/address/model/transaction/TransactionFieldRegistry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.TransactionFieldParser;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"public class TransactionFieldRegistry {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"    public static final Map\u003cPrefix, TransactionFieldParser\u003c? extends TransactionField\u003e\u003e PARSERS;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"    public static final Prefix[] REQUIRED_PREFIXES;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"    public static final Prefix[] PREFIXES;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    public static final Prefix[] FLAGS;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    static {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"        HashMap\u003cPrefix, TransactionFieldParser\u003c? extends TransactionField\u003e\u003e parsers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"        // --- Do not modify above this line unless you know what you\u0027re doing. (Trust me, you don\u0027t.) ---","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"        parsers.put(Amount.PREFIX, Amount::new);","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"        parsers.put(DueDate.PREFIX, DueDate::new);","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"        parsers.put(TransactionDate.PREFIX, TransactionDate::new);","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"        parsers.put(Note.PREFIX, Note::new);","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"        parsers.put(Status.PREFIX, Status::new);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"        // --- Do not modify below this line unless you know what you\u0027re doing. (Trust me, you don\u0027t.) ---","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"        PARSERS \u003d Collections.unmodifiableMap(parsers);","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"        PREFIXES \u003d PARSERS.keySet().stream().filter(p -\u003e !p.isFlag()).toArray(Prefix[]::new);","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"        FLAGS \u003d PARSERS.keySet().stream().filter(Prefix::isFlag).toArray(Prefix[]::new);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"        REQUIRED_PREFIXES \u003d Arrays.stream(PREFIXES).filter(Prefix::isRequired).toArray(Prefix[]::new);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zunedz":34}},{"path":"src/main/java/seedu/address/model/transaction/TransactionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":" * A list of Transactions that does not allow nulls.","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":" * the removal of a person uses Transaction#equals(Object) so","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":" * as to ensure that the Transaction with exactly the same fields will be removed.","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":" *","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":" *","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"public class TransactionList implements Iterable\u003cTransaction\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    private final ObservableList\u003cTransaction\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"    private final ObservableList\u003cTransaction\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"     * Adds a transaction to the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    public void add(Transaction toAdd) {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"     * Replaces the transaction {@code target} in the list with {@code editedTransaction}.","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"    public void setTransaction(Transaction target, Transaction editedTransaction) {","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"        requireAllNonNull(target, editedTransaction);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"            throw new PersonNotFoundException(); //to be changed","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"        internalList.set(index, editedTransaction);","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"     * Removes the equivalent transcation from the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"     * The transaction must exist in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"    public void remove(Transaction toRemove) {","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"            throw new PersonNotFoundException(); // to be changed","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"     * Removes all the transactions from the list","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"     * with the specified identifier","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"    public void removeWithId(long id) {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"        Collection\u003cTransaction\u003e toRemove \u003d internalList.stream()","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"                                            .filter(t -\u003e t.hasIdentifier(id))","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"                                            .collect(Collectors.toList());","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"        internalList.removeAll(toRemove);","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"     * Replaces the contents of this list with {@code transactions}.","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"    public void setTransactions(List\u003cTransaction\u003e transactions) {","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"        requireAllNonNull(transactions);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"        internalList.setAll(transactions);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"    public ObservableList\u003cTransaction\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"    public Iterator\u003cTransaction\u003e iterator() {","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"                || (other instanceof TransactionList // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"                \u0026\u0026 internalList.equals(((TransactionList) other).internalList));","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"zunedz":107}},{"path":"src/main/java/seedu/address/model/transaction/util/DateFieldInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction.util;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"public interface DateFieldInterface {","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"    LocalDate getDate();","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"     * Returns whether the date is not after another particular","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"     * date.","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"    default boolean isBefore(DateFieldInterface date) {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"        return getDate().isBefore(date.getDate())","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"                || getDate().isEqual(date.getDate());","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zunedz":16}},{"path":"src/main/java/seedu/address/model/transaction/util/StatusFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction.util;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.PayCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.UnpayCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Status;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"public class StatusFactory implements StatusFactoryInterface {","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"    public Status getStatus(Class\u003c? extends Command\u003e command) {","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"        if (command.equals(PayCommand.class)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"            return new Status(Status.STATUS_PAID);","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"        } else if (command.equals(UnpayCommand.class)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"            return new Status(Status.STATUS_NOTPAID);","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"            throw new InternalError(Messages.MESSAGE_INTERNAL_ERROR);","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zunedz":20}},{"path":"src/main/java/seedu/address/model/transaction/util/StatusFactoryInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction.util;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Status;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"public interface StatusFactoryInterface {","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"    Status getStatus(Class\u003c? extends Command\u003e command);","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"zunedz":8}},{"path":"src/main/java/seedu/address/model/transaction/util/TransactionBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction.util;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":" * Functional interface to produce a Transaction","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":" * with the specified person identifier (email)","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"public interface TransactionBuilder {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"    Transaction createTransaction(long personId);","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"zunedz":11}},{"path":"src/main/java/seedu/address/model/transaction/util/TransactionPredicateBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction.util;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":" * Functional interface to produce a Transaction","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":" * with the specified person identifier (email)","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"public interface TransactionPredicateBuilder {","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"    TransactionWithIdentifierPredicate createTransactionPredicate(long personId);","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"zunedz":9}},{"path":"src/main/java/seedu/address/model/transaction/util/TransactionWithIdentifierPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction.util;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"public class TransactionWithIdentifierPredicate implements Predicate\u003cTransaction\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"    private final long identifier;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"    public TransactionWithIdentifierPredicate(long identifier) {","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"        this.identifier \u003d identifier;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    public boolean test(Transaction transaction) {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"        return transaction.hasIdentifier(identifier);","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"zunedz":19}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"            new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"                    new Name(\"Alex Yeoh\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"                    new Phone(\"87438807\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"                    new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\")","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"                ),","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"                    new Tag(\"distributor\")","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"                )),","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"            new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"                    new Name(\"Bernice Yu\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"                    new Phone(\"99272758\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"                    new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"                ),","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"                    new Tag(\"vendor\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"                    new Tag(\"furniture\")","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"                )),","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"            new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"                    new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"                    new Phone(\"93210283\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"                    new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"                    new Birthday(\"2000-09-01\")","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"                ),","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"                    new Tag(\"supplier\")","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"                )),","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"            new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"                    new Name(\"David Li\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"                    new Phone(\"91031282\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"                    new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\")","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"                ),","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"                    new Tag(\"supplier\")","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"                )),","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"            new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"                    new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"                    new Phone(\"92492021\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"                    new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\")","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"                ),","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"                    new Tag(\"supplier\")","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"                )),","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"            new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"                    new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"TypeDefinition"},"content":"                    new Phone(\"92624417\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"                    new Email(\"royb@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\")","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"                ),","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"                List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"                    new Tag(\"plumber\")","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"TypeDefinition"},"content":"                ))","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"TypeDefinition":64,"-":29}},{"path":"src/main/java/seedu/address/storage/SerializableAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"import java.io.BufferedInputStream;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.io.BufferedOutputStream;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import java.io.File;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"public class SerializableAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(SerializableAddressBookStorage.class);","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"    public SerializableAddressBookStorage(Path filePath) {","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        return filePath;","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() {","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) {","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"        requireAllNonNull(filePath);","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"            ObjectInputStream objectInputStream \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"                new ObjectInputStream(new BufferedInputStream(new FileInputStream(filePath.toString())));","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"            Map\u003cString, Object\u003e storageMap \u003d (Map\u003cString, Object\u003e) objectInputStream.readObject();","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"            objectInputStream.close();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"            return Optional.of(new AddressBook(storageMap));","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"        requireAllNonNull(addressBook, filePath);","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"        File file \u003d new File(filePath.toString());","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"        File parentFile \u003d file.getParentFile();","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"        if (parentFile !\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"            //noinspection ResultOfMethodCallIgnored","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"        //noinspection ResultOfMethodCallIgnored","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"        file.createNewFile();","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"        ObjectOutputStream objectOutputStream \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"            new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(file, false)));","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"        objectOutputStream.writeObject(addressBook.generateStorageMap());","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"        objectOutputStream.flush();","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"        objectOutputStream.close();","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"TypeDefinition":74,"zunedz":6}},{"path":"src/main/java/seedu/address/storage/SerializableTempAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"//@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import java.io.BufferedInputStream;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"import java.io.BufferedOutputStream;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"import java.io.File;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":" * A class to manage temporary files of AddressBook data.","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":"public class SerializableTempAddressBookStorage implements TempAddressBookStorage {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"LapisRaider"},"content":"    public static final int SAVE_LIMIT \u003d 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"    private final Path fileDirectory;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"    private final List\u003cPath\u003e tempFiles;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"     * Creates a Address Book Storage that manages temporary data.","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"     * @param fileDirectory directory of where the temp files would be stored","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"    public SerializableTempAddressBookStorage(Path fileDirectory) {","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"        this.fileDirectory \u003d fileDirectory;","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"LapisRaider"},"content":"        tempFiles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"    public Path getTempAddressBookFilepath() {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"LapisRaider"},"content":"        return fileDirectory;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"LapisRaider"},"content":"    public void addNewTempAddressBookFile(ReadOnlyAddressBook addressBook) throws Exception {","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"LapisRaider"},"content":"        if (!Files.exists(fileDirectory)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"LapisRaider"},"content":"            Files.createDirectory(fileDirectory);","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"        //delete earliest temp file created","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"LapisRaider"},"content":"        if (tempFiles.size() \u003e\u003d SAVE_LIMIT) {","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"LapisRaider"},"content":"            Path earliestFileData \u003d tempFiles.get(0);","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"LapisRaider"},"content":"            tempFiles.remove(0);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"            earliestFileData.toFile().delete();","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"LapisRaider"},"content":"        String tempFileName \u003d \"temp\";","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"LapisRaider"},"content":"        Path tempFile \u003d Files.createTempFile(fileDirectory, tempFileName, \".tmp\");","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"LapisRaider"},"content":"        tempFiles.add(tempFile);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"        ObjectOutputStream objectOutputStream \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"                new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(tempFile.toFile(), false)));","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"        objectOutputStream.writeObject(addressBook.generateStorageMap());","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"        objectOutputStream.flush();","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"        objectOutputStream.close();","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"LapisRaider"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e popTempAddressFileData() throws Exception {","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"LapisRaider"},"content":"        Path prevDataTempFile;","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"LapisRaider"},"content":"        if (tempFiles.size() \u003c\u003d 0) {","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"LapisRaider"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"LapisRaider"},"content":"        int lastIndex \u003d tempFiles.size() - 1;","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"LapisRaider"},"content":"        prevDataTempFile \u003d tempFiles.get(lastIndex);","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"LapisRaider"},"content":"        tempFiles.remove(lastIndex);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"LapisRaider"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookData \u003d getTempAddressBookFileData(prevDataTempFile);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"LapisRaider"},"content":"        Files.delete(prevDataTempFile);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"LapisRaider"},"content":"        return addressBookData;","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"LapisRaider"},"content":"     * Gets the data from a temporary file based on the filepath provided.","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"LapisRaider"},"content":"     * @param tempDataTempFile file path of the temporary files.","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"LapisRaider"},"content":"     * @return The data read from the file path.","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"LapisRaider"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e getTempAddressBookFileData(Path tempDataTempFile) throws Exception {","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"LapisRaider"},"content":"        ObjectInputStream objectInputStream \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"LapisRaider"},"content":"                new ObjectInputStream(new BufferedInputStream(new FileInputStream(tempDataTempFile.toString())));","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"LapisRaider"},"content":"        Map\u003cString, Object\u003e storageMap \u003d (Map\u003cString, Object\u003e) objectInputStream.readObject();","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"LapisRaider"},"content":"        objectInputStream.close();","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"LapisRaider"},"content":"        return Optional.of(new AddressBook(storageMap));","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"LapisRaider"},"content":"    public void deleteAllTempFilesData() throws Exception {","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"LapisRaider"},"content":"        if (!Files.exists(fileDirectory)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"LapisRaider"},"content":"            return;","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"LapisRaider"},"content":"        for (File file : Objects.requireNonNull(fileDirectory.toFile().listFiles())) {","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"LapisRaider"},"content":"            file.delete();","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"LapisRaider"},"content":"        tempFiles.clear();","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"LapisRaider":112,"zunedz":2}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, TempAddressBookStorage {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"    //@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"    Path getTempAddressBookFilepath();","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"LapisRaider"},"content":"    void addNewTempAddressBookFile(ReadOnlyAddressBook addressBook) throws Exception;","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"    Optional\u003cReadOnlyAddressBook\u003e popTempAddressFileData() throws Exception;","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LapisRaider":11,"-":30}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"    private TempAddressBookStorage tempAddressBookStorage;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"            TempAddressBookStorage tempAddressBookStorage) {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"        this.tempAddressBookStorage \u003d tempAddressBookStorage;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"LapisRaider"},"content":"    //@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"LapisRaider"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook Temp data storage methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"LapisRaider"},"content":"    public Path getTempAddressBookFilepath() {","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"LapisRaider"},"content":"        return tempAddressBookStorage.getTempAddressBookFilepath();","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"LapisRaider"},"content":"    public void addNewTempAddressBookFile(ReadOnlyAddressBook addressBook) throws Exception {","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"LapisRaider"},"content":"        tempAddressBookStorage.addNewTempAddressBookFile(addressBook);","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"LapisRaider"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e popTempAddressFileData() throws Exception {","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"LapisRaider"},"content":"        return tempAddressBookStorage.popTempAddressFileData();","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"LapisRaider"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"LapisRaider"},"content":"    public void deleteAllTempFilesData() throws Exception {","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"LapisRaider"},"content":"        tempAddressBookStorage.deleteAllTempFilesData();","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LapisRaider":26,"-":76}},{"path":"src/main/java/seedu/address/storage/TempAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"//@@author LapisRaider","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":" * Represents a temporary files storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"public interface TempAddressBookStorage {","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"     * Returns the file path of where the temp data files would be stored.","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"    Path getTempAddressBookFilepath();","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"     * Adds a new temporary file of addressBook data.","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"     * @param addressBook AddressBook data","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"     * @throws Exception if there was any problem creating a new temp file.","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":"    void addNewTempAddressBookFile(ReadOnlyAddressBook addressBook) throws Exception;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"     * Gets the last added temporary addressBook file data.","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"     * @return the last added temporary addressBook file data stored.","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"     * @throws Exception If there are any issues reading data from the temporary file.","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"    Optional\u003cReadOnlyAddressBook\u003e popTempAddressFileData() throws Exception;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"     * Deletes temporary files in application.","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"LapisRaider"},"content":"     * @throws Exception If there are any issues with deleting the files.","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"    void deleteAllTempFilesData() throws Exception;","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"LapisRaider":40}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"import seedu.address.logic.commands.CommandRegistry;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"    // @@author TypeDefinition","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"    private final ArrayList\u003cString\u003e historyBuffer;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"    private final ArrayList\u003cString\u003e activeBuffer;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"    private int activeBufferIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"    private final Set\u003cString\u003e commands \u003d CommandRegistry.PARSERS.keySet();","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"    // @@author","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"        // @@author TypeDefinition","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"        // Emulates how the bash terminal handles history.","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        this.historyBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"        this.activeBuffer \u003d new ArrayList\u003c\u003e(Arrays.asList(\"\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"        this.activeBufferIndex \u003d 0;","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"        // @@author","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"            if (event.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"                event.consume();","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"                setPreviousCommand();","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"            } else if (event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"                event.consume();","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"                setNextCommand();","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"            } else if (event.getCode() \u003d\u003d KeyCode.TAB) {","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"                event.consume();","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"                autocomplete(commandTextField.getText());","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"DaneMarc"},"content":"        });","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"    private void onAction() {","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"        commandTextField.clear();","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"        // Replace the index of edited \u0026 executed command in the active buffer with actual history.","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"        if (activeBufferIndex \u003c historyBuffer.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"            activeBuffer.set(activeBufferIndex, historyBuffer.get(activeBufferIndex));","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"TypeDefinition"},"content":"        activeBuffer.set(activeBuffer.size() - 1, \"\");","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"TypeDefinition"},"content":"        // If this command is different from the previous command, add it to the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"TypeDefinition"},"content":"        if (historyBuffer.isEmpty() || !historyBuffer.get(historyBuffer.size() - 1).equals(commandText)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"TypeDefinition"},"content":"            historyBuffer.add(commandText);","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"TypeDefinition"},"content":"            activeBuffer.set(activeBuffer.size() - 1, commandText);","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"TypeDefinition"},"content":"            activeBuffer.add(\"\");","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"TypeDefinition"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"TypeDefinition"},"content":"        activeBufferIndex \u003d activeBuffer.size() - 1;","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":99,"author":{"gitId":"TypeDefinition"},"content":"    // @@author TypeDefinition","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"TypeDefinition"},"content":"    private void setPreviousCommand() {","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"TypeDefinition"},"content":"        activeBuffer.set(activeBufferIndex, commandTextField.getText());","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"TypeDefinition"},"content":"        activeBufferIndex \u003d Math.max(activeBufferIndex - 1, 0);","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"TypeDefinition"},"content":"        commandTextField.setText(activeBuffer.get(activeBufferIndex));","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"TypeDefinition"},"content":"        commandTextField.end();","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"TypeDefinition"},"content":"    // @@author","lastModifiedDate":"2022-04-10"},{"lineNumber":107,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"TypeDefinition"},"content":"    // @@author TypeDefinition","lastModifiedDate":"2022-04-10"},{"lineNumber":109,"author":{"gitId":"TypeDefinition"},"content":"    private void setNextCommand() {","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"TypeDefinition"},"content":"        activeBuffer.set(activeBufferIndex, commandTextField.getText());","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"TypeDefinition"},"content":"        activeBufferIndex \u003d Math.min(activeBufferIndex + 1, activeBuffer.size() - 1);","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"TypeDefinition"},"content":"        commandTextField.setText(activeBuffer.get(activeBufferIndex));","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"TypeDefinition"},"content":"        commandTextField.end();","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"TypeDefinition"},"content":"    // @@author","lastModifiedDate":"2022-04-10"},{"lineNumber":116,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"DaneMarc"},"content":"    // @@author DaneMarc","lastModifiedDate":"2022-04-10"},{"lineNumber":118,"author":{"gitId":"DaneMarc"},"content":"    private void autocomplete(String input) {","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"DaneMarc"},"content":"        String trimmed \u003d input.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"DaneMarc"},"content":"        // hardcoded to add \"add\" to empty commands since that\u0027ll be the result anyway after running through the algo","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"DaneMarc"},"content":"        if (trimmed.length() \u003d\u003d 0 || trimmed.charAt(trimmed.length() - 1) \u003d\u003d \u0027|\u0027) {","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"DaneMarc"},"content":"            commandTextField.setText(input + \"add\");","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"DaneMarc"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"DaneMarc"},"content":"            String[] values \u003d trimmed.split(\"[ |]\");","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"DaneMarc"},"content":"            String last \u003d values[values.length - 1];","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"DaneMarc"},"content":"            if (!commands.contains(last)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"DaneMarc"},"content":"                String completed \u003d last;","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"DaneMarc"},"content":"                int min \u003d Integer.MAX_VALUE;","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"DaneMarc"},"content":"                for (String command : commands) {","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"DaneMarc"},"content":"                    if (command.length() \u003c min \u0026\u0026 command.toLowerCase().contains(last.toLowerCase())) {","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"DaneMarc"},"content":"                        completed \u003d command;","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"DaneMarc"},"content":"                        min \u003d command.length();","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"DaneMarc"},"content":"                    }","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"DaneMarc"},"content":"                }","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"DaneMarc"},"content":"                if (completed.equals(last)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"DaneMarc"},"content":"                    for (String command : commands) {","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"DaneMarc"},"content":"                        int distance \u003d editDistance(last, command);","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"DaneMarc"},"content":"                        if (distance \u003c min) {","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"DaneMarc"},"content":"                            completed \u003d command;","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"DaneMarc"},"content":"                            min \u003d distance;","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"DaneMarc"},"content":"                        }","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"DaneMarc"},"content":"                    }","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"DaneMarc"},"content":"                }","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"DaneMarc"},"content":"                commandTextField.setText(trimmed.substring(0, trimmed.length() - last.length()) + completed);","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"DaneMarc"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"DaneMarc"},"content":"        commandTextField.end();","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"DaneMarc"},"content":"    // @@author","lastModifiedDate":"2022-04-10"},{"lineNumber":156,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"DaneMarc"},"content":"    // Levenshtein distance (matrix size bounded by length of str2 aka one of the program commands)","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    //@@author DaneMarc-reused","lastModifiedDate":"2022-04-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    // Reused from https://www.geeksforgeeks.org/edit-distance-dp-5/","lastModifiedDate":"2022-04-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-04-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private int editDistance(String str1, String str2) {","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        int m \u003d str1.length();","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        int n \u003d str2.length();","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        int[][] dp \u003d new int[2][n + 1];","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c\u003d n; i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            dp[0][i] \u003d i;","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c\u003d m; i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            for (int j \u003d 0; j \u003c\u003d n; j++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                if (j \u003d\u003d 0) {","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    dp[i % 2][j] \u003d i;","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    dp[i % 2][j] \u003d Math.min(dp[(i - 1) % 2][j - 1] + (str1.charAt(i - 1) \u003d\u003d str2.charAt(j - 1) ? 0 : 1),","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                            Math.min(dp[i % 2][j - 1] + 1, dp[(i - 1) % 2][j] + 1));","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return dp[m % 2][n];","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-04-09"},{"lineNumber":184,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"DaneMarc":56,"TypeDefinition":54,"-":108}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w09-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"TypeDefinition":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"    private final String lightThemeUrl \u003d getClass().getResource(\"/view/Cinnamon.css\").toExternalForm();","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"    private final String darkThemeUrl \u003d getClass().getResource(\"/view/Caramel.css\").toExternalForm();","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"    private TransactionListPanel transactionListPanel;","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"    private StackPane transactionListPanelPlaceholder;","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"zunedz"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), this::executeCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"zunedz"},"content":"        transactionListPanel \u003d new TransactionListPanel(logic.getFilteredTransactionList());","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"zunedz"},"content":"        transactionListPanelPlaceholder.getChildren().add(transactionListPanel.getRoot());","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"DaneMarc"},"content":"        primaryStage.getScene().getStylesheets().add(guiSettings.getStylesheet());","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"DaneMarc"},"content":"     * Enables the light theme.","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"DaneMarc"},"content":"    @FXML","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"DaneMarc"},"content":"    private void useLightTheme() {","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"DaneMarc"},"content":"        Scene scene \u003d primaryStage.getScene();","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"DaneMarc"},"content":"        assert lightThemeUrl !\u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"DaneMarc"},"content":"        assert darkThemeUrl !\u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"DaneMarc"},"content":"        if (scene.getStylesheets().contains(darkThemeUrl)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"DaneMarc"},"content":"            scene.getStylesheets().remove(darkThemeUrl);","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"DaneMarc"},"content":"            scene.getStylesheets().add(lightThemeUrl);","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"DaneMarc"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"DaneMarc"},"content":"     * Enables the dark theme.","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"DaneMarc"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"DaneMarc"},"content":"    @FXML","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"DaneMarc"},"content":"    private void useDarkTheme() {","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"DaneMarc"},"content":"        Scene scene \u003d primaryStage.getScene();","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"DaneMarc"},"content":"        assert lightThemeUrl !\u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"DaneMarc"},"content":"        assert darkThemeUrl !\u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"DaneMarc"},"content":"        if (scene.getStylesheets().contains(lightThemeUrl)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"DaneMarc"},"content":"            scene.getStylesheets().remove(lightThemeUrl);","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"DaneMarc"},"content":"            scene.getStylesheets().add(darkThemeUrl);","lastModifiedDate":"2022-03-21"},{"lineNumber":174,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":175,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"DaneMarc"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY(), primaryStage.getScene().getStylesheets().get(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"zunedz"},"content":"        } catch (CommandException | ParseException | IllegalArgumentException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"DaneMarc":33,"zunedz":9,"-":193}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"    // Required Fields","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"    private Label personId;","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"    private FlowPane optionalFields;","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"    @FXML","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"    private FlowPane memberships;","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"        // Required fields.","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"        name.setText(person.getName().getValue());","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"        personId.setText(\"Client ID #\" + person.getUniqueId());","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"        phone.setText(person.getPhone().getValue());","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"        address.setText(person.getAddress().getValue());","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"        email.setText(person.getEmail().getValue());","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"        // Optional fields.","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"        person.getFields().stream().filter((Field f) -\u003e !f.prefix.isRequired()).forEach((Field f) -\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"            String value \u003d f.getValue();","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"            // Do not display blank fields. (e.g. blank remarks)","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"            if (!value.isBlank()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"                optionalFields.getChildren().add(new Label(value));","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"TypeDefinition"},"content":"        });","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"        // Tags.","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"        person.getTags().stream().sorted(Comparator.comparing(tag -\u003e tag.value))","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.value)));","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"        Membership membership \u003d person.getMembership();","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"        if (membership !\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"DaneMarc"},"content":"            Label newLabel \u003d new Label(membership.toString().toUpperCase());","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"KeithCZW"},"content":"            if (membership.getTier() \u003d\u003d Membership.Tier.GOLD) {","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"KeithCZW"},"content":"                newLabel.setId(\"gold\");","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"KeithCZW"},"content":"            } else if (membership.getTier() \u003d\u003d Membership.Tier.SILVER) {","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"KeithCZW"},"content":"                newLabel.setId(\"silver\");","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"KeithCZW"},"content":"            } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"KeithCZW"},"content":"                newLabel.setId(\"bronze\");","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"KeithCZW"},"content":"            memberships.getChildren().add(newLabel);","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"TypeDefinition"},"content":"        return id.getText().equals(card.id.getText()) \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"DaneMarc":4,"TypeDefinition":25,"-":68,"KeithCZW":16}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"import javafx.scene.Cursor;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"import javafx.scene.control.MultipleSelectionModel;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"    private static final String LIST_COMMAND \u003d \"listTransaction\";","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"    private static final String FIND_COMMAND \u003d \"findTransaction %1$d\";","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList} and command executor","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, CommandExecutor commandExecutor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"        MultipleSelectionModel\u003cPerson\u003e selectionModel \u003d personListView.getSelectionModel();","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"        // Solution below adapted from:","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"        // https://stackoverflow.com/questions/23622703/deselect-an-item-on-an-javafx-listview-on-click","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"        personListView.setCellFactory(listView -\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"            PersonListViewCell cell \u003d new PersonListViewCell();","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"            cell.setCursor(Cursor.HAND);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"            cell.addEventFilter(MouseEvent.MOUSE_PRESSED, event -\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"                personListView.requestFocus();","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"                if (event.isPrimaryButtonDown() \u0026\u0026 !cell.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"                    int index \u003d cell.getIndex();","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"                    try {","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"                        if (selectionModel.getSelectedIndex() \u003d\u003d index) {","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"                            selectionModel.clearSelection();","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"                            commandExecutor.execute(LIST_COMMAND);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"                        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"                            selectionModel.select(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"                            commandExecutor.execute(String.format(FIND_COMMAND, index + 1));","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"                    } catch (CommandException | ParseException ex) {","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"                        ex.printStackTrace();","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"                event.consume();","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"            });","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"            return cell;","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"        });","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"    static class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"    @FunctionalInterface","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"         *","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"DaneMarc":33,"zunedz":19,"-":45}},{"path":"src/main/java/seedu/address/ui/TransactionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.DueDate;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Note;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"public class TransactionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    private static final String FXML \u003d \"TransactionListCard.fxml\";","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"    private static final String STATUS_PAID_ICON \u003d \"/images/paid.png\";","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"    private static final String STATUS_NOT_PAID_ICON \u003d \"/images/unpaid.png\";","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    public final Transaction transaction;","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    private Label amount;","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"    private Label transactionDate;","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    private Label dueDate;","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"    private Label note;","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"    private Label identifier;","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"    private Label index;","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    @FXML","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"    private ImageView status;","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"    public TransactionCard(Transaction transaction, int displayedIndex) {","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"        super(FXML);","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"        this.transaction \u003d transaction;","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"        // Required fields.","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"        identifier.setText(\"Transaction ID #\" + transaction.getTransactionId());","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"        index.setText(displayedIndex + \".\");","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"        amount.setText(\"Amount: $\" + transaction.getAmount().getValue());","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"        transactionDate.setText(transaction.getTransactionDate().toString());","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"        // Optional fields.","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        dueDate.setText(transaction.getDueDate()","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"                .map(DueDate::toString)","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"                .orElse(DueDate.EMPTY_DUE_DATE));","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"        note.setText(transaction.getNote()","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"                .map(Note::toString)","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"                .orElse(Note.EMPTY_NOTE));","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"        Image image;","lastModifiedDate":"2022-04-01"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"        if (transaction.isPaid()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"            image \u003d new Image(STATUS_PAID_ICON);","lastModifiedDate":"2022-04-01"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"        } else {","lastModifiedDate":"2022-04-01"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"            image \u003d new Image(STATUS_NOT_PAID_ICON);","lastModifiedDate":"2022-04-01"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        status.setImage(image);","lastModifiedDate":"2022-04-01"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"            return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"        if (!(other instanceof TransactionCard)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"            return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"        // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"        TransactionCard card \u003d (TransactionCard) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"        return transaction.equals(card.transaction);","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"zunedz":97}},{"path":"src/main/java/seedu/address/ui/TransactionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":" * Panel containing the list of transactions.","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"public class TransactionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"    private static final String FXML \u003d \"TransactionListPanel.fxml\";","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"    private ListView\u003cTransaction\u003e transactionListView;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"     * Creates a {@code TransactinListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"    public TransactionListPanel(ObservableList\u003cTransaction\u003e transactionList) {","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"        super(FXML);","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"        transactionListView.setItems(transactionList);","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"        transactionListView.setCellFactory(listView -\u003e new TransactionListViewCell());","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Transaction} using a","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"     * {@code TransactionCard}.","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    class TransactionListViewCell extends ListCell\u003cTransaction\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        protected void updateItem(Transaction transaction, boolean empty) {","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"            super.updateItem(transaction, empty);","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"            if (empty || transaction \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"                setText(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"            } else {","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"                setGraphic(new TransactionCard(transaction, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"zunedz":50}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/bun.png\";","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"DaneMarc"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/Alert.css\");","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"DaneMarc":2,"-":85}},{"path":"src/main/resources/view/Alert.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":".background {","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":".label {","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":".label-bright {","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":".label-header {","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"/*","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":" * Metro style Push Button","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":".button {","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":".button:hover {","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":".button:focused {","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"DaneMarc"},"content":".button:default {","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":".button:default:hover {","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"DaneMarc"},"content":".dialog-pane {","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"DaneMarc"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"DaneMarc"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"DaneMarc"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"DaneMarc"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"DaneMarc"},"content":"    -fx-fill: white;","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"DaneMarc":99}},{"path":"src/main/resources/view/Caramel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"/* No idea what this does but it looks important */","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":".background {","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #2A2A2A;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"    background-color: #2A2A2A; /* Used in the default.html file */","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":".label {","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #EAEAEA;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":".list-cell:filled {","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #333;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #333;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #474747;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #474747;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"#personListView .list-cell:filled:selected {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #BA6C41;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":".list-cell .label {","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #EAEAEA;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":".result-display {","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #333;","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #EAEAEA;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #333;","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":".result-display .content, .result-display .scroll-bar {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #333;","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":".status-bar .label {","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #EAEAEA;","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":".pane-with-border, .status-bar, .scroll-bar, .list-view, .list-cell {","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #2A2A2A;","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":".menu-bar, .context-menu, .menu-item:focused {","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #9C6451;","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":".menu:hover, .menu:showing, .menu-item:hover {","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #49829C;","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":".thumb {","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #BA6C41;","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"#resultPane {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #333;","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"DaneMarc"},"content":"#commandTextField {","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #2A2A2A;","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: transparent transparent #333 transparent;","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #EAEAEA;","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"#commandTextField:focused {","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: transparent transparent #BA6C41 transparent;","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"DaneMarc"},"content":"#tags .label, #memberships .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"DaneMarc"},"content":"#tags .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #BA6C41;","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"#gold {","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #CEAA54;","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"KeithCZW"},"content":"#silver {","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"KeithCZW"},"content":"    -fx-background-color: #AAA9AD;","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"KeithCZW"},"content":"#bronze {","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #A97142;","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"DaneMarc"},"content":"#optionalFields .label {","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #EAEAEA;","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"DaneMarc":88,"KeithCZW":10}},{"path":"src/main/resources/view/Cinnamon.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":"/* No idea what this does but it looks important */","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":".background {","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #FEFAF5;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"    background-color: #FEFAF5; /* Used in the default.html file */","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":".label {","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #fff;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":".list-cell:filled {","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #FCF2E4;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #FCF2E4;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #FAE9CF;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #FAE9CF;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":".list-cell .label {","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #333;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"#personListView .list-cell:filled:selected {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #E27C26;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":".result-display {","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #FCF2E4;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #222;","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #FCF2E4;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":".result-display .content, .result-display .scroll-bar {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #FCF2E4;","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":".status-bar .label {","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #333;","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":".pane-with-border, .status-bar, .scroll-bar, .list-view, .list-cell {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #FEFAF5;","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":".menu-bar, .context-menu, .menu-item:focused {","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #AA9F92;","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":".menu:hover, .menu:showing, .menu-item:hover {","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #435D66;","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":".thumb {","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #E27C26;","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"#resultPane {","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #FCF2E4;","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"#commandTextField {","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #FEFAF5;","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #986544;","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #333;","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"DaneMarc"},"content":"#commandTextField:focused {","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-color: #E27C26;","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"DaneMarc"},"content":"#tags .label, #memberships .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"DaneMarc"},"content":"#tags .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #E27C26;","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"#gold {","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #CEAA54;","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"KeithCZW"},"content":"#silver {","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"KeithCZW"},"content":"    -fx-background-color: #AAA9AD;","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"KeithCZW"},"content":"#bronze {","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: #A97142;","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"DaneMarc"},"content":"#optionalFields .label {","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #333;","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"DaneMarc":84,"KeithCZW":11}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#onAction\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"DaneMarc":1,"-":8}},{"path":"src/main/resources/view/MainWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaneMarc"},"content":".label, .result-display, #commandTextField {","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-family: \"Segoe UI\", sans-serif;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":".error {","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"DaneMarc"},"content":"    -fx-text-fill: #d06651 !important;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"DaneMarc"},"content":".list-view {","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"DaneMarc"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"DaneMarc"},"content":".list-cell:filled {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-radius: 14px;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"    -fx-padding: 8px;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-insets: 5px 9px;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-insets: 5px 9px;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"DaneMarc"},"content":".list-cell .label, #optionalFields .label {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"DaneMarc"},"content":"    -fx-wrap-text: \"true\";","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"DaneMarc"},"content":".list-cell .cell_big_label {","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":".result-display {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"    -fx-wrap-text: \"true\";","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-radius: 8px;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"DaneMarc"},"content":"    -fx-padding: 2px;","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":".result-display .content {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":".status-bar .label {","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"DaneMarc"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":".increment-button, .decrement-button {","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"DaneMarc"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"DaneMarc"},"content":".increment-arrow, .decrement-arrow {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"DaneMarc"},"content":"#resultPane {","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-width: 0 0 2px 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"    -fx-padding: 10px 9px 20px 9px;","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"DaneMarc"},"content":"#commandTextField {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-width: 0 0 2px 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-weight: bolder;","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"DaneMarc"},"content":"#pid {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-weight: bolder;","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"DaneMarc"},"content":"#tags, #memberships {","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"DaneMarc"},"content":"    -fx-hgap: 7px;","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"DaneMarc"},"content":"#tags .label, #memberships .label {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-weight: bolder;","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"DaneMarc"},"content":"    -fx-padding: 6px;","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-radius: 4px;","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-radius: 4px;","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"DaneMarc"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"DaneMarc"},"content":"    -fx-border-insets: 3px 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"DaneMarc"},"content":"    -fx-background-insets: 3px 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"DaneMarc"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"DaneMarc":86}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"\u003cfx:root minHeight\u003d\"700\" minWidth\u003d\"1000.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"CinnamonBun\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"DaneMarc"},"content":"    \u003cImage url\u003d\"@/images/bun.png\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"DaneMarc"},"content":"        \u003cURL value\u003d\"@MainWindow.css\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Theme\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"DaneMarc"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#useLightTheme\" text\u003d\"Cinnamon\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"DaneMarc"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#useDarkTheme\" text\u003d\"Caramel\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"20\" right\u003d\"20\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"DaneMarc"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minHeight\u003d\"130\" prefHeight\u003d\"130\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"DaneMarc"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"DaneMarc"},"content":"            \u003cHBox prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"                \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"300.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"                        \u003cInsets bottom\u003d\"15\" left\u003d\"10\" right\u003d\"10\" top\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"               \u003cVBox fx:id\u003d\"transactionList\" minWidth\u003d\"300.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"                   \u003cpadding\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"DaneMarc"},"content":"                       \u003cInsets bottom\u003d\"15\" left\u003d\"10\" right\u003d\"10\" top\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"                   \u003c/padding\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"                   \u003cStackPane fx:id\u003d\"transactionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"DaneMarc":12,"TypeDefinition":1,"zunedz":10,"-":42}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        \u003c!-- Name --\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"DaneMarc"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"      \u003c!-- ID --\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"DaneMarc"},"content":"      \u003cLabel id\u003d\"pid\" fx:id\u003d\"personId\" text\u003d\"\\$personId\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"      \u003c!-- Memebership --\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"      \u003cFlowPane fx:id\u003d\"memberships\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"      \u003c!-- Tags --\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"      \u003c!-- Required Fields (Need to add individually.) --\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"DaneMarc"},"content":"      \u003cLabel fx:id\u003d\"phone\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"DaneMarc"},"content":"      \u003cLabel fx:id\u003d\"address\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"DaneMarc"},"content":"      \u003cLabel fx:id\u003d\"email\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"      \u003c!-- Optional Fields --\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"      \u003cFlowPane fx:id\u003d\"optionalFields\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DaneMarc":7,"TypeDefinition":6,"-":32}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"DaneMarc"},"content":"\u003cStackPane fx:id\u003d\"resultPane\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"DaneMarc":1,"-":8}},{"path":"src/main/resources/view/TransactionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"DaneMarc"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"90\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"         \u003cHBox spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"               \u003cLabel fx:id\u003d\"index\" text\u003d\"Label\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"                     \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"                  \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"                  \u003cLabel fx:id\u003d\"amount\" text\u003d\"\\\\$amount\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"                     \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"                  \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"            \u003cLabel fx:id\u003d\"identifier\" text\u003d\"\\\\$identifier\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"            \u003cLabel fx:id\u003d\"transactionDate\" text\u003d\"\\\\$transactionDate\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"            \u003cLabel fx:id\u003d\"dueDate\" text\u003d\"\\\\$dueDate\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"            \u003cLabel fx:id\u003d\"note\" text\u003d\"\\\\$note\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"   \u003cGridPane\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"     \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"       \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"     \u003c/columnConstraints\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"     \u003crowConstraints\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"       \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"     \u003c/rowConstraints\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"         \u003cImageView fx:id\u003d\"status\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"      \u003c/children\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"   \u003c/GridPane\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"DaneMarc":4,"TypeDefinition":1,"zunedz":49}},{"path":"src/main/resources/view/TransactionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"    \u003cListView fx:id\u003d\"transactionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"zunedz":8}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"DaneMarc"},"content":"        assertNotNull(AppUtil.getImage(\"/images/bun.png\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"DaneMarc":1,"-":35}},{"path":"src/test/java/seedu/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.testutil.JsonSerializableTestClass;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"        JsonSerializableTestClass jsonSerializableTestClass \u003d new JsonSerializableTestClass();","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"        jsonSerializableTestClass.setTestValues();","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, jsonSerializableTestClass);","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), JsonSerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, JsonSerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        JsonSerializableTestClass jsonSerializableTestClass \u003d JsonUtil","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, JsonSerializableTestClass.class);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        assertEquals(jsonSerializableTestClass.getName(), JsonSerializableTestClass.getNameTestValue());","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        assertEquals(jsonSerializableTestClass.getListOfLocalDateTimes(),","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"                JsonSerializableTestClass.getListTestValues());","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        assertEquals(jsonSerializableTestClass.getMapOfIntegerToString(),","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"                JsonSerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TypeDefinition":13,"-":34}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"DaneMarc"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"DaneMarc":1,"-":142}},{"path":"src/test/java/seedu/address/logic/LogicManagerIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.storage.SerializableAddressBookStorage;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.storage.SerializableTempAddressBookStorage;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"class LogicManagerIntegrationTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"    @TempDir","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"    public Path testFolder;","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"LapisRaider"},"content":"    private Model model;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"    private Storage storage;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"    private LogicManager logicManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"LapisRaider"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"LapisRaider"},"content":"        SerializableAddressBookStorage addressBookStorage \u003d new SerializableAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"LapisRaider"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"LapisRaider"},"content":"        SerializableTempAddressBookStorage addressBookTempStorage \u003d new SerializableTempAddressBookStorage(","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"LapisRaider"},"content":"                getTempFilePath(\"temp ab\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"LapisRaider"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, addressBookTempStorage);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"LapisRaider"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"LapisRaider"},"content":"        logicManager \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"LapisRaider"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"LapisRaider"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"LapisRaider"},"content":"    public void undoPrevModification_success()","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"LapisRaider"},"content":"            throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"LapisRaider"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"LapisRaider"},"content":"        // Execute add command","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"                + ADDRESS_DESC_AMY + REMARK_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"        logicManager.execute(addCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"        logicManager.undoPrevModification();","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"        assertEquals(expectedModel.getAddressBook(), model.getAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"LapisRaider"},"content":"    public void noModificationDoneDoNotCreateTemporaryFile_success()","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"LapisRaider"},"content":"            throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"LapisRaider"},"content":"        assertFalse(logicManager.savePrevAddressBookDataInTemp(model.getAddressBook()));","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"LapisRaider"},"content":"    public void modificationDoneCreateTemporaryFile_success()","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"LapisRaider"},"content":"            throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"LapisRaider"},"content":"        Person validPerson \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"LapisRaider"},"content":"        AddressBook newAddressBook \u003d new AddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"LapisRaider"},"content":"        newAddressBook.addPerson(validPerson);","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"LapisRaider"},"content":"        assertTrue(logicManager.savePrevAddressBookDataInTemp(newAddressBook));","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"LapisRaider"},"content":"     * Checks if after executing a command, logicManager is able to successfully save the updated","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"LapisRaider"},"content":"     * address book.","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"LapisRaider"},"content":"     * @throws Exception checks for execution of LogicManager is done in {@code LogicManagerTest}","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"LapisRaider"},"content":"    public void execute_storageSuccessfullySaveAfterCommandExecuted()","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"LapisRaider"},"content":"            throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"LapisRaider"},"content":"        Person validPerson \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"LapisRaider"},"content":"        AddressBook newAddressBook \u003d new AddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"LapisRaider"},"content":"        newAddressBook.addPerson(validPerson);","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"LapisRaider"},"content":"        // Execute add command","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"LapisRaider"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"LapisRaider"},"content":"                + ADDRESS_DESC_AMY + REMARK_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"LapisRaider"},"content":"        logicManager.execute(addCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"LapisRaider"},"content":"        assertTrue(storage.readAddressBook().isPresent());","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"LapisRaider"},"content":"        assertEquals(newAddressBook, storage.readAddressBook().get());","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"LapisRaider":108}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNRECOGNIZED_COMMAND;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.PersonUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.storage.SerializableAddressBookStorage;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.storage.SerializableTempAddressBookStorage;","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"LapisRaider"},"content":"class LogicManagerTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"LapisRaider"},"content":"    public Path testFolder;","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"DaneMarc"},"content":"    private Model model;","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"DaneMarc"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"    private LogicManager logicManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"LapisRaider"},"content":"        SerializableAddressBookStorage addressBookStorage \u003d new SerializableAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"LapisRaider"},"content":"        SerializableTempAddressBookStorage addressBookTempStorage \u003d new SerializableTempAddressBookStorage(","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"LapisRaider"},"content":"                getTempFilePath(\"temp ab\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"DaneMarc"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, addressBookTempStorage);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"DaneMarc"},"content":"        logicManager \u003d new LogicManager(model, storageManager);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"DaneMarc"},"content":"    //@@author DaneMarc","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"DaneMarc"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"DaneMarc"},"content":"    public void execute_commandChainingTest_valid() {","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"        Person validPerson1 \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"DaneMarc"},"content":"        Person validPerson2 \u003d PersonUtil.BOB;","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"DaneMarc"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"DaneMarc"},"content":"            logicManager.execute(PersonUtil.getAddCommand(validPerson1) + \" | \"","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"DaneMarc"},"content":"                    + PersonUtil.getAddCommand(validPerson2));","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"DaneMarc"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"DaneMarc"},"content":"            e.getStackTrace();","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"DaneMarc"},"content":"        assertTrue(model.hasPerson(validPerson1));","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"DaneMarc"},"content":"        assertTrue(model.hasPerson(validPerson2));","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"DaneMarc"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"DaneMarc"},"content":"    public void execute_commandChainingTest_breakChain() {","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"DaneMarc"},"content":"        Person validPerson1 \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"DaneMarc"},"content":"        Person validPerson2 \u003d PersonUtil.BOB;","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"DaneMarc"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"DaneMarc"},"content":"            logicManager.execute(PersonUtil.getAddCommand(validPerson1) + \" | invalidCommand | \"","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"DaneMarc"},"content":"                    + PersonUtil.getAddCommand(validPerson2));","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"DaneMarc"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"DaneMarc"},"content":"            e.getStackTrace();","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"DaneMarc"},"content":"        assertFalse(model.hasPerson(validPerson1));","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"DaneMarc"},"content":"        assertFalse(model.hasPerson(validPerson2));","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"DaneMarc"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"DaneMarc"},"content":"    public void execute_commandChainingTest_noChainCommand() {","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"DaneMarc"},"content":"        Person validPerson1 \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"DaneMarc"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"DaneMarc"},"content":"            logicManager.execute(PersonUtil.getAddCommand(validPerson1) + \" | \");","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"DaneMarc"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"DaneMarc"},"content":"            e.getStackTrace();","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"DaneMarc"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"DaneMarc"},"content":"        assertFalse(model.hasPerson(validPerson1));","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"DaneMarc"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"DaneMarc"},"content":"    //@@author","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"TypeDefinition"},"content":"        assertCommandException(invalidCommand, \"\\\"\" + \"uicfhmowqewca\" + \"\\\" - \" + MESSAGE_UNRECOGNIZED_COMMAND);","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"LapisRaider"},"content":"        String deleteCommand \u003d \"delete 20\";","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"LapisRaider"},"content":"        assertCommandException(deleteCommand, \"\\\"\" + \"delete 20\" + \"\\\" - \" + MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"LapisRaider"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"LapisRaider"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logicManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"LapisRaider"},"content":"    //@@author LapisRaider","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"LapisRaider"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"LapisRaider"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"LapisRaider"},"content":"        SerializableAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"LapisRaider"},"content":"                new SerializableAddressBookIoExceptionThrowingStub(testFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"LapisRaider"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"LapisRaider"},"content":"                new JsonUserPrefsStorage(testFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"LapisRaider"},"content":"        SerializableTempAddressBookStorage addressBookTempStorage \u003d new SerializableTempAddressBookStorage(","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"LapisRaider"},"content":"                getTempFilePath(\"temp ab\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"LapisRaider"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, addressBookTempStorage);","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"LapisRaider"},"content":"        logicManager \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"LapisRaider"},"content":"        // Execute add command","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"LapisRaider"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"LapisRaider"},"content":"                + ADDRESS_DESC_AMY + REMARK_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"LapisRaider"},"content":"        Person expectedPerson \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"LapisRaider"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getUserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"LapisRaider"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"LapisRaider"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"LapisRaider"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"LapisRaider"},"content":"    public void tempStorageSaveThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"LapisRaider"},"content":"        // Setup LogicManager with SerializableTempAddressBookStorage","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"LapisRaider"},"content":"        SerializableAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"LapisRaider"},"content":"                new SerializableAddressBookStorage(testFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"LapisRaider"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"LapisRaider"},"content":"                new JsonUserPrefsStorage(testFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"LapisRaider"},"content":"        SerializableTempAddressBookStorage addressBookTempStorage \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"LapisRaider"},"content":"                new SerializableTempAddressBookIoExceptionThrowingStub(getTempFilePath(\"temp ab\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"LapisRaider"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, addressBookTempStorage);","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"LapisRaider"},"content":"        logicManager \u003d new LogicManager(new ModelManager(), storage);","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"LapisRaider"},"content":"        AddressBook originalAddressBook \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"LapisRaider"},"content":"        String expectedMessage \u003d LogicManager.TEMP_FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"LapisRaider"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"LapisRaider"},"content":"                expectedMessage, () -\u003e logicManager.savePrevAddressBookDataInTemp(originalAddressBook));","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"LapisRaider"},"content":"    public void tempStorageReadThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"LapisRaider"},"content":"        // Setup LogicManager with SerializableTempAddressBookStorage","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"LapisRaider"},"content":"        SerializableAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"LapisRaider"},"content":"                new SerializableAddressBookStorage(testFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"LapisRaider"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"LapisRaider"},"content":"                new JsonUserPrefsStorage(testFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"LapisRaider"},"content":"        SerializableTempAddressBookStorage addressBookTempStorage \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"LapisRaider"},"content":"                new SerializableTempAddressBookIoExceptionThrowingStub(getTempFilePath(\"temp ab\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"LapisRaider"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, addressBookTempStorage);","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"LapisRaider"},"content":"        logicManager \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"LapisRaider"},"content":"        String expectedMessage \u003d LogicManager.TEMP_FILE_READ_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"LapisRaider"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"LapisRaider"},"content":"                expectedMessage, () -\u003e logicManager.undoPrevModification());","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"LapisRaider"},"content":"    public void tempStorageEmpty_throwsCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"LapisRaider"},"content":"        // Setup LogicManager with SerializableTempAddressBookReturnEmptyStub","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"LapisRaider"},"content":"        SerializableAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"LapisRaider"},"content":"                new SerializableAddressBookStorage(testFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"LapisRaider"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"LapisRaider"},"content":"                new JsonUserPrefsStorage(testFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"LapisRaider"},"content":"        SerializableTempAddressBookStorage addressBookTempStorage \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"LapisRaider"},"content":"                new SerializableTempAddressBookReturnEmptyStub(getTempFilePath(\"temp ab\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"LapisRaider"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, addressBookTempStorage);","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"LapisRaider"},"content":"        logicManager \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"LapisRaider"},"content":"        String expectedMessage \u003d UndoCommand.REACHED_UNDO_LIMIT;","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"LapisRaider"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e logicManager.undoPrevModification());","lastModifiedDate":"2022-03-30"},{"lineNumber":212,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"LapisRaider"},"content":"    //@@author","lastModifiedDate":"2022-03-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2022-03-29"},{"lineNumber":223,"author":{"gitId":"LapisRaider"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"LapisRaider"},"content":"        CommandResult result \u003d logicManager.execute(inputCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2022-03-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2022-03-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-03-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2022-03-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-03-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2022-03-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2022-03-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-03-29"},{"lineNumber":250,"author":{"gitId":"LapisRaider"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2022-03-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-03-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-03-29"},{"lineNumber":263,"author":{"gitId":"LapisRaider"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2022-03-29"},{"lineNumber":264,"author":{"gitId":"LapisRaider"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logicManager.execute(inputCommand));","lastModifiedDate":"2022-03-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-03-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-03-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":271,"author":{"gitId":"LapisRaider"},"content":"    private static class SerializableAddressBookIoExceptionThrowingStub extends SerializableAddressBookStorage {","lastModifiedDate":"2022-03-29"},{"lineNumber":272,"author":{"gitId":"LapisRaider"},"content":"        private SerializableAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2022-03-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":281,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"LapisRaider"},"content":"    //@@author LapisRaider","lastModifiedDate":"2022-03-30"},{"lineNumber":283,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":284,"author":{"gitId":"LapisRaider"},"content":"     * A stub class to throw an {@code IOException} when the save and read temporary file method is called.","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"LapisRaider"},"content":"    private static class SerializableTempAddressBookIoExceptionThrowingStub extends SerializableTempAddressBookStorage {","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"LapisRaider"},"content":"        private SerializableTempAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"LapisRaider"},"content":"            super(filePath);","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"LapisRaider"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"LapisRaider"},"content":"        public void addNewTempAddressBookFile(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"LapisRaider"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":296,"author":{"gitId":"LapisRaider"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"LapisRaider"},"content":"        public Optional\u003cReadOnlyAddressBook\u003e popTempAddressFileData() throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":298,"author":{"gitId":"LapisRaider"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":299,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":300,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":301,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":302,"author":{"gitId":"LapisRaider"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":303,"author":{"gitId":"LapisRaider"},"content":"     * A stub class to return an Optional empty when trying to get the temporary address file data.","lastModifiedDate":"2022-03-29"},{"lineNumber":304,"author":{"gitId":"LapisRaider"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":305,"author":{"gitId":"LapisRaider"},"content":"    private static class SerializableTempAddressBookReturnEmptyStub extends SerializableTempAddressBookStorage {","lastModifiedDate":"2022-03-29"},{"lineNumber":306,"author":{"gitId":"LapisRaider"},"content":"        private SerializableTempAddressBookReturnEmptyStub(Path filePath) {","lastModifiedDate":"2022-03-29"},{"lineNumber":307,"author":{"gitId":"LapisRaider"},"content":"            super(filePath);","lastModifiedDate":"2022-03-29"},{"lineNumber":308,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":309,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":310,"author":{"gitId":"LapisRaider"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":311,"author":{"gitId":"LapisRaider"},"content":"        public Optional\u003cReadOnlyAddressBook\u003e popTempAddressFileData() {","lastModifiedDate":"2022-03-29"},{"lineNumber":312,"author":{"gitId":"LapisRaider"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-29"},{"lineNumber":313,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":314,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":315,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"DaneMarc":52,"LapisRaider":154,"TypeDefinition":2,"-":107}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"        Person validPerson \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"TypeDefinition":2,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        Person validPerson \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"        Person validPerson \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"        AddCommand command \u003d new AddCommand(PersonUtil.AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(command.equals(command));","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(command.equals(new AddCommand(PersonUtil.AMY)));","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(command.equals(1));","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(command.equals(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(command.equals(new AddCommand(PersonUtil.BOB)));","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"LapisRaider"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"LapisRaider"},"content":"        public void sortPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"LapisRaider"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"zunedz"},"content":"        public void deleteTransaction(Transaction target) {","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"zunedz"},"content":"        public void deleteTransactionWithId(long personId) {","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"zunedz"},"content":"        public void addTransaction(Transaction transaction) {","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"zunedz"},"content":"        public void setTransaction(Transaction target, Transaction editedPerson) {","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"zunedz"},"content":"        public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"zunedz"},"content":"        public void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"LapisRaider":6,"TypeDefinition":9,"zunedz":32,"-":181}},{"path":"src/test/java/seedu/address/logic/commands/AddMembershipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":" * Contains integration tests (interaction with the Model) for {@code AddMembershipCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"class AddMembershipCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"    void execute_addMembership_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        Membership member \u003d new Membership(\"Gold\");","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"        AddMembershipCommand command \u003d new AddMembershipCommand(Index.fromZeroBased(0), member);","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"        Person person \u003d expectedModel.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"        Person personEdited \u003d person.addMembership(member);","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"        expectedModel.setPerson(person, personEdited);","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        String expectedMessage \u003d String.format(AddMembershipCommand.MESSAGE_SUCCESS, person.getName(), \"Gold member\");","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"    void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        AddMembershipCommand command \u003d new AddMembershipCommand(Index.fromZeroBased(0), new Membership(\"Gold\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"        AddMembershipCommand otherCommand \u003d new AddMembershipCommand(Index.fromZeroBased(0),","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"                new Membership(\"Gold\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"        AddMembershipCommand otherCommand2 \u003d new AddMembershipCommand(Index.fromZeroBased(1),","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"                new Membership(\"Silver\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(command.equals(command));","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(command.equals(otherCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(command.equals(otherCommand2));","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"TypeDefinition":2,"KeithCZW":52}},{"path":"src/test/java/seedu/address/logic/commands/AddTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.PersonUtil.AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INVALID_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.TRANSACTION_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.TRANSACTION_TWO;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.VALID_INDEX;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.TransactionBuilder;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"public class AddTransactionCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"    public void constructor_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTransactionCommand(null, x -\u003e null));","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTransactionCommand(Index.fromZeroBased(0),","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"                null));","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"    public void execute_transactionAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"        ModelStubAcceptingTransactionAdded modelStub \u003d new ModelStubAcceptingTransactionAdded();","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"        Transaction validTransaction \u003d TRANSACTION_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        Index validIndex \u003d VALID_INDEX;","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        CommandResult commandResult \u003d new AddTransactionCommand(validIndex, x -\u003e validTransaction).execute(modelStub);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"        assertEquals(String.format(AddTransactionCommand.MESSAGE_SUCCESS, AMY, validTransaction),","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"        assertEquals(List.of(validTransaction), modelStub.transactionAdded);","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"    public void execute_transactionInvalid_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"        ModelStubAcceptingTransactionAdded modelStub \u003d new ModelStubAcceptingTransactionAdded();","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"        Transaction invalidTransaction \u003d INVALID_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"        Index validIndex \u003d VALID_INDEX;","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"        assertThrows(CommandException.class, () -\u003e new AddTransactionCommand(validIndex, x -\u003e invalidTransaction)","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"                .execute(modelStub));","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"    public void equals() {","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"        TransactionBuilder tb \u003d x -\u003e TRANSACTION_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"        AddTransactionCommand command \u003d new AddTransactionCommand(VALID_INDEX, tb);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"        assertTrue(command.equals(command));","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        assertTrue(command.equals(new AddTransactionCommand(VALID_INDEX, tb)));","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"        assertFalse(command.equals(1));","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"        assertFalse(command.equals(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"        assertFalse(command.equals(new AddTransactionCommand(Index.fromZeroBased(2), x -\u003e TRANSACTION_TWO)));","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"zunedz"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"zunedz"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"zunedz"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"zunedz"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"zunedz"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"zunedz"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"zunedz"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"zunedz"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"zunedz"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"zunedz"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"zunedz"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"zunedz"},"content":"        public void sortPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"zunedz"},"content":"        public void deleteTransaction(Transaction target) {","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"zunedz"},"content":"        public void deleteTransactionWithId(long personId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"zunedz"},"content":"        public void addTransaction(Transaction transaction) {","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"zunedz"},"content":"        public void setTransaction(Transaction target, Transaction editedPerson) {","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"zunedz"},"content":"        public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"zunedz"},"content":"        public void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"zunedz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"zunedz"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"zunedz"},"content":"    private class ModelStubAcceptingTransactionAdded extends ModelStub {","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"zunedz"},"content":"        final ArrayList\u003cTransaction\u003e transactionAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"zunedz"},"content":"        public void addTransaction(Transaction transaction) {","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"zunedz"},"content":"            requireNonNull(transaction);","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"zunedz"},"content":"            transactionAdded.add(transaction);","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"zunedz"},"content":"        public FilteredList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"zunedz"},"content":"            ObservableList\u003cPerson\u003e obs \u003d FXCollections.observableArrayList(AMY);","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"zunedz"},"content":"            return new FilteredList\u003cPerson\u003e(obs);","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"zunedz"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"zunedz"},"content":"            return new AddressBook();","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":223,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"zunedz":224}},{"path":"src/test/java/seedu/address/logic/commands/ClearFilteredCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":" * Contains integration tests (interaction with the Model) for {@code ClearFilteredCommandTest}.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"class ClearFilteredCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"    void execute_clearUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"        ClearFilteredCommand deleteCommand \u003d new ClearFilteredCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        String expectedMessage \u003d String.format(ClearFilteredCommand.MESSAGE_PERSONS_DELETED_OVERVIEW,","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"                model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"    void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"        ClearFilteredCommand command \u003d new ClearFilteredCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"        ClearFilteredCommand otherCommand \u003d new ClearFilteredCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(command.equals(command));","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(command.equals(otherCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"TypeDefinition":1,"KeithCZW":42}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.util.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"        final String[] splitName \u003d person.getName().getValue().split(\"\\\\s+\");","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"        model.updateFilteredPersonList(new PersonContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"     * Updates {@code model}\u0027s filtered list to show only the transaction at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"    public static void showTransactionAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTransactionList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"        Transaction transaction \u003d model.getFilteredTransactionList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"        model.updateFilteredTransactionList(x -\u003e x.equals(transaction));","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"        assertEquals(1, model.getFilteredTransactionList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"TypeDefinition":2,"zunedz":15,"-":75}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTransactionAtIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INDEX_FIRST_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INDEX_SECOND_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TypicalTransactions.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"public class DeleteTransactionCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    private Model model;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        Transaction transactionToDelete \u003d model.getFilteredTransactionList()","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"                .get(INDEX_FIRST_TRANSACTION.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        DeleteTransactionCommand deleteCommand \u003d new DeleteTransactionCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        String expectedMessage \u003d String.format(DeleteTransactionCommand.MESSAGE_DELETE_TRANSACTION_SUCCESS,","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"                transactionToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"        expectedModel.deleteTransaction(transactionToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTransactionList().size() + 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"        DeleteTransactionCommand deleteTransactionCommand \u003d new DeleteTransactionCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"        assertCommandFailure(deleteTransactionCommand, model, Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"        Transaction transactionToDelete \u003d model.getFilteredTransactionList()","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"                .get(INDEX_FIRST_TRANSACTION.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"        DeleteTransactionCommand deleteCommand \u003d new DeleteTransactionCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"        String expectedMessage \u003d String.format(DeleteTransactionCommand.MESSAGE_DELETE_TRANSACTION_SUCCESS,","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"                transactionToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"        expectedModel.deleteTransaction(transactionToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"        showNoTransaction(expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTransactionList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"        DeleteTransactionCommand deleteCommand \u003d new DeleteTransactionCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"        DeleteTransactionCommand deleteFirstCommand \u003d new DeleteTransactionCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"        DeleteTransactionCommand deleteSecondCommand \u003d new DeleteTransactionCommand(INDEX_SECOND_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"        DeleteTransactionCommand deleteFirstCommandCopy \u003d new DeleteTransactionCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"zunedz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"zunedz"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"zunedz"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"zunedz"},"content":"    private void showNoTransaction(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"zunedz"},"content":"        model.updateFilteredTransactionList(p -\u003e false);","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"zunedz"},"content":"        assertTrue(model.getFilteredTransactionList().isEmpty());","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zunedz":119}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d personToEdit.setFields(PersonUtil.AMY.getFields()).setTags(PersonUtil.AMY.getTags());","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, editedPerson.getFields(), editedPerson.getTags());","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d lastPerson","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"                .addFields(new Name(PersonUtil.VALID_NAME_BOB))","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"                .addFields(new Phone(PersonUtil.VALID_PHONE_BOB))","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"                .setTags(new Tag(PersonUtil.VALID_TAG_COWORKER));","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Name(PersonUtil.VALID_NAME_BOB));","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Phone(PersonUtil.VALID_PHONE_BOB));","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"        Set\u003cTag\u003e tags \u003d Tag.createSet(PersonUtil.VALID_TAG_COWORKER);","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, fields, tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new ArrayList\u003c\u003e(), null);","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d personInFilteredList.addFields(new Name(PersonUtil.VALID_NAME_BOB));","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Name(PersonUtil.VALID_NAME_BOB));","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, fields, null);","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, firstPerson.getFields(), firstPerson.getTags());","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, personInList.getFields(), personInList.getTags());","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Name(PersonUtil.VALID_NAME_BOB));","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, fields, new HashSet\u003c\u003e());","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":150,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Name(PersonUtil.VALID_NAME_BOB));","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, fields, new HashSet\u003c\u003e());","lastModifiedDate":"2022-03-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"TypeDefinition"},"content":"        final EditCommand standardCommand \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":159,"author":{"gitId":"TypeDefinition"},"content":"            new EditCommand(INDEX_FIRST_PERSON, PersonUtil.AMY.getFields(), PersonUtil.AMY.getTags());","lastModifiedDate":"2022-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand commandWithSameValues \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":163,"author":{"gitId":"TypeDefinition"},"content":"            new EditCommand(INDEX_FIRST_PERSON, PersonUtil.AMY.getFields(), PersonUtil.AMY.getTags());","lastModifiedDate":"2022-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"TypeDefinition"},"content":"                new EditCommand(INDEX_SECOND_PERSON, PersonUtil.AMY.getFields(), PersonUtil.AMY.getTags())));","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"TypeDefinition"},"content":"                new EditCommand(INDEX_FIRST_PERSON, PersonUtil.BOB.getFields(), PersonUtil.BOB.getTags())));","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"TypeDefinition":47,"-":136}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_PERSONS_FOUND_OVERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_FOUND_OVERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.util.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"DaneMarc"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"DaneMarc"},"content":"                new PersonContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"DaneMarc"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"DaneMarc"},"content":"                new PersonContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"        String expectedMessage \u003d MESSAGE_NO_PERSONS_FOUND_OVERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"DaneMarc"},"content":"        PersonContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"        PersonContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Watanabe\");","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"DaneMarc"},"content":"     * Parses {@code userInput} into a {@code PersonContainsKeywordsPredicate}.","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"DaneMarc"},"content":"    private PersonContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"DaneMarc"},"content":"        return new PersonContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"DaneMarc":8,"TypeDefinition":5,"zunedz":1,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FindTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INDEX_FIRST_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INDEX_SECOND_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.VALID_ID;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TypicalTransactions.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.TransactionPredicateBuilder;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.TransactionWithIdentifierPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"public class FindTransactionCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"    private Model model;","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    private TransactionWithIdentifierPredicate dummyPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    private TransactionPredicateBuilder dummyPredicateBuilder;","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        dummyPredicate \u003d new TransactionWithIdentifierPredicate(VALID_ID);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        dummyPredicateBuilder \u003d x -\u003e dummyPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"        Person selectedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"        TransactionPredicateBuilder b \u003d TransactionWithIdentifierPredicate::new;","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_TRANSACTIONS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"                selectedPerson.getName());","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        FindTransactionCommand findCommand \u003d new FindTransactionCommand(INDEX_FIRST_PERSON, b);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"        expectedModel.updateFilteredTransactionList(b.createTransactionPredicate(selectedPerson.getUniqueId()));","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"        assertCommandSuccess(findCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"        FindTransactionCommand command \u003d new FindTransactionCommand(outOfBoundIndex, x -\u003e dummyPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"        Person selectedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"        TransactionWithIdentifierPredicate predicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"                new TransactionWithIdentifierPredicate(selectedPerson.getUniqueId());","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_TRANSACTIONS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"                selectedPerson.getName());","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        FindTransactionCommand findCommand \u003d new FindTransactionCommand(INDEX_FIRST_PERSON, x -\u003e predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"        expectedModel.updateFilteredTransactionList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"        assertCommandSuccess(findCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTransactionList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"        FindTransactionCommand command \u003d new FindTransactionCommand(outOfBoundIndex, x -\u003e dummyPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"        FindTransactionCommand findFirstCommand \u003d new FindTransactionCommand(INDEX_FIRST_TRANSACTION,","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"                dummyPredicateBuilder);","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"        FindTransactionCommand findSecondCommand \u003d new FindTransactionCommand(INDEX_SECOND_TRANSACTION,","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"                dummyPredicateBuilder);","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"zunedz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"zunedz"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"zunedz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"zunedz"},"content":"        FindTransactionCommand findFirstCommandCopy \u003d new FindTransactionCommand(INDEX_FIRST_TRANSACTION,","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"zunedz"},"content":"                dummyPredicateBuilder);","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"zunedz"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"zunedz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"zunedz"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"zunedz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"zunedz"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"zunedz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"zunedz"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"zunedz"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"zunedz"},"content":"    private void showNoTransaction(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"zunedz"},"content":"        model.updateFilteredTransactionList(p -\u003e false);","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"zunedz"},"content":"        assertTrue(model.getFilteredTransactionList().isEmpty());","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zunedz":134}},{"path":"src/test/java/seedu/address/logic/commands/ListMembersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.util.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.util.PersonContainsMembershipPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListMembersCommand.","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"public class ListMembersCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"    private Model model;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"    public void execute_noMembers_showsEmptyList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"        String expectedMessage \u003d Messages.MESSAGE_NO_PERSONS_FOUND_OVERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"        PersonContainsMembershipPredicate predicate \u003d new PersonContainsMembershipPredicate(Membership.Tier.ALL);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        expectedModel.updateFilteredPersonList(new PersonContainsKeywordsPredicate(Arrays.asList(\"NONESTUFF\")));","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"        assertCommandSuccess(new ListMembersCommand(predicate), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"        // Gold test","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"        Membership member \u003d new Membership(\"GOLD\");","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"        Person personEdited \u003d person.addMembership(member);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"        model.setPerson(person, personEdited);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"        person \u003d expectedModel.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"        personEdited \u003d person.addMembership(member);","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"        expectedModel.setPerson(person, personEdited);","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"        expectedModel.updateFilteredPersonList(new PersonContainsKeywordsPredicate(Arrays.asList(\"GOLD\")));","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_FOUND_OVERVIEW, 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"        PersonContainsMembershipPredicate predicate \u003d new PersonContainsMembershipPredicate(Membership.Tier.GOLD);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"        assertCommandSuccess(new ListMembersCommand(predicate), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"    void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"        PersonContainsMembershipPredicate predicate1 \u003d new PersonContainsMembershipPredicate(Membership.Tier.ALL);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"        PersonContainsMembershipPredicate predicate2 \u003d new PersonContainsMembershipPredicate(Membership.Tier.GOLD);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"        ListMembersCommand command1 \u003d new ListMembersCommand(predicate1);","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"KeithCZW"},"content":"        ListMembersCommand command2 \u003d new ListMembersCommand(predicate1);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"KeithCZW"},"content":"        ListMembersCommand command3 \u003d new ListMembersCommand(predicate2);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"KeithCZW"},"content":"        // Equals to itself","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(command1.equals(command1));","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"KeithCZW"},"content":"        //Equals to other object with same predicate","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(command1.equals(command2));","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"        // Not equals to other object with different predicate","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(command1.equals(command3));","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"        // Other types","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(command1.equals(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(command1.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"KeithCZW":84}},{"path":"src/test/java/seedu/address/logic/commands/ListTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTransactionAtIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INDEX_FIRST_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TypicalTransactions.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"public class ListTransactionCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"    private Model model;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"        assertCommandSuccess(new ListTransactionCommand(), model,","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"                ListTransactionCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    public void execute_listIsFiltered_showsEverything() throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        assertCommandSuccess(new ListTransactionCommand(), model,","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"                ListTransactionCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zunedz":42}},{"path":"src/test/java/seedu/address/logic/commands/PayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTransactionAtIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INDEX_FIRST_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INDEX_SECOND_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TypicalTransactions.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"public class PayCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    private Model model;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        Transaction transactionToEdit \u003d model.getFilteredTransactionList().get(INDEX_FIRST_TRANSACTION.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        Transaction editedTransaction \u003d transactionToEdit.setStatusTo(PayCommand.class);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        PayCommand command \u003d new PayCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        String expectedMessage \u003d PayCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"        expectedModel.setTransaction(transactionToEdit, editedTransaction);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTransactionList().size() + 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"        PayCommand payCommand \u003d new PayCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"        assertCommandFailure(payCommand, model, Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"        Transaction transactionToEdit \u003d model.getFilteredTransactionList().get(INDEX_FIRST_TRANSACTION.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"        Transaction editedTransaction \u003d transactionToEdit.setStatusTo(PayCommand.class);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"        PayCommand command \u003d new PayCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        String expectedMessage \u003d PayCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"        showTransactionAtIndex(expectedModel, INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"        expectedModel.setTransaction(transactionToEdit, editedTransaction);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTransactionList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"        PayCommand payCommand \u003d new PayCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"        assertCommandFailure(payCommand, model, Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"        final PayCommand firstPayCommand \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"                new PayCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"        PayCommand secondPayCommand \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"                new PayCommand(INDEX_SECOND_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"        PayCommand firstPayCommandCopy \u003d new","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"                PayCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"        assertTrue(firstPayCommand.equals(firstPayCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"        assertTrue(firstPayCommand.equals(firstPayCommandCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"zunedz"},"content":"        assertFalse(firstPayCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"zunedz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"zunedz"},"content":"        assertFalse(firstPayCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"zunedz"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"zunedz"},"content":"        assertFalse(firstPayCommand.equals(secondPayCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zunedz":115}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"class RemarkCommandTest {","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"    void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"        Remark remark \u003d new Remark(\"Test Remark\");","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d firstPerson.addFields(remark);","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, remark);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"TypeDefinition":33}},{"path":"src/test/java/seedu/address/logic/commands/RemoveMembershipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":" * Contains integration tests (interaction with the Model) for {@code RemoveMembershipCommandTest}.","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"class RemoveMembershipCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"    void execute_removeMembership_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"        RemoveMembershipCommand command \u003d new RemoveMembershipCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"        // Successful remove command","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"        Model editModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"        Person person \u003d editModel.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"        Membership member \u003d new Membership(\"Gold\");","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"        Person personEdited \u003d person.addMembership(member);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"        editModel.setPerson(person, personEdited);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"        String expectedMessage \u003d String.format(RemoveMembershipCommand.MESSAGE_SUCCESS, person);","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"        assertCommandSuccess(command, editModel, expectedMessage, model);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"        // No membership","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"        expectedMessage \u003d String.format(RemoveMembershipCommand.MESSAGE_NO_MEMBERSHIP, person);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"    void execute_removeMembership_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"        // Out of index","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"        RemoveMembershipCommand command \u003d new RemoveMembershipCommand(Index.fromZeroBased(10));","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"        assertCommandFailure(command, expectedModel, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"    void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"        RemoveMembershipCommand command \u003d new RemoveMembershipCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"        RemoveMembershipCommand otherCommand \u003d new RemoveMembershipCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"        RemoveMembershipCommand otherCommand2 \u003d new RemoveMembershipCommand(Index.fromZeroBased(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(command.equals(command));","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(command.equals(otherCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(command.equals(otherCommand2));","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"KeithCZW":68}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.testutil.SortUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"class SortCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":"    private final Model model \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortNameDescending_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DESC);","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByNameDescending \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.IDA, TypicalPersons.GEORGE, TypicalPersons.FIONA, TypicalPersons.ELLE,","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.DANIEL, TypicalPersons.CARL, TypicalPersons.BENSON, TypicalPersons.ALICE,","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.HOON));","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByNameDescending,","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortNameDefault_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DEFAULT);","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.HOON, TypicalPersons.ALICE, TypicalPersons.BENSON, TypicalPersons.CARL,","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.DANIEL, TypicalPersons.ELLE, TypicalPersons.FIONA, TypicalPersons.GEORGE,","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.IDA));","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortAddressDefault_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.ADDRESS_SORT_DEFAULT);","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.DANIEL, TypicalPersons.HOON, TypicalPersons.ALICE, TypicalPersons.BENSON,","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.GEORGE, TypicalPersons.FIONA, TypicalPersons.ELLE, TypicalPersons.IDA,","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.CARL));","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortAddressDescending_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.ADDRESS_SORT_DESC);","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.CARL, TypicalPersons.IDA, TypicalPersons.ELLE, TypicalPersons.FIONA,","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.GEORGE, TypicalPersons.BENSON, TypicalPersons.ALICE, TypicalPersons.HOON,","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.DANIEL));","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortEmailDefault_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.EMAIL_SORT_DEFAULT);","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.ALICE, TypicalPersons.BENSON, TypicalPersons.CARL, TypicalPersons.DANIEL,","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.ELLE, TypicalPersons.FIONA, TypicalPersons.GEORGE, TypicalPersons.HOON,","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.IDA));","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortEmailDescending_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.EMAIL_SORT_DESC);","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.IDA, TypicalPersons.HOON, TypicalPersons.GEORGE, TypicalPersons.FIONA,","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.ELLE, TypicalPersons.DANIEL, TypicalPersons.CARL, TypicalPersons.BENSON,","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortPhoneDefault_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.PHONE_SORT_DEFAULT);","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.HOON, TypicalPersons.IDA, TypicalPersons.DANIEL, TypicalPersons.ALICE,","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.ELLE, TypicalPersons.FIONA, TypicalPersons.GEORGE, TypicalPersons.CARL,","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.BENSON));","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":146,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortPhoneDescending_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":147,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":148,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.PHONE_SORT_DESC);","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.BENSON, TypicalPersons.CARL, TypicalPersons.GEORGE, TypicalPersons.FIONA,","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.ELLE, TypicalPersons.ALICE, TypicalPersons.DANIEL, TypicalPersons.IDA,","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.HOON));","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortRemarkDefault_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.REMARK_SORT_DEFAULT);","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.ALICE, TypicalPersons.BENSON, TypicalPersons.CARL, TypicalPersons.ELLE,","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.DANIEL, TypicalPersons.FIONA, TypicalPersons.GEORGE, TypicalPersons.IDA,","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.HOON));","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortRemarkDescending_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.REMARK_SORT_DESC);","lastModifiedDate":"2022-03-17"},{"lineNumber":183,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.ELLE, TypicalPersons.CARL, TypicalPersons.BENSON, TypicalPersons.ALICE,","lastModifiedDate":"2022-03-17"},{"lineNumber":186,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.DANIEL, TypicalPersons.FIONA, TypicalPersons.GEORGE, TypicalPersons.IDA,","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.HOON));","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":197,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortBirthdayDefault_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DEFAULT);","lastModifiedDate":"2022-03-17"},{"lineNumber":201,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":203,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.ELLE, TypicalPersons.CARL, TypicalPersons.ALICE, TypicalPersons.BENSON,","lastModifiedDate":"2022-03-17"},{"lineNumber":204,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.GEORGE, TypicalPersons.DANIEL, TypicalPersons.FIONA, TypicalPersons.IDA,","lastModifiedDate":"2022-03-17"},{"lineNumber":205,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.HOON));","lastModifiedDate":"2022-03-17"},{"lineNumber":206,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortBirthdayDescending_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DESC);","lastModifiedDate":"2022-03-17"},{"lineNumber":218,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":220,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.GEORGE, TypicalPersons.BENSON, TypicalPersons.ALICE, TypicalPersons.CARL,","lastModifiedDate":"2022-03-17"},{"lineNumber":221,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.ELLE, TypicalPersons.DANIEL, TypicalPersons.FIONA, TypicalPersons.IDA,","lastModifiedDate":"2022-03-17"},{"lineNumber":222,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.HOON));","lastModifiedDate":"2022-03-17"},{"lineNumber":223,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":231,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":232,"author":{"gitId":"LapisRaider"},"content":"    public void execute_sortMultipleFields_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":233,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":234,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DESC);","lastModifiedDate":"2022-03-17"},{"lineNumber":235,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DEFAULT);","lastModifiedDate":"2022-03-17"},{"lineNumber":236,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":237,"author":{"gitId":"LapisRaider"},"content":"        List\u003cPerson\u003e sortedPersonListByName \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-03-17"},{"lineNumber":238,"author":{"gitId":"LapisRaider"},"content":"                Arrays.asList(TypicalPersons.GEORGE, TypicalPersons.BENSON, TypicalPersons.ALICE, TypicalPersons.CARL,","lastModifiedDate":"2022-03-17"},{"lineNumber":239,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.ELLE, TypicalPersons.HOON, TypicalPersons.DANIEL, TypicalPersons.FIONA,","lastModifiedDate":"2022-03-17"},{"lineNumber":240,"author":{"gitId":"LapisRaider"},"content":"                        TypicalPersons.IDA));","lastModifiedDate":"2022-03-17"},{"lineNumber":241,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-17"},{"lineNumber":242,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(sortedPersonListByName,","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"zunedz"},"content":"                model.getFilteredTransactionList()), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":245,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":246,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":247,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":248,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":249,"author":{"gitId":"LapisRaider"},"content":"    public void execute_noFieldSpecified_failure() {","lastModifiedDate":"2022-03-17"},{"lineNumber":250,"author":{"gitId":"LapisRaider"},"content":"        SortCommand sortCommand \u003d new SortCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-03-16"},{"lineNumber":251,"author":{"gitId":"LapisRaider"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_EMPTY_ERROR);","lastModifiedDate":"2022-03-16"},{"lineNumber":252,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":253,"author":{"gitId":"LapisRaider"},"content":"        assertCommandFailure(sortCommand, model, expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":255,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"LapisRaider"},"content":"    public void equals() {","lastModifiedDate":"2022-03-16"},{"lineNumber":258,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder;","lastModifiedDate":"2022-03-16"},{"lineNumber":259,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":260,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DEFAULT);","lastModifiedDate":"2022-03-17"},{"lineNumber":261,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.ADDRESS_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":262,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.REMARK_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":263,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.REMARK_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":265,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":266,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":267,"author":{"gitId":"LapisRaider"},"content":"        final SortCommand standardCommand \u003d new SortCommand(new ArrayList\u003c\u003e(fieldSortOrder));","lastModifiedDate":"2022-03-16"},{"lineNumber":268,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":269,"author":{"gitId":"LapisRaider"},"content":"        SortCommand commandWithSameValues \u003d new SortCommand(new ArrayList\u003c\u003e(fieldSortOrder));","lastModifiedDate":"2022-03-16"},{"lineNumber":270,"author":{"gitId":"LapisRaider"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-16"},{"lineNumber":271,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":272,"author":{"gitId":"LapisRaider"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":273,"author":{"gitId":"LapisRaider"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-16"},{"lineNumber":274,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":275,"author":{"gitId":"LapisRaider"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":276,"author":{"gitId":"LapisRaider"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":277,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":278,"author":{"gitId":"LapisRaider"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":279,"author":{"gitId":"LapisRaider"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-16"},{"lineNumber":280,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":281,"author":{"gitId":"LapisRaider"},"content":"        //different values","lastModifiedDate":"2022-03-16"},{"lineNumber":282,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrderDiff;","lastModifiedDate":"2022-03-16"},{"lineNumber":283,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":284,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.NAME_SORT_DEFAULT);","lastModifiedDate":"2022-03-17"},{"lineNumber":285,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.ADDRESS_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":286,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.REMARK_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":287,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.BIRTHDAY_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":288,"author":{"gitId":"LapisRaider"},"content":"        SortCommand commandWithDiffValues \u003d new SortCommand(new ArrayList\u003c\u003e(fieldSortOrderDiff));","lastModifiedDate":"2022-03-16"},{"lineNumber":289,"author":{"gitId":"LapisRaider"},"content":"        assertFalse(standardCommand.equals(commandWithDiffValues));","lastModifiedDate":"2022-03-16"},{"lineNumber":290,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":291,"author":{"gitId":"LapisRaider"},"content":"        //missing values from standard","lastModifiedDate":"2022-03-16"},{"lineNumber":292,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":293,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.NAME_SORT_DEFAULT);","lastModifiedDate":"2022-03-17"},{"lineNumber":294,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.ADDRESS_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":295,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.REMARK_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":296,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.BIRTHDAY_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":297,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.BIRTHDAY_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":298,"author":{"gitId":"LapisRaider"},"content":"        commandWithDiffValues \u003d new SortCommand(new ArrayList\u003c\u003e(fieldSortOrderDiff));","lastModifiedDate":"2022-03-16"},{"lineNumber":299,"author":{"gitId":"LapisRaider"},"content":"        assertFalse(standardCommand.equals(commandWithDiffValues));","lastModifiedDate":"2022-03-16"},{"lineNumber":300,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":301,"author":{"gitId":"LapisRaider"},"content":"        //same values as standard but diff order. order matters","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":303,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.ADDRESS_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":304,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.NAME_SORT_DEFAULT);","lastModifiedDate":"2022-03-17"},{"lineNumber":305,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.REMARK_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":306,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.BIRTHDAY_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":307,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.BIRTHDAY_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":308,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrderDiff.add(SortUtil.REMARK_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":309,"author":{"gitId":"LapisRaider"},"content":"        commandWithDiffValues \u003d new SortCommand(new ArrayList\u003c\u003e(fieldSortOrderDiff));","lastModifiedDate":"2022-03-16"},{"lineNumber":310,"author":{"gitId":"LapisRaider"},"content":"        assertFalse(standardCommand.equals(commandWithDiffValues));","lastModifiedDate":"2022-03-16"},{"lineNumber":311,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":312,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":313,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"LapisRaider":287,"zunedz":26}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.logic.commands.UndoCommand.MESSAGE_UNDO_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"class UndoCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_UNDO_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"        assertCommandSuccess(new UndoCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"LapisRaider":20}},{"path":"src/test/java/seedu/address/logic/commands/UnpayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTransactionAtIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INDEX_FIRST_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INDEX_SECOND_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TypicalTransactions.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"public class UnpayCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    private Model model;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        Transaction transactionToEdit \u003d model.getFilteredTransactionList().get(INDEX_FIRST_TRANSACTION.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        Transaction editedTransaction \u003d transactionToEdit.setStatusTo(UnpayCommand.class);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        UnpayCommand command \u003d new UnpayCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        String expectedMessage \u003d UnpayCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"        expectedModel.setTransaction(transactionToEdit, editedTransaction);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTransactionList().size() + 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"        UnpayCommand unpayCommand \u003d new UnpayCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"        assertCommandFailure(unpayCommand, model, Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"        Transaction transactionToEdit \u003d model.getFilteredTransactionList().get(INDEX_FIRST_TRANSACTION.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"        Transaction editedTransaction \u003d transactionToEdit.setStatusTo(UnpayCommand.class);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"        UnpayCommand command \u003d new UnpayCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        String expectedMessage \u003d UnpayCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"        showTransactionAtIndex(expectedModel, INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"        expectedModel.setTransaction(transactionToEdit, editedTransaction);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TRANSACTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTransactionList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"        UnpayCommand unpayCommand \u003d new UnpayCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"        assertCommandFailure(unpayCommand, model, Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"        final UnpayCommand firstUnpayCommand \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"                new UnpayCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"        UnpayCommand secondUnpayCommand \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"                new UnpayCommand(INDEX_SECOND_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"        UnpayCommand firstUnpayCommandCopy \u003d new","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"                UnpayCommand(INDEX_FIRST_TRANSACTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"        assertTrue(firstUnpayCommand.equals(firstUnpayCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"        assertTrue(firstUnpayCommand.equals(firstUnpayCommandCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"        // null -\u003e returns falseß","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"zunedz"},"content":"        assertFalse(firstUnpayCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"zunedz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"zunedz"},"content":"        assertFalse(firstUnpayCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"zunedz"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"zunedz"},"content":"        assertFalse(firstUnpayCommand.equals(secondUnpayCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zunedz":115}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.TAG_DESC_COWORKER;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"        Person expectedPerson \u003d BOB.setTags(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"            PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"            NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"            NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"        Person expectedPersonMultipleTags \u003d BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"TypeDefinition"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_COWORKER + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"            new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"TypeDefinition"},"content":"        Person expectedPerson \u003d AMY.setTags();","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"TypeDefinition"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"TypeDefinition"},"content":"    public void parse_requiredFieldMissing_failure() {","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"TypeDefinition"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"TypeDefinition"},"content":"            INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_COWORKER","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"TypeDefinition"},"content":"                + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"TypeDefinition"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"TypeDefinition"},"content":"            NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_COWORKER","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"TypeDefinition"},"content":"                + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"TypeDefinition"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"TypeDefinition"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB + TAG_DESC_COWORKER","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"TypeDefinition"},"content":"                + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"TypeDefinition"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"TypeDefinition"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + TAG_DESC_COWORKER","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"TypeDefinition"},"content":"                + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"TypeDefinition"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"TypeDefinition"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"TypeDefinition"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"TypeDefinition"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"TypeDefinition"},"content":"            PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_COWORKER","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"TypeDefinition"},"content":"                + TAG_DESC_FRIEND, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"TypeDefinition":66,"-":84}},{"path":"src/test/java/seedu/address/logic/parser/AddMembershipParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.commands.AddMembershipCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"public class AddMembershipParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"    private AddMembershipParser parser \u003d new AddMembershipParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"        Membership expectedMember \u003d new Membership(\"GOLD\");","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"        Membership expectedMemberWithDate \u003d new Membership(\"GOLD\", LocalDate.parse(\"1920-02-02\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"        // valid name","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"        assertParseSuccess(parser, \"1 m/GOLD\",","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"                new AddMembershipCommand(Index.fromOneBased(1), expectedMember));","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        // valid name and date","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"        assertParseSuccess(parser, \"1 m/GOLD d/1920-02-02\",","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"                new AddMembershipCommand(Index.fromOneBased(1), expectedMemberWithDate));","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"        // invalid name","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"        assertParseFailure(parser, \"1 m/-\", Membership.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"        // invalid date","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"        assertParseFailure(parser, \"1 m/Gold d/Fail\", Membership.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"KeithCZW":39}},{"path":"src/test/java/seedu/address/logic/parser/AddTransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseNoFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.PersonUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.PersonUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.AMOUNT_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.AMOUNT_TWO;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.DUE_DATE_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.DUE_DATE_TWO;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.FLAG_PAID;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INVALID_AMOUNT;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INVALID_DUE_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INVALID_INDEX_STRING;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INVALID_TRANSACTION_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.NOTE_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.NOTE_TWO;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.TRANSACTION_DATE_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.TRANSACTION_DATE_TWO;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.VALID_INDEX_STRING;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.AddTransactionCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Amount;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.DueDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.TransactionDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"public class AddTransactionCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    private static AddTransactionParser parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    private static void init() {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"        parser \u003d new AddTransactionParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        // Could not test the output as the AddTransactionCommand have a functional interface as","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"        // an attribute.","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"        assertParseNoFailure(parser, PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"                        + AMOUNT_ONE + TRANSACTION_DATE_ONE + DUE_DATE_ONE + NOTE_ONE + FLAG_PAID);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"        // multiple amount","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        assertParseNoFailure(parser,","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"                PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"                        + AMOUNT_ONE + AMOUNT_TWO + TRANSACTION_DATE_ONE + DUE_DATE_ONE + NOTE_ONE + FLAG_PAID);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"        // multiple transaction date","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"        assertParseNoFailure(parser,","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"                PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"                        + AMOUNT_ONE + TRANSACTION_DATE_ONE + TRANSACTION_DATE_TWO","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"                        + DUE_DATE_ONE + NOTE_ONE + FLAG_PAID);","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"        // multiple due date","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"        assertParseNoFailure(parser,","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"                PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"                        + AMOUNT_ONE + TRANSACTION_DATE_ONE + DUE_DATE_ONE + DUE_DATE_TWO + NOTE_ONE + FLAG_PAID);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        // multiple note","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"        assertParseNoFailure(parser,","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"                PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"                        + AMOUNT_ONE + AMOUNT_TWO + TRANSACTION_DATE_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"                        + NOTE_ONE + NOTE_TWO + FLAG_PAID);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"        // multiple amount, the first one is invalid","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"        assertParseNoFailure(parser,","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"                PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"                        + INVALID_AMOUNT + AMOUNT_TWO + TRANSACTION_DATE_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"                        + NOTE_ONE + NOTE_TWO + FLAG_PAID);","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"        // multiple transaction date, the first one is invalid","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        assertParseNoFailure(parser,","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"                PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"                        + AMOUNT_TWO + INVALID_TRANSACTION_DATE + TRANSACTION_DATE_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"                        + NOTE_ONE + NOTE_TWO + FLAG_PAID);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"        // multiple due date, the first one is invalid","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"        assertParseNoFailure(parser,","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"                PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"                        + AMOUNT_TWO + TRANSACTION_DATE_ONE + INVALID_DUE_DATE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"                        + NOTE_ONE + NOTE_TWO + FLAG_PAID);","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"        // no due date","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"        assertParseNoFailure(parser, PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"                        + AMOUNT_ONE + AMOUNT_TWO + TRANSACTION_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"                        + NOTE_ONE + FLAG_PAID);","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"        // no note","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"        assertParseNoFailure(parser, PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"                        + AMOUNT_ONE + AMOUNT_TWO + TRANSACTION_DATE_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"                        + FLAG_PAID);","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"        // without flag","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"        assertParseNoFailure(parser, PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"                        + AMOUNT_ONE + AMOUNT_TWO + TRANSACTION_DATE_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"                        + NOTE_ONE);","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"zunedz"},"content":"    public void parse_requiredFieldMissing_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"zunedz"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTransactionCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"zunedz"},"content":"        // missing index","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"zunedz"},"content":"                        + AMOUNT_ONE + TRANSACTION_DATE_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"zunedz"},"content":"                        + NOTE_ONE + FLAG_PAID, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"zunedz"},"content":"        // missing transaction date","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"zunedz"},"content":"                + AMOUNT_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"zunedz"},"content":"                + NOTE_ONE + FLAG_PAID, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"zunedz"},"content":"        // missing amount","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"zunedz"},"content":"                + TRANSACTION_DATE_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"zunedz"},"content":"                + NOTE_ONE + FLAG_PAID, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"zunedz"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"zunedz"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTransactionCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"zunedz"},"content":"        // invalid index","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + INVALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"zunedz"},"content":"                + AMOUNT_ONE + TRANSACTION_DATE_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"zunedz"},"content":"                + NOTE_ONE + FLAG_PAID, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"zunedz"},"content":"        // two index","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, VALID_INDEX_STRING + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"zunedz"},"content":"                + AMOUNT_ONE + TRANSACTION_DATE_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"zunedz"},"content":"                + NOTE_ONE + FLAG_PAID, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"zunedz"},"content":"        // non-empty preamble","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"zunedz"},"content":"                + AMOUNT_ONE + TRANSACTION_DATE_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"zunedz"},"content":"                + NOTE_ONE + FLAG_PAID, expectedMessage);","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"zunedz"},"content":"        // invalid amount","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"zunedz"},"content":"                + INVALID_AMOUNT + TRANSACTION_DATE_ONE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"zunedz"},"content":"                + NOTE_ONE + FLAG_PAID, Amount.MESSAGE_CONSTRAINT);","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"zunedz"},"content":"        // invalid transaction date","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"zunedz"},"content":"                + AMOUNT_ONE + INVALID_TRANSACTION_DATE + DUE_DATE_ONE","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"zunedz"},"content":"                + NOTE_ONE + FLAG_PAID, TransactionDate.MESSAGE_CONSTRAINT);","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"zunedz"},"content":"        // invalid due date","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"zunedz"},"content":"                + AMOUNT_ONE + TRANSACTION_DATE_ONE + INVALID_DUE_DATE","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"zunedz"},"content":"                + NOTE_ONE + FLAG_PAID, DueDate.MESSAGE_CONSTRAINT);","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"zunedz"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, VALID_INDEX_STRING","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"zunedz"},"content":"                + INVALID_AMOUNT + INVALID_AMOUNT + TRANSACTION_DATE_ONE + DUE_DATE_TWO","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"zunedz"},"content":"                + NOTE_ONE + FLAG_PAID, Amount.MESSAGE_CONSTRAINT);","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zunedz":167}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNRECOGNIZED_COMMAND;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.util.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        Person person \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"        Person person \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getPersonDetails(person));","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, person.getFields(), person.getTags()), command);","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"        assertEquals(new FindCommand(new PersonContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(ParseException.class, MESSAGE_UNRECOGNIZED_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"DaneMarc":1,"TypeDefinition":6,"zunedz":1,"-":89}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"        } catch (IllegalArgumentException | ParseException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", e);","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        } catch (IllegalArgumentException | ParseException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"            assertEquals(expectedMessage, e.getMessage());","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"     * Asserts that parsing of {@code userinput} by {@code parser} is successful without","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"     * checking the commandResult.","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"    public static void assertParseNoFailure(Parser parser, String userInput) {","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"        } catch (IllegalArgumentException | ParseException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", e);","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"TypeDefinition":4,"zunedz":10,"-":36}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.DeleteTransactionCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":" * outside of the DeleteTransactionCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"public class DeleteTransactionCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"    private DeleteTransactionCommandParser parser \u003d new DeleteTransactionCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTransactionCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"                DeleteTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zunedz":33}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.TAG_DESC_COWORKER;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_REMARK_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_TAG_COWORKER;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"    private static final String TAG_EMPTY \u003d \" \" + Tag.PREFIX;","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"TypeDefinition"},"content":"        // while parsing {@code Tag.PREFIX} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"TypeDefinition"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_COWORKER + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"TypeDefinition"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_COWORKER, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"TypeDefinition"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_COWORKER, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"TypeDefinition"},"content":"        String userInput \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"TypeDefinition"},"content":"            targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_COWORKER + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"TypeDefinition"},"content":"                + NAME_DESC_AMY + REMARK_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Name(VALID_NAME_AMY));","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Phone(VALID_PHONE_BOB));","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Email(VALID_EMAIL_AMY));","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Address(VALID_ADDRESS_AMY));","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"TypeDefinition"},"content":"        Set\u003cTag\u003e tags \u003d Stream.of(VALID_TAG_FRIEND, VALID_TAG_COWORKER).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, fields, tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":140,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Email(VALID_EMAIL_AMY));","lastModifiedDate":"2022-03-04"},{"lineNumber":141,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Phone(VALID_PHONE_BOB));","lastModifiedDate":"2022-03-04"},{"lineNumber":142,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, fields, null);","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":152,"author":{"gitId":"TypeDefinition"},"content":"        // name","lastModifiedDate":"2022-03-04"},{"lineNumber":153,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":154,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Name(VALID_NAME_AMY));","lastModifiedDate":"2022-03-04"},{"lineNumber":155,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, fields, null);","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"TypeDefinition"},"content":"        fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":161,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Phone(VALID_PHONE_AMY));","lastModifiedDate":"2022-03-04"},{"lineNumber":162,"author":{"gitId":"TypeDefinition"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, fields, null);","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"TypeDefinition"},"content":"        fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":168,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Email(VALID_EMAIL_AMY));","lastModifiedDate":"2022-03-04"},{"lineNumber":169,"author":{"gitId":"TypeDefinition"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, fields, null);","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"TypeDefinition"},"content":"        fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":175,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Address(VALID_ADDRESS_AMY));","lastModifiedDate":"2022-03-04"},{"lineNumber":176,"author":{"gitId":"TypeDefinition"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, fields, null);","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"LapisRaider"},"content":"        //remark","lastModifiedDate":"2022-03-03"},{"lineNumber":180,"author":{"gitId":"LapisRaider"},"content":"        userInput \u003d targetIndex.getOneBased() + REMARK_DESC_AMY;","lastModifiedDate":"2022-03-03"},{"lineNumber":181,"author":{"gitId":"TypeDefinition"},"content":"        fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":182,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2022-03-04"},{"lineNumber":183,"author":{"gitId":"TypeDefinition"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, fields, null);","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-03"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"TypeDefinition"},"content":"        fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":189,"author":{"gitId":"TypeDefinition"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, fields, Tag.createSet(VALID_TAG_FRIEND));","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"TypeDefinition"},"content":"        String userInput \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":197,"author":{"gitId":"TypeDefinition"},"content":"            targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-04"},{"lineNumber":198,"author":{"gitId":"TypeDefinition"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_BOB","lastModifiedDate":"2022-03-04"},{"lineNumber":199,"author":{"gitId":"TypeDefinition"},"content":"                + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_COWORKER;","lastModifiedDate":"2022-03-13"},{"lineNumber":200,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":201,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":202,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Phone(VALID_PHONE_BOB));","lastModifiedDate":"2022-03-04"},{"lineNumber":203,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Email(VALID_EMAIL_BOB));","lastModifiedDate":"2022-03-04"},{"lineNumber":204,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Address(VALID_ADDRESS_BOB));","lastModifiedDate":"2022-03-04"},{"lineNumber":205,"author":{"gitId":"TypeDefinition"},"content":"        Set\u003cTag\u003e tags \u003d Tag.createSet(VALID_TAG_FRIEND, VALID_TAG_COWORKER);","lastModifiedDate":"2022-03-13"},{"lineNumber":206,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, fields, tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":216,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":217,"author":{"gitId":"TypeDefinition"},"content":"        ArrayList\u003cField\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":218,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Phone(VALID_PHONE_BOB));","lastModifiedDate":"2022-03-04"},{"lineNumber":219,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":220,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, fields, null);","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"TypeDefinition"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB + PHONE_DESC_BOB;","lastModifiedDate":"2022-03-04"},{"lineNumber":225,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Email(VALID_EMAIL_BOB));","lastModifiedDate":"2022-03-04"},{"lineNumber":226,"author":{"gitId":"TypeDefinition"},"content":"        fields.add(new Address(VALID_ADDRESS_BOB));","lastModifiedDate":"2022-03-04"},{"lineNumber":227,"author":{"gitId":"TypeDefinition"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, fields, null);","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"TypeDefinition"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, new ArrayList\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-03-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"TypeDefinition":94,"LapisRaider":2,"-":144}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.util.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"DaneMarc"},"content":"                new FindCommand(new PersonContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"DaneMarc":1,"zunedz":1,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/FindTransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.FindTransactionCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"public class FindTransactionCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"    private FindTransactionCommandParser parser \u003d new FindTransactionCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, \"e\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"                FindTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zunedz":20}},{"path":"src/test/java/seedu/address/logic/parser/IndexParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"public class IndexParserTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(ParseException.class, () -\u003e IndexParser.parse(\"10 a\"));","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(ParseException.class, IndexParser.MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"            -\u003e IndexParser.parse(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"        assertEquals(INDEX_FIRST_PERSON, IndexParser.parse(\"1\"));","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"        assertEquals(INDEX_FIRST_PERSON, IndexParser.parse(\"  1  \"));","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"TypeDefinition":6,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/ListMembersCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.commands.ListMembersCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.util.PersonContainsMembershipPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"public class ListMembersCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"    private ListMembersCommandParser parser \u003d new ListMembersCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"        // valid input","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"        assertParseSuccess(parser, \"GOLD\",","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"                new ListMembersCommand(new PersonContainsMembershipPredicate(Membership.Tier.GOLD)));","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"        // valid input","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"        assertParseSuccess(parser, \"BRONZE\",","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"                new ListMembersCommand(new PersonContainsMembershipPredicate(Membership.Tier.BRONZE)));","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        // valid input","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"        assertParseSuccess(parser, \"SILVER\",","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"                new ListMembersCommand(new PersonContainsMembershipPredicate(Membership.Tier.SILVER)));","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"        // valid input","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"        assertParseSuccess(parser, \"\",","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"                new ListMembersCommand(new PersonContainsMembershipPredicate(Membership.Tier.ALL)));","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"        // invalid input","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"        assertParseFailure(parser, \"-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"                ListMembersCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        // invalid input string","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"        assertParseFailure(parser, \"hello\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"                ListMembersCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"KeithCZW":45}},{"path":"src/test/java/seedu/address/logic/parser/PayCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.PayCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"public class PayCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    private final PayCommandParser parser \u003d new PayCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"        assertParseSuccess(parser, \"1\", new PayCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zunedz":26}},{"path":"src/test/java/seedu/address/logic/parser/RemoveMembershipParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.logic.commands.RemoveMembershipCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"public class RemoveMembershipParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"    private RemoveMembershipParser parser \u003d new RemoveMembershipParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"        // valid index","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"        assertParseSuccess(parser, \"1\",","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"                new RemoveMembershipCommand(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"        // invalid index","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"        assertParseFailure(parser, \"-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"                RemoveMembershipCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"        // invalid index string","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"        assertParseFailure(parser, \"hello\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"                RemoveMembershipCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"KeithCZW":32}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.testutil.SortUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"class SortCommandParserTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"            SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"        // no field specified","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"    public void parse_invalid_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"        // invalid field, cannot sort by tags","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"        assertParseFailure(parser, Tag.PREFIX.getPrefix(), MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"        // invalid input, only accepts valid field input and descending keyword","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"        assertParseFailure(parser, \"hello \" + Phone.PREFIX.getPrefix(), MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"        // invalid prefix being passed in","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"LapisRaider"},"content":"        assertParseFailure(parser, \"i/\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"LapisRaider"},"content":"        // invalid values mixed with valid values","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"LapisRaider"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"LapisRaider"},"content":"                Phone.PREFIX.getPrefix() + SortUtil.DESC_STRING + \" \" + Email.PREFIX.getPrefix() + \"   asce\",","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"LapisRaider"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"LapisRaider"},"content":"        // desc keyword without a prefix before it","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"LapisRaider"},"content":"        assertParseFailure(parser, SortCommand.DESCENDING_KEYWORD + \" \" + Phone.PREFIX.getPrefix(),","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"LapisRaider"},"content":"        // just desc keyword alone","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"LapisRaider"},"content":"        assertParseFailure(parser, SortCommand.DESCENDING_KEYWORD, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"        // no spaces in between desc keyword and prefix","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"LapisRaider"},"content":"        assertParseFailure(parser, Phone.PREFIX.getPrefix() + SortCommand.DESCENDING_KEYWORD,","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"LapisRaider"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"LapisRaider"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"        SortCommand expectedCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"        // name ascending","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Name.PREFIX.getPrefix(), expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"LapisRaider"},"content":"        // name descending","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Name.PREFIX.getPrefix() + SortUtil.DESC_STRING, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"LapisRaider"},"content":"        // phone ascending","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.PHONE_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Phone.PREFIX.getPrefix(), expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"LapisRaider"},"content":"        // phone descending","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.PHONE_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Phone.PREFIX.getPrefix() + SortUtil.DESC_STRING, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"LapisRaider"},"content":"        // email ascending","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.EMAIL_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Email.PREFIX.getPrefix(), expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"LapisRaider"},"content":"        // email descending","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.EMAIL_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Email.PREFIX.getPrefix() + SortUtil.DESC_STRING, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"LapisRaider"},"content":"        // address ascending","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.ADDRESS_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Address.PREFIX.getPrefix(), expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"LapisRaider"},"content":"        // address descending","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.ADDRESS_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Address.PREFIX.getPrefix() + SortUtil.DESC_STRING, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"LapisRaider"},"content":"        // address ascending","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.REMARK_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Remark.PREFIX.getPrefix(), expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"LapisRaider"},"content":"        // Remark descending","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.REMARK_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Remark.PREFIX.getPrefix() + SortUtil.DESC_STRING, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"LapisRaider"},"content":"        // Birthday ascending","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Birthday.PREFIX.getPrefix(), expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"LapisRaider"},"content":"        // Birthday descending","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, Birthday.PREFIX.getPrefix() + SortUtil.DESC_STRING, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"LapisRaider"},"content":"    public void parse_someFieldSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder;","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"LapisRaider"},"content":"        SortCommand expectedCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"LapisRaider"},"content":"        String input;","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"LapisRaider"},"content":"        // birthday, name descending, phone, remark","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.PHONE_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.REMARK_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"LapisRaider"},"content":"        input \u003d Birthday.PREFIX.getPrefix() + Name.PREFIX.getPrefix() + SortUtil.DESC_STRING + Phone.PREFIX.getPrefix()","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"LapisRaider"},"content":"                + Remark.PREFIX.getPrefix();","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, input, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"LapisRaider"},"content":"        // birthday desc, name desc, email desc","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.EMAIL_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"LapisRaider"},"content":"        input \u003d Birthday.PREFIX.getPrefix() + SortUtil.DESC_STRING + Name.PREFIX.getPrefix() + SortUtil.DESC_STRING","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"LapisRaider"},"content":"                + Email.PREFIX.getPrefix() + SortUtil.DESC_STRING;","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, input, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"LapisRaider"},"content":"    public void parse_repeatedFieldSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder;","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"LapisRaider"},"content":"        SortCommand expectedCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"LapisRaider"},"content":"        String input;","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"LapisRaider"},"content":"        // double birthday","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"LapisRaider"},"content":"        input \u003d Birthday.PREFIX.getPrefix() + Birthday.PREFIX.getPrefix();","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, input, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"LapisRaider"},"content":"        // double birthday in different sort order","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"LapisRaider"},"content":"        input \u003d Birthday.PREFIX.getPrefix() + Birthday.PREFIX.getPrefix() + SortUtil.DESC_STRING;","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, input, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"LapisRaider"},"content":"        // multiple prefix input with duplicate name","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.EMAIL_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.REMARK_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"LapisRaider"},"content":"        input \u003d Name.PREFIX.getPrefix() + Email.PREFIX.getPrefix() + Remark.PREFIX.getPrefix()","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"LapisRaider"},"content":"                + Name.PREFIX.getPrefix();","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, input, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"LapisRaider"},"content":"        // multiple prefix input with duplicate name but one is descending","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.EMAIL_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.REMARK_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"LapisRaider"},"content":"        input \u003d Name.PREFIX.getPrefix() + Email.PREFIX.getPrefix() + Remark.PREFIX.getPrefix() + Name.PREFIX.getPrefix()","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"LapisRaider"},"content":"                + SortUtil.DESC_STRING;","lastModifiedDate":"2022-03-16"},{"lineNumber":209,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, input, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":210,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"LapisRaider"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"LapisRaider"},"content":"        ArrayList\u003cSortCommand.FieldSortOrder\u003e fieldSortOrder;","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"LapisRaider"},"content":"        SortCommand expectedCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"LapisRaider"},"content":"        String input;","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"LapisRaider"},"content":"        // all fields specified in default order","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.PHONE_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.EMAIL_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.ADDRESS_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.REMARK_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DEFAULT);","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"LapisRaider"},"content":"        input \u003d Name.PREFIX.getPrefix() + Phone.PREFIX.getPrefix() + Email.PREFIX.getPrefix()","lastModifiedDate":"2022-03-17"},{"lineNumber":228,"author":{"gitId":"LapisRaider"},"content":"                + Address.PREFIX.getPrefix() + Remark.PREFIX.getPrefix() + Birthday.PREFIX.getPrefix();","lastModifiedDate":"2022-03-17"},{"lineNumber":229,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, input, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"LapisRaider"},"content":"        // all fields specified in descending order","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.NAME_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.PHONE_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":235,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.EMAIL_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.ADDRESS_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":237,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.REMARK_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":238,"author":{"gitId":"LapisRaider"},"content":"        fieldSortOrder.add(SortUtil.BIRTHDAY_SORT_DESC);","lastModifiedDate":"2022-03-16"},{"lineNumber":239,"author":{"gitId":"LapisRaider"},"content":"        expectedCommand \u003d new SortCommand(fieldSortOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":240,"author":{"gitId":"LapisRaider"},"content":"        input \u003d Name.PREFIX.getPrefix() + SortUtil.DESC_STRING + Phone.PREFIX.getPrefix() + SortUtil.DESC_STRING","lastModifiedDate":"2022-03-17"},{"lineNumber":241,"author":{"gitId":"LapisRaider"},"content":"                + Email.PREFIX.getPrefix() + SortUtil.DESC_STRING + Address.PREFIX.getPrefix() + SortUtil.DESC_STRING","lastModifiedDate":"2022-03-17"},{"lineNumber":242,"author":{"gitId":"LapisRaider"},"content":"                + Remark.PREFIX.getPrefix() + SortUtil.DESC_STRING + Birthday.PREFIX.getPrefix() + SortUtil.DESC_STRING;","lastModifiedDate":"2022-03-17"},{"lineNumber":243,"author":{"gitId":"LapisRaider"},"content":"        assertParseSuccess(parser, input, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":244,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":245,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":246,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"LapisRaider":246}},{"path":"src/test/java/seedu/address/logic/parser/UnpayCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.UnpayCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"public class UnpayCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    private final UnpayCommandParser parser \u003d new UnpayCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"        assertParseSuccess(parser, \"1\", new UnpayCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnpayCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zunedz":26}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_TAG_COWORKER;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d AMY.addFields(new Address(VALID_ADDRESS_BOB)).setTags(new Tag(VALID_TAG_COWORKER));","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(AMY, editedPerson);","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(addressBook.hasPerson(AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"        addressBook.addPerson(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(addressBook.hasPerson(AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"        addressBook.addPerson(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d AMY.addFields(new Address(VALID_ADDRESS_BOB)).setTags(new Tag(VALID_TAG_COWORKER));","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(addressBook.hasPerson(editedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"        private final ObservableList\u003cTransaction\u003e transactions \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"        public Map\u003cString, List\u003cObject\u003e\u003e generateStorageMap() {","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"            HashMap\u003cString, List\u003cObject\u003e\u003e storageMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"            storageMap.put(Person.MAP_PREFIX, new ArrayList\u003c\u003e(persons));","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"            storageMap.put(Transaction.MAP_PREFIX, new ArrayList\u003c\u003e(transactions));","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"zunedz"},"content":"            return storageMap;","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"zunedz"},"content":"        public ObservableList\u003cTransaction\u003e getTransactionList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"zunedz"},"content":"            return transactions;","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"TypeDefinition":14,"zunedz":19,"-":88}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.util.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"DaneMarc"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4, \"test\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"DaneMarc"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4, \"test\");","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"TypeDefinition"},"content":"        String[] keywords \u003d ALICE.getName().getValue().split(\"\\\\s+\");","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"TypeDefinition"},"content":"        modelManager.updateFilteredPersonList(new PersonContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"DaneMarc":2,"TypeDefinition":2,"zunedz":1,"-":127}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValid(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Address.isValid(\"\")); // empty string","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Address.isValid(\" \")); // spaces only","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Address.isValid(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Address.isValid(\"-\")); // one character","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Address.isValid(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TypeDefinition":6,"-":30}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValid(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"\")); // empty string","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\" \")); // spaces only","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"@example.com\")); // missing local part","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@\")); // missing domain name","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Email.isValid(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Email.isValid(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Email.isValid(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Email.isValid(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Email.isValid(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Email.isValid(\"a@bc\")); // minimal","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Email.isValid(\"test@localhost\")); // alphabets only","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Email.isValid(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Email.isValid(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Email.isValid(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Email.isValid(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Email.isValid(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TypeDefinition":34,"-":34}},{"path":"src/test/java/seedu/address/model/person/MembershipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"public class MembershipTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Membership(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Membership(invalidName));","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"    public void getValue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"        Membership member \u003d new Membership(\"bronze\");","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(\"Bronze member\", member.getValue());","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"        assertNotEquals(\"Fake\", member.getValue());","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"        member \u003d new Membership(\"silver\");","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(\"Silver member\", member.getValue());","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"        assertNotEquals(\"Fake\", member.getValue());","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"        member \u003d new Membership(\"gold\");","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(\"Gold member\", member.getValue());","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        assertNotEquals(\"Fake\", member.getValue());","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"    public void getTierFromString() {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(Membership.Tier.GOLD, Membership.getTierFromString(\"gold\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(Membership.Tier.SILVER, Membership.getTierFromString(\"silver\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(Membership.Tier.BRONZE, Membership.getTierFromString(\"bronze\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"    public void getTier() {","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"        Membership member \u003d new Membership(\"gold\");","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(Membership.Tier.GOLD, member.getTier());","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"        member \u003d new Membership(\"silver\");","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(Membership.Tier.SILVER, member.getTier());","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"        member \u003d new Membership(\"bronze\");","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(Membership.Tier.BRONZE, member.getTier());","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"    public void getDate() {","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"        LocalDate date \u003d LocalDate.parse(\"1920-02-02\");","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"        Membership member \u003d new Membership(\"gold\", date);","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(date, member.getDate());","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"KeithCZW"},"content":"    public void isValidName() {","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"KeithCZW"},"content":"        // null address","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"KeithCZW"},"content":"        assertThrows(NullPointerException.class, () -\u003e Membership.isValidName(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"KeithCZW"},"content":"        // invalid addresses","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(Membership.isValidName(\"\")); // empty string","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(Membership.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(Membership.isValidName(\"-\")); // non-alphanumeric","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"        // valid addresses","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(Membership.isValidName(\"gOlD\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(Membership.isValidName(\"bRoNZE\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(Membership.isValidName(\"silver\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"KeithCZW"},"content":"    public void isValidDate() {","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"KeithCZW"},"content":"        String validDate \u003d \"1920-02-02\";","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"KeithCZW"},"content":"        String invalidDate \u003d \"Jargon\";","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(Membership.isValidDate(validDate));","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(Membership.isValidDate(invalidDate));","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"KeithCZW"},"content":"    public void toString_test() {","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"KeithCZW"},"content":"        LocalDate date \u003d LocalDate.parse(\"1920-02-02\");","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"KeithCZW"},"content":"        Membership member \u003d new Membership(\"BRONZE\", date);","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"TypeDefinition"},"content":"        String expectedResult \u003d \"Bronze member since \" + date.toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(expectedResult, member.toString());","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"KeithCZW"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"KeithCZW"},"content":"        // null address","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"KeithCZW"},"content":"        Membership member1 \u003d new Membership(\"GOLD\", LocalDate.parse(\"1920-02-02\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"KeithCZW"},"content":"        Membership member2 \u003d new Membership(\"GOLD\", LocalDate.parse(\"1920-02-02\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"KeithCZW"},"content":"        Membership member3 \u003d new Membership(\"SILVER\");","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(member1.equals(member1));","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(member1.equals(member2));","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(member1.equals(member3));","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"KeithCZW"},"content":"    public void hashCode_test() {","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"KeithCZW"},"content":"        Membership member \u003d new Membership(\"Gold\");","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"KeithCZW"},"content":"        int expected \u003d Membership.Tier.GOLD.hashCode();","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(expected, member.hashCode());","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"KeithCZW"},"content":"    public void compareTo() {","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"KeithCZW"},"content":"        Membership member1 \u003d new Membership(\"gold\");","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"KeithCZW"},"content":"        Membership member2 \u003d new Membership(\"silver\");","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(-1, member1.compareTo(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(-1, member1.compareTo(member2));","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(1, member2.compareTo(member1));","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"TypeDefinition":1,"KeithCZW":136}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValid(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Name.isValid(\"\")); // empty string","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Name.isValid(\" \")); // spaces only","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Name.isValid(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Name.isValid(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Name.isValid(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Name.isValid(\"12345\")); // numbers only","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Name.isValid(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Name.isValid(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Name.isValid(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TypeDefinition":10,"-":30}},{"path":"src/test/java/seedu/address/model/person/PersonContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TypeDefinition"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"TypeDefinition"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.util.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"public class PersonContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"TypeDefinition"},"content":"    public void equals() {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"                new PersonContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"                new PersonContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"        PersonContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"                new PersonContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"    public void test_personContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"        // One keyword","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"                new PersonContainsKeywordsPredicate(Collections.singletonList(\"Amy\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(predicate.test(PersonUtil.AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(\"Amy\", \"Bee\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(predicate.test(PersonUtil.AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(\"Amy\", \"Meier\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(predicate.test(PersonUtil.AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(\"AMy\", \"bEe\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(predicate.test(PersonUtil.AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"        // Keywords match phone, email and address, but does not match name.","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"            Arrays.asList(PersonUtil.VALID_PHONE_AMY, PersonUtil.VALID_EMAIL_AMY, PersonUtil.VALID_ADDRESS_AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(predicate.test(PersonUtil.AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"DaneMarc"},"content":"        // Person fields partial match","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"DaneMarc"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Collections.singletonList(\"Am\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"DaneMarc"},"content":"        assertTrue(predicate.test(PersonUtil.AMY));","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"DaneMarc"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"DaneMarc"},"content":"        // Person tags partial match","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"DaneMarc"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Collections.singletonList(\"frie\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"DaneMarc"},"content":"        assertTrue(predicate.test(PersonUtil.AMY));","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(predicate.test(PersonUtil.AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"TypeDefinition"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"TypeDefinition"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(predicate.test(PersonUtil.AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"TypeDefinition"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"TypeDefinition"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"DaneMarc":8,"TypeDefinition":79,"zunedz":1}},{"path":"src/test/java/seedu/address/model/person/PersonContainsMembershipPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.model.person.util.PersonContainsMembershipPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"public class PersonContainsMembershipPredicateTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"        PersonContainsMembershipPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"                new PersonContainsMembershipPredicate(Membership.Tier.GOLD);","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"        PersonContainsMembershipPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"                new PersonContainsMembershipPredicate(Membership.Tier.SILVER);","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"        PersonContainsMembershipPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"                new PersonContainsMembershipPredicate(Membership.Tier.GOLD);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"    public void test_personContainsMembership_returnsTrue() {","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"        // Gold","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        PersonContainsMembershipPredicate predicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"                new PersonContainsMembershipPredicate(Membership.Tier.GOLD);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"        Person tempPerson \u003d PersonUtil.AMY.addMembership(new Membership(\"GOLD\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(predicate.test(tempPerson));","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"        //Silver","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"        predicate \u003d new PersonContainsMembershipPredicate(Membership.Tier.SILVER);","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"        tempPerson \u003d PersonUtil.AMY.addMembership(new Membership(\"SILVER\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(predicate.test(tempPerson));","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"        // Bronze","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"        predicate \u003d new PersonContainsMembershipPredicate(Membership.Tier.BRONZE);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"        tempPerson \u003d PersonUtil.AMY.addMembership(new Membership(\"BRONZE\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(predicate.test(tempPerson));","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"        // All","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"        predicate \u003d new PersonContainsMembershipPredicate(Membership.Tier.ALL);","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"        tempPerson \u003d PersonUtil.AMY.addMembership(new Membership(\"SILVER\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"        assertTrue(predicate.test(tempPerson));","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"    public void test_nameDoesNotContainsMembership_returnsFalse() {","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"        // Gold","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"        PersonContainsMembershipPredicate predicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"                new PersonContainsMembershipPredicate(Membership.Tier.GOLD);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"        Person tempPerson \u003d PersonUtil.AMY.addMembership(new Membership(\"SILVER\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(predicate.test(tempPerson));","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"        //Silver","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"KeithCZW"},"content":"        predicate \u003d new PersonContainsMembershipPredicate(Membership.Tier.SILVER);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"KeithCZW"},"content":"        tempPerson \u003d PersonUtil.AMY.addMembership(new Membership(\"BRONZE\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(predicate.test(tempPerson));","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"KeithCZW"},"content":"        // Bronze","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"KeithCZW"},"content":"        predicate \u003d new PersonContainsMembershipPredicate(Membership.Tier.BRONZE);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"KeithCZW"},"content":"        tempPerson \u003d PersonUtil.AMY.addMembership(new Membership(\"GOLD\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(predicate.test(tempPerson));","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"        // All","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"        predicate \u003d new PersonContainsMembershipPredicate(Membership.Tier.ALL);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"        tempPerson \u003d PersonUtil.AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"        assertFalse(predicate.test(tempPerson));","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"KeithCZW":85}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_TAG_COWORKER;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"        Person person \u003d AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(AMY.isSamePerson(AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(AMY.isSamePerson(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"        // same email, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d BOB.addFields(new Email(VALID_EMAIL_AMY));","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(AMY.isSamePerson(editedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        // different email, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"        editedPerson \u003d AMY.addFields(new Email(VALID_EMAIL_BOB));","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(AMY.isSamePerson(editedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(AMY.equals(AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(AMY.equals(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(AMY.equals(5));","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(AMY.equals(BOB));","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d AMY.addFields(new Name(VALID_NAME_BOB));","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(AMY.equals(editedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"        editedPerson \u003d AMY.addFields(new Phone(VALID_PHONE_BOB));","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(AMY.equals(editedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"        editedPerson \u003d AMY.addFields(new Email(VALID_EMAIL_BOB));","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(AMY.equals(editedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"        editedPerson \u003d AMY.addFields(new Address(VALID_ADDRESS_BOB));","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(AMY.equals(editedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"        editedPerson \u003d AMY.setTags(new Tag(VALID_TAG_COWORKER));","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(AMY.equals(editedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"TypeDefinition":31,"LapisRaider":1,"-":45}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValid(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Phone.isValid(\"\")); // empty string","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Phone.isValid(\" \")); // spaces only","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Phone.isValid(\"91\")); // less than 3 numbers","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Phone.isValid(\"phone\")); // non-numeric","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Phone.isValid(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(Phone.isValid(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Phone.isValid(\"911\")); // exactly 3 numbers","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Phone.isValid(\"93121534\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(Phone.isValid(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TypeDefinition":10,"-":30}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import static seedu.address.testutil.PersonUtil.VALID_TAG_COWORKER;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"        assertFalse(uniquePersonList.contains(AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(uniquePersonList.contains(AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d AMY.addFields(new Address(VALID_ADDRESS_BOB)).setTags(new Tag(VALID_TAG_COWORKER));","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        assertTrue(uniquePersonList.contains(editedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(AMY, null));","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(AMY, AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.setPerson(AMY, AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"        expectedUniquePersonList.add(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"TypeDefinition"},"content":"        Person editedPerson \u003d AMY.addFields(new Address(VALID_ADDRESS_BOB)).setTags(new Tag(VALID_TAG_COWORKER));","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.setPerson(AMY, editedPerson);","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"TypeDefinition"},"content":"        expectedUniquePersonList.add(editedPerson);","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.setPerson(AMY, BOB);","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(AMY, BOB));","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(AMY));","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.remove(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"TypeDefinition"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"TypeDefinition"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(AMY, AMY);","lastModifiedDate":"2022-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"TypeDefinition":33,"-":135}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValid(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"TypeDefinition":1,"-":25}},{"path":"src/test/java/seedu/address/model/transaction/AmountTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"public class AmountTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"    public static final String FIELD_NAME \u003d \"Amount\";","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Amount(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    public void constructor_invalidAmount_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Amount(\"-1\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    public void isValid_null_returnsFalse() {","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"        // null argument","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"        assertFalse(Amount.isValid(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    public void isValid_invalidArgument_returnsFalse() {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"        // invalid argument","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"        assertFalse(Amount.isValid(\"-1\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"        assertFalse(Amount.isValid(\"\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"        assertFalse(Amount.isValid(\"abcd\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        assertFalse(Amount.isValid(\"2.33e\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        assertFalse(Amount.isValid(\"0x888\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        assertFalse(Amount.isValid(\"167x\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        assertFalse(Amount.isValid(\"2 + 3\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"    public void isValid_validArgument_returnsTrue() {","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"        // valid argument","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"        assertTrue(Amount.isValid(\"45\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"        assertTrue(Amount.isValid(\"2.33\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"        assertTrue(Amount.isValid(\"2.33f\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        assertTrue(Amount.isValid(\"9999999.990\"));","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"        assertTrue(Amount.isValid(\"0.00123\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        assertTrue(Amount.isValid(\"0\"));","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"        assertTrue(Amount.isValid(\"2.\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"    public void toStringAmount() {","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"        assertEquals(FIELD_NAME + \": 123.0\", new Amount(\"123\").toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"        assertEquals(FIELD_NAME + \": 0.12\", new Amount(\"000.123\").toString());","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"        assertEquals(FIELD_NAME + \": 1.0\", new Amount(\"1.\").toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"        assertEquals(FIELD_NAME + \": 0.12\", new Amount(\"0.123f\").toString());","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zunedz":62}},{"path":"src/test/java/seedu/address/model/transaction/DueDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.VALID_DUE_DATE_ONE;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.VALID_DUE_DATE_TWO;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"public class DueDateTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DueDate(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"        // empty string","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DueDate(\"\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"        // date not exist","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DueDate(\"2020-20-20\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"        // not in the format YYYY-MM-DD","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DueDate(\"26 September 2020\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"        // Not a valid date","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DueDate(\"This is not a valid date\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    public void isValid_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"        // null argument","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"        assertThrows(NullPointerException.class, () -\u003eDueDate.isValid(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    public void isValid_invalidArgument_returnsFalse() {","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        // invalid argument","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        assertFalse(DueDate.isValid(\"\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        assertFalse(DueDate.isValid(\"2020-20-20\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        assertFalse(DueDate.isValid(\"abcd\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"        assertFalse(DueDate.isValid(\"26 September 2020\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"        assertFalse(DueDate.isValid(\"2020/11/11\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"    public void isValid_validArgument_returnsTrue() {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"        // valid argument","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        assertTrue(DueDate.isValid(\"2020-11-11\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"        assertTrue(DueDate.isValid(\"2020-12-26\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        assertTrue(DueDate.isValid(\"2020-01-01\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"    public void equalsTest() {","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"        DueDate firstDueDate \u003d new DueDate(VALID_DUE_DATE_ONE);","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"        DueDate secondDueDate \u003d new DueDate(VALID_DUE_DATE_TWO);","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"        DueDate firstDueDateCopy \u003d new DueDate(firstDueDate.getValue());","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"        // compare with itself -\u003e returns true","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"        assertTrue(firstDueDate.equals(firstDueDate));","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"        // compare with object with same constructor args","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"        assertTrue(firstDueDate.equals(firstDueDateCopy));","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"        //compare with different date","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"        assertFalse(firstDueDate.equals(secondDueDate));","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"        //compare with different object","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"        assertFalse(firstDueDate.equals(\"2021-11-11\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zunedz":72}},{"path":"src/test/java/seedu/address/model/transaction/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"public class NoteTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    public void constructor_validArguments_returnsNote() {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"        String argument \u003d \"This is a note\";","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"        assertEquals(argument, new Note(argument).getValue());","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zunedz":21}},{"path":"src/test/java/seedu/address/model/transaction/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"public class StatusTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"    private Status statusPaid;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"        statusPaid \u003d new Status(\"true\");","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    public void constructor_null_success() throws Exception {","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"            new Status(null);","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"            throw(new Exception(\"This should not be thrown\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    public void constructor_validArguments_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"        // True","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"        assertDoesNotThrow(() -\u003e new Status(\"True\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"        // False","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"        assertDoesNotThrow(() -\u003e new Status(\"False\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    public void isPaidTest() {","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        assertTrue(statusPaid.isPaid());","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"    public void getValueTest() {","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"        assertEquals(\"Paid\", statusPaid.getValue());","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"zunedz":45}},{"path":"src/test/java/seedu/address/model/transaction/TransactionDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.VALID_TRANSACTION_DATE_ONE;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.VALID_TRANSACTION_DATE_TWO;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"public class TransactionDateTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TransactionDate(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"        // empty string","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TransactionDate(\"\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"        // date not exist","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TransactionDate(\"2020-20-20\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"        // not in the format YYYY-MM-DD","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TransactionDate(\"26 September 2020\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"        // Not a valid date","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TransactionDate(\"This is not a valid date\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    public void isValid_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"        // null argument","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"        assertThrows(NullPointerException.class, () -\u003eTransactionDate.isValid(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    public void isValid_invalidArgument_returnsFalse() {","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        // invalid argument","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        assertFalse(TransactionDate.isValid(\"\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"        assertFalse(TransactionDate.isValid(\"2020-20-20\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        assertFalse(TransactionDate.isValid(\"abcd\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"        assertFalse(TransactionDate.isValid(\"26 September 2020\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"        assertFalse(TransactionDate.isValid(\"2020/11/11\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"    public void isValid_validArgument_returnsTrue() {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"        // valid argument","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        assertTrue(TransactionDate.isValid(\"2020-11-11\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"        assertTrue(TransactionDate.isValid(\"2020-12-26\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"        assertTrue(TransactionDate.isValid(\"2020-01-01\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"    public void equalsTest() {","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"        TransactionDate firstTransactionDate \u003d new TransactionDate(VALID_TRANSACTION_DATE_ONE);","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"        TransactionDate secondTransactionDate \u003d new TransactionDate(VALID_TRANSACTION_DATE_TWO);","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"        TransactionDate firstTransactionDateCopy \u003d new TransactionDate(firstTransactionDate.getValue());","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"        // compare with itself -\u003e returns true","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"        assertTrue(firstTransactionDate.equals(firstTransactionDate));","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"        // compare with object with same constructor args","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        assertTrue(firstTransactionDate.equals(firstTransactionDateCopy));","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"        //compare with different date","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"        assertFalse(firstTransactionDate.equals(secondTransactionDate));","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"        //compare with different object","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"        assertFalse(firstTransactionDate.equals(\"2021-11-11\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zunedz":73}},{"path":"src/test/java/seedu/address/model/transaction/TransactionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.INVALID_TRANSACTION;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.TRANSACTION_ONE;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.TRANSACTION_ONE_INCOMPLETE;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.TRANSACTION_TWO;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.VALID_AMOUNT_ONE;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.VALID_DUE_DATE_ONE;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.VALID_ID;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.VALID_TRANSACTION_DATE_ONE;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.util.StatusFactoryInterface;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"public class TransactionTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    private Amount amount;","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"    private TransactionDate transactionDate;","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    private DueDate dueDate;","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    private Transaction transaction;","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    private long validId;","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"        amount \u003d new Amount(VALID_AMOUNT_ONE);","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        transactionDate \u003d new TransactionDate(VALID_TRANSACTION_DATE_ONE);","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"        dueDate \u003d new DueDate(VALID_DUE_DATE_ONE);","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"        validId \u003d VALID_ID;","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"        Collection\u003cTransactionField\u003e fields \u003d List.of(","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"                amount,","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"                transactionDate,","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"                dueDate","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"        );","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"        transaction \u003d new Transaction(","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"                fields,","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"                validId","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"        );","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"    public void constructor_null_throwsNullArgumentException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Transaction((Collection\u003cTransactionField\u003e) null, VALID_ID));","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"    public void constructor_missingRequiredField_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"        // Missing Transaction Date Field","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"        List\u003cTransactionField\u003e incompleteArgumentsOne \u003d List.of(","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"                new Amount(VALID_AMOUNT_ONE)","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"        );","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Transaction(incompleteArgumentsOne, VALID_ID));","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"        // Missing Amount Field","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"        List\u003cTransactionField\u003e incompleteArgumentsTwo \u003d List.of(","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"                    new TransactionDate(VALID_TRANSACTION_DATE_ONE)","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"        );","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Transaction(incompleteArgumentsTwo, VALID_ID));","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"    public void isValidTest() {","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"        Transaction validTransaction \u003d TRANSACTION_ONE;","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"        Transaction invalidTransaction \u003d INVALID_TRANSACTION;","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"        // valid transaction -\u003e returns True","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"        assertTrue(validTransaction.isValid());","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"        // invalid transaction (due date \u003c transaction date) -\u003e returns false","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"        assertFalse(invalidTransaction.isValid());","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"    public void removeFieldTest() {","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"        DueDate toRemove \u003d dueDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"        Collection\u003cTransactionField\u003e fieldsOne \u003d List.of(","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"                amount,","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"                transactionDate,","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"                dueDate","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"        );","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"        Collection\u003cTransactionField\u003e fieldCopy \u003d new ArrayList\u003c\u003e(fieldsOne);","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"        Transaction transactionOne \u003d new Transaction(fieldsOne, VALID_ID);","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"        fieldCopy.remove(toRemove);","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"        Transaction expectedTransaction \u003d new Transaction(transactionOne.getTransactionId(), fieldCopy, VALID_ID);","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"        assertEquals(expectedTransaction, transactionOne.removeField(DueDate.PREFIX));","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"    public void addFieldTest() {","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"        DueDate toAdd \u003d dueDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"zunedz"},"content":"        Collection\u003cTransactionField\u003e fieldsOne \u003d List.of(","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"zunedz"},"content":"                amount,","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"zunedz"},"content":"                transactionDate,","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"zunedz"},"content":"                dueDate","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"zunedz"},"content":"        );","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"zunedz"},"content":"        Collection\u003cTransactionField\u003e fieldCopy \u003d new ArrayList\u003c\u003e(fieldsOne);","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"zunedz"},"content":"        Transaction transactionOne \u003d new Transaction(fieldsOne, VALID_ID);","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"zunedz"},"content":"        fieldCopy.add(toAdd);","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"zunedz"},"content":"        Transaction expectedTransaction \u003d new Transaction(transactionOne.getTransactionId(), fieldCopy, VALID_ID);","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"zunedz"},"content":"        assertEquals(expectedTransaction, transactionOne.addField(toAdd));","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"zunedz"},"content":"    public void setStatusToTest() {","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"zunedz"},"content":"        Status statusPaid \u003d new Status(\"true\");","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"zunedz"},"content":"        Collection\u003cTransactionField\u003e fields \u003d new ArrayList\u003c\u003e(transaction.getFields());","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"zunedz"},"content":"        fields.add(statusPaid);","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"zunedz"},"content":"        Transaction expectedTransaction \u003d new Transaction(transaction.getTransactionId(),","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"zunedz"},"content":"                fields,","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"zunedz"},"content":"                validId","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"zunedz"},"content":"        );","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"zunedz"},"content":"        assertEquals(expectedTransaction, transaction.setStatusTo(Command.class, new StatusFactoryAlwaysReturnsTrue()));","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"zunedz"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"zunedz"},"content":"    public void equals() {","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"zunedz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"zunedz"},"content":"        Transaction transactionCopy \u003d new Transaction(TRANSACTION_ONE);","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"zunedz"},"content":"        assertEquals(TRANSACTION_ONE, transactionCopy);","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"zunedz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"zunedz"},"content":"        assertEquals(TRANSACTION_ONE, TRANSACTION_ONE);","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"zunedz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"zunedz"},"content":"        assertNotEquals(null, TRANSACTION_ONE);","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"zunedz"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"zunedz"},"content":"        assertNotEquals(\"TRANSACTION_ONE\", TRANSACTION_ONE);","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"zunedz"},"content":"        // different Transaction -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"zunedz"},"content":"        assertNotEquals(TRANSACTION_ONE, TRANSACTION_TWO);","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"zunedz"},"content":"        // some fields are missing -\u003e return false","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"zunedz"},"content":"        assertNotEquals(TRANSACTION_ONE, TRANSACTION_ONE_INCOMPLETE);","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"zunedz"},"content":"    private class StatusFactoryAlwaysReturnsTrue implements StatusFactoryInterface {","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"zunedz"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"zunedz"},"content":"        public Status getStatus(Class\u003c? extends Command\u003e command) {","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"zunedz"},"content":"            return new Status(\"True\");","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"zunedz"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zunedz":165}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"DaneMarc"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100, \"test\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"DaneMarc"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2, \"\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"DaneMarc"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5, \"\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"DaneMarc":3,"-":120}},{"path":"src/test/java/seedu/address/storage/SerializableTempAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"import java.io.File;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"class SerializableTempAddressBookStorageTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":"            \"TempAddressBookStorageTest\");","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"LapisRaider"},"content":"    @TempDir","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"    public Path testFolder;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"    private SerializableTempAddressBookStorage tempAddressBookStorage;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"        testFolder \u003d testFolder.resolve(\"temp\");","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"        tempAddressBookStorage \u003d new SerializableTempAddressBookStorage(testFolder);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"LapisRaider"},"content":"    private void deleteAllFilesInFolder() {","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"        for (File file : Objects.requireNonNull(testFolder.toFile().listFiles())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"            file.delete();","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"LapisRaider"},"content":"    private SerializableTempAddressBookStorage populateTemporaryFileStorage(int populateCount) throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"LapisRaider"},"content":"        AddressBook originalAddressBook \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"LapisRaider"},"content":"        for (int i \u003d 0; i \u003c populateCount; ++i) {","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"LapisRaider"},"content":"            tempAddressBookStorage.addNewTempAddressBookFile(originalAddressBook);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"LapisRaider"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"LapisRaider"},"content":"        return tempAddressBookStorage;","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"LapisRaider"},"content":"    public void loadLatestTemporaryFileSaved_success() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"LapisRaider"},"content":"        AddressBook originalAddressBook \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"LapisRaider"},"content":"        tempAddressBookStorage.addNewTempAddressBookFile(originalAddressBook);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"LapisRaider"},"content":"        Optional\u003cReadOnlyAddressBook\u003e retrieved \u003d tempAddressBookStorage.popTempAddressFileData();","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"LapisRaider"},"content":"        assertEquals(retrieved.get(), originalAddressBook);","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"LapisRaider"},"content":"    public void loadLatestTemporaryFileSaved_failure() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"LapisRaider"},"content":"        SerializableTempAddressBookStorage populatedTempAddressBookStorage \u003d populateTemporaryFileStorage(5);","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"LapisRaider"},"content":"        //populate address book, delete temporary files made, try to read from deleted files","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"        deleteAllFilesInFolder();","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"        assertThrows(IOException.class, ()-\u003e populatedTempAddressBookStorage.popTempAddressFileData());","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"LapisRaider"},"content":"    public void noPreviousFileToLoad_success() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"LapisRaider"},"content":"        Optional\u003cReadOnlyAddressBook\u003e retrieved \u003d tempAddressBookStorage.popTempAddressFileData();","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"LapisRaider"},"content":"        assertTrue(retrieved.isEmpty());","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"LapisRaider"},"content":"    public void addMultipleTempFile_success() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"LapisRaider"},"content":"        int noToPopulate \u003d 4;","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"LapisRaider"},"content":"        populateTemporaryFileStorage(noToPopulate);","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"LapisRaider"},"content":"        String[] noOfTempFiles \u003d testFolder.toFile().list();","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"LapisRaider"},"content":"        assertEquals(noOfTempFiles.length, noToPopulate);","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"LapisRaider"},"content":"    public void maxSaveFileAddedLimitReached_success() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"LapisRaider"},"content":"        int noToPopulate \u003d SerializableTempAddressBookStorage.SAVE_LIMIT + 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"LapisRaider"},"content":"        populateTemporaryFileStorage(noToPopulate);","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"LapisRaider"},"content":"        String[] noOfTempFiles \u003d testFolder.toFile().list();","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"LapisRaider"},"content":"        assertEquals(noOfTempFiles.length, SerializableTempAddressBookStorage.SAVE_LIMIT);","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"LapisRaider"},"content":"    public void deleteAllTemporaryFiles_success() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"LapisRaider"},"content":"        int noToPopulate \u003d 4;","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"LapisRaider"},"content":"        SerializableTempAddressBookStorage populatedTempAddressBookStorage \u003d populateTemporaryFileStorage(noToPopulate);","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"LapisRaider"},"content":"        populatedTempAddressBookStorage.deleteAllTempFilesData();","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"LapisRaider"},"content":"        String[] noOfTempFiles \u003d testFolder.toFile().list();","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"LapisRaider"},"content":"        assertEquals(noOfTempFiles.length, 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"LapisRaider"},"content":"    public void deleteAllTemporaryFiles_noPreviousFileToLoad_success() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"LapisRaider"},"content":"        int noToPopulate \u003d 4;","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"LapisRaider"},"content":"        SerializableTempAddressBookStorage populatedTempAddressBookStorage \u003d populateTemporaryFileStorage(noToPopulate);","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"LapisRaider"},"content":"        populatedTempAddressBookStorage.deleteAllTempFilesData();","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"LapisRaider"},"content":"        Optional\u003cReadOnlyAddressBook\u003e retrieved \u003d tempAddressBookStorage.popTempAddressFileData();","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"LapisRaider"},"content":"        assertTrue(retrieved.isEmpty());","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"LapisRaider"},"content":"    public void readTemporaryFile_success() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"TypeDefinition"},"content":"        Path path \u003d addToTestDataPathIfNotNull(\"validTempAddressBookTest.save\");","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"LapisRaider"},"content":"        Optional\u003cReadOnlyAddressBook\u003e retrieved \u003d tempAddressBookStorage.getTempAddressBookFileData(path);","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"LapisRaider"},"content":"        assertTrue(retrieved.isPresent());","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"LapisRaider"},"content":"        assertEquals(retrieved.get(), getTypicalAddressBook());","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"LapisRaider"},"content":"    public void readTemporaryFile_fail_throwException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"LapisRaider"},"content":"        //try to read a corrupted file","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"TypeDefinition"},"content":"        Path path \u003d addToTestDataPathIfNotNull(\"invalidTempAddressBookTest.save\");","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"LapisRaider"},"content":"        assertThrows(IOException.class, () -\u003e tempAddressBookStorage.getTempAddressBookFileData(path));","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"LapisRaider"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"LapisRaider"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"LapisRaider"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"LapisRaider"},"content":"                : null;","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"LapisRaider":135,"TypeDefinition":2}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"        SerializableAddressBookStorage addressBookStorage \u003d new SerializableAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"        SerializableTempAddressBookStorage addressBookTempStorage \u003d new SerializableTempAddressBookStorage(","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"                getTempFilePath(\"temp ab\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, addressBookTempStorage);","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"DaneMarc"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6, \"\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"         * {@link SerializableAddressBookStorage} class.","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"LapisRaider"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"LapisRaider"},"content":"    public void addressBookTempReadSave() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"LapisRaider"},"content":"        /*","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"LapisRaider"},"content":"         * {@link SerializableTempAddressBookStorage} class.","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"LapisRaider"},"content":"         * More extensive testing of making temporary files to save the address book","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"LapisRaider"},"content":"         * is done in {@link SerializableTempAddressBookStorageTest} class.","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"LapisRaider"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"LapisRaider"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"LapisRaider"},"content":"        storageManager.addNewTempAddressBookFile(original);","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"LapisRaider"},"content":"        Optional\u003cReadOnlyAddressBook\u003e retrieved \u003d storageManager.popTempAddressFileData();","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"LapisRaider"},"content":"        assertEquals(original, new AddressBook(retrieved.get()));","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"LapisRaider"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DaneMarc":1,"LapisRaider":19,"TypeDefinition":2,"-":64}},{"path":"src/test/java/seedu/address/testutil/JsonSerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"public class JsonSerializableTestClass {","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TypeDefinition":1,"-":71}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"TypeDefinition"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":6,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Field;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Likes rock climbing.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Likes adventure.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_TAG_COWORKER \u003d \"coworker\";","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + Name.PREFIX + VALID_NAME_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + Name.PREFIX + VALID_NAME_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + Phone.PREFIX + VALID_PHONE_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + Phone.PREFIX + VALID_PHONE_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + Email.PREFIX + VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + Email.PREFIX + VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"TypeDefinition"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + Address.PREFIX + VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"TypeDefinition"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + Address.PREFIX + VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"TypeDefinition"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + Remark.PREFIX + VALID_REMARK_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + Remark.PREFIX + VALID_REMARK_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + Tag.PREFIX + VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"    public static final String TAG_DESC_COWORKER \u003d \" \" + Tag.PREFIX + VALID_TAG_COWORKER;","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + Name.PREFIX + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + Phone.PREFIX + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + Email.PREFIX + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + Address.PREFIX; // empty string not allowed for addresses","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + Tag.PREFIX + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"TypeDefinition"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"TypeDefinition"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"TypeDefinition"},"content":"    public static final Person AMY \u003d new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"            new Name(VALID_NAME_AMY),","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"            new Address(VALID_ADDRESS_AMY),","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"            new Email(VALID_EMAIL_AMY),","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"            new Phone(VALID_PHONE_AMY),","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"            new Remark(VALID_REMARK_AMY)),","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"            new Tag(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"        ));","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"    public static final Person BOB \u003d new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"            new Name(VALID_NAME_BOB),","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"            new Address(VALID_ADDRESS_BOB),","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"            new Email(VALID_EMAIL_BOB),","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"TypeDefinition"},"content":"            new Phone(VALID_PHONE_BOB),","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"TypeDefinition"},"content":"            new Remark(VALID_REMARK_BOB)),","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"            new Tag(VALID_TAG_FRIEND),","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"TypeDefinition"},"content":"            new Tag(VALID_TAG_COWORKER)","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"        ));","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":90,"author":{"gitId":"TypeDefinition"},"content":"        for (Field f : person.getFields()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"TypeDefinition"},"content":"            sb.append(f.prefix).append(f.toString()).append(\" \");","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":93,"author":{"gitId":"TypeDefinition"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"TypeDefinition"},"content":"            s -\u003e sb.append(Tag.PREFIX).append(s.value).append(\" \")","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"TypeDefinition"},"content":"        );","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"TypeDefinition":69,"-":29}},{"path":"src/test/java/seedu/address/testutil/SortUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LapisRaider"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"LapisRaider"},"content":"public class SortUtil {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"LapisRaider"},"content":"    public static final String DESC_STRING \u003d \" \" + SortCommand.DESCENDING_KEYWORD;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"    // field sort order","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder NAME_SORT_DEFAULT \u003d new SortCommand.FieldSortOrder(","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"LapisRaider"},"content":"            Name.PREFIX,","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"LapisRaider"},"content":"            false);","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder NAME_SORT_DESC \u003d new SortCommand.FieldSortOrder(Name.PREFIX, true);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder PHONE_SORT_DEFAULT \u003d new SortCommand.FieldSortOrder(","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"LapisRaider"},"content":"            Phone.PREFIX,","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"LapisRaider"},"content":"            false);","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder PHONE_SORT_DESC \u003d new SortCommand.FieldSortOrder(Phone.PREFIX,","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"LapisRaider"},"content":"            true);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder EMAIL_SORT_DEFAULT \u003d new SortCommand.FieldSortOrder(","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"            Email.PREFIX,","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"            false);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder EMAIL_SORT_DESC \u003d new SortCommand.FieldSortOrder(Email.PREFIX,","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"LapisRaider"},"content":"            true);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder ADDRESS_SORT_DEFAULT \u003d new SortCommand.FieldSortOrder(","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"LapisRaider"},"content":"            Address.PREFIX, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder ADDRESS_SORT_DESC \u003d new SortCommand.FieldSortOrder(Address.PREFIX,","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"LapisRaider"},"content":"            true);","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder REMARK_SORT_DEFAULT \u003d new SortCommand.FieldSortOrder(","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"            Remark.PREFIX,","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"            false);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder REMARK_SORT_DESC \u003d new SortCommand.FieldSortOrder(Remark.PREFIX,","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"LapisRaider"},"content":"            true);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"LapisRaider"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder BIRTHDAY_SORT_DEFAULT \u003d new SortCommand.FieldSortOrder(","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"LapisRaider"},"content":"            Birthday.PREFIX, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"LapisRaider"},"content":"    public static final SortCommand.FieldSortOrder BIRTHDAY_SORT_DESC \u003d new SortCommand.FieldSortOrder(Birthday.PREFIX,","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"LapisRaider"},"content":"            true);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"LapisRaider"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"LapisRaider":47}},{"path":"src/test/java/seedu/address/testutil/TransactionUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Amount;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.DueDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Note;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Status;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.TransactionDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"public class TransactionUtil {","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"    public static final long VALID_ID \u003d PersonUtil.AMY.getUniqueId(); // set all transactions to be amy\u0027s","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_AMOUNT_ONE \u003d \"123.45\";","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_TRANSACTION_DATE_ONE \u003d \"2020-11-11\";","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_DUE_DATE_ONE \u003d \"2021-11-11\";","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_NOTE_ONE \u003d \"This is a valid note\";","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_STATUS_ONE \u003d Status.STATUS_PAID;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"    public static final String AMOUNT_ONE \u003d \" \" + Amount.PREFIX + VALID_AMOUNT_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"    public static final String TRANSACTION_DATE_ONE \u003d \" \" + TransactionDate.PREFIX + VALID_TRANSACTION_DATE_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"    public static final String DUE_DATE_ONE \u003d \" \" + DueDate.PREFIX + VALID_DUE_DATE_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    public static final String NOTE_ONE \u003d \" \" + Note.PREFIX + VALID_NOTE_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"    public static final String FLAG_PAID \u003d \" \" + Status.PREFIX;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_AMOUNT_TWO \u003d \"11.99\";","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_TRANSACTION_DATE_TWO \u003d \"2020-11-12\";","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_DUE_DATE_TWO \u003d \"2021-11-12\";","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_NOTE_TWO \u003d \"This is a valid note as well\";","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    public static final String AMOUNT_TWO \u003d \" \" + Amount.PREFIX + VALID_AMOUNT_TWO;","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"    public static final String TRANSACTION_DATE_TWO \u003d \" \" + TransactionDate.PREFIX + VALID_TRANSACTION_DATE_TWO;","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    public static final String DUE_DATE_TWO \u003d \" \" + DueDate.PREFIX + VALID_DUE_DATE_TWO;","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"    public static final String NOTE_TWO \u003d \" \" + Note.PREFIX + VALID_NOTE_TWO;","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_AMOUNT_THREE \u003d \"100\";","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_TRANSACTION_DATE_THREE \u003d \"2020-12-11\";","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_DUE_DATE_THREE \u003d \"2022-11-11\";","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_NOTE_THREE \u003d \"This is a note\";","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zunedz"},"content":"    public static final String INVALID_TRANSACTION_DATE \u003d \" \" + TransactionDate.PREFIX + \"2020-20-20\";","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"zunedz"},"content":"    public static final String INVALID_DUE_DATE \u003d \" \" + DueDate.PREFIX + \"2002-20-20\";","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"zunedz"},"content":"    public static final String INVALID_AMOUNT \u003d \" \" + Amount.PREFIX + \"-1\";","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zunedz"},"content":"    public static final String INVALID_INDEX_STRING \u003d \"Not an index\";","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"zunedz"},"content":"    public static final String DUE_DATE_EARLY \u003d \"2001-11-11\";","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"zunedz"},"content":"    public static final String VALID_INDEX_STRING \u003d \" 1\";","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"zunedz"},"content":"    public static final Index VALID_INDEX \u003d Index.fromZeroBased(0);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"zunedz"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"zunedz"},"content":"    public static final Index INDEX_FIRST_TRANSACTION \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"zunedz"},"content":"    public static final Index INDEX_SECOND_TRANSACTION \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"zunedz"},"content":"    public static final Index INDEX_THRID_TRANSACTION \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"zunedz"},"content":"    public static final Transaction TRANSACTION_ONE \u003d new Transaction(","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"zunedz"},"content":"            List.of(","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"zunedz"},"content":"                    new Amount(VALID_AMOUNT_ONE),","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"zunedz"},"content":"                    new TransactionDate(VALID_TRANSACTION_DATE_ONE),","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"zunedz"},"content":"                    new DueDate(VALID_DUE_DATE_ONE),","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"zunedz"},"content":"                    new Note(VALID_NOTE_ONE),","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"zunedz"},"content":"                    new Status(VALID_STATUS_ONE)","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"zunedz"},"content":"            ),","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"zunedz"},"content":"            VALID_ID","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"zunedz"},"content":"    );","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"zunedz"},"content":"    public static final Transaction TRANSACTION_ONE_INCOMPLETE \u003d new Transaction(","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"zunedz"},"content":"            List.of(","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"zunedz"},"content":"                    new Amount(VALID_AMOUNT_ONE),","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"zunedz"},"content":"                    new TransactionDate(VALID_TRANSACTION_DATE_ONE)","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"zunedz"},"content":"            ),","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"zunedz"},"content":"            VALID_ID","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"zunedz"},"content":"    );","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"zunedz"},"content":"    public static final Transaction TRANSACTION_TWO \u003d new Transaction(","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"zunedz"},"content":"            List.of(","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"zunedz"},"content":"                    new Amount(VALID_AMOUNT_TWO),","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"zunedz"},"content":"                    new TransactionDate(VALID_TRANSACTION_DATE_TWO),","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"zunedz"},"content":"                    new DueDate(VALID_DUE_DATE_TWO),","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"zunedz"},"content":"                    new Note(VALID_NOTE_TWO)","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"zunedz"},"content":"            ),","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"zunedz"},"content":"            VALID_ID","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"zunedz"},"content":"    );","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"zunedz"},"content":"    public static final Transaction TRANSACTION_THREE \u003d new Transaction(","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"zunedz"},"content":"            List.of(","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"zunedz"},"content":"                    new Amount(VALID_AMOUNT_THREE),","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"zunedz"},"content":"                    new TransactionDate(VALID_TRANSACTION_DATE_THREE),","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"zunedz"},"content":"                    new DueDate(VALID_DUE_DATE_THREE),","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"zunedz"},"content":"                    new Note(VALID_NOTE_THREE)","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"zunedz"},"content":"            ),","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"zunedz"},"content":"            VALID_ID","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"zunedz"},"content":"    );","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"zunedz"},"content":"    public static final Transaction INVALID_TRANSACTION \u003d new Transaction(","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"zunedz"},"content":"            List.of(","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"zunedz"},"content":"                    new Amount(VALID_AMOUNT_TWO),","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"zunedz"},"content":"                    new TransactionDate(VALID_TRANSACTION_DATE_TWO),","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"zunedz"},"content":"                    new DueDate(DUE_DATE_EARLY),","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"zunedz"},"content":"                    new Note(VALID_NOTE_TWO)","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"zunedz"},"content":"            ),","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"zunedz"},"content":"            VALID_ID","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"zunedz"},"content":"    );","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"zunedz":104}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"LapisRaider"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"TypeDefinition"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"TypeDefinition"},"content":"    public static final Person ALICE \u003d new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"TypeDefinition"},"content":"            new Name(\"Alice Pauline\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"TypeDefinition"},"content":"            new Address(\"123, Jurong West Ave 6, #08-111\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"TypeDefinition"},"content":"            new Email(\"alice@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"LapisRaider"},"content":"            new Phone(\"94351253\"),","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"LapisRaider"},"content":"            new Remark(\"Adventuring is life.\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"LapisRaider"},"content":"            new Birthday(\"2000-10-10\")),","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"TypeDefinition"},"content":"            new Tag(\"vendor\")));","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"TypeDefinition"},"content":"    public static final Person BENSON \u003d new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"TypeDefinition"},"content":"            new Name(\"Benson Meier\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"TypeDefinition"},"content":"            new Address(\"311, Clementi Ave 2, #02-25\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"TypeDefinition"},"content":"            new Email(\"benson@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"LapisRaider"},"content":"            new Phone(\"98765432\"),","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"LapisRaider"},"content":"            new Remark(\"Hates to swim.\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"LapisRaider"},"content":"            new Birthday(\"2000-11-15\")),","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"TypeDefinition"},"content":"            new Tag(\"supplier\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"TypeDefinition"},"content":"            new Tag(\"owesMoney\")));","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"TypeDefinition"},"content":"    public static final Person CARL \u003d new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"TypeDefinition"},"content":"            new Name(\"Carl Kurz\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"TypeDefinition"},"content":"            new Address(\"Wall Street\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"TypeDefinition"},"content":"            new Email(\"carl@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"LapisRaider"},"content":"            new Phone(\"95352563\"),","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"LapisRaider"},"content":"            new Remark(\"Likes dogs.\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"LapisRaider"},"content":"            new Birthday(\"1998-11-15\")),","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"TypeDefinition"},"content":"        List.of());","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"TypeDefinition"},"content":"    public static final Person DANIEL \u003d new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"TypeDefinition"},"content":"            new Name(\"Daniel Meier\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"TypeDefinition"},"content":"            new Address(\"10th Street\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"TypeDefinition"},"content":"            new Email(\"daniel@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"TypeDefinition"},"content":"            new Phone(\"87652533\")),","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"TypeDefinition"},"content":"            new Tag(\"supplier\")","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"TypeDefinition"},"content":"        ));","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"TypeDefinition"},"content":"    public static final Person ELLE \u003d new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"TypeDefinition"},"content":"            new Name(\"Elle Meyer\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"TypeDefinition"},"content":"            new Address(\"Michegan Ave\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"TypeDefinition"},"content":"            new Email(\"elle@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"LapisRaider"},"content":"            new Phone(\"9482224\"),","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"LapisRaider"},"content":"            new Remark(\"Reads a lot.\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"LapisRaider"},"content":"            new Birthday(\"1978-11-15\")),","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"TypeDefinition"},"content":"        List.of());","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":75,"author":{"gitId":"TypeDefinition"},"content":"    public static final Person FIONA \u003d new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"TypeDefinition"},"content":"            new Name(\"Fiona Watanabe\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"TypeDefinition"},"content":"            new Address(\"Little Tokyo\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"TypeDefinition"},"content":"            new Email(\"fiona@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"TypeDefinition"},"content":"            new Phone(\"9482427\")),","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"TypeDefinition"},"content":"        List.of());","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"TypeDefinition"},"content":"    public static final Person GEORGE \u003d new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"TypeDefinition"},"content":"            new Name(\"George Best\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"TypeDefinition"},"content":"            new Address(\"4th Street\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"TypeDefinition"},"content":"            new Email(\"george@placeholder.net\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"LapisRaider"},"content":"            new Phone(\"9482442\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"LapisRaider"},"content":"            new Birthday(\"2001-01-10\")),","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"TypeDefinition"},"content":"        List.of());","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"TypeDefinition"},"content":"    public static final Person IDA \u003d new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"TypeDefinition"},"content":"            new Name(\"Ida Ho\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"TypeDefinition"},"content":"            new Address(\"Townsville Lane 3\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"TypeDefinition"},"content":"            new Email(\"ida@placeholder.net\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"TypeDefinition"},"content":"            new Phone(\"8482131\")),","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"TypeDefinition"},"content":"            new Tag(\"distributor\")","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"TypeDefinition"},"content":"        ));","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"TypeDefinition"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"TypeDefinition"},"content":"    public static final Person HOON \u003d new Person(","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"TypeDefinition"},"content":"        List.of(","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"TypeDefinition"},"content":"            new Name(\"Ah Hoon\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"TypeDefinition"},"content":"            new Address(\"123 Sesame Street\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"TypeDefinition"},"content":"            new Email(\"hoon@placeholder.net\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"TypeDefinition"},"content":"            new Phone(\"62353535\")),","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"TypeDefinition"},"content":"        List.of());","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"zunedz"},"content":"        return new AddressBook(getTypicalPersons(), getEmptyTransactions());","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"zunedz"},"content":"    public static List\u003cTransaction\u003e getEmptyTransactions() {","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"zunedz"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"TypeDefinition"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, IDA, HOON));","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"TypeDefinition":74,"LapisRaider":16,"zunedz":6,"-":30}},{"path":"src/test/java/seedu/address/testutil/TypicalTransactions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zunedz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.PersonUtil.AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.PersonUtil.BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.TRANSACTION_ONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.TRANSACTION_THREE;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zunedz"},"content":"import static seedu.address.testutil.TransactionUtil.TRANSACTION_TWO;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zunedz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zunedz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zunedz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zunedz"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zunedz"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zunedz"},"content":" * A utility class containing a list of {@code Transaction} objects to be used in tests.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zunedz"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zunedz"},"content":"public class TypicalTransactions {","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zunedz"},"content":"    private TypicalTransactions() {} // prevents instantiation","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zunedz"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"zunedz"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zunedz"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"zunedz"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"zunedz"},"content":"        return new AddressBook(getTypicalPersons(), getTypicalTransactions());","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"zunedz"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"zunedz"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(AMY, BOB));","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zunedz"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"zunedz"},"content":"    public static List\u003cTransaction\u003e getTypicalTransactions() {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zunedz"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TRANSACTION_ONE, TRANSACTION_TWO, TRANSACTION_THREE));","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zunedz"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zunedz"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"zunedz":39}}]
