[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T13-4/tp/branch/master/graph/badge.svg?token\u003d7ST0L6C9AY)](https://codecov.io/gh/AY2122S2-CS2103T-T13-4/tp)","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T13-4/tp/actions)","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"## ModuleMateFinder","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"Ever find it difficult to keep track of what modules your friends are taking?  ","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"Want to form groups with friends for certain modules, but don\u0027t know what they are taking?","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"Worry not! With ModuleMateFinder, you can:","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"1) Add friends into ModuleMateFinder, and their contact details","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"2) Keep track of what modules they are taking","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"3) Favourite people who you want to work with the most","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"4) Blacklist people who you want to **avoid** working with","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"5) Find people by the modules they are taking","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"6) Many more...","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"- Head over to the [User Guide](https://ay2122s2-cs2103t-t13-4.github.io/tp/UserGuide.html) to find out more","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"- You can also see the mockup in [Figma](https://www.figma.com/file/COWAJJL0DBAPffotRIkHXz/ModuleMateFinder?node-id\u003d0%3A1)","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"**This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).**","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"bakano98":19,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"    archiveName \u003d \u0027modulematefinder.jar\u0027","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"run {","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bakano98":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"### Bryan Tan Jing Kai","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"\u003cimg src\u003d\"images/fantablack.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"[[github](https://github.com/fantablack)]","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"[[portfolio](team/fantablack.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"Btaykb"},"content":"* Role: Developer","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"fantablack"},"content":"* Responsibilities: TBA","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"### Benjamin Tay Keck Bin","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"\u003cimg src\u003d\"images/btaykb.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"[[github](https://github.com/Btaykb)]","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"[[portfolio](team/btaykb.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"* Role: Developer","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"* Responsibilities: TBC","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"### Julio Harjo","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"\u003cimg src\u003d\"images/junlee1991.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"[[github](https://github.com/junlee1991)] ","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"[[portfolio](team/junlee1991.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"### Wei Jie","lastModifiedDate":"2022-02-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"\u003cimg src\u003d\"images/bakano98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"[[github](http://github.com/bakano98)]","lastModifiedDate":"2022-02-19"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"[[portfolio](team/bakano98.md)]","lastModifiedDate":"2022-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"### Law Wei Ming","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"\u003cimg src\u003d\"images/lawwm.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"[[github](http://github.com/lawwm)]","lastModifiedDate":"2022-02-22"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"[[portfolio](team/lawwm.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bakano98":4,"lawwm":4,"junlee1991":4,"Btaykb":7,"-":37,"fantablack":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.  ","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"Furthermore, `AddWindow` and `EditWindow` keeps a reference to `MainWindow`\u0027s `Logic` component in order to execute commands.","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"The Sequence Diagram below illustrates the interactions from the `Logic` component for the `execute(\"add\")`","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"![Interactions Inside the Logic Component for the `add` Command](images/AddNoParamsSequenceDiagram.png)","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"Btaykb"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Module` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Module` object per unique module, instead of each `Person` needing their own `Module` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"Btaykb"},"content":"\u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"fantablack"},"content":"### Add Modules Feature","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"fantablack"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"fantablack"},"content":"The add modules mechanism is facilitated by `AddModuleCommand`. Its functionality is implemented in the `AddModuleCommand.java` class which follows the `Command` interface. It extends `Command` with a list of modules `List\u003cModule\u003e` that is to be added to an existing person, as well as the index of the person to add the modules to, stored internally as `modulesToAdd` and `targetIndex` respectively.","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"fantablack"},"content":"Additionally, it implements the following operations: ","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"fantablack"},"content":"* `Command#execute(Model model)` - Returns the feedback message containing information about module(s) added to a target person, for eventual displays in the GUI.","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"fantablack"},"content":"* `createEditedPerson(Person personToEdit, List\u003cModule\u003e modulesToAdd)` - Creates and returns a Person with `modulesToAdd` added to the existing details of `personToEdit`.","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"fantablack"},"content":"* `hasModulesInCommon(Person personToEdit, List\u003cModule\u003e proposedModules)` - Returns true if `personToEdit` contains any modules in `proposedModules`.","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"fantablack"},"content":"* `getNewModules(Person personToEdit, List\u003cModule\u003e proposedModules)` - Returns List of non-duplicated modules, which may be empty if no unique modules exist.","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"fantablack"},"content":"* `getCommandResult(...)` - Returns a `CommandResult` with the appropriate feedback depending on if any new modules are added.","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"fantablack"},"content":"Below is a sequence diagram showing the overview of how add modules works:","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"fantablack"},"content":"![AddModuleSequenceDiagram](images/AddModuleSequenceDiagram.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"fantablack"},"content":"Each `Person` has a `Set\u003cModule\u003e` that represents the Collection of `Modules` associated with that `Person`.","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"fantablack"},"content":"Hence, we utilize the behaviour of the `Set` data structure to both store and add modules to a person, automatically adding any new unique Modules while ignoring Modules that already exist, without requiring any further duplicate-checking on our part.","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"fantablack"},"content":"While this underlying implementation works, we need to capture exactly what new modules were added on top of existing modules, so that we can display a meaningful feedback to our user.","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"fantablack"},"content":"This can be achieved using the `hasNewModules()` and `getNewModules()` internal helper functions.","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"fantablack"},"content":"`getCommandResult()` of `execute()` utilizes these helper functions to create a `CommandResult` object containing varied feedback messages depending on the following possibilities:","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"fantablack"},"content":"1. Case 1: Modules from user input contain only new modules","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"fantablack"},"content":"   * Shows new modules added","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"fantablack"},"content":"2. Case 2: Modules from user input contain some new modules","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"fantablack"},"content":"   * Shows new modules added, with warning that some modules already exist","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"fantablack"},"content":"3. Case 3: Modules from user input contain no new modules","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"fantablack"},"content":"   * Shows warning that modules already exist, no new modules added, along with list of existing modules (to show the user that despite the \"error\", no further actions associated with typical failed commands need to be taken)","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"Btaykb"},"content":"     \u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"lawwm"},"content":"### Sort feature","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"lawwm"},"content":"#### Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":194,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"lawwm"},"content":"The sort mechanism is facilitated by `PersonComparator`. It compares `Person` objects and stores internally the **list of fields** to be ordered on as well as the **order** on each field (\"ascending\" vs \"descending\"). ","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"lawwm"},"content":"`PersonComparator` then is passed to `Model`.","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"lawwm"},"content":"Within Model component, \u0027Model\u0027 then passes it into `AddressBook`, and which is then passed into `UniquePersonList` and finally to `ObservableList`. `ObservableList` then sorts itself based on the comparator.","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"lawwm"},"content":"Below is a sequence diagram showing how sort operation works:","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"lawwm"},"content":"![SortSequenceDiagram](images/SortSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"lawwm"},"content":"Within the `PersonComparator`, it compares both persons based on the first field in the **list of fields**. If they are not equivalent, it returns the result of the comparison taking into account the **order**. ","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"lawwm"},"content":"Else, it will check the next field. When there are no fields remaining, it specifies that the two persons are equivalent.","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"lawwm"},"content":"### Alternatives","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"lawwm"},"content":"#### Aspect: How to compare: `Comparator` vs `Comparable`","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"lawwm"},"content":"####1. Alternative 1 (Current)","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"lawwm"},"content":"Each field implements a `Comparable` interface.","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"lawwm"},"content":"- Pros:","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"lawwm"},"content":"    - Easier to implement.","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"lawwm"},"content":"- Cons:","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"lawwm"},"content":"    - Less flexible.","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"lawwm"},"content":"    - Passes only one `PersonComparator` into `Model`, which stores list of fields to be sorted on. ","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"lawwm"},"content":"####2. Alternative 2","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"lawwm"},"content":"Create a comparator for `Person` for each specific field to compare on and how to compare that field. Choose a list of comparators and sort model on them one by one.","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"lawwm"},"content":"- Pros: ","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"lawwm"},"content":"  - More flexibility for ways to compare each field. E.g. can compare`Module` field based on number of modules, lexicographic ordering, etc.","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"lawwm"},"content":"- Cons: ","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"lawwm"},"content":"  - More complexity for user syntax. ","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"lawwm"},"content":"  - Less encapsulation as `PersonComparator` has to know the details of `Person` fields and how it desires to sort them. ","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"lawwm"},"content":"  - Has to pass all `PersonComparator` that were chosen into `Model` one after another so less efficient.","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"Btaykb"},"content":"\u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"Btaykb"},"content":"### Comment feature","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"Btaykb"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":230,"author":{"gitId":"Btaykb"},"content":"The comment mechanism is facilitated by `CommentCommand`. It adds a field of type `Comment` to a `Person` object. ","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"Btaykb"},"content":"The `CommentCommand.java` class extends `Command` with the index of the person to add the module to and also a ","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"Btaykb"},"content":"`Comment` object which holds the comment that will be given to the person. Additionally, it implements the following ","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"Btaykb"},"content":"operations:","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"Btaykb"},"content":"* `Command#execute(Model model)` - Returns a message that informs users on the comment that was added to the ","lastModifiedDate":"2022-03-25"},{"lineNumber":235,"author":{"gitId":"Btaykb"},"content":"  specific person. ","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"Btaykb"},"content":"* `generateSuccessMessage(Person personToEdit)` - Creates and returns the message that informs users if a new comment ","lastModifiedDate":"2022-03-25"},{"lineNumber":237,"author":{"gitId":"Btaykb"},"content":"  was added or deleted from `personToEdit`.","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":239,"author":{"gitId":"Btaykb"},"content":"Below is a sequence diagram showing how comment operation works:","lastModifiedDate":"2022-03-25"},{"lineNumber":240,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":241,"author":{"gitId":"Btaykb"},"content":"![CommentSequenceDiagram](images/CommentSequenceDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"Btaykb"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"Btaykb"},"content":"##### Aspect: How to remove a comment ","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"Btaykb"},"content":"#####1. Alternative 1 (Current choice)","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"Btaykb"},"content":"Similar to how `Status` was implemented, upon user input of an empty comment (i.e `comment 1 c/`), the comment of the ","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"Btaykb"},"content":"person at the particular index, in this case the first person, will be removed.","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"Btaykb"},"content":"- Pros: ","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"Btaykb"},"content":"  - Can contain all logic related to adding and removing a `comment` all in the `CommentCommand` and ","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"Btaykb"},"content":"    `CommentCommandParser` classes. ","lastModifiedDate":"2022-03-25"},{"lineNumber":251,"author":{"gitId":"Btaykb"},"content":"  - Does not give the users too many commands to remember.","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"Btaykb"},"content":"  - Avoid potential problems where users/reviewers expect a designated delete command for all fields, when some fields ","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"Btaykb"},"content":"    cannot be just simply deleted on its own, e.g. address, name etc.","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"Btaykb"},"content":"- Cons: ","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"Btaykb"},"content":"  - Not consistent with how the other fields like `Module` and `Person` are removed. ","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"Btaykb"},"content":"  ","lastModifiedDate":"2022-03-25"},{"lineNumber":257,"author":{"gitId":"Btaykb"},"content":"####2. Alternative 2 ","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"Btaykb"},"content":"Implement a separate command to handle the removal of `comment`.","lastModifiedDate":"2022-03-25"},{"lineNumber":259,"author":{"gitId":"Btaykb"},"content":"- Pros: ","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"Btaykb"},"content":"  - An empty comment command (`comment 1`) will show an error message, which is more intuitive.","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"Btaykb"},"content":"- Cons: ","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"Btaykb"},"content":"  - Results in excessive code duplication, as `delete` and `deletemodule` are implemented in a very similar way ","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"Btaykb"},"content":"    to how a proposed `deletecomment` command will be implemented.","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"Btaykb"},"content":"    \u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":266,"author":{"gitId":"bakano98"},"content":"### GUI for Adding, Editing","lastModifiedDate":"2022-03-23"},{"lineNumber":267,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"bakano98"},"content":"#### Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":269,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"bakano98"},"content":"The GUI for `AddWindow` and `EditWindow` are done using JavaFX with SceneBuilder.  ","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"bakano98"},"content":"The adding and editing mechanism is driven by the CLI commands, `add` and `edit`, and both goes through their respective `Parser`","lastModifiedDate":"2022-03-23"},{"lineNumber":272,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"Btaykb"},"content":"Step 1: User input is retrieved from its respective `TextField`.  ","lastModifiedDate":"2022-03-29"},{"lineNumber":274,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"Btaykb"},"content":"Step 2: User input is strung together to follow the proper `Command` format, which is then passed to `Logic` to handle ","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"Btaykb"},"content":"the rest of the execution.  ","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"Btaykb"},"content":"Step 3: `AddWindow` allows for the execution of multiple commands within a single window. Executing multiple ","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"Btaykb"},"content":"commands (`status`, `addmodule`) is done by checking if the given inputs are valid. ","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"Btaykb"},"content":"Step 4: If they are valid, we pass the execution to `Logic` to handle the adding of a `Person`. ","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"Btaykb"},"content":"Step 5: After a `Person` is added, retrieve the last index from `PersonList`, then pass the user inputs for `status` and/or `addmodule` into `Logic` again to execute the commands","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":285,"author":{"gitId":"bakano98"},"content":"The following activity diagram shows how a `Person` with `Status` and `Module` is added when the given command is `add` or when the user opens `AddWindow`","lastModifiedDate":"2022-03-23"},{"lineNumber":286,"author":{"gitId":"bakano98"},"content":"![GuiAddActivityDiagram](images/GuiAddActivityDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":287,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":288,"author":{"gitId":"bakano98"},"content":"Editing through `EditWindow` is largely similar to the above.","lastModifiedDate":"2022-03-23"},{"lineNumber":289,"author":{"gitId":"Btaykb"},"content":"\u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":291,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":382,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":383,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":384,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"Btaykb"},"content":"* students who are looking for group mates","lastModifiedDate":"2022-03-28"},{"lineNumber":395,"author":{"gitId":"Btaykb"},"content":"* students who want to keep track of the modules their friends are taking or have taken","lastModifiedDate":"2022-03-28"},{"lineNumber":396,"author":{"gitId":"fantablack"},"content":"* has a need to manage a significant number of contacts within their educational organisation","lastModifiedDate":"2022-03-03"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"Btaykb"},"content":"**Value proposition**: ModuleMateFinder provides a platform that allows students to manage their contacts and find ","lastModifiedDate":"2022-03-28"},{"lineNumber":403,"author":{"gitId":"Btaykb"},"content":"group mates easier by consolidating important information such as modules taken. ","lastModifiedDate":"2022-03-28"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"| Priority | As a …​                                   | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"fantablack"},"content":"| -------- |-------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-03-03"},{"lineNumber":412,"author":{"gitId":"fantablack"},"content":"| `* * *`  | student                                   | add modules that I am taking | keep track of the modules                                              |","lastModifiedDate":"2022-03-03"},{"lineNumber":413,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                  | see usage instructions       | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"| `* * *`  | user                                      | add a new person             |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"| `* * *`  | user                                      | delete a person              | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"| `* * *`  | user                                      | find a person by name        | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"| `* *`    | user                                      | hide private contact details | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name         | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"Btaykb"},"content":"ModuleMateFinder provides the necessary features that support the management of contact information such as adding,","lastModifiedDate":"2022-03-28"},{"lineNumber":425,"author":{"gitId":"Btaykb"},"content":"deleting, listing, sorting, finding and editing. Moreover, there are module related features that are more specific","lastModifiedDate":"2022-03-28"},{"lineNumber":426,"author":{"gitId":"Btaykb"},"content":"to the context of ModuleMateFinder. The Use Cases listed below demonstrate their usages.","lastModifiedDate":"2022-03-29"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"Btaykb"},"content":"(For all use cases below, the **System** is `ModuleMateFinder` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-28"},{"lineNumber":429,"author":{"gitId":"Btaykb"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":430,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":431,"author":{"gitId":"Btaykb"},"content":"**Use case: UC01 - Listing all contacts**","lastModifiedDate":"2022-03-28"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"Btaykb"},"content":"1. User requests to list out all contacts.","lastModifiedDate":"2022-03-05"},{"lineNumber":435,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of all contacts.","lastModifiedDate":"2022-03-05"},{"lineNumber":436,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":437,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":439,"author":{"gitId":"bakano98"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"bakano98"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":442,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":443,"author":{"gitId":"Btaykb"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":445,"author":{"gitId":"Btaykb"},"content":"**Use case: UC02 - Adding a contact**","lastModifiedDate":"2022-03-28"},{"lineNumber":446,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":447,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":448,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":449,"author":{"gitId":"Btaykb"},"content":"1. User requests to add a person as a contact.","lastModifiedDate":"2022-03-05"},{"lineNumber":450,"author":{"gitId":"Btaykb"},"content":"2. User inputs the information of the person.","lastModifiedDate":"2022-03-05"},{"lineNumber":451,"author":{"gitId":"Btaykb"},"content":"3. ModuleMateFinder adds the person as a contact.","lastModifiedDate":"2022-03-05"},{"lineNumber":452,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":453,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":455,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-05"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":457,"author":{"gitId":"Btaykb"},"content":"- 3a. The given name already exists in ModuleMateFinder.","lastModifiedDate":"2022-03-05"},{"lineNumber":458,"author":{"gitId":"bakano98"},"content":"    - 3a1. ModuleMateFinder shows an error message.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":459,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-05"},{"lineNumber":460,"author":{"gitId":"Btaykb"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":461,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":463,"author":{"gitId":"Btaykb"},"content":"**Use case: UC03 - Favourite a contact**","lastModifiedDate":"2022-03-28"},{"lineNumber":464,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":465,"author":{"gitId":"bakano98"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":466,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":467,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":468,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":469,"author":{"gitId":"Btaykb"},"content":"3. User requests to favourite a person in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":470,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder favourites the person.","lastModifiedDate":"2022-03-05"},{"lineNumber":471,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":472,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":476,"author":{"gitId":"bakano98"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":477,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":478,"author":{"gitId":"Btaykb"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2022-03-05"},{"lineNumber":479,"author":{"gitId":"bakano98"},"content":"    - 3a1. ModuleMateFinder shows an error message.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":480,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-05"},{"lineNumber":481,"author":{"gitId":"Btaykb"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":482,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":484,"author":{"gitId":"Btaykb"},"content":"**Use case: UC04 - Blacklisting a contact**","lastModifiedDate":"2022-03-28"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":486,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":487,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":488,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":489,"author":{"gitId":"Btaykb"},"content":"3. User requests to blacklist a person in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":490,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder blacklist the person. ","lastModifiedDate":"2022-03-05"},{"lineNumber":491,"author":{"gitId":"Btaykb"},"content":"   ","lastModifiedDate":"2022-03-05"},{"lineNumber":492,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":494,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-05"},{"lineNumber":495,"author":{"gitId":"Btaykb"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":496,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":497,"author":{"gitId":"Btaykb"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2022-03-05"},{"lineNumber":498,"author":{"gitId":"Btaykb"},"content":"    - 3a1. ModuleMateFinder shows an error message.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":499,"author":{"gitId":"Btaykb"},"content":"      ","lastModifiedDate":"2022-03-05"},{"lineNumber":500,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-05"},{"lineNumber":501,"author":{"gitId":"Btaykb"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":503,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":504,"author":{"gitId":"Btaykb"},"content":"**Use case: UC05 - Adding modules to a contact**","lastModifiedDate":"2022-03-28"},{"lineNumber":505,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":506,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-28"},{"lineNumber":507,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-28"},{"lineNumber":508,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-28"},{"lineNumber":509,"author":{"gitId":"Btaykb"},"content":"3. User requests to add modules to a person.","lastModifiedDate":"2022-03-28"},{"lineNumber":510,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder adds the modules to the person.","lastModifiedDate":"2022-03-28"},{"lineNumber":511,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":512,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-28"},{"lineNumber":513,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":514,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-28"},{"lineNumber":515,"author":{"gitId":"Btaykb"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-03-28"},{"lineNumber":516,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-28"},{"lineNumber":517,"author":{"gitId":"Btaykb"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2022-03-28"},{"lineNumber":518,"author":{"gitId":"Btaykb"},"content":"    - 3a1. ModuleMateFinder shows an error message.","lastModifiedDate":"2022-03-28"},{"lineNumber":519,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":520,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-28"},{"lineNumber":521,"author":{"gitId":"Btaykb"},"content":"- 3b. The module has already been added to the person.","lastModifiedDate":"2022-03-28"},{"lineNumber":522,"author":{"gitId":"Btaykb"},"content":"    - 3b1. ModuleMateFinder shows an error message.","lastModifiedDate":"2022-03-28"},{"lineNumber":523,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":524,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-28"},{"lineNumber":525,"author":{"gitId":"Btaykb"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":526,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":527,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":528,"author":{"gitId":"Btaykb"},"content":"**Use case: UC06 - Adding a comment to a contact**","lastModifiedDate":"2022-03-28"},{"lineNumber":529,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":530,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-28"},{"lineNumber":531,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-28"},{"lineNumber":532,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-28"},{"lineNumber":533,"author":{"gitId":"Btaykb"},"content":"3. User requests to leave a comment for a person in the list.","lastModifiedDate":"2022-03-28"},{"lineNumber":534,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder saves the comment for the person.","lastModifiedDate":"2022-03-28"},{"lineNumber":535,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":536,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-28"},{"lineNumber":537,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":538,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-28"},{"lineNumber":539,"author":{"gitId":"Btaykb"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-03-28"},{"lineNumber":540,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-28"},{"lineNumber":541,"author":{"gitId":"Btaykb"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2022-03-28"},{"lineNumber":542,"author":{"gitId":"Btaykb"},"content":"    - 3a1. ModuleMateFinder shows an error message.","lastModifiedDate":"2022-03-28"},{"lineNumber":543,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":544,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-28"},{"lineNumber":545,"author":{"gitId":"Btaykb"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":546,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":547,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":548,"author":{"gitId":"Btaykb"},"content":"**Use case: UC07 - Filter contacts by modules**","lastModifiedDate":"2022-03-28"},{"lineNumber":549,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":550,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":551,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":552,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":553,"author":{"gitId":"Btaykb"},"content":"3. User requests to filter the list by a certain module (e.g. `CS3230`).","lastModifiedDate":"2022-03-05"},{"lineNumber":554,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder finds all persons with the module `CS3230`.","lastModifiedDate":"2022-03-05"},{"lineNumber":555,"author":{"gitId":"Btaykb"},"content":"5. ModuleMateFinder shows a list of persons with the module `CS3230`.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":556,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":557,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":558,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-05"},{"lineNumber":559,"author":{"gitId":"Btaykb"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":560,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":561,"author":{"gitId":"Btaykb"},"content":"- 3a. No persons has a matching module.","lastModifiedDate":"2022-03-05"},{"lineNumber":562,"author":{"gitId":"Btaykb"},"content":"    - 3a1. ModuleMateFinder shows an empty list.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":563,"author":{"gitId":"Btaykb"},"content":"      Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":564,"author":{"gitId":"Btaykb"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"Btaykb"},"content":"**Use case: UC08 - Filter contacts by name**","lastModifiedDate":"2022-03-28"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"bakano98"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":569,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":570,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":571,"author":{"gitId":"Btaykb"},"content":"3. User requests to filter the list by a certain name (e.g. `Hans`).","lastModifiedDate":"2022-03-05"},{"lineNumber":572,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder finds all persons with the module `Hans`.","lastModifiedDate":"2022-03-18"},{"lineNumber":573,"author":{"gitId":"Btaykb"},"content":"5. ModuleMateFinder shows a list of persons with the module `Hans`.","lastModifiedDate":"2022-03-18"},{"lineNumber":574,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"bakano98"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":577,"author":{"gitId":"bakano98"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":578,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":579,"author":{"gitId":"Btaykb"},"content":"- 3a. No persons has a matching name.","lastModifiedDate":"2022-03-05"},{"lineNumber":580,"author":{"gitId":"bakano98"},"content":"    - 3a1. ModuleMateFinder shows an empty list.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":581,"author":{"gitId":"Btaykb"},"content":"      Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":582,"author":{"gitId":"Btaykb"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":583,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":584,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":585,"author":{"gitId":"Btaykb"},"content":"**Use case: UC09 - Editing a contact\u0027s details**","lastModifiedDate":"2022-03-28"},{"lineNumber":586,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":587,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":588,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":589,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":590,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":591,"author":{"gitId":"Btaykb"},"content":"3. User requests to edit a contact on the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":592,"author":{"gitId":"Btaykb"},"content":"4. User inputs the updated information.","lastModifiedDate":"2022-03-05"},{"lineNumber":593,"author":{"gitId":"Btaykb"},"content":"5. ModuleMateFinder updates the contact\u0027s details.","lastModifiedDate":"2022-03-05"},{"lineNumber":594,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":595,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":596,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":597,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-05"},{"lineNumber":598,"author":{"gitId":"Btaykb"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":599,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":600,"author":{"gitId":"Btaykb"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2022-03-05"},{"lineNumber":601,"author":{"gitId":"Btaykb"},"content":"    - 3a1. ModuleMateFinder displays an error message.","lastModifiedDate":"2022-03-05"},{"lineNumber":602,"author":{"gitId":"Btaykb"},"content":"      ","lastModifiedDate":"2022-03-05"},{"lineNumber":603,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-05"},{"lineNumber":604,"author":{"gitId":"Btaykb"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":605,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":606,"author":{"gitId":"Btaykb"},"content":"**Use case: UC10 - Deleting a contact**","lastModifiedDate":"2022-03-28"},{"lineNumber":607,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":608,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":609,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":610,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":611,"author":{"gitId":"Btaykb"},"content":"3. User requests to delete a contact at a given index.","lastModifiedDate":"2022-03-05"},{"lineNumber":612,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder deletes the contact at the index.","lastModifiedDate":"2022-03-05"},{"lineNumber":613,"author":{"gitId":"Btaykb"},"content":"   ","lastModifiedDate":"2022-03-05"},{"lineNumber":614,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":615,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":616,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-05"},{"lineNumber":617,"author":{"gitId":"Btaykb"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":618,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":619,"author":{"gitId":"Btaykb"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2022-03-05"},{"lineNumber":620,"author":{"gitId":"Btaykb"},"content":"    - 3a1. ModuleMateFinder displays an error message.","lastModifiedDate":"2022-03-05"},{"lineNumber":621,"author":{"gitId":"Btaykb"},"content":"      ","lastModifiedDate":"2022-03-05"},{"lineNumber":622,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-05"},{"lineNumber":623,"author":{"gitId":"Btaykb"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":624,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":625,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":626,"author":{"gitId":"Btaykb"},"content":"**Use case: UC11 - Clearing all entries**","lastModifiedDate":"2022-03-28"},{"lineNumber":627,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":628,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":629,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":630,"author":{"gitId":"Btaykb"},"content":"1. User requests to clear all entries in ModuleMateFinder.","lastModifiedDate":"2022-03-05"},{"lineNumber":631,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder removes all saved data and displays a success ","lastModifiedDate":"2022-03-05"},{"lineNumber":632,"author":{"gitId":"Btaykb"},"content":"message.","lastModifiedDate":"2022-03-05"},{"lineNumber":633,"author":{"gitId":"Btaykb"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":634,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":635,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":636,"author":{"gitId":"Btaykb"},"content":"**Use case: UC12 - Sorting contacts**","lastModifiedDate":"2022-03-28"},{"lineNumber":637,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":638,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-28"},{"lineNumber":639,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-28"},{"lineNumber":640,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-28"},{"lineNumber":641,"author":{"gitId":"Btaykb"},"content":"3. User requests to sort contacts in list.","lastModifiedDate":"2022-03-28"},{"lineNumber":642,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder sorts contacts according to user\u0027s requirements.","lastModifiedDate":"2022-03-28"},{"lineNumber":643,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":644,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-28"},{"lineNumber":645,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":646,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-28"},{"lineNumber":647,"author":{"gitId":"Btaykb"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-03-28"},{"lineNumber":648,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-28"},{"lineNumber":649,"author":{"gitId":"Btaykb"},"content":"- 3a. No fields are specified.","lastModifiedDate":"2022-03-28"},{"lineNumber":650,"author":{"gitId":"Btaykb"},"content":"    - 3a1. ModuleMateFinder displays an error message.","lastModifiedDate":"2022-03-28"},{"lineNumber":651,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":652,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-28"},{"lineNumber":653,"author":{"gitId":"Btaykb"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":654,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":655,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":656,"author":{"gitId":"Btaykb"},"content":"**Use case: UC13 - Copying contacts**","lastModifiedDate":"2022-03-28"},{"lineNumber":657,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":658,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-28"},{"lineNumber":659,"author":{"gitId":"Btaykb"},"content":"1. User requests to copy contact\u0027s information.","lastModifiedDate":"2022-03-28"},{"lineNumber":660,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder copies the contacts into the user\u0027s desired format.","lastModifiedDate":"2022-03-28"},{"lineNumber":661,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":662,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-28"},{"lineNumber":663,"author":{"gitId":"Btaykb"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":664,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":665,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":666,"author":{"gitId":"Btaykb"},"content":"**Use case: UC14 - Exiting the application**","lastModifiedDate":"2022-03-28"},{"lineNumber":667,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":668,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":669,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":670,"author":{"gitId":"Btaykb"},"content":"1. User requests to exit ModuleMateFinder.","lastModifiedDate":"2022-03-05"},{"lineNumber":671,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder closes.","lastModifiedDate":"2022-03-05"},{"lineNumber":672,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":674,"author":{"gitId":"Btaykb"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"fantablack"},"content":"1. The application must be _free_.","lastModifiedDate":"2022-03-03"},{"lineNumber":679,"author":{"gitId":"fantablack"},"content":"2. Simple to use even if you have no experience.","lastModifiedDate":"2022-03-03"},{"lineNumber":680,"author":{"gitId":"fantablack"},"content":"3. Offline application used by each person.","lastModifiedDate":"2022-03-03"},{"lineNumber":681,"author":{"gitId":"fantablack"},"content":"4. The application should run on Linux, MacOS and Windows as long as it has Java 11 or above installed.","lastModifiedDate":"2022-03-03"},{"lineNumber":682,"author":{"gitId":"fantablack"},"content":"5. The product is not required to handle the forming of groups for users.","lastModifiedDate":"2022-03-03"},{"lineNumber":683,"author":{"gitId":"fantablack"},"content":"6. The product should be highly testable.","lastModifiedDate":"2022-03-03"},{"lineNumber":684,"author":{"gitId":"fantablack"},"content":"7. Documentation for the product must be written clearly and concisely.","lastModifiedDate":"2022-03-03"},{"lineNumber":685,"author":{"gitId":"fantablack"},"content":"8. This product is not required to be installed; it can be run as an executable.","lastModifiedDate":"2022-03-03"},{"lineNumber":686,"author":{"gitId":"fantablack"},"content":"9. Clear and comprehensible error messages?","lastModifiedDate":"2022-03-03"},{"lineNumber":687,"author":{"gitId":"fantablack"},"content":"10. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2022-03-03"},{"lineNumber":688,"author":{"gitId":"fantablack"},"content":"11. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-03-03"},{"lineNumber":689,"author":{"gitId":"fantablack"},"content":"12. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-03"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"lawwm"},"content":"* **Contact/Person**: A classmate whose information is kept in the address book. ","lastModifiedDate":"2022-03-06"},{"lineNumber":696,"author":{"gitId":"lawwm"},"content":"* **Module**: A course that is held at NUS with specific module codes e.g. CS3230","lastModifiedDate":"2022-03-06"},{"lineNumber":697,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"lawwm"},"content":"* **Favourite**: To mark a person favourably","lastModifiedDate":"2022-03-06"},{"lineNumber":699,"author":{"gitId":"lawwm"},"content":"* **Blacklist**: To mark a person unfavourably","lastModifiedDate":"2022-03-06"},{"lineNumber":700,"author":{"gitId":"lawwm"},"content":"* **Fast Typist**: A person who can type at speeds greater or equal to 70 words per minute.","lastModifiedDate":"2022-03-06"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bakano98":31,"lawwm":39,"Btaykb":274,"-":365,"fantablack":44}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"## Introduction","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"ModuleMate finder (MMF) is a **desktop application for managing contacts and finding ModuleMates**. You can easily keep track of what modules your friends are/will be taking, so you can contact them to form groups.  ","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"If you can type fast, you can get your contact management tasks done fast, but even if you are not a slow typist -- fret not, you can still use it!","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"- [Features](#features)","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"fantablack"},"content":"- [FAQ](#faq)","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"## Shortcut to Specific Features","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"This section lists down all the features available in MMF. You can click on any of them to jump to the features.","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"- [Help](#viewing-help--help)","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"- [List](#listing-all-persons--list)","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"- [Add Contact](#adding-a-contact--add)","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"fantablack"},"content":"- [Add Module(s) to Contact](#adding-modules-to-a-contact--addmodule)","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"- [Add Comment to Contact](#adding-a-comment-for-a-contact--comment)","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"- [Add Status to a Contact](#add-a-status-for-a-person--status)","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"- [Copy](#copy-contacts-in-list--copy)","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"- [Clear](#clearing-all-entries--clear)","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"- [Clear all Modules from Contact](#clearing-all-modules-for-a-person--clearmodules)","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"- [Delete Contact](#deleting-a-person--delete)","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"fantablack"},"content":"- [Delete Module(s) from Contact](#deleting-a-module--deletemodule)","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"- [Edit](#editing-a-person--edit)","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"- [Find](#locating-a-person-find)","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"- [Filter](#locating-a-person-by-their-module-filter)","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"- [Sort](#sorting-contacts-in-list-sort)","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"- [Undo](#undo-a-command--undo)","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"- [Redo](#redo-a-command--redo)","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"- [Exit](#exiting-the-program--exit)","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"-----------------------------------------------","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"1. Download the latest `ModuleMateFinder.jar` from [here](https://github.com/AY2122S2-CS2103T-T13-4/tp/releases).","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ModuleMateFinder.","lastModifiedDate":"2022-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to ModuleMate Finder.","lastModifiedDate":"2022-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"junlee1991"},"content":"ModuleMate Finder is a desktop app that allows students to find people taking the same modules as them, easily and efficiently","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"junlee1991"},"content":"  e.g. in `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`, `NAME`, `PHONE_NUMBER`, `EMAIL` and `ADDRESS`  are parameters which cannot be left empty. ","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"  e.g. `n/NAME [m/MODULE]` can be used as `n/John Doe m/CS2103` or as `n/John Doe`.","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Btaykb"},"content":"  e.g. `[m/MODULE]…​` can be used as ` ` (i.e. 0 times), `m/CS2103`, `m/CS2103 m/CS2100` etc.","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"junlee1991"},"content":"* Parameters has to be in order.\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"junlee1991"},"content":"  e.g. if the command specifies `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`, then it must follow strictly that format.","lastModifiedDate":"2022-02-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"### Listing all persons : `list`","lastModifiedDate":"2022-02-19"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"Shows a list of all persons in ModuleMate Finder.","lastModifiedDate":"2022-02-19"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"Format: `list`","lastModifiedDate":"2022-02-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"fantablack"},"content":"### Adding a Contact : `add`","lastModifiedDate":"2022-02-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"fantablack"},"content":"Adds a contact to ModuleMate Finder.","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"Btaykb"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS​`","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"bakano98"},"content":"* `add n/Bob p/87654321 e/bob@u.nus.edu a/123, Clementi Ave 16, #01-321`","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"bakano98"},"content":"Additionally, if one were to simply use `add`, it would open up a new window to allow you to systematically add a new contact","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"bakano98"},"content":"![add window](images/addWindow.png)  ","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"bakano98"},"content":"Then, simply fill up the fields as guided in the window. Users can then press the `ENTER` key to submit the fields when complete, or press the `Submit` button.","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":125,"author":{"gitId":"fantablack"},"content":"### Adding Module(s) to a Contact : `addmodule`","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"fantablack"},"content":"Adds module(s) to an existing contact","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"Btaykb"},"content":"Format: `addmodule INDEX m/MODULE [m/MODULE]...`","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":131,"author":{"gitId":"Btaykb"},"content":"* Adds modules represented by each module code `m/MODULE` to a contact at index `INDEX`","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"fantablack"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-02-28"},{"lineNumber":133,"author":{"gitId":"fantablack"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-28"},{"lineNumber":134,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":135,"author":{"gitId":"fantablack"},"content":"Examples:","lastModifiedDate":"2022-02-28"},{"lineNumber":136,"author":{"gitId":"bakano98"},"content":"* `addmodule 2 m/CS1231` Adds a module, `CS1231` to the 2nd person","lastModifiedDate":"2022-03-19"},{"lineNumber":137,"author":{"gitId":"bakano98"},"content":"* `addmodule 2 m/CS1231 m/CS2103T` Adds two modules, `CS1231` and `CS2103T` to the 2nd person","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"bakano98"},"content":"_**See below for an example image**_","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"bakano98"},"content":"### Adding a comment for a contact : `comment`","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"bakano98"},"content":"Adds a comment for the specified person in ModuleMateFinder.","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"bakano98"},"content":"Format: `comment INDEX c/COMMENT`","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"bakano98"},"content":"* Adds a comment for the person at the specified `INDEX`.","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"bakano98"},"content":"* `INDEX` must be a **positive integer** 1, 2, 3, ...","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"bakano98"},"content":"* Any existing comments for a person will be overwritten by the new input.","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"bakano98"},"content":"* If used with an **empty comment** (i.e. `comment 1 c/`), the command will be treated as a **delete","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"Btaykb"},"content":"  command** and removes the comment of the specified person.","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"bakano98"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"bakano98"},"content":"* `comment 2 c/Good at math.` will add the comment `Good at math` to the 2nd person.","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"bakano98"},"content":"* `comment 3` will delete the comment for the 3rd person.","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"bakano98"},"content":"_**See below for an example image**_","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"Btaykb"},"content":"### Adding a status for a contact : `status`","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"bakano98"},"content":"Sets a person\u0027s status as favourite or blacklisted.","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"bakano98"},"content":"Format: `status INDEX s/STATUS`","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"bakano98"},"content":"- Gives a status to the person at specified `INDEX`","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"bakano98"},"content":"- Status can either be a `blacklist` or `favourite`, a person can have no status tagged.","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"bakano98"},"content":"- `INDEX` must be a **positive integer** 1, 2, 3, ...","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"Btaykb"},"content":"- If used with an **empty status field** (i.e. `status 1 s/`), the command will be treated as a **delete","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"Btaykb"},"content":"  command** and removes the status of the specified person.","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"bakano98"},"content":"- `status 1 s/blacklist` tags the 1st person in ModuleMate Finder as blacklisted.","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"bakano98"},"content":"- `status 2 s/favourite` tags the 2nd person in ModuleMate Finder as favourite.","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"bakano98"},"content":"- `status 2 s/` will untag the 2nd person in ModuleMate Finder, leaving them with no `Status`","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"bakano98"},"content":"Annotated image of what a `Person` with `Status`, `Module`, and `Comment`","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"bakano98"},"content":"![Example of a person with Status and Comment](images/annotated_person.png)","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"bakano98"},"content":"### Copy contacts in list : `copy`","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"lawwm"},"content":"Copy the people within address book. Information is automatically copied for you once command is entered.","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"lawwm"},"content":"Format: `copy [INDEX] [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/STATUS] [m/MODULE] [c/COMMENT] [f/FORMAT]​`","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"bakano98"},"content":"* Copy persons using specified field names.​","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"Btaykb"},"content":"* If no fields are specified, **all fields will be copied**.","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"bakano98"},"content":"* Choose INDEX to copy a specific person.","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"Btaykb"},"content":"* If no INDEX is specified, **all persons will be copied**.","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"bakano98"},"content":"* Choice of format is default, csv and json.","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"Btaykb"},"content":"* **Default simply displays attribute line by line**, while csv format separates attributes via a `|` delimiter.","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"bakano98"},"content":"* JSON format is a JSON object with attribute names as keys and attribute values as values, similar to application\u0027s save file.","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"bakano98"},"content":"* Order of field names determines the order of attributes in the output.","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"lawwm"},"content":"* Choice of format is **default**, **csv** and **json**.","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"lawwm"},"content":"  ","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"lawwm"},"content":"| Format  | Description                                               | Example                                                                                                           |","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"lawwm"},"content":"|---------|-----------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"lawwm"},"content":"| default | Displays attributes separated by a newline                | mary\u003cbr/\u003e91282770\u003cbr/\u003ecoast residences                                                                            |","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"lawwm"},"content":"| csv     | Displays attributes separated by a delimiter \u003ccode\u003e\u0026#124; | mary  \u0026#124; 91282770 \u0026#124; coast residences                                                                     |    ","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"lawwm"},"content":"| json    | Displays information in json format                       | {\u003cbr/\u003e  \u0026nbsp;\"name\" : \"mary\",\u003cbr/\u003e  \u0026nbsp;\"phone\" : \"91282270\",\u003cbr/\u003e  \u0026nbsp;\"address\" : \"coast residences\"\u003cbr/\u003e} | ","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":201,"author":{"gitId":"bakano98"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":202,"author":{"gitId":"bakano98"},"content":"* `copy 1 n/ p/ e/ f/json`  will copy name, phone and email of first person in JSON format.","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"bakano98"},"content":"* `copy f/csv` will copy the entire list in csv format.","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"bakano98"},"content":"* `copy 1 e/` will copy the email of the first person. You may then go to your mailing app and email the person!","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"bakano98"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"Btaykb"},"content":"**Clears all entries** from the address book.","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"bakano98"},"content":"Format: `clear`","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"bakano98"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":213,"author":{"gitId":"bakano98"},"content":"- `clear` wipes all data from ModuleMate Finder.","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":215,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":216,"author":{"gitId":"bakano98"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"bakano98"},"content":"Typing this command will cause you to lose all data. Use with caution!","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"bakano98"},"content":"### Clearing all modules for a person : `clearmodules`","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":223,"author":{"gitId":"Btaykb"},"content":"**Clears all modules** based on the given index from ModuleMate Finder.","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":225,"author":{"gitId":"bakano98"},"content":"Format: `clearmodules INDEX`","lastModifiedDate":"2022-03-26"},{"lineNumber":226,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":227,"author":{"gitId":"lawwm"},"content":"* Deletes all modules from the person at the specified `INDEX`.","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"lawwm"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"lawwm"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":232,"author":{"gitId":"bakano98"},"content":"- `clearmodules 5` wipes all modules for person in index 5.","lastModifiedDate":"2022-03-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"bakano98"},"content":"Deletes the specified person from ModuleMate Finder.","lastModifiedDate":"2022-02-19"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"bakano98"},"content":"* `list` followed by `delete 2` deletes the 2nd person in ModuleMate Finder.","lastModifiedDate":"2022-02-19"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"lawwm"},"content":"### Deleting a module : `deletemodule`","lastModifiedDate":"2022-02-26"},{"lineNumber":249,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":250,"author":{"gitId":"lawwm"},"content":"Deletes the specified module from contact in ModuleMate Finder.","lastModifiedDate":"2022-02-26"},{"lineNumber":251,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":252,"author":{"gitId":"lawwm"},"content":"Format: `deletemodule INDEX m/MODULE [m/MODULE]...`","lastModifiedDate":"2022-03-27"},{"lineNumber":253,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":254,"author":{"gitId":"lawwm"},"content":"* Deletes modules for the person at the specified `INDEX`.","lastModifiedDate":"2022-02-26"},{"lineNumber":255,"author":{"gitId":"lawwm"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-02-26"},{"lineNumber":256,"author":{"gitId":"lawwm"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-26"},{"lineNumber":257,"author":{"gitId":"lawwm"},"content":"* The modules will be deleted only if the person has the specified modules.","lastModifiedDate":"2022-02-26"},{"lineNumber":258,"author":{"gitId":"lawwm"},"content":"* **One or more** modules must be specified.","lastModifiedDate":"2022-03-27"},{"lineNumber":259,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":260,"author":{"gitId":"lawwm"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":261,"author":{"gitId":"bakano98"},"content":"* `list` followed by `deletemodule 2 m/CS3230` deletes the module CS3230 for the 2nd person in ModuleMate Finder.","lastModifiedDate":"2022-03-19"},{"lineNumber":262,"author":{"gitId":"bakano98"},"content":"* `find Betsy` followed by `deletemodule 1 m/CS2102 m/CS2040S` deletes the specified modules for the 1st person in the results of the `find` command.","lastModifiedDate":"2022-03-19"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2022-03-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":266,"author":{"gitId":"bakano98"},"content":"Edits an existing person in ModuleMate Finder.","lastModifiedDate":"2022-03-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":268,"author":{"gitId":"bakano98"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS]…​`","lastModifiedDate":"2022-03-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-26"},{"lineNumber":271,"author":{"gitId":"Btaykb"},"content":"* **At least one** of the optional fields must be provided.","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-26"},{"lineNumber":273,"author":{"gitId":"Btaykb"},"content":"* **Modules cannot be edited** through the `edit` command.","lastModifiedDate":"2022-03-27"},{"lineNumber":274,"author":{"gitId":"bakano98"},"content":"  * Instead, use `deletemodule` to remove the modules first, then `addmodule` to add the modules to a person.","lastModifiedDate":"2022-03-29"},{"lineNumber":275,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":276,"author":{"gitId":"bakano98"},"content":"Additionally, if one were to simply use `edit`, it would open up a new window to allow you to systematically edit a chosen contact  ","lastModifiedDate":"2022-03-29"},{"lineNumber":277,"author":{"gitId":"bakano98"},"content":"![edit window](images/edit_window.png)  ","lastModifiedDate":"2022-03-26"},{"lineNumber":278,"author":{"gitId":"bakano98"},"content":"Then, simply fill up the fields as guided in the window.","lastModifiedDate":"2022-03-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-19"},{"lineNumber":281,"author":{"gitId":"bakano98"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-03-26"},{"lineNumber":282,"author":{"gitId":"bakano98"},"content":"* `edit 5 n/Bob a/Kent Ridge Drive` Edits the name and address of the 5th person to be `Bob` and `Kent Ridge Drive` ","lastModifiedDate":"2022-03-26"},{"lineNumber":283,"author":{"gitId":"bakano98"},"content":"  respectively.","lastModifiedDate":"2022-03-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":285,"author":{"gitId":"bakano98"},"content":"### Locating a person: `find`","lastModifiedDate":"2022-02-19"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":287,"author":{"gitId":"bakano98"},"content":"Finds a person by the given keyword.","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-02-26"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":291,"author":{"gitId":"bakano98"},"content":"- The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2022-03-26"},{"lineNumber":292,"author":{"gitId":"bakano98"},"content":"- Only the given **keyword** is searched","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"bakano98"},"content":"- Words not matching the given keyword is ignored","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"bakano98"},"content":"- Only **full keywords will be matched** e.g. `Pol` will not match `Police`","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"bakano98"},"content":"- Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-02-19"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2022-02-19"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-19"},{"lineNumber":299,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2022-02-19"},{"lineNumber":300,"author":{"gitId":"lawwm"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-02-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":302,"author":{"gitId":"lawwm"},"content":"### Locating a person by their module: `filter`","lastModifiedDate":"2022-02-26"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":304,"author":{"gitId":"lawwm"},"content":"Finds a person by the given module code. ","lastModifiedDate":"2022-02-26"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"Btaykb"},"content":"Format: `filter MODULE`","lastModifiedDate":"2022-03-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":308,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":309,"author":{"gitId":"bakano98"},"content":"- The search is key insensitive","lastModifiedDate":"2022-03-29"},{"lineNumber":310,"author":{"gitId":"bakano98"},"content":"- Only the **given keyword** is searched","lastModifiedDate":"2022-03-29"},{"lineNumber":311,"author":{"gitId":"bakano98"},"content":"- Words not matching the given keyword is ignored","lastModifiedDate":"2022-03-29"},{"lineNumber":312,"author":{"gitId":"lawwm"},"content":"- Valid module code have 2-3 prefix letters followed by 4 digits and one optional letter.","lastModifiedDate":"2022-02-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":314,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":315,"author":{"gitId":"Btaykb"},"content":"* `filter CS3230`  will find all persons with the module CS3230","lastModifiedDate":"2022-03-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"bakano98"},"content":"![Filter example](./images/filterExample.png)","lastModifiedDate":"2022-03-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":321,"author":{"gitId":"lawwm"},"content":"### Sorting contacts in list: `sort`","lastModifiedDate":"2022-03-06"},{"lineNumber":322,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":323,"author":{"gitId":"lawwm"},"content":"Sort all people within address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":324,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":325,"author":{"gitId":"lawwm"},"content":"Format: `sort [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/STATUS] [m/MODULE] [c/COMMENT]​`","lastModifiedDate":"2022-03-27"},{"lineNumber":326,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":327,"author":{"gitId":"lawwm"},"content":"* Sorts list with specified field(s). For any two persons, latter fields will only be considered if preceding fields are equal.​","lastModifiedDate":"2022-03-06"},{"lineNumber":328,"author":{"gitId":"Btaykb"},"content":"* Order of fields is important and there must be **at least one field**.","lastModifiedDate":"2022-03-26"},{"lineNumber":329,"author":{"gitId":"lawwm"},"content":"* Parameters determine whether field is sorted on ascending or descending order.","lastModifiedDate":"2022-03-19"},{"lineNumber":330,"author":{"gitId":"lawwm"},"content":"* Parameters are optional. If included, it must be either `asc`, `desc` or an empty string `\"\"`. ","lastModifiedDate":"2022-03-27"},{"lineNumber":331,"author":{"gitId":"lawwm"},"content":"* Empty string `\"\"` is ascending by default.","lastModifiedDate":"2022-03-27"},{"lineNumber":332,"author":{"gitId":"lawwm"},"content":"* Parameters are case-insensitive. ","lastModifiedDate":"2022-03-19"},{"lineNumber":333,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":334,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":335,"author":{"gitId":"lawwm"},"content":"| Field   | Prefix | Specification of sort                   | Example                                                           |                                         ","lastModifiedDate":"2022-03-27"},{"lineNumber":336,"author":{"gitId":"lawwm"},"content":"|---------|--------|-----------------------------------------|-------------------------------------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":337,"author":{"gitId":"lawwm"},"content":"| Name    | `n/`   | Sorted lexicographically                | `Bob` is larger than `Alice`                                      |","lastModifiedDate":"2022-03-27"},{"lineNumber":338,"author":{"gitId":"lawwm"},"content":"| Phone   | `p/`   | Sorted numerically                      | `9` is larger than `1`                                            |","lastModifiedDate":"2022-03-27"},{"lineNumber":339,"author":{"gitId":"lawwm"},"content":"| Email   | `e/`   | Sorted lexicographically                | `bob@gmail.com` is larger than `alice@gmail.com`                  |","lastModifiedDate":"2022-03-27"},{"lineNumber":340,"author":{"gitId":"lawwm"},"content":"| Address | `a/`   | Sorted lexicographically                | `banana residences` is larger than `apple residences`             |","lastModifiedDate":"2022-03-27"},{"lineNumber":341,"author":{"gitId":"lawwm"},"content":"| Status  | `s/`   | Sorted lexicographically                | `favourite` is larger than `blacklist` which is larger than `\"\" ` |                ","lastModifiedDate":"2022-03-27"},{"lineNumber":342,"author":{"gitId":"lawwm"},"content":"| Module  | `m/`   | Sorted numerically by number of modules | A person with 5 modules is larger than person with 1              |","lastModifiedDate":"2022-03-27"},{"lineNumber":343,"author":{"gitId":"lawwm"},"content":"| Comment | `c/`   | Sorted numerically by length of comment | `aaaaaaaaaaaaaaaaaaa` is larger than `a`                          |","lastModifiedDate":"2022-03-27"},{"lineNumber":344,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":345,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":346,"author":{"gitId":"lawwm"},"content":"Examples:","lastModifiedDate":"2022-03-06"},{"lineNumber":347,"author":{"gitId":"lawwm"},"content":"* `sort n/asc p/desc`  will sort the list by name in ascending order first. If two persons have the same name, then sort by phone number in descending order.","lastModifiedDate":"2022-03-19"},{"lineNumber":348,"author":{"gitId":"lawwm"},"content":"* `sort n/` will sort the list by name in ascending order by default.","lastModifiedDate":"2022-03-19"},{"lineNumber":349,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":350,"author":{"gitId":"Btaykb"},"content":"### Undo a command : `undo`","lastModifiedDate":"2022-03-01"},{"lineNumber":351,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":352,"author":{"gitId":"Btaykb"},"content":"Undoes the most recent command. ","lastModifiedDate":"2022-03-01"},{"lineNumber":353,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":354,"author":{"gitId":"junlee1991"},"content":"At the moment, the command that can be undone are the following:   ","lastModifiedDate":"2022-03-27"},{"lineNumber":355,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":356,"author":{"gitId":"junlee1991"},"content":"-  `add`","lastModifiedDate":"2022-03-27"},{"lineNumber":357,"author":{"gitId":"junlee1991"},"content":"-  `edit`","lastModifiedDate":"2022-03-27"},{"lineNumber":358,"author":{"gitId":"junlee1991"},"content":"-  `delete`","lastModifiedDate":"2022-03-27"},{"lineNumber":359,"author":{"gitId":"junlee1991"},"content":"-  `clear`","lastModifiedDate":"2022-03-27"},{"lineNumber":360,"author":{"gitId":"junlee1991"},"content":"-  `find`","lastModifiedDate":"2022-03-27"},{"lineNumber":361,"author":{"gitId":"junlee1991"},"content":"-  `filter`","lastModifiedDate":"2022-03-27"},{"lineNumber":362,"author":{"gitId":"junlee1991"},"content":"-  `comment`","lastModifiedDate":"2022-03-27"},{"lineNumber":363,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":364,"author":{"gitId":"Btaykb"},"content":"Format: `undo`","lastModifiedDate":"2022-03-01"},{"lineNumber":365,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":366,"author":{"gitId":"Btaykb"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":367,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":368,"author":{"gitId":"junlee1991"},"content":"- `delete 5`  ","lastModifiedDate":"2022-03-27"},{"lineNumber":369,"author":{"gitId":"junlee1991"},"content":"`undo`","lastModifiedDate":"2022-03-27"},{"lineNumber":370,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":371,"author":{"gitId":"junlee1991"},"content":"After deleting a person at index 5, `undo` will reverse the delete command and bring the person back at index 5.","lastModifiedDate":"2022-03-27"},{"lineNumber":372,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":373,"author":{"gitId":"Btaykb"},"content":"### Redo a command : `redo`","lastModifiedDate":"2022-03-01"},{"lineNumber":374,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":375,"author":{"gitId":"Btaykb"},"content":"Restores most recent command that was undone using `undo`.","lastModifiedDate":"2022-03-01"},{"lineNumber":376,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":377,"author":{"gitId":"Btaykb"},"content":"Format: `redo`","lastModifiedDate":"2022-03-01"},{"lineNumber":378,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":379,"author":{"gitId":"Btaykb"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":380,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":381,"author":{"gitId":"junlee1991"},"content":"- `edit 3 n/Adam`  ","lastModifiedDate":"2022-03-27"},{"lineNumber":382,"author":{"gitId":"junlee1991"},"content":"`undo`  ","lastModifiedDate":"2022-03-27"},{"lineNumber":383,"author":{"gitId":"junlee1991"},"content":"`redo`","lastModifiedDate":"2022-03-27"},{"lineNumber":384,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":385,"author":{"gitId":"junlee1991"},"content":" After editing a person\u0027s name at index 3 from `George` to `Adam` and using `undo` to reverse the person\u0027s name back to `George`, using `redo` will restore the person\u0027s name back to `Adam`.","lastModifiedDate":"2022-03-27"},{"lineNumber":386,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"bakano98"},"content":"ModuleMateFinder data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-19"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":399,"author":{"gitId":"bakano98"},"content":"ModuleMateFinder data are saved as a JSON file `[JAR file location]/data/ModuleMateFinder.json`. If you are an advanced user, you are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":401,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":402,"author":{"gitId":"bakano98"},"content":"If your changes to the data file makes its format invalid, ModuleMateFinder will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-02-19"},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":405,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":406,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":407,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"junlee1991"},"content":"Q: Are all modules offered by NUS available in ModuleMateFinder","lastModifiedDate":"2022-02-26"},{"lineNumber":416,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":417,"author":{"gitId":"junlee1991"},"content":"A: As long as the module offered can be found in NUSmod, it will be available on ModuleMateFinder as well.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"fantablack"},"content":"| Action            | Format                                                                                               | Examples                               |","lastModifiedDate":"2022-02-28"},{"lineNumber":424,"author":{"gitId":"lawwm"},"content":"|-------------------|------------------------------------------------------------------------------------------------------|----------------------------------------|","lastModifiedDate":"2022-03-27"},{"lineNumber":425,"author":{"gitId":"Btaykb"},"content":"| **List**          | `list`                                                                                               | `list`                                 |","lastModifiedDate":"2022-03-18"},{"lineNumber":426,"author":{"gitId":"fantablack"},"content":"| **Add**           | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`                                                        | `add n/Bob p/87654321 e/bob@u.nus.edu` |","lastModifiedDate":"2022-02-28"},{"lineNumber":427,"author":{"gitId":"Btaykb"},"content":"| **Add Module**    | `addmodule INDEX m/MODULE`                                                                           | `addmodule 4 m/CS2100`                 |","lastModifiedDate":"2022-03-18"},{"lineNumber":428,"author":{"gitId":"Btaykb"},"content":"| **Delete**        | `delete INDEX`                                                                                       | `delete 3`                             |","lastModifiedDate":"2022-03-18"},{"lineNumber":429,"author":{"gitId":"lawwm"},"content":"| **Delete Module** | `deletemodule INDEX m/MODULE [m/MODULE]...`                                                          | `deletemodule 1 m/CS1231 m/CS2102`     |","lastModifiedDate":"2022-03-27"},{"lineNumber":430,"author":{"gitId":"lawwm"},"content":"| **Edit**          | `edit index [n/NAME] [c/CODE] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`                                | `edit 1 n/Alice`                       |","lastModifiedDate":"2022-03-27"},{"lineNumber":431,"author":{"gitId":"fantablack"},"content":"| **Clear**         | `clear`                                                                                              | `clear`                                |","lastModifiedDate":"2022-02-28"},{"lineNumber":432,"author":{"gitId":"Btaykb"},"content":"| **Clear Modules** | `clearmodules INDEX`                                                                                 | `clearmodules 3`                       |","lastModifiedDate":"2022-03-18"},{"lineNumber":433,"author":{"gitId":"fantablack"},"content":"| **Status**        | `status INDEX s/STATUS`                                                                              | `status 2 s/favourite`                 |","lastModifiedDate":"2022-02-28"},{"lineNumber":434,"author":{"gitId":"fantablack"},"content":"| **Find**          | `find KEYWORD [MORE_KEYWORDS]`                                                                       | `find James Jake`                      |","lastModifiedDate":"2022-02-28"},{"lineNumber":435,"author":{"gitId":"Btaykb"},"content":"| **Filter**        | `filter MODULE`                                                                                      | `filter CS3230`                        |","lastModifiedDate":"2022-03-18"},{"lineNumber":436,"author":{"gitId":"lawwm"},"content":"| **Sort**          | `sort [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/status] [m/MODULE] [c/COMMENT]`                    | `sort n/asc p/ a/asc`                  |","lastModifiedDate":"2022-03-27"},{"lineNumber":437,"author":{"gitId":"Btaykb"},"content":"| **Undo**          | `undo`                                                                                               | `undo`                                 |","lastModifiedDate":"2022-03-01"},{"lineNumber":438,"author":{"gitId":"Btaykb"},"content":"| **Redo**          | `redo`                                                                                               | `redo`                                 |","lastModifiedDate":"2022-03-01"},{"lineNumber":439,"author":{"gitId":"lawwm"},"content":"| **Copy**          | `copy [INDEX] [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/STATUS] [m/MODULE] [c/COMMENT] [f/FORMAT]` | `copy 3 n/ e/ f/csv`                   |","lastModifiedDate":"2022-03-27"},{"lineNumber":440,"author":{"gitId":"Btaykb"},"content":"| **Add Comment**   | `comment INDEX c/COMMENT`                                                                            | `comment 1 c/Good at math`             |","lastModifiedDate":"2022-03-21"},{"lineNumber":441,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":442,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"bakano98":129,"lawwm":68,"junlee1991":27,"Btaykb":43,"-":154,"fantablack":21}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"bakano98"},"content":"    content: \"ModuleMate Finder\";","lastModifiedDate":"2022-03-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"bakano98":1,"-":294}},{"path":"docs/_sass/minima/skins/classic.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"$brand-color:           #828282 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"$brand-color-light:     lighten($brand-color, 40%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"$brand-color-dark:      darken($brand-color, 25%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$text-color:            #111 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"$background-color:      #fdfdfd !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"$code-background-color: #eef !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"$link-base-color:       #2a7ae2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"$link-visited-color:    darken($link-base-color, 15%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"$table-text-color:      lighten($text-color, 18%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"$table-zebra-color:     lighten($brand-color, 46%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"$table-header-bg-color: lighten($brand-color, 43%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$table-header-border:   lighten($brand-color, 36%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"$table-border-color:    $brand-color-light !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"// Syntax highlighting styles should be adjusted appropriately for every \"skin\"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"// ----------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  .c     { color: #998; font-style: italic } // Comment","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  .err   { color: #a61717; background-color: #e3d2d2 } // Error","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  .k     { font-weight: bold } // Keyword","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  .o     { font-weight: bold } // Operator","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  .cm    { color: #998; font-style: italic } // Comment.Multiline","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  .cp    { color: #999; font-weight: bold } // Comment.Preproc","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  .c1    { color: #998; font-style: italic } // Comment.Single","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  .cs    { color: #999; font-weight: bold; font-style: italic } // Comment.Special","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  .gd    { color: #000; background-color: #fdd } // Generic.Deleted","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  .gd .x { color: #000; background-color: #faa } // Generic.Deleted.Specific","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  .ge    { font-style: italic } // Generic.Emph","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  .gr    { color: #a00 } // Generic.Error","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  .gh    { color: #999 } // Generic.Heading","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  .gi    { color: #000; background-color: #dfd } // Generic.Inserted","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  .gi .x { color: #000; background-color: #afa } // Generic.Inserted.Specific","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  .go    { color: #888 } // Generic.Output","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  .gp    { color: #555 } // Generic.Prompt","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  .gs    { font-weight: bold } // Generic.Strong","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  .gu    { color: #aaa } // Generic.Subheading","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .gt    { color: #a00 } // Generic.Traceback","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  .kc    { font-weight: bold } // Keyword.Constant","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  .kd    { font-weight: bold } // Keyword.Declaration","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  .kp    { font-weight: bold } // Keyword.Pseudo","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  .kr    { font-weight: bold } // Keyword.Reserved","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  .kt    { color: #458; font-weight: bold } // Keyword.Type","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  .m     { color: #099 } // Literal.Number","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  .s     { color: #d14 } // Literal.String","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  .na    { color: #008080 } // Name.Attribute","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  .nb    { color: #0086B3 } // Name.Builtin","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  .nc    { color: #458; font-weight: bold } // Name.Class","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  .no    { color: #008080 } // Name.Constant","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  .ni    { color: #800080 } // Name.Entity","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  .ne    { color: #900; font-weight: bold } // Name.Exception","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  .nf    { color: #900; font-weight: bold } // Name.Function","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  .nn    { color: #555 } // Name.Namespace","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Btaykb"},"content":"  .nt    { color: #000080 } // Name.Module","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  .nv    { color: #008080 } // Name.Variable","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  .ow    { font-weight: bold } // Operator.Word","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  .w     { color: #bbb } // Text.Whitespace","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  .mf    { color: #099 } // Literal.Number.Float","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  .mh    { color: #099 } // Literal.Number.Hex","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  .mi    { color: #099 } // Literal.Number.Integer","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  .mo    { color: #099 } // Literal.Number.Oct","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  .sb    { color: #d14 } // Literal.String.Backtick","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  .sc    { color: #d14 } // Literal.String.Char","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  .sd    { color: #d14 } // Literal.String.Doc","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  .s2    { color: #d14 } // Literal.String.Double","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  .se    { color: #d14 } // Literal.String.Escape","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  .sh    { color: #d14 } // Literal.String.Heredoc","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  .si    { color: #d14 } // Literal.String.Interpol","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  .sx    { color: #d14 } // Literal.String.Other","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .sr    { color: #009926 } // Literal.String.Regex","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  .s1    { color: #d14 } // Literal.String.Single","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  .ss    { color: #990073 } // Literal.String.Symbol","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  .bp    { color: #999 } // Name.Builtin.Pseudo","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  .vc    { color: #008080 } // Name.Variable.Class","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  .vg    { color: #008080 } // Name.Variable.Global","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  .vi    { color: #008080 } // Name.Variable.Instance","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  .il    { color: #099 } // Literal.Number.Integer.Long","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Btaykb":1,"-":83}},{"path":"docs/_sass/minima/skins/solarized.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Solarized skin","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Created by Sander Voerman \u003cmailto:sander@savoerman.nl\u003e using the Solarized","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// color scheme by Ethan Schoonover \u003chttps://ethanschoonover.com/solarized\u003e.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"// This style sheet implements two options for the minima.skin setting:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"// \"solarized\" for light mode and \"solarized-dark\" for dark mode.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"$sol-is-dark: false !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Color scheme","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// ------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// The inline comments show the canonical L*a*b values for each color.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$sol-base03:   #002b36;  // 15 -12 -12","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"$sol-base02:   #073642;  // 20 -12 -12","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"$sol-base01:   #586e75;  // 45 -07 -07","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$sol-base00:   #657b83;  // 50 -07 -07","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"$sol-base0:    #839496;  // 60 -06 -03","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"$sol-base1:    #93a1a1;  // 65 -05 -02","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$sol-base2:    #eee8d5;  // 92 -00  10","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"$sol-base3:    #fdf6e3;  // 97  00  10","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"$sol-yellow:   #b58900;  // 60  10  65","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"$sol-orange:   #cb4b16;  // 50  50  55","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"$sol-red:      #dc322f;  // 50  65  45","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"$sol-magenta:  #d33682;  // 50  65 -05","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"$sol-violet:   #6c71c4;  // 50  15 -45","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"$sol-blue:     #268bd2;  // 55 -10 -45","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"$sol-cyan:     #2aa198;  // 60 -35 -05","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"$sol-green:    #859900;  // 60 -20  65","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"$sol-mono3:    $sol-base3;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"$sol-mono2:    $sol-base2;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"$sol-mono1:    $sol-base1;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"$sol-mono00:   $sol-base00;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"$sol-mono01:   $sol-base01;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@if $sol-is-dark {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  $sol-mono3:  $sol-base03;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  $sol-mono2:  $sol-base02;","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  $sol-mono1:  $sol-base01;","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  $sol-mono00: $sol-base0;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  $sol-mono01: $sol-base1;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"// Minima color variables","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"// ----------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"$brand-color:           $sol-mono1 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"$brand-color-light:     mix($sol-mono1, $sol-mono3) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"$brand-color-dark:      $sol-mono00 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"$text-color:            $sol-mono01 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"$background-color:      $sol-mono3 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"$code-background-color: $sol-mono2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"$link-base-color:       $sol-blue !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"$link-visited-color:    mix($sol-blue, $sol-mono00) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"$table-text-color:      $sol-mono00 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"$table-zebra-color:     mix($sol-mono2, $sol-mono3) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"$table-header-bg-color: $sol-mono2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"$table-header-border:   $sol-mono1 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"$table-border-color:    $sol-mono1 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"// Syntax highlighting styles","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"// --------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  .c     { color: $sol-mono1; font-style: italic } // Comment","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  .err   { color: $sol-red } // Error","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .k     { color: $sol-mono01; font-weight: bold } // Keyword","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  .o     { color: $sol-mono01; font-weight: bold } // Operator","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  .cm    { color: $sol-mono1; font-style: italic } // Comment.Multiline","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  .cp    { color: $sol-mono1; font-weight: bold } // Comment.Preproc","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  .c1    { color: $sol-mono1; font-style: italic } // Comment.Single","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  .cs    { color: $sol-mono1; font-weight: bold; font-style: italic } // Comment.Special","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  .gd    { color: $sol-red } // Generic.Deleted","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  .gd .x { color: $sol-red } // Generic.Deleted.Specific","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  .ge    { color: $sol-mono00; font-style: italic } // Generic.Emph","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  .gr    { color: $sol-red } // Generic.Error","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  .gh    { color: $sol-mono1 } // Generic.Heading","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  .gi    { color: $sol-green } // Generic.Inserted","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  .gi .x { color: $sol-green } // Generic.Inserted.Specific","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  .go    { color: $sol-mono00 } // Generic.Output","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  .gp    { color: $sol-mono00 } // Generic.Prompt","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  .gs    { color: $sol-mono01; font-weight: bold } // Generic.Strong","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  .gu    { color: $sol-mono1 } // Generic.Subheading","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  .gt    { color: $sol-red } // Generic.Traceback","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  .kc    { color: $sol-mono01; font-weight: bold } // Keyword.Constant","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  .kd    { color: $sol-mono01; font-weight: bold } // Keyword.Declaration","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  .kp    { color: $sol-mono01; font-weight: bold } // Keyword.Pseudo","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  .kr    { color: $sol-mono01; font-weight: bold } // Keyword.Reserved","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  .kt    { color: $sol-violet; font-weight: bold } // Keyword.Type","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  .m     { color: $sol-cyan } // Literal.Number","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  .s     { color: $sol-magenta } // Literal.String","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  .na    { color: $sol-cyan } // Name.Attribute","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  .nb    { color: $sol-blue } // Name.Builtin","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  .nc    { color: $sol-violet; font-weight: bold } // Name.Class","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  .no    { color: $sol-cyan } // Name.Constant","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  .ni    { color: $sol-violet } // Name.Entity","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  .ne    { color: $sol-violet; font-weight: bold } // Name.Exception","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  .nf    { color: $sol-blue; font-weight: bold } // Name.Function","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  .nn    { color: $sol-mono00 } // Name.Namespace","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"Btaykb"},"content":"  .nt    { color: $sol-blue } // Name.Module","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  .nv    { color: $sol-cyan } // Name.Variable","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  .ow    { color: $sol-mono01; font-weight: bold } // Operator.Word","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  .w     { color: $sol-mono1 } // Text.Whitespace","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  .mf    { color: $sol-cyan } // Literal.Number.Float","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  .mh    { color: $sol-cyan } // Literal.Number.Hex","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  .mi    { color: $sol-cyan } // Literal.Number.Integer","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  .mo    { color: $sol-cyan } // Literal.Number.Oct","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  .sb    { color: $sol-magenta } // Literal.String.Backtick","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  .sc    { color: $sol-magenta } // Literal.String.Char","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  .sd    { color: $sol-magenta } // Literal.String.Doc","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  .s2    { color: $sol-magenta } // Literal.String.Double","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  .se    { color: $sol-magenta } // Literal.String.Escape","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  .sh    { color: $sol-magenta } // Literal.String.Heredoc","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  .si    { color: $sol-magenta } // Literal.String.Interpol","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  .sx    { color: $sol-magenta } // Literal.String.Other","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  .sr    { color: $sol-green } // Literal.String.Regex","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  .s1    { color: $sol-magenta } // Literal.String.Single","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .ss    { color: $sol-magenta } // Literal.String.Symbol","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  .bp    { color: $sol-mono1 } // Name.Builtin.Pseudo","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  .vc    { color: $sol-cyan } // Name.Variable.Class","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  .vg    { color: $sol-cyan } // Name.Variable.Global","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  .vi    { color: $sol-cyan } // Name.Variable.Instance","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  .il    { color: $sol-cyan } // Literal.Number.Integer.Long","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Btaykb":1,"-":132}},{"path":"docs/diagrams/AddModuleSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fantablack"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"fantablack"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"fantablack"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"fantablack"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"fantablack"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"fantablack"},"content":"participant \":AddModuleCommandParser\" as AddModuleCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"fantablack"},"content":"participant \"a:AddModuleCommand\" as AddModuleCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"fantablack"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"end box","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"[-\u003e LogicManager : execute(\"addmodule 1 m/CS2103T\")","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"activate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addmodule 1 m/CS2103T\")","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"fantablack"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"create AddModuleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"fantablack"},"content":"AddressBookParser -\u003e AddModuleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"fantablack"},"content":"activate AddModuleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"fantablack"},"content":"AddModuleCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"fantablack"},"content":"deactivate AddModuleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"AddressBookParser -\u003e AddModuleCommandParser : parse(\"1 m/CS2103T\")","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"fantablack"},"content":"activate AddModuleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"fantablack"},"content":"create AddModuleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"fantablack"},"content":"AddModuleCommandParser -\u003e AddModuleCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"fantablack"},"content":"activate AddModuleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"fantablack"},"content":"AddModuleCommand --\u003e AddModuleCommandParser : a","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"fantablack"},"content":"deactivate AddModuleCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"fantablack"},"content":"AddModuleCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"fantablack"},"content":"deactivate AddModuleCommandParser","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"fantablack"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"fantablack"},"content":"AddModuleCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"fantablack"},"content":"destroy AddModuleCommandParser","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"fantablack"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"fantablack"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"fantablack"},"content":"LogicManager -\u003e AddModuleCommand : execute()","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"fantablack"},"content":"activate AddModuleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"fantablack"},"content":"AddModuleCommand -\u003e Model : setPerson()","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"fantablack"},"content":"activate Model","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"fantablack"},"content":"Model --\u003e AddModuleCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"fantablack"},"content":"deactivate Model","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"fantablack"},"content":"create CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"fantablack"},"content":"AddModuleCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"fantablack"},"content":"activate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"fantablack"},"content":"CommandResult --\u003e AddModuleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"fantablack"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"fantablack"},"content":"AddModuleCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"fantablack"},"content":"deactivate AddModuleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"fantablack"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"fantablack"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"fantablack"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"fantablack":69}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"@startuml","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"!include style.puml","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nAddCommand\" as StaticAddCommand LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"end box","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"[-\u003e LogicManager : execute(\"add\")","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"activate LogicManager","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add\")","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"create AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"activate AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"\")","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"activate AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"AddCommandParser -\u003e StaticAddCommand : addWindowHelper()","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"activate StaticAddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"StaticAddCommand --\u003e AddCommandParser :","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"deactivate StaticAddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"AddCommandParser --\u003e AddressBookParser :","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"destroy AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"AddressBookParser --\u003e LogicManager :","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"activate AddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"create CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"activate CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"deactivate AddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"@enduml","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"bakano98":58}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"fantablack"},"content":"AddressBook *-right-\u003e \"1\" UniqueModuleList","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"UniqueModuleList -[hidden]down- UniquePersonList","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":"UniqueModuleList -[hidden]down- UniquePersonList","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"UniqueModuleList *-right-\u003e \"*\" Module","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"Person -up-\u003e \"*\" Module","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"           0..1\" Comment","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"    0..1\" Status","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Btaykb":1,"-":12,"fantablack":10}},{"path":"docs/diagrams/CommentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Btaykb"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Btaykb"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"participant \":CommentCommandParser\" as CommentCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"participant \"c:CommentCommand\" as CommentCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"Btaykb"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"Btaykb"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"[-\u003e LogicManager : execute(\"comment 1 c/comment\")","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":"activate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Btaykb"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"comment 1 c/comment\")","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"create CommentCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"AddressBookParser -\u003e CommentCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"activate CommentCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"CommentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"deactivate CommentCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"AddressBookParser -\u003e CommentCommandParser : parse(\"1 c/comment\")","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"activate CommentCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"create CommentCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"CommentCommandParser -\u003e CommentCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"activate CommentCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"CommentCommand --\u003e CommentCommandParser : c","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"deactivate CommentCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"Btaykb"},"content":"CommentCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"Btaykb"},"content":"deactivate CommentCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Btaykb"},"content":"CommentCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Btaykb"},"content":"destroy CommentCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"Btaykb"},"content":"LogicManager -\u003e CommentCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"Btaykb"},"content":"activate CommentCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Btaykb"},"content":"CommentCommand -\u003e Model : setPerson()","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Btaykb"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"Btaykb"},"content":"Model --\u003e CommentCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"Btaykb"},"content":"create CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"Btaykb"},"content":"CommentCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"Btaykb"},"content":"activate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"Btaykb"},"content":"CommandResult --\u003e CommentCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"Btaykb"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"Btaykb"},"content":"CommentCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"Btaykb"},"content":"deactivate CommentCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"Btaykb"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"Btaykb"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"Btaykb"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Btaykb":69}},{"path":"docs/diagrams/GuiAddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"start","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":":Application start;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"if () then ([else])","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"else ([User types \u0027add\u0027 or opens AddWindow])","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"    :AddWindow is opened;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"    :User inputs all fields;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"    :User submits the information;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"    while () is ([User input is invalid])","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"        :Output invalid message;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"        :User submits new input;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"    endwhile ([User input is valid or pressed cancel])","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    if () then ([User pressed \u0027Cancel\u0027])","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"    else([else])","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"        :Add new Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"        :Add Status to new Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"        :Add Module to new Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"    endif","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"endif","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"stop","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"bakano98":25}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"Class Module","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"Class Status","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"fantablack"},"content":"Class Comment","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"     1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all  \" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"Person *--\u003e \"*\" Module","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"0..1     \" Comment","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"fantablack"},"content":"Person *--\u003e \"    0..1\" Status","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"fantablack"},"content":"Email -[hidden]right-\u003e Module","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"fantablack"},"content":"Module -[hidden]right-\u003e Status","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"fantablack"},"content":"Status -[hidden]right-\u003e Comment","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"fantablack"},"content":"ModelManager --\u003e\"\\n\\n\\n~* filtered\" Person","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Btaykb":2,"-":42,"fantablack":12}},{"path":"docs/diagrams/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"participant \":SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"participant \"p:PersonComparator\" as PersonComparator LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"[-\u003e LogicManager : execute(\"sort n/asc\")","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"sort n/asc\")","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"create SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"AddressBookParser -\u003e SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"activate SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"SortCommandParser -\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"deactivate SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"AddressBookParser -\u003e SortCommandParser : parse(\"n/asc\")","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"activate SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"create SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"SortCommandParser -\u003e SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"activate SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"create PersonComparator","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"SortCommand -\u003e PersonComparator","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"activate PersonComparator","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"PersonComparator -\u003e SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"deactivate PersonComparator","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"SortCommand --\u003e SortCommandParser: s","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"deactivate SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"SortCommandParser --\u003e AddressBookParser: s","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"deactivate SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"AddressBookParser --\u003e LogicManager : s","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"LogicManager -\u003e SortCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"activate SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"SortCommand -\u003e Model : sortPerson(p)","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"SortCommand --\u003e CommandResult : result","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"CommandResult --\u003e SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"SortCommand --\u003e LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"deactivate SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"SortCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"destroy SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"lawwm":77}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"Class AddWindow","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"Class EditWindow","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"MainWindow --\u003e  \"0..1\" AddWindow","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"MainWindow --\u003e  \"0..1\" EditWindow","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"AddWindow --|\u003e UiPart","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"EditWindow --|\u003e UiPart","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"AddWindow -left-\u003e Logic","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"EditWindow -left-\u003e Logic","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"AddWindow -[hidden]left- CommandBox","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"EditWindow -[hidden]left- CommandBox","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bakano98":10,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T13-4/tp/branch/master/graph/badge.svg?token\u003d7ST0L6C9AY)](https://codecov.io/gh/AY2122S2-CS2103T-T13-4/tp)","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T13-4/tp/actions)","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"## ModuleMateFinder","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"Ever find it difficult to keep track of what modules your friends are taking?  ","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"Want to form groups with friends for certain modules, but don\u0027t know what they are taking?","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"Worry not! With ModuleMateFinder, you can:","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"1) Add friends into ModuleMateFinder, and their contact details","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"2) Keep track of what modules they are taking","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"3) Favourite people who you want to work with the most","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"4) Blacklist people who you want to **avoid** working with","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"5) Find people by the modules they are taking","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"6) Many more...","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"- Head over to the [User Guide](https://ay2122s2-cs2103t-t13-4.github.io/tp/UserGuide.html) to find out more","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"- You can also see the mockup in [Figma](https://www.figma.com/file/COWAJJL0DBAPffotRIkHXz/ModuleMateFinder?node-id\u003d0%3A1)","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"* Icons from: [Flaticon](https://www.flaticon.com/)","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"bakano98":16,"-":14}},{"path":"docs/team/bakano98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"---","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"layout: page","lastModifiedDate":"2022-02-19"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"title: Wei Jie\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"---","lastModifiedDate":"2022-02-19"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"# Skeleton of the Project Portfolio Page for Wei Jie","lastModifiedDate":"2022-02-19"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"### Project: ModuleMateFinder","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"ModuleMateFinder is a desktop address-book-like application used to keep track of your friends\u0027 contacts, as well as the modules they are taking. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"- **Administrative**:","lastModifiedDate":"2022-02-19"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"  - Fully set up team repo","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"- **New Feature**: Added the ability to blacklist/favourite users [(PR #15)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/15)","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"  - **What it does**: Allows users to set a status (blacklist/favourite) to any contact. A user is known to be blacklisted/favourited through the UI.","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"  - **Justification**: This feature improves the product significantly as users want to know who they should be wary of when thinking about forming groups for their modules.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"  - **Highlights**: This enhancement does not affect existing commands too much, and required understanding of a `Person`\u0027s structure, modifying and adding new fields to it.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"  - **Enhancements**: Changed to a graphical representation instead of a text-based representation [(PR #47)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/47)","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"  - **Credits**: Code reuse mainly from `Remark`\u0027s tutorial. Adding a new field to a Person is very similar to the tutorial given.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"  ","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"- **New Feature**: Added the ability to filter by users by module code [(PR #15)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/15)","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"  - **What it does**: Allows users to filter their contacts by a module that they are taking","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"  - **Justification**: This feature improves the product as we might want to filter our contacts by the modules they are taking, then contact those people in order to form project or study groups with them. It is a separate command from `find` as they do specifically different things.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"  - **Highlights**: This feature was relatively challenging despite being similar to `find` command. It required a proper analysis of `find` in order to understand the inner workings of it, and then following a similar implementation of it.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"  - **Credits**: Main idea of implementing `filter` is derived from `find`","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"- **New Feature**: Added GUI, `AddWindow` for adding a new Person into ModuleMateFinder. [(PR #46)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/46)","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"  - **What it does**: Allows users to add a new contact into ModuleMateFinder.","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"  - **Justification**: This feature improves the product significantly as not all users will be familiar with CLI application, or simply do not want to memorise the commands. Having a GUI way to add contacts provides ease of use for the users. Furthermore, it can execute multiple commands at once.","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"  - **Highlights**: This feature was challenging as it required good understanding of JavaFX, which required digging deeper into JavaFX and how it integrates with Java. Furthermore, styling is non-trivial.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"  - **Enhancements**: Extended the feature to allow for adding _optional_ fields like `Module`, `Status`[(PR #72)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/72) and `Comment`[(PR #88)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/88). Binded the `ENTER` key to act as a `Submit` button, when mandatory fields are added.","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"  - **Credits**: Some code reuse from `HelpWindow`, which served as the _baseline_ to start implementation of `AddWindow`","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"- **New Feature**: Added GUI, `EditWindow` for editing a Person within ModuleMateFinder. [(PR #81)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/81)","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"  - **What it does**: Allows users to easily edit a contact in ModuleMateFinder","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"  - **Justification**: Not all users are familiar with the command syntax and would prefer something more guided. This provides that guidance while still giving the benefit of typing fast.","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"  - **Highlights**: This feature is similar to `AddWindow`, so only a few changes needed to be made.","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"  - **Credits**: Some code reuse from `HelpWindow`, which served as the _baseline_ to start implementation of `EditWindow`","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dbakano98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbakano98\u0026tabRepo\u003dAY2122S2-CS2103T-T13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"- **Project Management**: TBD","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"- **Documentation**:","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"  - User Guide:","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"    - Set up overall UG style [(PR #1)](https://github.com/AY2122S2-CS2103T-T13-4/tp/commit/1aa81e2c5590653463a84a972c678f447c979a29)","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"    - Set up Quick Jump for UG [(PR #1)](https://github.com/AY2122S2-CS2103T-T13-4/tp/commit/1aa81e2c5590653463a84a972c678f447c979a29)","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"    - Added `AddWindow` image and functionality [(PR #77)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/77)","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"  - Developer Guide:","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"    - Add MSS for `status` and `filter` [(PR #27)](https://github.com/AY2122S2-CS2103T-T13-4/tp/commit/a13e9b086d85dd607421835135e742ff67b542cd)","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"    - Update UML diagram for Ui component and add information regarding the additions (`EditWindow`, `AddWindow`)","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"  - README:","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"    - Did the mockup UI and the description of ModuleMateFinder [here](https://github.com/AY2122S2-CS2103T-T13-4/tp/commit/f054e1d2871e6e5904d473b9203e7874340f0633) ","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"**Community**","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"- Reviewed all PRs done by Julio and Bryan","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"  - Non-trivial PRs reviewed and commented on for Julio:","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"    - [PR #62](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/62)","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"    - [PR #90](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/90)","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"  - Non-trivial PRs reviewed for Bryan:","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"    - [PR #91](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/91)","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"- Reviewed some PRs by Wei Ming and Benjamin","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"  - Non-trivial PRs reviewed and commented on for Wei Ming","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"    - [PR #44](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/44)","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"  - Non-trivial PRs reviewed and commented on for Benjamin","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"    - [PR #83](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/83)","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"- Verified on [forum](https://github.com/nus-cs2103-AY2122S2/forum/issues/210) regarding GUI additions","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"**Tools**:","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"- TBD","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"-------------------------------------","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"Template for other stuff:","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"* **Community**:","lastModifiedDate":"2022-02-19"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-19"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-19"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-19"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-19"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"* **Tools**:","lastModifiedDate":"2022-02-19"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-19"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-19"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"bakano98":89}},{"path":"docs/team/btaykb.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Btaykb"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"Btaykb"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"Btaykb"},"content":"title: Benjamin\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"### Project: ModuleMateFinder","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"ModuleMateFinder is a desktop address-book-like application used to keep track of your friends\u0027 contacts, as well as ","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Btaykb"},"content":"the modules they are taking. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is ","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"written in Java.","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"Btaykb"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":"* **New Feature**: Added the ability to add comments to a person.","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"  * What it does: Allows the user to add a comment to a specified `Person` in ModuleMateFinder.","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"  * Justification: Allows user to give a reason why they blacklisted or favourite somebody.","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":"  * Highlights: This feature required an understanding of how to add a new command and field to the project.","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"  * Credits: This feature was adapted from the Remark tutorial.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dBtaykb\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"* **Project management**:","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"  * TBD","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"Btaykb"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"  * Update Edit command and its associated test classes to","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"not allow modules to be edited. [(PR #48)](https://github.com/AY2122S2-CS2103T-T13-4/tp/commit/1aa81e2c5590653463a84a972c678f447c979a29)","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"Btaykb"},"content":"  * Renamed `Tag` field to `Module` to better fit the context of the project. [(PR #65)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/65)","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"  * User Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"    * Added documentation for the features `comment`. [(PR #83)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/83)","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"    * Updated User Guide to be up-to-date with Version 1.2. [(PR #64)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/64)","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"Btaykb"},"content":"    * Added Use Cases. [(PR #42)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/42)","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"Btaykb"},"content":"    * Added implementation details on `comment` feature. [(PR #92)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/92)","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"* **Community**:","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"Btaykb"},"content":"  - Reviewed all PRs done by WeiJie and WeiMing","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"Btaykb"},"content":"  - PRs reviewed for WeiJie (with non-trivial review comments):","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"    - [(PR #81)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/81)","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"    - [(PR #47)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/47)","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"  - PRs reviewed for WeiMing (with non-trivial review comments):","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"Btaykb"},"content":"    - [(PR #66)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/66)","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"Btaykb"},"content":"  - Reviewed some PRs by Julio","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"Btaykb"},"content":"  - Non-trivial PRs reviewed and commented on for Julio","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"Btaykb"},"content":"    - [(PR #62)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/62)","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"Btaykb"},"content":"**Tools**:","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"Btaykb"},"content":"- TBD","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"-------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"Btaykb"},"content":"Template for other stuff:","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":58,"author":{"gitId":"Btaykb"},"content":"* **Community**:","lastModifiedDate":"2022-02-22"},{"lineNumber":59,"author":{"gitId":"Btaykb"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-22"},{"lineNumber":60,"author":{"gitId":"Btaykb"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-22"},{"lineNumber":61,"author":{"gitId":"Btaykb"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-22"},{"lineNumber":62,"author":{"gitId":"Btaykb"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":64,"author":{"gitId":"Btaykb"},"content":"* **Tools**:","lastModifiedDate":"2022-02-22"},{"lineNumber":65,"author":{"gitId":"Btaykb"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"Btaykb"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":68,"author":{"gitId":"Btaykb"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"Btaykb":68}},{"path":"docs/team/fantablack.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fantablack"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"fantablack"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"fantablack"},"content":"title: Bryan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"fantablack"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"fantablack"},"content":"# Skeleton of the Project Portfolio Page for Bryan","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"fantablack"},"content":"### Project: ModuleMate Finder Level 3","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"fantablack"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"fantablack"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"fantablack"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"fantablack"},"content":"* **Project management**:","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"fantablack"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"fantablack"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"fantablack"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"fantablack"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"fantablack"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"fantablack"},"content":"    * User Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"fantablack"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"fantablack"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"fantablack"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"fantablack"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"fantablack"},"content":"* **Community**:","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"fantablack"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"fantablack"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"fantablack"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"fantablack"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"fantablack"},"content":"* **Tools**:","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"fantablack"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"fantablack"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"fantablack"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"fantablack":47}},{"path":"docs/team/junlee1991.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"title: Julio Harjo\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"# Skeleton of the Project Portfolio Page for Julio Harjo","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"junlee1991":3,"-":45}},{"path":"docs/team/lawwm.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"title: Wei Ming\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"# Skeleton of the Project Portfolio Page for Wei Ming","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"### Project: ModuleMateFinder","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"ModuleMateFinder is a desktop address-book-like application used to keep track of your friends\u0027 contacts, as well as the modules they are taking. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"* **New Feature**: Added the ability to sort persons by specified fields in `Person`.","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"  - **What it does**: Allows the user to sort all `Person` by specified fields and specify ascending or descending order.","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"  - **Justification**: This feature improves the product significantly because a user can order persons based on what their needs. e.g. sort by status to track people by their status.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"  - **Highlights**: This enhancement affects existing attributes of persons to be added in future. It required an in-depth analysis of design alternatives.","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"  - **Credits**: Syntax inspired by SQL language. Implementation inspired by [SimpleDB](http://cs.bc.edu/~sciore/simpledb/).","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"* **New Feature**: Added the ability to copy details based on specified fields.","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"  - **What it does**: Allows the user to copy information from an individual `Person` or all `Person`, and specify format.","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"  - **Justification**: This feature improves the product as user might want to copy and paste information from ModuleMateFinder. ","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    e.g. User can transfer information to an excel file using csv format.","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"* **New Feature**: Added Least Recently Used(LRU) cache to `Comment` to improve user experience.","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"  - **What it does**: Caches the `Comment` user adds to a side window. User can then add `Comment` from side window directly to `Person` instead of typing it in full.","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"  - **Justification**: `Comments` might be very long to type, and same comments might be repeated for different `Person`. Therefore, it is better to cache the comments for user to reuse.","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"  - **Highlights**: This feature required an understanding of the UI component to add a panel to the right as well as Storage component to save an additional table. ","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"     Had to adapt LRU cache data structure to `ObservableList` as well.","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"  - **Credits**: LRU implementation inspired by [GeeksforGeeks](https://www.geeksforgeeks.org/lru-cache-implementation/).","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"* **New Feature**: Added delete modules command.","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"  - **What it does**: Allows the user to delete modules by specifying the module name.","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"  - **Justification**: This feature allows user to remove specified modules for a specific person.","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"* **New Feature**: Added clear modules command.","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"  - **What it does**: Allows the user to clear all modules taken by a person.","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"  - **Justification**: Clear all modules taken by a person so user does not have to delete each module individually. ","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"    ","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dlawwm\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-22"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"  - User Guide:","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"    - Added documentation for the features `deletemodule`, `clearmodules`, `sort` and `copy`.","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"  - Developer Guide:","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"    - Added implementation details of the `sort` feature [(PR #86)](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/86/files).","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"**Community**:","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"- Reviewed all PRs done by WeiJie and Julio","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"  - PRs reviewed for Julio (with non-trivial review comments): ","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"    - [\\#62](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/62)","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"    - [\\#90](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/90)","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"  - PRs reviewed for WeiJie (with non-trivial review comments): ","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"    - [\\#72](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/72) ","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"    - [\\#81](https://github.com/AY2122S2-CS2103T-T13-4/tp/pull/81)","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"    ","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"  ","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"lawwm":66}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Btaykb"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] ","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"Btaykb"},"content":"[a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Btaykb":2,"-":300}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"fantablack"},"content":"        AddressBookStorage archivedAddressBookStorage \u003d new JsonAddressBookStorage(","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"fantablack"},"content":"                userPrefs.getArchivedAddressBookFilePath());","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"fantablack"},"content":"        storage \u003d new StorageManager(addressBookStorage, archivedAddressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":182,"fantablack":3}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"    public static final String MESSAGE_MORE_MODULES_THAN_EXPECTED \u003d \"There should only be 1 module!\";","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_NO_PARAMETERS_SUPPLIED \u003d \"There are no parameters supplied! \\n%1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lawwm":1,"Btaykb":1,"-":13}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"     * Returns the user prefs\u0027 archived address book file path","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"    Path getArchivedAddressBookFilePath();","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"    void switchAddressBook() throws CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"fantablack"},"content":"    void archivePersonByIndex(String oneBasedString) throws CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bakano98":5,"lawwm":1,"-":50,"fantablack":3}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"fantablack"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"fantablack"},"content":"    private Model model;","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"    public Path getArchivedAddressBookFilePath() {","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"        return model.getArchivedAddressBookFilePath();","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"    public void switchAddressBook() throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"fantablack"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"fantablack"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"fantablack"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"fantablack"},"content":"            addressBookOptional \u003d storage.readArchivedAddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"fantablack"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"fantablack"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Archived AddressBook\");","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"fantablack"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"fantablack"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"fantablack"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"fantablack"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Archived AddressBook\");","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"fantablack"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"fantablack"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"fantablack"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Archived AddressBook\");","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"fantablack"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"fantablack"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"lawwm"},"content":"            storage.saveArchivedAddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"lawwm"},"content":"            storage.saveAddressBook(new AddressBook(initialData));","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"lawwm"},"content":"        } catch (IOException | DataConversionException ioe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"lawwm"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"lawwm"},"content":"        model.setAddressBook(new AddressBook(initialData));","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"bakano98"},"content":"        System.out.println(getArchivedAddressBookFilePath().toString());","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"fantablack"},"content":"     * 1. Remove target from existing addressbook","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"fantablack"},"content":"     * 2. Switch to alt addressbook","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"fantablack"},"content":"     * 3. Add target to alt addressbook","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"fantablack"},"content":"     * 4. Switch back to original addressbook","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"fantablack"},"content":"    public void archivePersonByIndex(String oneBasedString) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"fantablack"},"content":"        Index oneBased \u003d Index.fromOneBased(Integer.parseInt(oneBasedString));","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"fantablack"},"content":"        Person target \u003d model.getFilteredPersonList().get(oneBased.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"fantablack"},"content":"        model.deletePerson(target);","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"fantablack"},"content":"        switchAddressBook();","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"fantablack"},"content":"        model.addPerson(target);","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"fantablack"},"content":"        switchAddressBook();","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bakano98":6,"lawwm":9,"-":80,"fantablack":43}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"            + \"[\" + PREFIX_MODULE + \"MODULE]...\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"            + PREFIX_MODULE + \"CS2040 \"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"            + PREFIX_MODULE + \"CS2103\";","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"    public static final String SHOWING_ADD_WINDOW \u003d \"Opened add window instead\";","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"     * Creates an empty AddCommand. Used to open {@code AddWindow}","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"    private AddCommand() {","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"        toAdd \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"     * Factory method for an empty AddCommand. Prevents unintended calls to empty constructor.","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"     * @return an empty AddCommand","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"    public static AddCommand addWindowHelper() {","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"        return new AddCommand();","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"        if (toAdd \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"fantablack"},"content":"            return new CommandResult(SHOWING_ADD_WINDOW, false, true, false, false, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bakano98":19,"Btaykb":4,"-":63,"fantablack":1}},{"path":"src/main/java/seedu/address/logic/commands/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fantablack"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"fantablack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"fantablack"},"content":"import static seedu.address.logic.commands.DeleteModuleCommand.MESSAGE_FAILURE;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"fantablack"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"fantablack"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"fantablack"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"fantablack"},"content":"public class AddModuleCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"fantablack"},"content":"    public static final String COMMAND_WORD \u003d \"addmodule\";","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"fantablack"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add specified modules to the person identified \"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"fantablack"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"fantablack"},"content":"            + \"Input values will be added on to existing modules.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"fantablack"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"            + \"[\" + PREFIX_MODULE + \"MODULE]...\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_MODULE + \"CS3230 \" + PREFIX_MODULE + \"CS1231S\\n\";","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"fantablack"},"content":"     * Arg1 is Person\u0027s Name","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"fantablack"},"content":"     * Arg2 is List of Modules added","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"fantablack"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added Modules for %s: %s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"fantablack"},"content":"    public static final String MESSAGE_DUPLICATE_MODULES_EXIST \u003d \"Some Module(s) already exists, \";","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"fantablack"},"content":"    public static final String MESSAGE_NO_NEW_MODULES_ADDED \u003d \"no new Modules added, current Modules that %s has: %s\";","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"fantablack"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"Btaykb"},"content":"    private final List\u003cModule\u003e modulesToAdd;","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"fantablack"},"content":"     * @param targetIndex of the person in the filtered person list","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"fantablack"},"content":"     * @param modulesToAdd modules to be added","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"    public AddModuleCommand(Index targetIndex, List\u003cModule\u003e modulesToAdd) {","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"fantablack"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"fantablack"},"content":"        this.modulesToAdd \u003d modulesToAdd;","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"fantablack"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"fantablack"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"fantablack"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"fantablack"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"fantablack"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"fantablack"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"fantablack"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"fantablack"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"fantablack"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"fantablack"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"fantablack"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"fantablack"},"content":"        if (modulesToAdd.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"fantablack"},"content":"            throw new CommandException(String.format(MESSAGE_FAILURE, modulesToAdd));","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"fantablack"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"Btaykb"},"content":"        List\u003cModule\u003e modulesToAddActual \u003d new ArrayList\u003c\u003e(modulesToAdd);","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"fantablack"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"fantablack"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, modulesToAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"fantablack"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"fantablack"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"fantablack"},"content":"        return getCommandResult(personToEdit, editedPerson, modulesToAddActual);","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"fantablack"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"fantablack"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"Btaykb"},"content":"    private static Person createEditedPerson(Person personToEdit, List\u003cModule\u003e modulesToAdd) {","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"fantablack"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"fantablack"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"fantablack"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"fantablack"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"fantablack"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"fantablack"},"content":"        Status updatedStatus \u003d personToEdit.getStatus();","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"Btaykb"},"content":"        Comment updatedComment \u003d personToEdit.getComment();","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"Btaykb"},"content":"        Set\u003cModule\u003e oldModules \u003d personToEdit.getModules();","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"Btaykb"},"content":"        Set\u003cModule\u003e updatedModules \u003d new HashSet\u003c\u003e(oldModules);","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"Btaykb"},"content":"        updatedModules.addAll(modulesToAdd);","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"Btaykb"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"Btaykb"},"content":"                updatedStatus, updatedModules, updatedComment);","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"fantablack"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"fantablack"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"fantablack"},"content":"                || (other instanceof AddModuleCommand // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"fantablack"},"content":"                \u0026\u0026 targetIndex.equals(((AddModuleCommand) other).targetIndex)) // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"fantablack"},"content":"                \u0026\u0026 modulesToAdd.equals(((AddModuleCommand) other).modulesToAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"fantablack"},"content":"     * @return true if personToEdit contains any modules in proposedModules","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"fantablack"},"content":"    private boolean hasModulesInCommon(Person personToEdit, List\u003cModule\u003e proposedModules) {","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"fantablack"},"content":"        Set\u003cModule\u003e existingModules \u003d personToEdit.getModules();","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"fantablack"},"content":"        return !Collections.disjoint(existingModules, proposedModules);","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"fantablack"},"content":"     * Function to get a List of non-duplicated modules added to the Person","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"fantablack"},"content":"     * @return List of non-duplicated modules, which may be empty if no unique modules exist","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"fantablack"},"content":"    private List\u003cModule\u003e getNewModules(Person personToEdit, List\u003cModule\u003e proposedModules) {","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"fantablack"},"content":"        Set\u003cModule\u003e existingModules \u003d personToEdit.getModules();","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"fantablack"},"content":"        proposedModules.removeAll(existingModules);","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"fantablack"},"content":"        return proposedModules;","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"fantablack"},"content":"    private CommandResult getCommandResult(Person personToEdit, Person editedPerson, List\u003cModule\u003e modulesToAddActual) {","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"fantablack"},"content":"        if (hasModulesInCommon(personToEdit, modulesToAddActual)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"fantablack"},"content":"            List\u003cModule\u003e newModules \u003d getNewModules(personToEdit, modulesToAddActual);","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"fantablack"},"content":"            if (newModules.isEmpty()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"fantablack"},"content":"                return new CommandResult(String.format(MESSAGE_DUPLICATE_MODULES_EXIST + MESSAGE_NO_NEW_MODULES_ADDED,","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"fantablack"},"content":"                        editedPerson.getName(),","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"fantablack"},"content":"                        editedPerson.getModules()));","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"fantablack"},"content":"            } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"fantablack"},"content":"                return new CommandResult(String.format(MESSAGE_DUPLICATE_MODULES_EXIST + MESSAGE_SUCCESS,","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"fantablack"},"content":"                        editedPerson.getName(),","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"fantablack"},"content":"                        newModules));","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"fantablack"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"fantablack"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"fantablack"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson.getName(), modulesToAddActual));","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"fantablack"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"Btaykb":16,"fantablack":140}},{"path":"src/main/java/seedu/address/logic/commands/ArchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fantablack"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"fantablack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"fantablack"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"fantablack"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"fantablack"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"fantablack"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"fantablack"},"content":"    public static final String COMMAND_WORD \u003d \"archive\";","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"            + \": Archives the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"fantablack"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"    public static final String MESSAGE_ARCHIVE_PERSON_SUCCESS \u003d \"Archived Person: %1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"fantablack"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"fantablack"},"content":"    public ArchiveCommand(Index targetIndex) {","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"fantablack"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"fantablack"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"fantablack"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"fantablack"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"fantablack"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"fantablack"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"fantablack"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"fantablack"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"fantablack"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"fantablack"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"fantablack"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"fantablack"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"fantablack"},"content":"        Person personToArchive \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"fantablack"},"content":"        int oneBasedIndex \u003d targetIndex.getOneBased();","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"fantablack"},"content":"        String oneBasedIndexString \u003d Integer.toString(oneBasedIndex);","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"fantablack"},"content":"        return new CommandResult(oneBasedIndexString, false, false, false, false, false, false, true);","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"fantablack"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"fantablack"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"fantablack"},"content":"                || (other instanceof ArchiveCommand // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"fantablack"},"content":"                \u0026\u0026 targetIndex.equals(((ArchiveCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"fantablack"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"fantablack":58}},{"path":"src/main/java/seedu/address/logic/commands/ClearModulesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import java.util.Set;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"public class ClearModulesCommand extends Command {","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    public static final String COMMAND_WORD \u003d \"clearmodules\";","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"            + \": Clear all modules of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%s\u0027s modules have been cleared\";","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"    public ClearModulesCommand(Index targetIndex) {","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit);","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson.getName()));","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"    private static Person createEditedPerson(Person personToEdit) {","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"        Status updatedStatus \u003d personToEdit.getStatus();","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"Btaykb"},"content":"        Set\u003cModule\u003e updatedModules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"Btaykb"},"content":"        Comment updatedComment \u003d personToEdit.getComment();","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"Btaykb"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"Btaykb"},"content":"                updatedStatus, updatedModules, updatedComment);","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"                || (other instanceof ClearModulesCommand // instanceof handles nulls","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 targetIndex.equals(((ClearModulesCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":75,"Btaykb":6}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    /** Add window should be shown to the user */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"    private final boolean showAdd;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    /** Edoit window should be shown to the user */","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"    private final boolean showEdit;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    /** The application should copy. */","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    private final boolean isCopyCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"    /** The application should switch addressbook */","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"fantablack"},"content":"    private final boolean isSwitchCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"fantablack"},"content":"    /** The application should archive a person*/","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"fantablack"},"content":"    private final boolean isArchiveCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showAdd,","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"fantablack"},"content":"                         boolean showEdit, boolean exit, boolean isCopy, boolean isSwitch, boolean isArchive) {","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        this.showAdd \u003d showAdd;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"        this.showEdit \u003d showEdit;","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        this.isCopyCommand \u003d isCopy;","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"fantablack"},"content":"        this.isSwitchCommand \u003d isSwitch;","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"fantablack"},"content":"        this.isArchiveCommand \u003d isArchive;","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"fantablack"},"content":"        this(feedbackToUser, false, false, false, false, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"    public boolean isShowAdd() {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"        return showAdd;","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"    public boolean isShowEdit() {","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"        return showEdit;","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"    public boolean isCopyCommand() {","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"        return isCopyCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"fantablack"},"content":"    public boolean isSwitchCommand() {","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"fantablack"},"content":"        return isSwitchCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"fantablack"},"content":"    public boolean isArchiveCommand() {","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"fantablack"},"content":"        return isArchiveCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"                \u0026\u0026 showAdd \u003d\u003d otherCommandResult.showAdd","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"bakano98"},"content":"                \u0026\u0026 showEdit \u003d\u003d otherCommandResult.showEdit","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bakano98":19,"lawwm":9,"-":68,"fantablack":18}},{"path":"src/main/java/seedu/address/logic/commands/CommentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Btaykb"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import java.util.List;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"Btaykb"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"Btaykb"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":" * Adds a comment to an existing person in the address book.","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":" * AddCommentCommand is adapted from https://nus-cs2103-ay2122s2.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Btaykb"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"public class CommentCommand extends Command {","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a comment to the person identified \"","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"            + \"Existing comments will be overwritten by the input.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"            + \"Use an empty value after c/ to delete the comment.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"Btaykb"},"content":"            + PREFIX_COMMENT + \"COMMENT\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"            + PREFIX_COMMENT + \"Good at teamwork and programming\";","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"Btaykb"},"content":"    public static final String MESSAGE_ADD_SUCCESS \u003d \"Added comment to %s: %s\";","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"    public static final String MESSAGE_REMOVE_SUCCESS \u003d \"Removed comment from %s\";","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"    private final Index index;","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"    private final Comment comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"Btaykb"},"content":"     * @param index of the person in the filtered person list","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"Btaykb"},"content":"     * @param comment comment to be added","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"Btaykb"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"    public CommentCommand(Index index, Comment comment) {","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"Btaykb"},"content":"        requireAllNonNull(index, comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"Btaykb"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"Btaykb"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"Btaykb"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"Btaykb"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"Btaykb"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"Btaykb"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"Btaykb"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"Btaykb"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"Btaykb"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"Btaykb"},"content":"                personToEdit.getAddress(), personToEdit.getStatus(),","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"Btaykb"},"content":"                personToEdit.getModules(), comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"Btaykb"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"Btaykb"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"Btaykb"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"Btaykb"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"Btaykb"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"Btaykb"},"content":"     * the comment is added to or removed from","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"Btaykb"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"Btaykb"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"Btaykb"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"Btaykb"},"content":"        if (personToEdit.getComment().isEmpty()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"Btaykb"},"content":"            return String.format(MESSAGE_REMOVE_SUCCESS, personToEdit.getName());","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"Btaykb"},"content":"        } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"Btaykb"},"content":"            return String.format(MESSAGE_ADD_SUCCESS, personToEdit.getName(), personToEdit.getComment());","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"Btaykb"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"Btaykb"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"Btaykb"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"Btaykb"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"Btaykb"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"Btaykb"},"content":"            return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"Btaykb"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"Btaykb"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"Btaykb"},"content":"        if (!(other instanceof CommentCommand)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"Btaykb"},"content":"            return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"Btaykb"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"Btaykb"},"content":"        // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"Btaykb"},"content":"        CommentCommand e \u003d (CommentCommand) other;","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"Btaykb"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"Btaykb"},"content":"                \u0026\u0026 comment.equals(e.comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"Btaykb"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"Btaykb":97}},{"path":"src/main/java/seedu/address/logic/commands/CopyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.FormatPersonUtil;","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"public class CopyCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    public static final String COMMAND_WORD \u003d \"copy\";","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Copy the details of the person identified \"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_MODULE + \"MODULE] \"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_COMMENT + \"COMMENT] \"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"            + \"\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"            + PREFIX_PHONE + \" \"","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"            + PREFIX_EMAIL + \"\\n\";","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"    private final Index index;","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"    private final List\u003cPrefix\u003e prefixes;","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"    private final FormatPersonUtil formatPersonUtil;","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"     * Constructor for copy command.","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"     * @param prefixes details to copy the person with","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"     * @param formatPersonUtil to format the person","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"    public CopyCommand(Index index, List\u003cPrefix\u003e prefixes, FormatPersonUtil formatPersonUtil) {","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        requireNonNull(prefixes);","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"        requireNonNull(formatPersonUtil);","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"        this.prefixes \u003d prefixes;","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        this.formatPersonUtil \u003d formatPersonUtil;","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"     * Constructor for copy command","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"     * @param prefixes details to copy the person with","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"     * @param formatPersonUtil to format the person","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"    public CopyCommand(List\u003cPrefix\u003e prefixes, FormatPersonUtil formatPersonUtil) {","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"        requireNonNull(prefixes);","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"        requireNonNull(formatPersonUtil);","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"        this.index \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"        this.prefixes \u003d prefixes;","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"        this.formatPersonUtil \u003d formatPersonUtil;","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"lawwm"},"content":"        if (index \u003d\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"            try {","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"                String formattedAddressBook \u003d formatPersonUtil.formatAddressBook(lastShownList, prefixes);","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"fantablack"},"content":"                return new CommandResult(formattedAddressBook, false, false, false, false, true, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"lawwm"},"content":"            } catch (JsonProcessingException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"lawwm"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"lawwm"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"lawwm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"lawwm"},"content":"        Person personToCopy \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"lawwm"},"content":"        String copiedFields;","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"lawwm"},"content":"            copiedFields \u003d formatPersonUtil.formatPerson(personToCopy, prefixes);","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"lawwm"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"fantablack"},"content":"        return new CommandResult(copiedFields, false, false, false, false, true, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"lawwm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"lawwm"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"lawwm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"lawwm"},"content":"            return true;","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"lawwm"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"lawwm"},"content":"        if (!(other instanceof CopyCommand)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"lawwm"},"content":"            return false;","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"lawwm"},"content":"        // state check","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"lawwm"},"content":"        CopyCommand e \u003d (CopyCommand) other;","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"lawwm"},"content":"        // check case of null in index","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"lawwm"},"content":"        if (this.index \u003d\u003d null) {","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"lawwm"},"content":"            return e.index \u003d\u003d null","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"lawwm"},"content":"                    \u0026\u0026 prefixes.equals(e.prefixes)","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"lawwm"},"content":"                    \u0026\u0026 formatPersonUtil.equals(e.formatPersonUtil);","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"lawwm"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 prefixes.equals(e.prefixes)","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 formatPersonUtil.equals(e.formatPersonUtil);","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":136,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"lawwm":134,"fantablack":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import java.util.Set;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"public class DeleteModuleCommand extends Command {","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    public static final String COMMAND_WORD \u003d \"deletemodule\";","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"            + \": Clear specified modules of the person identified by the index \"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"            + \"number used in the displayed person list.\\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"            + \"[\" + PREFIX_MODULE + \"MODULE]...\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_MODULE + \"CS3230 \" + PREFIX_MODULE + \"CS1231S\\n\";","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted Modules for %s: %s\";","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_FAILURE \u003d \"These modules were not found: %s\";","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"Btaykb"},"content":"    private final List\u003cModule\u003e modules;","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"     * @param targetIndex of the person in the filtered person list","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"     * @param modules modules to be deleted","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"    public DeleteModuleCommand(Index targetIndex, List\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"Btaykb"},"content":"        List\u003cModule\u003e modulesToDelete \u003d new ArrayList\u003c\u003e(modules);","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        if (modules.size() !\u003d 0) {","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"            throw new CommandException(String.format(MESSAGE_FAILURE, modules));","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson.getName(), modulesToDelete));","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"Btaykb"},"content":"    private static Person createEditedPerson(Person personToEdit, List\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"        Status updatedStatus \u003d personToEdit.getStatus();","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"Btaykb"},"content":"        Comment updatedComment \u003d personToEdit.getComment();","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":88,"author":{"gitId":"Btaykb"},"content":"        Set\u003cModule\u003e oldModules \u003d personToEdit.getModules();","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"Btaykb"},"content":"        Set\u003cModule\u003e updatedModules \u003d new HashSet\u003c\u003e(oldModules);","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"Btaykb"},"content":"        modules.removeIf(module -\u003e updatedModules.remove(module));","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"Btaykb"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"Btaykb"},"content":"                updatedStatus, updatedModules, updatedComment);","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":95,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":96,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"lawwm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-26"},{"lineNumber":98,"author":{"gitId":"lawwm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"lawwm"},"content":"                || (other instanceof DeleteModuleCommand // instanceof handles nulls","lastModifiedDate":"2022-02-26"},{"lineNumber":100,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteModuleCommand) other).targetIndex)) // state check","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 modules.equals(((DeleteModuleCommand) other).modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":88,"Btaykb":15}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"    public static final String SHOWING_EDIT_WINDOW \u003d \"Opened edit window instead\";","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"     * Overloaded constructor. Only used as a helper to open {@code EditWindow}.","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"    private EditCommand() {","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"        this.index \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"        this.editPersonDescriptor \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"     * Factory method for an empty EditCommand. Prevents unintended calls to an EditCommand.","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"     * @return an empty EditCommand","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"    public static EditCommand editWindowHelper() {","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"        return new EditCommand();","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"bakano98"},"content":"        if (index \u003d\u003d null || editPersonDescriptor \u003d\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"fantablack"},"content":"            return new CommandResult(SHOWING_EDIT_WINDOW, false, false, true, false, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":123,"author":{"gitId":"bakano98"},"content":"        Status updatedStatus \u003d editPersonDescriptor.getStatus().orElse(personToEdit.getStatus());","lastModifiedDate":"2022-02-25"},{"lineNumber":124,"author":{"gitId":"Btaykb"},"content":"        Comment updatedComment \u003d editPersonDescriptor.getComment().orElse(personToEdit.getComment());","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"Btaykb"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2022-03-07"},{"lineNumber":126,"author":{"gitId":"Btaykb"},"content":"                updatedAddress, updatedStatus, personToEdit.getModules(), updatedComment);","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"bakano98"},"content":"        private Status status;","lastModifiedDate":"2022-02-25"},{"lineNumber":157,"author":{"gitId":"Btaykb"},"content":"        private Set\u003cModule\u003e modules;","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"Btaykb"},"content":"        private Comment comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"Btaykb"},"content":"         * A defensive copy of {@code modules} is used internally.","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"bakano98"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2022-02-25"},{"lineNumber":172,"author":{"gitId":"Btaykb"},"content":"            setModules(toCopy.modules);","lastModifiedDate":"2022-03-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"Btaykb"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, modules);","lastModifiedDate":"2022-03-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"bakano98"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2022-02-25"},{"lineNumber":215,"author":{"gitId":"bakano98"},"content":"            this.status \u003d status;","lastModifiedDate":"2022-02-25"},{"lineNumber":216,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":217,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":218,"author":{"gitId":"bakano98"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2022-02-25"},{"lineNumber":219,"author":{"gitId":"bakano98"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2022-02-25"},{"lineNumber":220,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":221,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":222,"author":{"gitId":"Btaykb"},"content":"        public void setComment(Comment comment) {","lastModifiedDate":"2022-03-21"},{"lineNumber":223,"author":{"gitId":"Btaykb"},"content":"            this.comment \u003d comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":224,"author":{"gitId":"Btaykb"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":225,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":226,"author":{"gitId":"Btaykb"},"content":"        public Optional\u003cComment\u003e getComment() {","lastModifiedDate":"2022-03-21"},{"lineNumber":227,"author":{"gitId":"Btaykb"},"content":"            return Optional.ofNullable(comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":228,"author":{"gitId":"Btaykb"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":229,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":230,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"Btaykb"},"content":"         * Sets {@code modules} to this object\u0027s {@code modules}.","lastModifiedDate":"2022-03-18"},{"lineNumber":233,"author":{"gitId":"Btaykb"},"content":"         * A defensive copy of {@code modules} is used internally.","lastModifiedDate":"2022-03-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":236,"author":{"gitId":"Btaykb"},"content":"        public void setModules(Set\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-18"},{"lineNumber":237,"author":{"gitId":"Btaykb"},"content":"            this.modules \u003d (modules !\u003d null) ? new HashSet\u003c\u003e(modules) : null;","lastModifiedDate":"2022-03-18"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"Btaykb"},"content":"         * Returns an unmodifiable module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"Btaykb"},"content":"         * Returns {@code Optional#empty()} if {@code modules} is null.","lastModifiedDate":"2022-03-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"Btaykb"},"content":"        public Optional\u003cSet\u003cModule\u003e\u003e getModules() {","lastModifiedDate":"2022-03-18"},{"lineNumber":246,"author":{"gitId":"Btaykb"},"content":"            return (modules !\u003d null) ? Optional.of(Collections.unmodifiableSet(modules)) : Optional.empty();","lastModifiedDate":"2022-03-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":269,"author":{"gitId":"bakano98"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2022-02-25"},{"lineNumber":270,"author":{"gitId":"Btaykb"},"content":"                    \u0026\u0026 getModules().equals(e.getModules());","lastModifiedDate":"2022-03-18"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"bakano98":34,"Btaykb":31,"-":207,"fantablack":1}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, false, true, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"fantablack":1}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.NameContainsModulePredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":" * Searches persons by their corresponding modules. This allows filtering by modules for users within ModuleMateFinder","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Modules names should have 2-3 letters prefix \"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"            + \"followed by 4 digits and an optional letter\\n\";","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose modules contain any of \"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"            + \"the specified keyword (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"            + \"Parameters: KEYWORD \\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS3230\";","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"    private final NameContainsModulePredicate predicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"    public FilterCommand(NameContainsModulePredicate predicate) {","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"        return new CommandResult(","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":37,"Btaykb":6}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"fantablack":1}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"            + \": Sorts entries in the AddressBook by the specified field(s).\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"            + \"Order parameters are mandatory but specifying order is optional.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"            + \"All other parameters are optional.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"            + \"[\" + PREFIX_MODULE + \"MODULE] \"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_COMMENT + \"COMMENT] \"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"            + \"\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_MODULE + \"asc \" + PREFIX_NAME + \"desc \" + \"\\n\";","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted successfully: %s\";","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    private final PersonComparator personComparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    private final List\u003cPrefix\u003e fields;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    private final List\u003cString\u003e orders;","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"    private final String successField;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"     * @param fields modules to be deleted","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"    public SortCommand(List\u003cPrefix\u003e fields, List\u003cString\u003e orders, String successField) {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        this.successField \u003d successField;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        this.orders \u003d orders;","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"        this.fields \u003d fields;","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        this.personComparator \u003d new PersonComparator(fields, orders);","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        model.sortPerson(personComparator);","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, successField));","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"        return (other instanceof SortCommand)","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 this.fields.equals(((SortCommand) other).fields)","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 this.personComparator.equals(((SortCommand) other).personComparator)","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 this.successField.equals(((SortCommand) other).successField)","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 this.orders.equals(((SortCommand) other).orders); // instanceof handles null","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"    public static class PersonComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"        private final List\u003cPrefix\u003e fields;","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"        private final List\u003cString\u003e orders;","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"        /**","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"         * Create a comparator using the specified fields,","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"         * using the ordering implied by its iterator.","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"         * @param fields a list of field names","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"         */","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"        public PersonComparator(List\u003cPrefix\u003e fields, List\u003cString\u003e orders) {","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"            assert fields.size() \u003d\u003d orders.size();","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"            this.fields \u003d fields;","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"            this.orders \u003d orders;","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"        public int compare(Person o1, Person o2) {","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"lawwm"},"content":"            for (int i \u003d 0; i \u003c fields.size(); i++) {","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"                int result \u003d 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"                Prefix field \u003d fields.get(i);","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"lawwm"},"content":"                String order \u003d orders.get(i);","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"lawwm"},"content":"                if (PREFIX_NAME.equals(field)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"lawwm"},"content":"                    result \u003d o1.getName().compareTo(o2.getName());","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"                } else if (PREFIX_PHONE.equals(field)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"lawwm"},"content":"                    result \u003d o1.getPhone().compareTo(o2.getPhone());","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"lawwm"},"content":"                } else if (PREFIX_EMAIL.equals(field)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"lawwm"},"content":"                    result \u003d o1.getEmail().compareTo(o2.getEmail());","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"lawwm"},"content":"                } else if (PREFIX_ADDRESS.equals(field)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"lawwm"},"content":"                    result \u003d o1.getAddress().compareTo(o2.getAddress());","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Btaykb"},"content":"                } else if (PREFIX_MODULE.equals(field)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"Btaykb"},"content":"                    result \u003d Integer.compare(o1.getModules().size(), o2.getModules().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"lawwm"},"content":"                } else if (PREFIX_STATUS.equals(field)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"lawwm"},"content":"                    result \u003d o1.getStatus().compareTo(o2.getStatus());","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"lawwm"},"content":"                } else if (PREFIX_COMMENT.equals(field)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"lawwm"},"content":"                    result \u003d o1.getComment().compareTo(o2.getComment());","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"lawwm"},"content":"                } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"lawwm"},"content":"                    assert false;","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"lawwm"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"lawwm"},"content":"                if (order.equals(\"desc\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"lawwm"},"content":"                    result *\u003d -1;","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"lawwm"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"lawwm"},"content":"                if (result !\u003d 0) {","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"lawwm"},"content":"                    return result;","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"lawwm"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"lawwm"},"content":"            return 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"lawwm"},"content":"        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"lawwm"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"lawwm"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"lawwm"},"content":"            return (other instanceof PersonComparator)","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"lawwm"},"content":"                    \u0026\u0026 this.fields.equals(((PersonComparator) other).fields)","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"lawwm"},"content":"                    \u0026\u0026 this.orders.equals(((PersonComparator) other).orders); // instanceof handles null","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"lawwm":131,"Btaykb":4}},{"path":"src/main/java/seedu/address/logic/commands/StatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import java.util.List;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":" * Changes the status of an existing person in the address book.","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"public class StatusCommand extends Command {","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"    public static final String COMMAND_WORD \u003d \"status\";","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"    public static final String MESSAGE_ADD_STATUS_SUCCESS \u003d \"Added status to Person: %1$s\";","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    public static final String MESSAGE_DELETE_STATUS_SUCCESS \u003d \"Removed status from Person: %1$s\";","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"fantablack"},"content":"    public static final String MESSAGE_ADD_STATUS_FAILURE \u003d \"Status should be either \u0027blacklist\u0027 or \u0027favourite\u0027\";","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the status of the person identified \"","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"            + \"Existing status will be overwritten by the input.\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"            + PREFIX_STATUS + \"[STATUS]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"            + PREFIX_STATUS + \"blacklist\";","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"    private final Index index;","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"    private final Status status;","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"     * @param index of the person in the filtered person list to edit the status","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"     * @param status of the person to be updated to","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"    public StatusCommand(Index index, Status status) {","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        requireAllNonNull(index, status);","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"Btaykb"},"content":"                personToEdit.getAddress(), status, personToEdit.getModules(), personToEdit.getComment());","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-02-20"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-02-20"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2022-02-20"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"     * Generates a command execution success message based on whether the status is added to or removed from","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2022-02-20"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2022-02-20"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"        String message \u003d !status.value.isEmpty() ? MESSAGE_ADD_STATUS_SUCCESS : MESSAGE_DELETE_STATUS_SUCCESS;","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2022-02-20"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-20"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-20"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"        // short circuit if same object","lastModifiedDate":"2022-02-20"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-20"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"            return true;","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-02-20"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"        if (!(other instanceof StatusCommand)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"            return false;","lastModifiedDate":"2022-02-20"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"        // state check","lastModifiedDate":"2022-02-20"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"        StatusCommand e \u003d (StatusCommand) other;","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-02-20"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"                \u0026\u0026 status.equals(e.status);","lastModifiedDate":"2022-02-25"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"bakano98":89,"Btaykb":1,"fantablack":1}},{"path":"src/main/java/seedu/address/logic/commands/SwitchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fantablack"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"fantablack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"fantablack"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"fantablack"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":" * Switches AddressBook to the archivedAddressBook","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"public class SwitchCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"fantablack"},"content":"    public static final String COMMAND_WORD \u003d \"switch\";","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"fantablack"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Switched AddressBook!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"fantablack"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"fantablack"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"fantablack"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"fantablack"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"fantablack"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"fantablack"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, false, false, true, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"fantablack"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"fantablack":30}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"                        PREFIX_ADDRESS, PREFIX_MODULE);","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"            return AddCommand.addWindowHelper();","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"        Status status \u003d new Status(\"\"); // disallow adding status when adding a person","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"Btaykb"},"content":"        Set\u003cModule\u003e moduleList \u003d ParserUtil.parseModules(argMultimap.getAllValues(PREFIX_MODULE));","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Btaykb"},"content":"        Comment comment \u003d new Comment(\"\");","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"Btaykb"},"content":"        Person person \u003d new Person(name, phone, email, address, status, moduleList, comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"bakano98":5,"Btaykb":8,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fantablack"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"fantablack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"fantablack"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"fantablack"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"fantablack"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"fantablack"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"import seedu.address.logic.commands.AddModuleCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"fantablack"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":" * Parses input arguments and creates a new AddModuleCommand object","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"fantablack"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"fantablack"},"content":"public class AddModuleCommandParser implements Parser\u003cAddModuleCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"fantablack"},"content":"    public static final String MESSAGE_EMPTY \u003d \"You did not input modules to be added.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"fantablack"},"content":"     * Parses the given {@code String} of arguments in the context of the AddModuleCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"fantablack"},"content":"     * and returns an AddModuleCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"fantablack"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"fantablack"},"content":"    public AddModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"fantablack"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"fantablack"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE);","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"fantablack"},"content":"        Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"fantablack"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"fantablack"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"fantablack"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"fantablack"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"fantablack"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddModuleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"fantablack"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"        List\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e(parseModulesForEdit(argMultimap.getAllValues(PREFIX_MODULE)));","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"fantablack"},"content":"        return new AddModuleCommand(index, modules);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"Btaykb"},"content":"     * @param modules Collection of Modules in string form to be parsed","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"Btaykb"},"content":"     * @return Set of parsed Modules if @param modules not empty, else Empty Set","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"Btaykb"},"content":"    private Set\u003cModule\u003e parseModulesForEdit(Collection\u003cString\u003e modules) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Btaykb"},"content":"        assert modules !\u003d null;","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"Btaykb"},"content":"        if (modules.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"fantablack"},"content":"            throw new ParseException(MESSAGE_EMPTY);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"fantablack"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"Btaykb"},"content":"        Collection\u003cString\u003e moduleSet \u003d modules.size() \u003d\u003d 1 \u0026\u0026 modules.contains(\"\") ? Collections.emptySet() : modules;","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"Btaykb"},"content":"        return ParserUtil.parseModules(moduleSet);","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"fantablack"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"Btaykb":11,"fantablack":52}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":"import seedu.address.logic.commands.AddModuleCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.ClearModulesCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.DeleteModuleCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.StatusCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"fantablack"},"content":"import seedu.address.logic.commands.SwitchCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"fantablack"},"content":"        case AddModuleCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"fantablack"},"content":"            return new AddModuleCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"        case ClearModulesCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"            return new ClearModuleCommandParser().parse(arguments);","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"        case DeleteModuleCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"            return new DeleteModuleCommandParser().parse(arguments);","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"        case CopyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"            return new CopyCommandParser().parse(arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"        case StatusCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"            return new StatusCommandParser().parse(arguments);","lastModifiedDate":"2022-02-25"},{"lineNumber":95,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"bakano98"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-25"},{"lineNumber":97,"author":{"gitId":"bakano98"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-02-25"},{"lineNumber":98,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"lawwm"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"lawwm"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Btaykb"},"content":"        case CommentCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"Btaykb"},"content":"            return new CommentCommandParser().parse(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"fantablack"},"content":"        case SwitchCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"fantablack"},"content":"            return new SwitchCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"fantablack"},"content":"        case ArchiveCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"fantablack"},"content":"            return new ArchiveCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bakano98":6,"lawwm":18,"Btaykb":4,"-":76,"fantablack":12}},{"path":"src/main/java/seedu/address/logic/parser/ArchiveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fantablack"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"fantablack"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"fantablack"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"fantablack"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"fantablack"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":" * Parses input arguments and creates a new ArchiveCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"public class ArchiveCommandParser implements Parser\u003cArchiveCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"fantablack"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":"    public ArchiveCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"fantablack"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"fantablack"},"content":"            Index index \u003d ParserUtil.parseIndex(userInput);","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"            return new ArchiveCommand(index);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"fantablack"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"fantablack"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"fantablack"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ArchiveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"fantablack"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"fantablack"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"fantablack":28}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        return getValue(new Prefix(\"\", \"\")).orElse(\"\");","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"lawwm":1,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"     * Create list of prefix based on their position in input.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"     * @param argsString Arguments string to find prefixes in","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"     * @return List of prefix in the arguments string","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"    public static List\u003cPrefix\u003e getPrefixListInOrder(String argsString, Prefix... prefixes) {","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"        return findAllPrefixPositions(argsString, prefixes)","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"                .stream()","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"                .sorted((prefix1, prefix2) -\u003e Integer.compare(prefix1.getStartPosition(), prefix2.getStartPosition()))","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"                .map(PrefixPosition::getPrefix)","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"    public static List\u003cString\u003e getArgListInOrder(String argsString, Prefix... prefixes) {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        positions.sort((prefix1, prefix2) -\u003e Integer.compare(prefix1.getStartPosition(), prefix2.getStartPosition()));","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\", \"\"), 0);","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        positions.add(0, preambleMarker);","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\", \"\"), argsString.length());","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        positions.add(endPositionMarker);","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        List\u003cString\u003e orderList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 1; i \u003c positions.size() - 1; i++) {","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"            // Extract and store arguments","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"            String argValue \u003d extractArgumentValue(argsString, positions.get(i), positions.get(i + 1));","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"            orderList.add(argValue);","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"        return orderList;","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"lawwm"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\", \"\"), 0);","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"lawwm"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\", \"\"), argsString.length());","lastModifiedDate":"2022-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"lawwm":39,"-":146}},{"path":"src/main/java/seedu/address/logic/parser/ClearModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.ClearModulesCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"public class ClearModuleCommandParser implements Parser\u003cClearModulesCommand\u003e {","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"    public ClearModulesCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"            return new ClearModulesCommand(index);","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearModulesCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":30}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"    /* Prefix definitions. Add Prefixes here whenever you add a new command */","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\", \"name\");","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\", \"phone\");","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\", \"email\");","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\", \"address\");","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\", \"module\");","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\", \"status\");","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"    public static final Prefix PREFIX_FORMAT \u003d new Prefix(\"f/\", \"format\");","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"    public static final Prefix PREFIX_COMMENT \u003d new Prefix(\"c/\", \"comment\");","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bakano98":1,"lawwm":7,"Btaykb":1,"-":8}},{"path":"src/main/java/seedu/address/logic/parser/CommentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Btaykb"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Btaykb"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"Btaykb"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":" * Parses input arguments and creates a new {@code AddCommentCommand} object","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":" * AddCommentCommandParser is adapted from https://nus-cs2103-ay2122s2.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":"public class CommentCommandParser implements Parser\u003cCommentCommand\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Btaykb"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"     * @param userInput","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"    public CommentCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"Btaykb"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput,","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"                PREFIX_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"Btaykb"},"content":"        Index index;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"        try {","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"                    CommentCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"Btaykb"},"content":"        if (!argMultimap.getValue(PREFIX_COMMENT).isPresent()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"Btaykb"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"                    CommentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"Btaykb"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"Btaykb"},"content":"        Comment comment \u003d ParserUtil.parseComment(argMultimap.getValue(PREFIX_COMMENT).get());","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"        return new CommentCommand(index, comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"Btaykb":46}},{"path":"src/main/java/seedu/address/logic/parser/CopyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORMAT;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.FormatPersonUtil;","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"public class CopyCommandParser implements Parser\u003cCopyCommand\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"    public CopyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"                        PREFIX_ADDRESS, PREFIX_MODULE, PREFIX_COMMENT, PREFIX_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        Index index;","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"        List\u003cPrefix\u003e prefixes \u003d ArgumentTokenizer.getPrefixListInOrder(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_STATUS, PREFIX_COMMENT, PREFIX_MODULE);","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        if (prefixes.isEmpty()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"            prefixes.addAll(Arrays.asList(PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"                    PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_STATUS, PREFIX_MODULE, PREFIX_COMMENT));","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        FormatPersonUtil fp \u003d new FormatPersonUtil();","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        if (argMultimap.getValue(PREFIX_FORMAT).isPresent()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"            fp \u003d ParserUtil.parseFormat(argMultimap.getValue(PREFIX_FORMAT).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        if (argMultimap.getPreamble().equals(\"\")) {","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"            return new CopyCommand(prefixes, fp);","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CopyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"        return new CopyCommand(index, prefixes, fp);","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"lawwm":64}},{"path":"src/main/java/seedu/address/logic/parser/DeleteModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import java.util.Collection;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import java.util.Set;","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.DeleteModuleCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"public class DeleteModuleCommandParser implements Parser\u003cDeleteModuleCommand\u003e {","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_EMPTY \u003d \"You did not input modules to be deleted.\";","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteModuleCommand","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"     * and returns an DeleteModuleCommand object for execution.","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"    public DeleteModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"Btaykb"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE);","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"        Index index;","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"        List\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteModuleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"Btaykb"},"content":"        modules.addAll(parseModulesForEdit(argMultimap.getAllValues(PREFIX_MODULE)));","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        return new DeleteModuleCommand(index, modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"Btaykb"},"content":"    private Set\u003cModule\u003e parseModulesForEdit(Collection\u003cString\u003e modules) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"        assert modules !\u003d null;","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"Btaykb"},"content":"        if (modules.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"            throw new ParseException(MESSAGE_EMPTY);","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"Btaykb"},"content":"        Collection\u003cString\u003e moduleSet \u003d modules.size() \u003d\u003d 1 \u0026\u0026 modules.contains(\"\") ? Collections.emptySet() : modules;","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"Btaykb"},"content":"        return ParserUtil.parseModules(moduleSet);","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":54,"Btaykb":10}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"                        PREFIX_ADDRESS, PREFIX_MODULE);","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"            return EditCommand.editWindowHelper();","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"        if (argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Btaykb"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bakano98":4,"Btaykb":6,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MORE_MODULES_THAN_EXPECTED;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.NameContainsModulePredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"        if (tagKeywords.length \u003e 1) {","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"                    String.format(MESSAGE_MORE_MODULES_THAN_EXPECTED, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"        if (!Module.isValidModuleName(tagKeywords[0])) {","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_CONSTRAINTS)","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"            );","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"        // because we only allow ONE module.","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        String tagToFind \u003d tagKeywords[0];","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"Btaykb"},"content":"        return new FilterCommand(new NameContainsModulePredicate(tagToFind));","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":38,"Btaykb":7}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.FormatPersonUtil;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":102,"author":{"gitId":"Btaykb"},"content":"     * Parses a {@code String module} into a {@code Module}.","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":105,"author":{"gitId":"Btaykb"},"content":"     * @throws ParseException if the given {@code module} is invalid.","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2022-02-25"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-02-25"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"bakano98"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":113,"author":{"gitId":"bakano98"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2022-02-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"Btaykb"},"content":"     * Parses a {@code String module} into a {@code Module}.","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"Btaykb"},"content":"     * @throws ParseException if the given {@code module} is invalid.","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"Btaykb"},"content":"    public static Module parseModule(String module) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"Btaykb"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"Btaykb"},"content":"        String trimmedModule \u003d module.trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"Btaykb"},"content":"        if (!Module.isValidModuleName(trimmedModule)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"Btaykb"},"content":"            throw new ParseException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"Btaykb"},"content":"        return new Module(trimmedModule);","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":132,"author":{"gitId":"lawwm"},"content":"     * Parses a {@code String format} into a {@code FormatPersonUtil}.","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"lawwm"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-19"},{"lineNumber":134,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":135,"author":{"gitId":"lawwm"},"content":"     * @throws ParseException if the given {@code format} is invalid.","lastModifiedDate":"2022-03-19"},{"lineNumber":136,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":137,"author":{"gitId":"lawwm"},"content":"    public static FormatPersonUtil parseFormat(String format) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"lawwm"},"content":"        requireNonNull(format);","lastModifiedDate":"2022-03-19"},{"lineNumber":139,"author":{"gitId":"lawwm"},"content":"        String trimmedFormat \u003d format.trim();","lastModifiedDate":"2022-03-19"},{"lineNumber":140,"author":{"gitId":"lawwm"},"content":"        if (!FormatPersonUtil.isValidFormat(trimmedFormat)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":141,"author":{"gitId":"lawwm"},"content":"            throw new ParseException(FormatPersonUtil.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":142,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":143,"author":{"gitId":"lawwm"},"content":"        return new FormatPersonUtil(trimmedFormat);","lastModifiedDate":"2022-03-19"},{"lineNumber":144,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":145,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"Btaykb"},"content":"     * Parses {@code Collection\u003cString\u003e modules} into a {@code Set\u003cModule\u003e}.","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":149,"author":{"gitId":"Btaykb"},"content":"    public static Set\u003cModule\u003e parseModules(Collection\u003cString\u003e modules) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"Btaykb"},"content":"        requireNonNull(modules);","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"Btaykb"},"content":"        final Set\u003cModule\u003e moduleSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"Btaykb"},"content":"        for (String moduleName : modules) {","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"Btaykb"},"content":"            moduleSet.add(parseModule(moduleName));","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"Btaykb"},"content":"        return moduleSet;","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"Btaykb"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"Btaykb"},"content":"     * Parses a {@code String module} into a {@code Module}.","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"Btaykb"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"Btaykb"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"Btaykb"},"content":"     * @throws ParseException if the given {@code module} is invalid.","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"Btaykb"},"content":"    public static Comment parseComment(String comment) throws ParseException {","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"Btaykb"},"content":"        requireNonNull(comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"Btaykb"},"content":"        String trimmedComment \u003d comment.trim();","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"Btaykb"},"content":"        if (!Comment.isValidComment(trimmedComment)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"Btaykb"},"content":"            return new Comment(\"\");","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"Btaykb"},"content":"        return new Comment(trimmedComment);","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bakano98":7,"lawwm":16,"Btaykb":31,"-":118}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":" * E.g. \u0027m/\u0027 in \u0027add James m/CS2106\u0027.","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"    private final String description;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"     * Constructs a Prefix.","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"     * @param prefix the prefix string.","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"     * @param desc the description of the prefix.","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"    public Prefix(String prefix, String desc) {","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"        this.description \u003d desc;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"        return description;","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        return otherPrefix.getPrefix().equals(getPrefix())","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 otherPrefix.getDescription().equals(getDescription());","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"lawwm":14,"Btaykb":1,"-":36}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_PARAMETERS_SUPPLIED;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"    private static final String defaultOrder \u003d \"ASC\";","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"     * and returns an SortCommand object for execution.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_STATUS, PREFIX_MODULE, PREFIX_COMMENT);","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        List\u003cPrefix\u003e prefixes \u003d ArgumentTokenizer.getPrefixListInOrder(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_STATUS, PREFIX_MODULE, PREFIX_COMMENT);","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"        List\u003cString\u003e orders \u003d ArgumentTokenizer.getArgListInOrder(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_STATUS, PREFIX_MODULE, PREFIX_COMMENT);","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"        if (prefixes.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"            throw new ParseException(String.format(MESSAGE_NO_PARAMETERS_SUPPLIED, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        if (!argMultimap.getPreamble().equals(\"\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        for (String order : orders) {","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"            String uppercaseOrder \u003d order.toUpperCase();","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"            if (!uppercaseOrder.equals(\"ASC\") \u0026\u0026 !uppercaseOrder.equals(\"DESC\") \u0026\u0026 !uppercaseOrder.equals(\"\")) {","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        String successField \u003d formatFields(prefixes, orders);","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"        return new SortCommand(prefixes, orders, successField);","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"     * Formats the fields to be displayed in the success message","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"     * @param fields the list of prefixes to be displayed","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"     * @return the formatted success message","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"    public static String formatFields(List\u003cPrefix\u003e fields, List\u003cString\u003e orders) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"        List\u003cList\u003cString\u003e\u003e formattedFields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c fields.size(); i++) {","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"            List\u003cString\u003e formattedField \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"            formattedField.add((fields.get(i)).getDescription());","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"            if (orders.get(i).equals(\"\")) {","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"                formattedField.add(defaultOrder);","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"            } else {","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"                formattedField.add(orders.get(i).toUpperCase());","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"            formattedFields.add(formattedField);","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"        return formattedFields.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"lawwm":80,"Btaykb":2}},{"path":"src/main/java/seedu/address/logic/parser/StatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.StatusCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":" * Parses input arguments and creates a new {@code StatusCommand} object","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"public class StatusCommandParser implements Parser\u003cStatusCommand\u003e {","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code StatusCommand}","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"     * and returns a {@code StatusCommand} object for execution.","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    public StatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STATUS);","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"        Index index;","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"            Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"            return new StatusCommand(index, status);","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"        } catch (NoSuchElementException nsee) {","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE), nsee);","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"bakano98":43}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.SortCommand.PersonComparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"lawwm"},"content":"     * Sort persons in the address book with given PersonComparator {@code comparator}.","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"lawwm"},"content":"    public void sortPerson(PersonComparator comparator) {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"        persons.sort(comparator);","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"lawwm"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-26"},{"lineNumber":108,"author":{"gitId":"lawwm"},"content":"        ObservableList\u003cPerson\u003e personList \u003d persons.asUnmodifiableObservableList();","lastModifiedDate":"2022-02-26"},{"lineNumber":109,"author":{"gitId":"lawwm"},"content":"        for (Person p : personList) {","lastModifiedDate":"2022-02-26"},{"lineNumber":110,"author":{"gitId":"lawwm"},"content":"            sb.append(p.toString());","lastModifiedDate":"2022-02-26"},{"lineNumber":111,"author":{"gitId":"lawwm"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2022-02-26"},{"lineNumber":112,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":113,"author":{"gitId":"lawwm"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-26"},{"lineNumber":114,"author":{"gitId":"lawwm"},"content":"        //return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2022-02-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lawwm":15,"-":119}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.SortCommand.PersonComparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"     * Returns the user prefs\u0027 archived address book file path.","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"    Path getArchivedAddressBookFilePath();","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"lawwm"},"content":"     * Sort the person list with PersonComparator {@code comparator}.","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"    void sortPerson(PersonComparator comparator);","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bakano98":5,"lawwm":6,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.SortCommand.PersonComparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"    public Path getArchivedAddressBookFilePath() {","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"        return userPrefs.getArchivedAddressBookFilePath();","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"lawwm"},"content":"    public void sortPerson(PersonComparator comparator) {","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"lawwm"},"content":"        addressBook.sortPerson(comparator);","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bakano98":6,"lawwm":6,"-":150}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"    Path getArchivedAddressBookFilePath();","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":16,"fantablack":2}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"    private Path archivedAddressBookFilePath \u003d Paths.get(\"data\" , \"archivedAddressBook.json\");","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"fantablack"},"content":"        setArchivedAddressBookFilePath(newUserPrefs.getArchivedAddressBookFilePath());","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"fantablack"},"content":"    public Path getArchivedAddressBookFilePath() {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"fantablack"},"content":"        return archivedAddressBookFilePath;","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"fantablack"},"content":"    public void setArchivedAddressBookFilePath(Path archivedAddressBookFilePath) {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"fantablack"},"content":"        requireNonNull(archivedAddressBookFilePath);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"fantablack"},"content":"        this.archivedAddressBookFilePath \u003d archivedAddressBookFilePath;","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":87,"fantablack":12}},{"path":"src/main/java/seedu/address/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Btaykb"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":" * Represents a Module in the address book.","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidModuleName(String)}","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"public class Module {","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Btaykb"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Modules names should have 2-3 letters prefix \"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"            + \"followed by 4 digits and an optional letter\\n\";","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z]{2,3}\\\\d{4}[a-zA-Z]?\";","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":"    public final String moduleName;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"     * Constructs a {@code Module}.","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"     * @param moduleName A valid module name.","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"    public Module(String moduleName) {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"        requireNonNull(moduleName);","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"        checkArgument(isValidModuleName(moduleName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"        this.moduleName \u003d moduleName.toUpperCase();","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"Btaykb"},"content":"     * Returns true if a given string is a valid module name.","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"    public static boolean isValidModuleName(String test) {","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"Btaykb"},"content":"                || (other instanceof Module // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"                \u0026\u0026 moduleName.equals(((Module) other).moduleName)); // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"    public String getModuleName() {","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        return moduleName;","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"Btaykb"},"content":"        return moduleName.hashCode();","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"Btaykb"},"content":"        return \u0027[\u0027 + moduleName + \u0027]\u0027;","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lawwm":7,"Btaykb":18,"-":35}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"public class Address implements Comparable\u003cAddress\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"    public int compareTo(Address address) {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        return this.value.compareTo(address.value);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lawwm":5,"-":56}},{"path":"src/main/java/seedu/address/model/person/Comment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Btaykb"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Btaykb"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"public class Comment implements Comparable\u003cComment\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"Btaykb"},"content":"    /*","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"Btaykb"},"content":"     * The first character of the comment must not be a whitespace,","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"    public final String value;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Btaykb"},"content":"     * Constructor for a comment","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"     * Represents a comment for a Person.","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"     * @param comment","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"    public Comment(String comment) {","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"        requireNonNull(comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"        value \u003d comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"    public String toString() {","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"Btaykb"},"content":"        return value;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"     * Returns true if a given string is a valid comment.","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"    public static boolean isValidComment(String test) {","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"Btaykb"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"Btaykb"},"content":"        return value.equals(\"\");","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"Btaykb"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"Btaykb"},"content":"                || (other instanceof Comment // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"Btaykb"},"content":"                \u0026\u0026 value.equals(((Comment) other).value)); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"Btaykb"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"Btaykb"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"Btaykb"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"    public int compareTo(Comment o) {","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        return this.value.length() - o.value.length();","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Btaykb"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"lawwm":6,"Btaykb":55}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"public class Email implements Comparable\u003cEmail\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"    public int compareTo(Email email) {","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"        return value.compareTo(email.value);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lawwm":5,"-":70}},{"path":"src/main/java/seedu/address/model/person/FormatPersonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"public class FormatPersonUtil {","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"    public static final String JSON_FORMAT \u003d \"json\";","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    public static final String CSV_FORMAT \u003d \"csv\";","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    public static final String DEFAULT_FORMAT \u003d \"default\";","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Invalid format. Valid formats are: \"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"            + JSON_FORMAT + \", \" + CSV_FORMAT + \", \" + DEFAULT_FORMAT + \"\\n\";","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"    private final String format;","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"    public FormatPersonUtil() {","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"        this.format \u003d DEFAULT_FORMAT;","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"    public FormatPersonUtil(String format) {","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"        this.format \u003d format;","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"     * Returns true if format specified is valid","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"     * @param format","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"     * @return True if valid","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"    public static boolean isValidFormat(String format) {","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        return format.equals(JSON_FORMAT) || format.equals(CSV_FORMAT) || format.equals(DEFAULT_FORMAT);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"     * Returns a String containing formatted person","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"     * @param person person to be formatted","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"     * @param prefixes list of prefixes to be used","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"     * @return String containing formatted person","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"    public String formatPerson(Person person, List\u003cPrefix\u003e prefixes) throws JsonProcessingException {","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        if (format.equals(JSON_FORMAT)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"            return JsonUtil.toJsonString(formatPersonJson(person, prefixes));","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"        } else if (format.equals(CSV_FORMAT)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"            return formatPersonCsv(person, prefixes);","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        } else {","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"            return formatPersonDefault(person, prefixes);","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"     * Returns a String containing formatted addressbook","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"     * @param persons person to be formatted","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"     * @param prefixes list of prefixes to be used","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"     * @return String containing formatted addressbook","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"    public String formatAddressBook(List\u003cPerson\u003e persons, List\u003cPrefix\u003e prefixes) throws JsonProcessingException {","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"        if (format.equals(JSON_FORMAT)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"            return formatAddressBookJson(persons, prefixes);","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"        } else if (format.equals(CSV_FORMAT)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"            return formatAddressBookCsv(persons, prefixes);","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"        } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"            return formatAddressBookDefault(persons, prefixes);","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Default format \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"    private String formatPersonDefault(Person person, List\u003cPrefix\u003e prefixes) {","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c prefixes.size(); i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"lawwm"},"content":"            builder.append(getPersonField(person, prefixes.get(i)));","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"lawwm"},"content":"            if (i !\u003d prefixes.size() - 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"lawwm"},"content":"                builder.append(\"\\n\");","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"lawwm"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"lawwm"},"content":"    private String formatAddressBookDefault(List\u003cPerson\u003e persons, List\u003cPrefix\u003e prefixes) {","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"lawwm"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c persons.size(); i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"lawwm"},"content":"            builder.append(formatPersonDefault(persons.get(i), prefixes));","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"lawwm"},"content":"            if (i !\u003d persons.size() - 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"                builder.append(\"\\n\");","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"lawwm"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"lawwm"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Csv format \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"lawwm"},"content":"    private String formatPersonCsv(Person person, List\u003cPrefix\u003e prefixes) {","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"lawwm"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c prefixes.size() - 1; i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"lawwm"},"content":"            builder.append(getPersonField(person, prefixes.get(i)));","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"lawwm"},"content":"            builder.append(\" | \");","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"lawwm"},"content":"        builder.append(getPersonField(person, prefixes.get(prefixes.size() - 1)));","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"lawwm"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"lawwm"},"content":"    private String formatHeaderCsv(List\u003cPrefix\u003e prefixes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"lawwm"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"lawwm"},"content":"        List\u003cString\u003e headers \u003d prefixes.stream()","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"lawwm"},"content":"                .map(Prefix::getDescription)","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"lawwm"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c headers.size() - 1; i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"lawwm"},"content":"            builder.append(headers.get(i));","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"lawwm"},"content":"            builder.append(\" | \");","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"lawwm"},"content":"        builder.append(headers.get(headers.size() - 1));","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"lawwm"},"content":"        builder.append(\"\\n\");","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"lawwm"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"lawwm"},"content":"    private String formatAddressBookCsv(List\u003cPerson\u003e persons, List\u003cPrefix\u003e prefixes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"lawwm"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"lawwm"},"content":"        builder.append(formatHeaderCsv(prefixes));","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c persons.size(); i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"lawwm"},"content":"            builder.append(formatPersonCsv(persons.get(i), prefixes));","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"lawwm"},"content":"            if (i !\u003d persons.size() - 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"lawwm"},"content":"                builder.append(\"\\n\");","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"lawwm"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"lawwm"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Json format \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"lawwm"},"content":"    private Map\u003cString, Object\u003e formatPersonJson(Person person, List\u003cPrefix\u003e prefixes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"lawwm"},"content":"        Map\u003cString, Object\u003e personMap \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"lawwm"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2022-03-19"},{"lineNumber":152,"author":{"gitId":"lawwm"},"content":"            if (prefix.equals(PREFIX_MODULE)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"lawwm"},"content":"                List\u003cString\u003e modules \u003d person.getModules().stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"lawwm"},"content":"                                .map(Module::getModuleName)","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"lawwm"},"content":"                                .collect(Collectors.toList());","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"lawwm"},"content":"                personMap.put(prefix.getDescription(), modules);","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"lawwm"},"content":"            } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"lawwm"},"content":"                personMap.put(prefix.getDescription(), getPersonField(person, prefix));","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"lawwm"},"content":"        return personMap;","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"lawwm"},"content":"    private String formatAddressBookJson(List\u003cPerson\u003e person, List\u003cPrefix\u003e prefixes) throws JsonProcessingException {","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"lawwm"},"content":"        List\u003cMap\u003cString, Object\u003e\u003e mapList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"lawwm"},"content":"        for (Person p : person) {","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"lawwm"},"content":"            mapList.add(formatPersonJson(p, prefixes));","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":170,"author":{"gitId":"lawwm"},"content":"        Map\u003cString, Object\u003e addressBookStructure \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"lawwm"},"content":"        addressBookStructure.put(\"persons\", mapList);","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"lawwm"},"content":"        return JsonUtil.toJsonString(addressBookStructure);","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":174,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":175,"author":{"gitId":"lawwm"},"content":"    public static String getPersonField(Person person, Prefix prefix) {","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"lawwm"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":177,"author":{"gitId":"lawwm"},"content":"            return person.getName().toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":178,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":179,"author":{"gitId":"lawwm"},"content":"        } else if (prefix.equals(PREFIX_PHONE)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":180,"author":{"gitId":"lawwm"},"content":"            return person.getPhone().toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":181,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":182,"author":{"gitId":"lawwm"},"content":"        } else if (prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":183,"author":{"gitId":"lawwm"},"content":"            return person.getEmail().toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":184,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":185,"author":{"gitId":"lawwm"},"content":"        } else if (prefix.equals(PREFIX_ADDRESS)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":186,"author":{"gitId":"lawwm"},"content":"            return person.getAddress().toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":187,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":188,"author":{"gitId":"lawwm"},"content":"        } else if (prefix.equals(PREFIX_STATUS)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":189,"author":{"gitId":"lawwm"},"content":"            return person.getStatus().toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":190,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"lawwm"},"content":"        } else if (prefix.equals(PREFIX_MODULE)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":192,"author":{"gitId":"lawwm"},"content":"            return person.getModules().toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":193,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":194,"author":{"gitId":"lawwm"},"content":"        } else if (prefix.equals(PREFIX_COMMENT)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"lawwm"},"content":"            return person.getComment().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"lawwm"},"content":"        } else {","lastModifiedDate":"2022-03-19"},{"lineNumber":198,"author":{"gitId":"lawwm"},"content":"            assert false;","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"lawwm"},"content":"            return \"\";","lastModifiedDate":"2022-03-19"},{"lineNumber":200,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":201,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"lawwm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"lawwm"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"lawwm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"lawwm"},"content":"            return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"lawwm"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"lawwm"},"content":"        if (!(other instanceof FormatPersonUtil)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"lawwm"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"lawwm"},"content":"        // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"lawwm"},"content":"        FormatPersonUtil e \u003d (FormatPersonUtil) other;","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"lawwm"},"content":"        return format.equals(e.format);","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"lawwm":219}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"    public int compareTo(Name name) {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"        return fullName.compareTo(name.fullName);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lawwm":5,"-":58}},{"path":"src/main/java/seedu/address/model/person/NameContainsModulePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import java.util.Set;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"Btaykb"},"content":"public class NameContainsModulePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"Btaykb"},"content":"    // May possibly change to a list of modules","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"    private final Module module;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"    public NameContainsModulePredicate(String module) {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"        this.module \u003d new Module(module);","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"        // instead of converting to stream, it is simply a module now","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"        // so, to do the \"test\", we only need to check if module is within the set of modules","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"        Set\u003cModule\u003e modules \u003d person.getModules();","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"        return modules.contains(module);","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"                || (other instanceof NameContainsModulePredicate // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Btaykb"},"content":"                \u0026\u0026 module.equals(((NameContainsModulePredicate) other).module)); // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":22,"Btaykb":12}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    // constants","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"    public static final String BLACKLIST \u003d \"blacklist\";","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"    public static final String FAVOURITE \u003d \"favourite\";","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"    private final Status status;","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"    private final Comment comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"    private final Set\u003cModule\u003e modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Status status,","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"                  Set\u003cModule\u003e modules, Comment comment) {","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"        requireAllNonNull(name, phone, email, address, modules, comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"        // This is how to add a proper blacklist/favourite when editing the thing!","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        if (status.toString().equals(BLACKLIST) || status.toString().equals(FAVOURITE)) {","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"            this.status \u003d status;","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"        } else {","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"            this.status \u003d new Status(\"\");","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"Btaykb"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"Btaykb"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"    public Status getStatus() {","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"        return status;","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":72,"author":{"gitId":"Btaykb"},"content":"    public Comment getComment() {","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"Btaykb"},"content":"        return comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"Btaykb"},"content":"     * Returns an immutable module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"Btaykb"},"content":"    public Set\u003cModule\u003e getModules() {","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"Btaykb"},"content":"        return Collections.unmodifiableSet(modules);","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"Btaykb"},"content":"                \u0026\u0026 otherPerson.getModules().equals(getModules())","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"Btaykb"},"content":"                \u0026\u0026 otherPerson.getStatus().equals(getStatus())","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"Btaykb"},"content":"                \u0026\u0026 otherPerson.getComment().equals(getComment());","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"Btaykb"},"content":"        return Objects.hash(name, phone, email, address, modules);","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"bakano98"},"content":"                .append(getAddress())","lastModifiedDate":"2022-02-20"},{"lineNumber":137,"author":{"gitId":"bakano98"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2022-02-25"},{"lineNumber":138,"author":{"gitId":"Btaykb"},"content":"                .append(getStatus())","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"Btaykb"},"content":"                .append(\"; Comment: \")","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"Btaykb"},"content":"                .append(getComment());","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"Btaykb"},"content":"        Set\u003cModule\u003e modules \u003d getModules();","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"Btaykb"},"content":"        if (!modules.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"Btaykb"},"content":"            builder.append(\"; Modules: \");","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"Btaykb"},"content":"            modules.forEach(builder::append);","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bakano98":16,"Btaykb":26,"-":108}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"public class Phone implements Comparable\u003cPhone\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"    public int compareTo(Phone phone) {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        return this.value.compareTo(phone.value);","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lawwm":5,"-":52}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":" * Represents a Person\u0027s status in the address book.","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"public class Status implements Comparable\u003cStatus\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status should be either \u0027blacklist\u0027 or \u0027favourite\u0027\";","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"    public final String value;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"     * Constructor for a status","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"     * Represents a status for a Person.","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"     * @param status","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"    public Status(String status) {","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"        String lowerCaseStatus \u003d status.toLowerCase();","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"        checkArgument(isValidStatus(lowerCaseStatus), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"        // Here, we ensure that status is in lower case.","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"        value \u003d lowerCaseStatus;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"    public String toString() {","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"        return value;","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"                \u0026\u0026 value.equals(((Status) other).value)); // state check","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        return (test.equals(\"blacklist\") || test.equals(\"favourite\") || test.equals(\"\"));","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    public int compareTo(Status status) {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        return value.compareTo(status.value);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":48,"lawwm":6}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.SortCommand.PersonComparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"     * Sort the list using the given comparator.","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"    public void sort(PersonComparator comparator) {","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lawwm":8,"-":137}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"    public static final Status EMPTY_STATUS \u003d new Status(\"\");","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"    public static final Comment EMPTY_COMMENT \u003d new Comment(\"\");","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"                getModuleSet(\"CS2103\"), EMPTY_COMMENT),","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"                getModuleSet(\"CS2100\", \"CS2040\"), EMPTY_COMMENT),","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"                getModuleSet(\"CS1101\"), EMPTY_COMMENT),","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"Btaykb"},"content":"                getModuleSet(\"CS1231\"), EMPTY_COMMENT),","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"Btaykb"},"content":"                getModuleSet(\"CS2030\"), EMPTY_COMMENT),","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"                getModuleSet(\"CS3230\"), EMPTY_COMMENT)","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"Btaykb"},"content":"     * Returns a module set containing the list of strings given.","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"Btaykb"},"content":"    public static Set\u003cModule\u003e getModuleSet(String... strings) {","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"Btaykb"},"content":"                .map(Module::new)","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"bakano98":10,"Btaykb":12,"-":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"public class JsonAdaptedPerson {","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"    private final String status;","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"    private final String comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"    private final List\u003cJsonAdaptedTag\u003e module \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"            @JsonProperty(\"status\") String status,","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"            @JsonProperty(\"module\") List\u003cJsonAdaptedTag\u003e module, @JsonProperty(\"comment\") String comment) {","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"Btaykb"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        if (module !\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"            this.module.addAll(module);","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"        status \u003d source.getStatus().value;","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"        module.addAll(source.getModules().stream()","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"Btaykb"},"content":"        comment \u003d source.getComment().value;","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"Btaykb"},"content":"        final List\u003cModule\u003e personModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"        for (JsonAdaptedTag module : module) {","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"Btaykb"},"content":"            personModules.add(module.toModelType());","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"bakano98"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-02-25"},{"lineNumber":115,"author":{"gitId":"bakano98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2022-02-25"},{"lineNumber":116,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":117,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":118,"author":{"gitId":"Btaykb"},"content":"        if (comment \u003d\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"Btaykb"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Comment.class.getSimpleName()));","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"Btaykb"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-02-20"},{"lineNumber":123,"author":{"gitId":"Btaykb"},"content":"        final Set\u003cModule\u003e modelModules \u003d new HashSet\u003c\u003e(personModules);","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"bakano98"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2022-02-25"},{"lineNumber":125,"author":{"gitId":"Btaykb"},"content":"        final Comment modelComment \u003d new Comment(comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":127,"author":{"gitId":"Btaykb"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelStatus, modelModules, modelComment);","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bakano98":10,"lawwm":6,"Btaykb":16,"-":98}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":" * Jackson-friendly version of {@link Module}.","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":"    private final String moduleName;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code moduleName}.","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"    public JsonAdaptedTag(String moduleName) {","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"     * Converts a given {@code Module} into this class for Jackson use.","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"    public JsonAdaptedTag(Module source) {","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"Btaykb"},"content":"        moduleName \u003d source.moduleName;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"    public String getModuleName() {","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"        return moduleName;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"     * Converts this Jackson-friendly adapted module object into the model\u0027s {@code Module} object.","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Btaykb"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted module.","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"Btaykb"},"content":"        if (!Module.isValidModuleName(moduleName)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"Btaykb"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"        return new Module(moduleName);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Btaykb":17,"-":31}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"fantablack"},"content":"     * Function to get Archived AddressBook File Path","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"fantablack"},"content":"    Path getArchivedAddressBookFilePath();","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"fantablack"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readArchivedAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    void saveArchivedAddressBook(ReadOnlyAddressBook addressBook) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lawwm":2,"-":32,"fantablack":6}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"fantablack"},"content":"    private AddressBookStorage archivedAddressBookStorage;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"fantablack"},"content":"     * Constructor that intializes an additional archived addressbook","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"fantablack"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, AddressBookStorage archivedAddressBookStorage,","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"fantablack"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"fantablack"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"fantablack"},"content":"        this.archivedAddressBookStorage \u003d archivedAddressBookStorage;","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"fantablack"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"        System.out.println(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"fantablack"},"content":"     * Function to get Archived AddressBook File Path","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"fantablack"},"content":"    public Path getArchivedAddressBookFilePath() {","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"fantablack"},"content":"        return archivedAddressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"fantablack"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"fantablack"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readArchivedAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"fantablack"},"content":"        return readAddressBook(archivedAddressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"lawwm"},"content":"    public void saveArchivedAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"lawwm"},"content":"        saveAddressBook(addressBook, archivedAddressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lawwm":6,"-":78,"fantablack":24}},{"path":"src/main/java/seedu/address/ui/AddWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":" * Controller for an Add page","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"public class AddWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"    public static final String HELP_MESSAGE \u003d \"Add a new contact\";","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"    public static final String NAME_LABEL \u003d \"Name: \";","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"    public static final String PHONE_LABEL \u003d \"Number: \";","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"    public static final String ADDRESS_LABEL \u003d \"Address: \";","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"    public static final String EMAIL_LABEL \u003d \"Email: \";","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    public static final String COMMENT_LABEL \u003d \"Comment: \";","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"    public static final String STAT_LABEL \u003d \"Status: \";","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"    public static final String MODULES_LABEL \u003d \"Modules: \";","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddWindow.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"    private static final String FXML \u003d \"AddWindow.fxml\";","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"    private Logic logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"    private Button submitButton;","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"    private Button cancelButton;","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"    private Label addMessageLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"    private Label nameLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"    private Label phoneLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"    private Label addressLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"    private Label emailLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"    private Label commentLabel;","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"    private Label statLabel;","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"    private Label modulesLabel;","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"    private Label errorLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"    private TextField nameField;","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"    private TextField phoneField;","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"    private TextField addressField;","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"    private TextField emailField;","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"    private TextField commentField;","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"    private TextField statField;","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"    private TextField modulesField;","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"bakano98"},"content":"     * Creates a new AddWindow.","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"bakano98"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"bakano98"},"content":"     * @param root Stage to use as the root of the AddWindow.","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"bakano98"},"content":"    public AddWindow(Stage root) {","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"bakano98"},"content":"        super(FXML, root);","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"     * Creates a new AddWindow.","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"    public AddWindow(Logic logic) {","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"        this(new Stage());","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"bakano98"},"content":"        addMessageLabel.setText(HELP_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"bakano98"},"content":"        nameLabel.setText(NAME_LABEL);","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"bakano98"},"content":"        phoneLabel.setText(PHONE_LABEL);","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"bakano98"},"content":"        addressLabel.setText(ADDRESS_LABEL);","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"bakano98"},"content":"        emailLabel.setText(EMAIL_LABEL);","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"bakano98"},"content":"        commentLabel.setText(COMMENT_LABEL);","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"bakano98"},"content":"        statLabel.setText(STAT_LABEL);","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"bakano98"},"content":"        modulesLabel.setText(MODULES_LABEL);","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"bakano98"},"content":"        errorLabel.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"bakano98"},"content":"     * Shows the add window.","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"bakano98"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"bakano98"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"bakano98"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"bakano98"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"bakano98"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"bakano98"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"bakano98"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"bakano98"},"content":"    public void show() {","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"bakano98"},"content":"        logger.fine(\"Showing add page for the application.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"bakano98"},"content":"        getRoot().show();","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"bakano98"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"bakano98"},"content":"     * Resets the fields when handleCancel() is triggered, or when submission is successful","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"bakano98"},"content":"    public void resetFields() {","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"bakano98"},"content":"        nameField.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"bakano98"},"content":"        phoneField.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"bakano98"},"content":"        addressField.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"bakano98"},"content":"        emailField.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"bakano98"},"content":"        commentField.setText(\"\");","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"bakano98"},"content":"        statField.setText(\"\");","lastModifiedDate":"2022-03-19"},{"lineNumber":156,"author":{"gitId":"bakano98"},"content":"        modulesField.setText(\"\");","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"bakano98"},"content":"        errorLabel.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"bakano98"},"content":"        // Set the focus on nameField so that it will be back on nameField after closing/submitting","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"bakano98"},"content":"        nameField.requestFocus();","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"bakano98"},"content":"     * Returns true if the add window is currently being shown.","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"bakano98"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"bakano98"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"bakano98"},"content":"     * Hides the add window.","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"bakano98"},"content":"    public void hide() {","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"bakano98"},"content":"        getRoot().hide();","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"bakano98"},"content":"     * Focuses on the add window.","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"bakano98"},"content":"    public void focus() {","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"bakano98"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":185,"author":{"gitId":"bakano98"},"content":"     * Retrieves the last index in {@code ReadOnlyAddressBook}\u0027s list of Person.","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"bakano98"},"content":"     * Indexing starts from 1.","lastModifiedDate":"2022-03-24"},{"lineNumber":187,"author":{"gitId":"bakano98"},"content":"     * @return last 1-based index","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":189,"author":{"gitId":"bakano98"},"content":"    private int getAbLastIndex() {","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"bakano98"},"content":"        ReadOnlyAddressBook ab \u003d logic.getAddressBook();","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"bakano98"},"content":"        ObservableList\u003cPerson\u003e personList \u003d ab.getPersonList();","lastModifiedDate":"2022-03-19"},{"lineNumber":192,"author":{"gitId":"bakano98"},"content":"        return personList.size();","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"bakano98"},"content":"     * Adds a Status for the newly created Person object.","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"bakano98"},"content":"    private void addStatusForNewPerson() {","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"bakano98"},"content":"        int lastIndex \u003d getAbLastIndex();","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"bakano98"},"content":"        StringBuilder commandText \u003d new StringBuilder(\"status \").append(lastIndex);","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"bakano98"},"content":"        String status \u003d statField.getText();","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":203,"author":{"gitId":"bakano98"},"content":"        if (status.equals(\"\")) {","lastModifiedDate":"2022-03-19"},{"lineNumber":204,"author":{"gitId":"bakano98"},"content":"            return;","lastModifiedDate":"2022-03-19"},{"lineNumber":205,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":206,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":207,"author":{"gitId":"bakano98"},"content":"        // Do not need to handle the fact that the given status might not be valid.","lastModifiedDate":"2022-03-19"},{"lineNumber":208,"author":{"gitId":"bakano98"},"content":"        // This is handled by executeCommand","lastModifiedDate":"2022-03-19"},{"lineNumber":209,"author":{"gitId":"bakano98"},"content":"        commandText.append(\" s/\").append(status);","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":211,"author":{"gitId":"bakano98"},"content":"            executeCommand(commandText.toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"bakano98"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-19"},{"lineNumber":213,"author":{"gitId":"bakano98"},"content":"            return;","lastModifiedDate":"2022-03-19"},{"lineNumber":214,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":215,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":216,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":217,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":218,"author":{"gitId":"bakano98"},"content":"     * Adds the {@code module} for the newly created {@code Person} object.","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":220,"author":{"gitId":"bakano98"},"content":"    private void addModulesForNewPerson() {","lastModifiedDate":"2022-03-19"},{"lineNumber":221,"author":{"gitId":"bakano98"},"content":"        int lastIndex \u003d getAbLastIndex();","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"bakano98"},"content":"        StringBuilder commandText \u003d new StringBuilder(\"addmodule \").append(lastIndex);","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"bakano98"},"content":"        String[] modules \u003d modulesField.getText().split(\" \");","lastModifiedDate":"2022-03-19"},{"lineNumber":224,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":225,"author":{"gitId":"bakano98"},"content":"        if (!modules[0].equals(\"\")) {","lastModifiedDate":"2022-03-19"},{"lineNumber":226,"author":{"gitId":"bakano98"},"content":"            String modsToAdd \u003d \"\";","lastModifiedDate":"2022-03-19"},{"lineNumber":227,"author":{"gitId":"bakano98"},"content":"            for (int i \u003d 0; i \u003c modules.length; i++) {","lastModifiedDate":"2022-03-19"},{"lineNumber":228,"author":{"gitId":"bakano98"},"content":"                modsToAdd +\u003d \"m/\" + modules[i];","lastModifiedDate":"2022-03-19"},{"lineNumber":229,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":230,"author":{"gitId":"bakano98"},"content":"                // Append whitespace if it\u0027s not the last module to add.","lastModifiedDate":"2022-03-19"},{"lineNumber":231,"author":{"gitId":"bakano98"},"content":"                if (i !\u003d modules.length - 1) {","lastModifiedDate":"2022-03-19"},{"lineNumber":232,"author":{"gitId":"bakano98"},"content":"                    modsToAdd +\u003d \" \";","lastModifiedDate":"2022-03-19"},{"lineNumber":233,"author":{"gitId":"bakano98"},"content":"                }","lastModifiedDate":"2022-03-19"},{"lineNumber":234,"author":{"gitId":"bakano98"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":235,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":236,"author":{"gitId":"bakano98"},"content":"            // Then, execute the addmodule command.","lastModifiedDate":"2022-03-19"},{"lineNumber":237,"author":{"gitId":"bakano98"},"content":"            commandText.append(\" \").append(modsToAdd);","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"bakano98"},"content":"            try {","lastModifiedDate":"2022-03-19"},{"lineNumber":239,"author":{"gitId":"bakano98"},"content":"                executeCommand(commandText.toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"bakano98"},"content":"            } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":241,"author":{"gitId":"bakano98"},"content":"                return;","lastModifiedDate":"2022-03-19"},{"lineNumber":242,"author":{"gitId":"bakano98"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":243,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":244,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":245,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":246,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"bakano98"},"content":"     * Adds a {@code comment} to the {@code Person} object.","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"bakano98"},"content":"    private void addCommentForNewPerson() {","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"bakano98"},"content":"        int lastIndex \u003d getAbLastIndex();","lastModifiedDate":"2022-03-24"},{"lineNumber":251,"author":{"gitId":"bakano98"},"content":"        StringBuilder commandText \u003d new StringBuilder(\"comment \").append(lastIndex);","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"bakano98"},"content":"        String comment \u003d commentField.getText();","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"bakano98"},"content":"        // If comment is empty, simply do nothing.","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"bakano98"},"content":"        if (comment.equals(\"\")) {","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"bakano98"},"content":"            return;","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"bakano98"},"content":"        // Otherwise, execute the comment command.","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"bakano98"},"content":"        commandText.append(\" c/\").append(comment);","lastModifiedDate":"2022-03-24"},{"lineNumber":261,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"bakano98"},"content":"            executeCommand(commandText.toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"bakano98"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":264,"author":{"gitId":"bakano98"},"content":"            return;","lastModifiedDate":"2022-03-24"},{"lineNumber":265,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":266,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":268,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":269,"author":{"gitId":"bakano98"},"content":"     * Checks if the Status field provided by the user is valid or not.","lastModifiedDate":"2022-03-19"},{"lineNumber":270,"author":{"gitId":"bakano98"},"content":"     * A valid Status is either empty, \"blacklist\", or \"favourite\"","lastModifiedDate":"2022-03-19"},{"lineNumber":271,"author":{"gitId":"bakano98"},"content":"     * @return true if it is valid","lastModifiedDate":"2022-03-19"},{"lineNumber":272,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":273,"author":{"gitId":"bakano98"},"content":"    private boolean isValidStatus() {","lastModifiedDate":"2022-03-19"},{"lineNumber":274,"author":{"gitId":"bakano98"},"content":"        return Status.isValidStatus(statField.getText());","lastModifiedDate":"2022-03-19"},{"lineNumber":275,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":276,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":277,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":278,"author":{"gitId":"bakano98"},"content":"     * Checks if the given modules are of the correct format","lastModifiedDate":"2022-03-19"},{"lineNumber":279,"author":{"gitId":"bakano98"},"content":"     * @return true if all modules are valid","lastModifiedDate":"2022-03-19"},{"lineNumber":280,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":281,"author":{"gitId":"bakano98"},"content":"    private boolean isValidModule() {","lastModifiedDate":"2022-03-19"},{"lineNumber":282,"author":{"gitId":"bakano98"},"content":"        String[] modules \u003d modulesField.getText().split(\" \");","lastModifiedDate":"2022-03-19"},{"lineNumber":283,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":284,"author":{"gitId":"bakano98"},"content":"        if (modules.length \u003d\u003d 1 \u0026\u0026 modules[0].equals(\"\")) {","lastModifiedDate":"2022-03-19"},{"lineNumber":285,"author":{"gitId":"bakano98"},"content":"            return true;","lastModifiedDate":"2022-03-19"},{"lineNumber":286,"author":{"gitId":"bakano98"},"content":"        } else {","lastModifiedDate":"2022-03-19"},{"lineNumber":287,"author":{"gitId":"bakano98"},"content":"            for (String module : modules) {","lastModifiedDate":"2022-03-19"},{"lineNumber":288,"author":{"gitId":"bakano98"},"content":"                if (!Module.isValidModuleName(module)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":289,"author":{"gitId":"bakano98"},"content":"                    return false;","lastModifiedDate":"2022-03-19"},{"lineNumber":290,"author":{"gitId":"bakano98"},"content":"                }","lastModifiedDate":"2022-03-19"},{"lineNumber":291,"author":{"gitId":"bakano98"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":292,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":293,"author":{"gitId":"bakano98"},"content":"        return true;","lastModifiedDate":"2022-03-19"},{"lineNumber":294,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":295,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":296,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":297,"author":{"gitId":"bakano98"},"content":"     * Checks all the fields to make sure none of it is empty.","lastModifiedDate":"2022-03-06"},{"lineNumber":298,"author":{"gitId":"bakano98"},"content":"     * @return true if any of the field is empty","lastModifiedDate":"2022-03-06"},{"lineNumber":299,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":300,"author":{"gitId":"bakano98"},"content":"    private boolean isAnyCompulsoryFieldEmpty() {","lastModifiedDate":"2022-03-19"},{"lineNumber":301,"author":{"gitId":"bakano98"},"content":"        if (nameField.getText().equals(\"\") || phoneField.getText().equals(\"\")","lastModifiedDate":"2022-03-06"},{"lineNumber":302,"author":{"gitId":"bakano98"},"content":"                || addressField.getText().equals(\"\") || emailField.getText().equals(\"\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":303,"author":{"gitId":"bakano98"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":304,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":305,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":306,"author":{"gitId":"bakano98"},"content":"        return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":307,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":308,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":309,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":310,"author":{"gitId":"bakano98"},"content":"     * Handles submission of the fields inputted by the user through AddWindow\u0027s Ui.","lastModifiedDate":"2022-03-20"},{"lineNumber":311,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":312,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":313,"author":{"gitId":"bakano98"},"content":"    private void handleSubmit() {","lastModifiedDate":"2022-03-20"},{"lineNumber":314,"author":{"gitId":"bakano98"},"content":"        String name \u003d \"n/\" + nameField.getText();","lastModifiedDate":"2022-03-20"},{"lineNumber":315,"author":{"gitId":"bakano98"},"content":"        String phone \u003d \"p/\" + phoneField.getText();","lastModifiedDate":"2022-03-20"},{"lineNumber":316,"author":{"gitId":"bakano98"},"content":"        String address \u003d \"a/\" + addressField.getText();","lastModifiedDate":"2022-03-20"},{"lineNumber":317,"author":{"gitId":"bakano98"},"content":"        String email \u003d \"e/\" + emailField.getText();","lastModifiedDate":"2022-03-20"},{"lineNumber":318,"author":{"gitId":"bakano98"},"content":"        StringBuilder userInput \u003d new StringBuilder();","lastModifiedDate":"2022-03-20"},{"lineNumber":319,"author":{"gitId":"bakano98"},"content":"        String[] personFields \u003d {\"add\", name, phone, address, email};","lastModifiedDate":"2022-03-20"},{"lineNumber":320,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":321,"author":{"gitId":"bakano98"},"content":"        if (isAnyCompulsoryFieldEmpty()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":322,"author":{"gitId":"bakano98"},"content":"            errorLabel.setText(\"You must input all mandatory fields!\");","lastModifiedDate":"2022-03-20"},{"lineNumber":323,"author":{"gitId":"bakano98"},"content":"            return;","lastModifiedDate":"2022-03-20"},{"lineNumber":324,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":325,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":326,"author":{"gitId":"bakano98"},"content":"        // Craft the user input to be fed into executeCommand","lastModifiedDate":"2022-03-20"},{"lineNumber":327,"author":{"gitId":"bakano98"},"content":"        for (int i \u003d 0; i \u003c personFields.length; i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":328,"author":{"gitId":"bakano98"},"content":"            userInput.append(personFields[i]).append(\" \");","lastModifiedDate":"2022-03-20"},{"lineNumber":329,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":330,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":331,"author":{"gitId":"bakano98"},"content":"        // Ensure that modules and status are valid before attempting to add a Person.","lastModifiedDate":"2022-03-20"},{"lineNumber":332,"author":{"gitId":"bakano98"},"content":"        if (!isValidStatus()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":333,"author":{"gitId":"bakano98"},"content":"            errorLabel.setText(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":334,"author":{"gitId":"bakano98"},"content":"            return;","lastModifiedDate":"2022-03-20"},{"lineNumber":335,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":336,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":337,"author":{"gitId":"bakano98"},"content":"        if (!isValidModule()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":338,"author":{"gitId":"bakano98"},"content":"            // Cannot use Module.MESSAGE_CONSTRAINTS here as it would be too long to fit within AddWindow","lastModifiedDate":"2022-03-20"},{"lineNumber":339,"author":{"gitId":"bakano98"},"content":"            errorLabel.setText(\"Modules names should have 2-3 letters prefix\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":340,"author":{"gitId":"bakano98"},"content":"                    + \"followed by 4 digits and an optional letter\\n\");","lastModifiedDate":"2022-03-20"},{"lineNumber":341,"author":{"gitId":"bakano98"},"content":"            return;","lastModifiedDate":"2022-03-20"},{"lineNumber":342,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":343,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":344,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":345,"author":{"gitId":"bakano98"},"content":"            executeCommand(userInput.toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":346,"author":{"gitId":"bakano98"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":347,"author":{"gitId":"bakano98"},"content":"            errorLabel.setText(\"Error encountered\");","lastModifiedDate":"2022-03-20"},{"lineNumber":348,"author":{"gitId":"bakano98"},"content":"            return;","lastModifiedDate":"2022-03-20"},{"lineNumber":349,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":350,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":351,"author":{"gitId":"bakano98"},"content":"        // Since user command execution is successful, then we do the other stuff next.","lastModifiedDate":"2022-03-20"},{"lineNumber":352,"author":{"gitId":"bakano98"},"content":"        // Notice that whenever a new Person is added into AddressBook, it\u0027ll list out all Persons.","lastModifiedDate":"2022-03-20"},{"lineNumber":353,"author":{"gitId":"bakano98"},"content":"        // So we simply need to retrieve the last Person added...","lastModifiedDate":"2022-03-20"},{"lineNumber":354,"author":{"gitId":"bakano98"},"content":"        addCommentForNewPerson();","lastModifiedDate":"2022-03-24"},{"lineNumber":355,"author":{"gitId":"bakano98"},"content":"        addStatusForNewPerson();","lastModifiedDate":"2022-03-20"},{"lineNumber":356,"author":{"gitId":"bakano98"},"content":"        addModulesForNewPerson();","lastModifiedDate":"2022-03-20"},{"lineNumber":357,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":358,"author":{"gitId":"bakano98"},"content":"        // reset all fields and then hide the panel","lastModifiedDate":"2022-03-20"},{"lineNumber":359,"author":{"gitId":"bakano98"},"content":"        this.resetFields();","lastModifiedDate":"2022-03-20"},{"lineNumber":360,"author":{"gitId":"bakano98"},"content":"        this.hide();","lastModifiedDate":"2022-03-20"},{"lineNumber":361,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":362,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":363,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":364,"author":{"gitId":"bakano98"},"content":"     * Handles the case where the \"Cancel\" button is pressed.","lastModifiedDate":"2022-03-19"},{"lineNumber":365,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":366,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":367,"author":{"gitId":"bakano98"},"content":"    private void handleCancel() {","lastModifiedDate":"2022-03-06"},{"lineNumber":368,"author":{"gitId":"bakano98"},"content":"        this.resetFields();","lastModifiedDate":"2022-03-06"},{"lineNumber":369,"author":{"gitId":"bakano98"},"content":"        this.hide();","lastModifiedDate":"2022-03-06"},{"lineNumber":370,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":371,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":372,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":373,"author":{"gitId":"bakano98"},"content":"     * Handles the case where ENTER key is pressed on the last TextField","lastModifiedDate":"2022-03-19"},{"lineNumber":374,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":375,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":376,"author":{"gitId":"bakano98"},"content":"    private void handleEnter() {","lastModifiedDate":"2022-03-19"},{"lineNumber":377,"author":{"gitId":"bakano98"},"content":"        this.handleSubmit();","lastModifiedDate":"2022-03-20"},{"lineNumber":378,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":379,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":380,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":381,"author":{"gitId":"bakano98"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-03-06"},{"lineNumber":382,"author":{"gitId":"bakano98"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":383,"author":{"gitId":"bakano98"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2022-03-06"},{"lineNumber":384,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":385,"author":{"gitId":"bakano98"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":386,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":387,"author":{"gitId":"bakano98"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2022-03-06"},{"lineNumber":388,"author":{"gitId":"bakano98"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-06"},{"lineNumber":389,"author":{"gitId":"bakano98"},"content":"            MainWindow.resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-06"},{"lineNumber":390,"author":{"gitId":"bakano98"},"content":"            return commandResult;","lastModifiedDate":"2022-03-06"},{"lineNumber":391,"author":{"gitId":"bakano98"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":392,"author":{"gitId":"bakano98"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2022-03-06"},{"lineNumber":393,"author":{"gitId":"bakano98"},"content":"            MainWindow.resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2022-03-06"},{"lineNumber":394,"author":{"gitId":"bakano98"},"content":"            throw e;","lastModifiedDate":"2022-03-06"},{"lineNumber":395,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":396,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":397,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"bakano98":397}},{"path":"src/main/java/seedu/address/ui/EditWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":" * Controller for an Edit page","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"public class EditWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"    public static final String HELP_MESSAGE \u003d \"You can edit a person easily here.\"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"            + \"\\nIndex must be provided, and at least one other field.\";","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    public static final String INDEX_LABEL \u003d \"Index: \";","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"    public static final String NAME_LABEL \u003d \"Name: \";","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"    public static final String PHONE_LABEL \u003d \"Number: \";","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"    public static final String ADDRESS_LABEL \u003d \"Address: \";","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"    public static final String EMAIL_LABEL \u003d \"Email: \";","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EditWindow.class);","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"    private static final String FXML \u003d \"EditWindow.fxml\";","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    private Logic logic;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"    private Button submitButton;","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"    private Button cancelButton;","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"    private Label editMessageLabel;","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"    private Label indexLabel;","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"    private Label nameLabel;","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"    private Label phoneLabel;","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"    private Label addressLabel;","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"    private Label emailLabel;","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"    private Label errorLabel;","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"    private TextField indexField;","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"    private TextField nameField;","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"    private TextField phoneField;","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"    private TextField addressField;","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"    private TextField emailField;","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"     * Creates a new EditWindow.","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"     * @param root Stage to use as the root of the EditWindow.","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"    public EditWindow(Stage root) {","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"        super(FXML, root);","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"     * Creates a new EditWindow.","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"    public EditWindow(Logic logic) {","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"        this(new Stage());","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"bakano98"},"content":"        editMessageLabel.setText(HELP_MESSAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"        indexLabel.setText(INDEX_LABEL);","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"        nameLabel.setText(NAME_LABEL);","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"bakano98"},"content":"        phoneLabel.setText(PHONE_LABEL);","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"bakano98"},"content":"        addressLabel.setText(ADDRESS_LABEL);","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"bakano98"},"content":"        emailLabel.setText(EMAIL_LABEL);","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"bakano98"},"content":"        errorLabel.setText(\"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"bakano98"},"content":"     * Shows the add window.","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"bakano98"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"bakano98"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"bakano98"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"bakano98"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"bakano98"},"content":"    public void show() {","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"bakano98"},"content":"        logger.fine(\"Showing edit window of the application.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"bakano98"},"content":"        getRoot().show();","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"bakano98"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"bakano98"},"content":"     * Resets the fields when handleCancel() is triggered, or when submission is successful","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"bakano98"},"content":"    public void resetFields() {","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"bakano98"},"content":"        indexField.setText(\"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"bakano98"},"content":"        nameField.setText(\"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"bakano98"},"content":"        phoneField.setText(\"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"bakano98"},"content":"        addressField.setText(\"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"bakano98"},"content":"        emailField.setText(\"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"bakano98"},"content":"        errorLabel.setText(\"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"bakano98"},"content":"        // Set the focus on indexField so that it will be back on indexField after closing/submitting.","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"bakano98"},"content":"        indexField.requestFocus();","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"bakano98"},"content":"     * Returns true if the edit window is currently being shown.","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"bakano98"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"bakano98"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"bakano98"},"content":"     * Hides the add window.","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"bakano98"},"content":"    public void hide() {","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"bakano98"},"content":"        getRoot().hide();","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"bakano98"},"content":"     * Focuses on the edit window.","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"bakano98"},"content":"    public void focus() {","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"bakano98"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"bakano98"},"content":"     * Handles submission of the fields inputted by the user through EditWindow\u0027s Ui.","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"bakano98"},"content":"    private void handleSubmit() {","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"bakano98"},"content":"        String index \u003d indexField.getText();","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"bakano98"},"content":"        String name \u003d nameField.getText();","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"bakano98"},"content":"        String phone \u003d phoneField.getText();","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"bakano98"},"content":"        String address \u003d addressField.getText();","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"bakano98"},"content":"        String email \u003d emailField.getText();","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"bakano98"},"content":"        StringBuilder userInput \u003d new StringBuilder();","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"bakano98"},"content":"        // First 2 are empty because they are for","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"bakano98"},"content":"        // 0: command word","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"bakano98"},"content":"        // 1: index, which has no prefix.","lastModifiedDate":"2022-03-20"},{"lineNumber":177,"author":{"gitId":"bakano98"},"content":"        String[] prefixes \u003d {\"\", \"\", \"n/\", \"p/\", \"a/\", \"e/\"};","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"bakano98"},"content":"        String[] personFields \u003d {\"edit\", index, name, phone, address, email};","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"bakano98"},"content":"        if (index.equals(\"\")) {","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"bakano98"},"content":"            errorLabel.setText(\"Index cannot be empty\");","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"bakano98"},"content":"            return;","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"bakano98"},"content":"        if (name.equals(\"\") \u0026\u0026 phone.equals(\"\") \u0026\u0026 address.equals(\"\") \u0026\u0026 email.equals(\"\")) {","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"bakano98"},"content":"            errorLabel.setText(\"At least one of the optional fields must be filled\");","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"bakano98"},"content":"            return;","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"bakano98"},"content":"        // Craft the user input to be fed into executeCommand","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"bakano98"},"content":"        for (int i \u003d 0; i \u003c personFields.length; i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"bakano98"},"content":"            if (!personFields[i].equals(\"\")) {","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"bakano98"},"content":"                userInput.append(prefixes[i]).append(personFields[i]).append(\" \");","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"bakano98"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":195,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":196,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":198,"author":{"gitId":"bakano98"},"content":"            executeCommand(userInput.toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":199,"author":{"gitId":"bakano98"},"content":"            // reset all fields and then hide the panel","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"bakano98"},"content":"            this.resetFields();","lastModifiedDate":"2022-03-20"},{"lineNumber":201,"author":{"gitId":"bakano98"},"content":"            this.hide();","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"bakano98"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":203,"author":{"gitId":"bakano98"},"content":"            errorLabel.setText(\"Error encountered\");","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":205,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":206,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":207,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":208,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":209,"author":{"gitId":"bakano98"},"content":"     * Handles resetting of fields and closing EditWindow.","lastModifiedDate":"2022-03-20"},{"lineNumber":210,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":211,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":212,"author":{"gitId":"bakano98"},"content":"    private void handleCancel() {","lastModifiedDate":"2022-03-20"},{"lineNumber":213,"author":{"gitId":"bakano98"},"content":"        this.resetFields();","lastModifiedDate":"2022-03-20"},{"lineNumber":214,"author":{"gitId":"bakano98"},"content":"        this.hide();","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":217,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"bakano98"},"content":"     * Handles the case where ENTER key is pressed on a TextField","lastModifiedDate":"2022-03-26"},{"lineNumber":219,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"bakano98"},"content":"    private void handleEnter() {","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"bakano98"},"content":"        this.handleSubmit();","lastModifiedDate":"2022-03-26"},{"lineNumber":223,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":224,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":225,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":226,"author":{"gitId":"bakano98"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-03-20"},{"lineNumber":227,"author":{"gitId":"bakano98"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":228,"author":{"gitId":"bakano98"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-03-20"},{"lineNumber":229,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"bakano98"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":231,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":232,"author":{"gitId":"bakano98"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2022-03-20"},{"lineNumber":233,"author":{"gitId":"bakano98"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-20"},{"lineNumber":234,"author":{"gitId":"bakano98"},"content":"            MainWindow.resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-20"},{"lineNumber":235,"author":{"gitId":"bakano98"},"content":"            return commandResult;","lastModifiedDate":"2022-03-20"},{"lineNumber":236,"author":{"gitId":"bakano98"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":237,"author":{"gitId":"bakano98"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2022-03-20"},{"lineNumber":238,"author":{"gitId":"bakano98"},"content":"            MainWindow.resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2022-03-20"},{"lineNumber":239,"author":{"gitId":"bakano98"},"content":"            throw e;","lastModifiedDate":"2022-03-20"},{"lineNumber":240,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":241,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":242,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"bakano98":242}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-t13-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bakano98":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"fantablack"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"    // This is also a Ui part in MainWindow.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    protected static ResultDisplay resultDisplay;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"    private AddWindow addWindow;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"    private EditWindow editWindow;","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"    private StatusBarFooter statusBarFooter;","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"    private MenuItem switchMenuItem;","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"    private MenuItem addMenuItem;","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"    private MenuItem editMenuItem;","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"        // Pass the logic into AddWindow so we can use it to execute commands as well","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"        addWindow \u003d new AddWindow(logic);","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"        editWindow \u003d new EditWindow(logic);","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"        setAccelerator(switchMenuItem, KeyCombination.valueOf(\"F10\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"bakano98"},"content":"        statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"bakano98"},"content":"     * Opens the add window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"bakano98"},"content":"    public void handleAdd() {","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"bakano98"},"content":"        if (!addWindow.isShowing()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"bakano98"},"content":"            addWindow.show();","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"bakano98"},"content":"        } else {","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"bakano98"},"content":"            addWindow.focus();","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":186,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"bakano98"},"content":"     * Opens the edit window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"bakano98"},"content":"    public void handleEdit() {","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"bakano98"},"content":"        if (!editWindow.isShowing()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"bakano98"},"content":"            editWindow.show();","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"bakano98"},"content":"        } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"bakano98"},"content":"            editWindow.focus();","lastModifiedDate":"2022-03-20"},{"lineNumber":195,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":196,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"bakano98"},"content":"        addWindow.hide();","lastModifiedDate":"2022-03-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":215,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"fantablack"},"content":"     * GUI alternative to activate a SwitchCommand.","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"fantablack"},"content":"     * TODO: Bind F10 to this function","lastModifiedDate":"2022-03-30"},{"lineNumber":218,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"fantablack"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"fantablack"},"content":"    private void handleSwitchMenu() throws CommandException, ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"fantablack"},"content":"        logger.info(\"Switch Menu Item fired!!!\");","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"fantablack"},"content":"        executeCommand(\"switch\");","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"fantablack"},"content":"     * Function to perform operations involving logic object","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"lawwm"},"content":"    private void handleSwitch() throws CommandException, ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"fantablack"},"content":"        logger.info(\"Handle Switch fired!\");","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"lawwm"},"content":"        logic.switchAddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":230,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"bakano98"},"content":"        Path defaultPath \u003d logic.getAddressBookFilePath();","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"bakano98"},"content":"        Path archivePath \u003d logic.getArchivedAddressBookFilePath();","lastModifiedDate":"2022-03-31"},{"lineNumber":233,"author":{"gitId":"fantablack"},"content":"        resultDisplay.setFeedbackToUser(\"Switched to: \" + statusBarFooter.swapPaths(defaultPath, archivePath));","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":235,"author":{"gitId":"fantablack"},"content":"        boolean isArchivedNext \u003d statusBarFooter.getSaveLocationStatusText().equals(Paths.get(\".\")","lastModifiedDate":"2022-03-31"},{"lineNumber":236,"author":{"gitId":"fantablack"},"content":"                .resolve(defaultPath).toString());","lastModifiedDate":"2022-03-31"},{"lineNumber":237,"author":{"gitId":"fantablack"},"content":"        boolean isDefaultNext \u003d statusBarFooter.getSaveLocationStatusText().equals(Paths.get(\".\")","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"fantablack"},"content":"                .resolve(archivePath).toString());","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"fantablack"},"content":"        if (isArchivedNext) {","lastModifiedDate":"2022-03-31"},{"lineNumber":240,"author":{"gitId":"fantablack"},"content":"            switchMenuItem.setText(\"Switch to Archived\");","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"fantablack"},"content":"        } else if (isDefaultNext) {","lastModifiedDate":"2022-03-31"},{"lineNumber":242,"author":{"gitId":"fantablack"},"content":"            switchMenuItem.setText(\"Switch to Default\");","lastModifiedDate":"2022-03-31"},{"lineNumber":243,"author":{"gitId":"fantablack"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"fantablack"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"fantablack"},"content":"     * Function to archive the selected person\u0027s information","lastModifiedDate":"2022-03-31"},{"lineNumber":248,"author":{"gitId":"fantablack"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":249,"author":{"gitId":"fantablack"},"content":"    private void handleArchive(CommandResult result) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":250,"author":{"gitId":"fantablack"},"content":"        String oneBasedTarget \u003d result.getFeedbackToUser();","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"fantablack"},"content":"        logic.archivePersonByIndex(oneBasedTarget);","lastModifiedDate":"2022-03-31"},{"lineNumber":252,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":253,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":254,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":255,"author":{"gitId":"lawwm"},"content":"     * Copy to the clipboard the selected person\u0027s information.","lastModifiedDate":"2022-03-20"},{"lineNumber":256,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":257,"author":{"gitId":"lawwm"},"content":"    private void handleCopy(CommandResult result) {","lastModifiedDate":"2022-03-19"},{"lineNumber":258,"author":{"gitId":"lawwm"},"content":"        String copiedText \u003d result.getFeedbackToUser();","lastModifiedDate":"2022-03-20"},{"lineNumber":259,"author":{"gitId":"lawwm"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2022-03-20"},{"lineNumber":260,"author":{"gitId":"lawwm"},"content":"        final ClipboardContent content \u003d new ClipboardContent();","lastModifiedDate":"2022-03-20"},{"lineNumber":261,"author":{"gitId":"lawwm"},"content":"        content.putString(copiedText);","lastModifiedDate":"2022-03-20"},{"lineNumber":262,"author":{"gitId":"lawwm"},"content":"        clipboard.setContent(content);","lastModifiedDate":"2022-03-20"},{"lineNumber":263,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":264,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":279,"author":{"gitId":"lawwm"},"content":"            if (commandResult.isCopyCommand()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":280,"author":{"gitId":"lawwm"},"content":"                resultDisplay.setFeedbackToUser(\"Successfully copied to clipboard!\\n\");","lastModifiedDate":"2022-03-20"},{"lineNumber":281,"author":{"gitId":"lawwm"},"content":"                handleCopy(commandResult);","lastModifiedDate":"2022-03-20"},{"lineNumber":282,"author":{"gitId":"fantablack"},"content":"            } else if (commandResult.isArchiveCommand()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":283,"author":{"gitId":"fantablack"},"content":"                resultDisplay.setFeedbackToUser(String.format(\"Archived Contact #%s!\",","lastModifiedDate":"2022-03-31"},{"lineNumber":284,"author":{"gitId":"fantablack"},"content":"                                                commandResult.getFeedbackToUser()));","lastModifiedDate":"2022-03-31"},{"lineNumber":285,"author":{"gitId":"fantablack"},"content":"                handleArchive(commandResult);","lastModifiedDate":"2022-03-31"},{"lineNumber":286,"author":{"gitId":"lawwm"},"content":"            } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":288,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":294,"author":{"gitId":"bakano98"},"content":"            if (commandResult.isShowAdd()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":295,"author":{"gitId":"bakano98"},"content":"                handleAdd();","lastModifiedDate":"2022-03-16"},{"lineNumber":296,"author":{"gitId":"bakano98"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":297,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":298,"author":{"gitId":"bakano98"},"content":"            if (commandResult.isShowEdit()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":299,"author":{"gitId":"bakano98"},"content":"                handleEdit();","lastModifiedDate":"2022-03-20"},{"lineNumber":300,"author":{"gitId":"bakano98"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":301,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":302,"author":{"gitId":"fantablack"},"content":"            if (commandResult.isSwitchCommand()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":303,"author":{"gitId":"fantablack"},"content":"                handleSwitch();","lastModifiedDate":"2022-03-30"},{"lineNumber":304,"author":{"gitId":"fantablack"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":305,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":306,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bakano98":58,"lawwm":22,"-":195,"fantablack":43}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    public final Person person;","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"    // Credits to flaticon.com for the below two images","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"    private final Image favouriteImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/favourite.png\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"    private final Image blacklistImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/blacklist.png\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    private final Image placeholderImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/placeholder.png\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Btaykb"},"content":"    private FlowPane modules;","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"    private ImageView statusImage;","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"Btaykb"},"content":"    @FXML","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"Btaykb"},"content":"    private Label comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"Btaykb"},"content":"        comment.setText(person.getComment().value);","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"        // Get the image to display","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"        Image imageToDisplay \u003d getImageToDisplay(person.getStatus().value);","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"        // Then set the image","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"        statusImage.setImage(imageToDisplay);","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"Btaykb"},"content":"        person.getModules().stream()","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"Btaykb"},"content":"                .sorted(Comparator.comparing(module -\u003e module.moduleName))","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"Btaykb"},"content":"                .forEach(module -\u003e modules.getChildren().add(new Label(module.moduleName)));","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"    private Image getImageToDisplay(String statusText) {","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"        switch (statusText) {","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"        case \"blacklist\":","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"            return blacklistImage;","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"        case \"favourite\":","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"            return favouriteImage;","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"        default:","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"            return placeholderImage;","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bakano98":24,"Btaykb":7,"-":73}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"fantablack"},"content":"    public String getSaveLocationStatusText() {","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"        return saveLocationStatus.getText();","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"     * Changes the text for {@code StatusBarFooter} with to the correct {@code Path}.","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"     * @param archivePath the path from which our archived data is at","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"     * @param defaultPath the default path of our data","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"fantablack"},"content":"    public String swapPaths(Path archivePath, Path defaultPath) {","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"        String currentPathString \u003d saveLocationStatus.getText();","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"        String archivePathString \u003d Paths.get(\".\").resolve(archivePath).toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"        String defaultPathString \u003d Paths.get(\".\").resolve(defaultPath).toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        if (currentPathString.equals(archivePathString)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"            saveLocationStatus.setText(defaultPathString);","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"fantablack"},"content":"            return defaultPathString;","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"        } else if (currentPathString.equals(defaultPathString)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"            saveLocationStatus.setText(archivePathString);","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"fantablack"},"content":"            return archivePathString;","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"fantablack"},"content":"        return \"\";","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bakano98":16,"-":28,"fantablack":9}},{"path":"src/main/resources/view/AddWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Add Person\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    \u003cicons\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"        \u003cImage url\u003d\"@/images/add-contact.png\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"                \u003cURL value\u003d\"@AdditionalWindows.css\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"            \u003cHBox fx:id\u003d\"addContainer\" alignment\u003d\"BOTTOM_RIGHT\" prefHeight\u003d\"500.0\" prefWidth\u003d\"546.0\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"               \u003cVBox prefHeight\u003d\"404.0\" prefWidth\u003d\"524.0\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"                     \u003cLabel fx:id\u003d\"addMessageLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefWidth\u003d\"540.0\" text\u003d\"Label\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"                           \u003cFont name\u003d\"System Bold\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"                           \u003cInsets bottom\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"nameLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"nameField\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"John Doe\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"phoneLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"phoneField\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"91234567\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"addressLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"addressField\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"123, Woodlands Ave 16, #02-123\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"emailLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"emailField\" onAction\u003d\"#handleEnter\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"johndoe@example.com\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox layoutX\u003d\"10.0\" layoutY\u003d\"215.0\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"commentLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"commentField\" onAction\u003d\"#handleEnter\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"[OPTIONAL] Comment\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"statLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"statField\" onAction\u003d\"#handleEnter\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"[OPTIONAL] favourite\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"modulesLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"modulesField\" onAction\u003d\"#handleEnter\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"[OPTIONAL] CS3230 CS1231S\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"                     \u003cLabel fx:id\u003d\"errorLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"57.0\" prefWidth\u003d\"524.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"                           \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"bakano98"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"bakano98"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"bakano98"},"content":"                     \u003cRegion prefHeight\u003d\"57.0\" prefWidth\u003d\"524.0\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"bakano98"},"content":"                                \u003cButton fx:id\u003d\"cancelButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCancel\" prefHeight\u003d\"50.0\" prefWidth\u003d\"102.0\" text\u003d\"Cancel\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"bakano98"},"content":"                           \u003cRegion prefHeight\u003d\"7.0\" prefWidth\u003d\"325.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"bakano98"},"content":"                           \u003cButton fx:id\u003d\"submitButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"TOP\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSubmit\" prefHeight\u003d\"50.0\" prefWidth\u003d\"104.0\" text\u003d\"Submit\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"bakano98"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"bakano98"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"bakano98"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"bakano98"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"bakano98"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"bakano98"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"bakano98"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"bakano98"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"bakano98"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"bakano98"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"bakano98"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"bakano98"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"bakano98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"bakano98":133}},{"path":"src/main/resources/view/AdditionalWindows.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"#addContainer {","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #7796CB;","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"#editContainer {","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #7796CB;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":".label {","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#A3BCF9, 20%);","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"#editMessageLabel {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #7796CB;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"#addMessageLabel {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #7796CB;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"#errorLabel {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #7796CB;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":".text-field {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":".button {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#A3BCF9, 20%);","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"bakano98":42}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"lawwm":1,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"    background-color: #5B84B1FF; /* Used in the default.html file */","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"    -fx-base: #00539CFF;","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"    -fx-control-inner-background: #00539CFF;","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #00539CFF;","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#5B84B1FF, 20%);","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#5B84B1FF, 20%);","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#5B84B1FF, 20%);","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#5B84B1FF, 50%);","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"bakano98"},"content":"     -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"bakano98"},"content":"     -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"bakano98"},"content":"     -fx-border-color: derive(#00539CFF, 10%);","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"bakano98"},"content":"    -fx-border-color: derive(#00539CFF, 230%);","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"bakano98"},"content":"    -fx-border-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 50%);","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #00539CFF;","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"bakano98"},"content":"  -fx-text-fill: #00539CFF;","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #00539CFF;","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #00539CFF;","lastModifiedDate":"2022-03-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #00539CFF;","lastModifiedDate":"2022-03-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 230%);","lastModifiedDate":"2022-03-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#00539CFF, 50%);","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: transparent, derive(#5B84B1FF, 20%), transparent, derive(#5B84B1FF, 20%);","lastModifiedDate":"2022-03-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"Btaykb"},"content":"#modules {","lastModifiedDate":"2022-03-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"Btaykb"},"content":"#modules .label {","lastModifiedDate":"2022-03-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"bakano98":33,"Btaykb":2,"-":319}},{"path":"src/main/resources/view/EditWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Edit Person\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    \u003cicons\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"        \u003cImage url\u003d\"@/images/edit-contact.png\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"                \u003cURL value\u003d\"@AdditionalWindows.css\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"            \u003cHBox fx:id\u003d\"addContainer\" alignment\u003d\"BOTTOM_RIGHT\" prefHeight\u003d\"500.0\" prefWidth\u003d\"546.0\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"               \u003cVBox prefHeight\u003d\"366.0\" prefWidth\u003d\"524.0\"\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"                     \u003cLabel fx:id\u003d\"editMessageLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefWidth\u003d\"540.0\" text\u003d\"Label\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"                           \u003cFont name\u003d\"System Bold\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"                           \u003cInsets /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"                           \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"indexLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"indexField\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"INDEX (e.g. 1)\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"                              \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"                                 \u003cInsets /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"                              \u003c/opaqueInsets\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"nameLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"nameField\" onAction\u003d\"#handleEnter\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"[OPTIONAL] John Doe\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"phoneLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"phoneField\" onAction\u003d\"#handleEnter\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"[OPTIONAL] 91234567\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"addressLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"addressField\" onAction\u003d\"#handleEnter\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"[OPTIONAL] 123, Woodlands Ave 16, #02-123\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"emailLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"emailField\" onAction\u003d\"#handleEnter\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"[OPTIONAL] johndoe@example.com\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"                     \u003cLabel fx:id\u003d\"errorLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"57.0\" prefWidth\u003d\"524.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"bakano98"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"bakano98"},"content":"                           \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"bakano98"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"bakano98"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"bakano98"},"content":"                     \u003cRegion prefHeight\u003d\"127.0\" prefWidth\u003d\"524.0\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"bakano98"},"content":"                                \u003cButton fx:id\u003d\"cancelButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCancel\" prefHeight\u003d\"50.0\" prefWidth\u003d\"102.0\" text\u003d\"Cancel\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"bakano98"},"content":"                           \u003cRegion prefHeight\u003d\"7.0\" prefWidth\u003d\"325.0\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"                           \u003cButton fx:id\u003d\"submitButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"TOP\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSubmit\" prefHeight\u003d\"50.0\" prefWidth\u003d\"104.0\" text\u003d\"Submit\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"bakano98"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"bakano98"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"bakano98"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"bakano98"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"bakano98"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"bakano98"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"bakano98"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"bakano98"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"bakano98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"bakano98":119}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"Btaykb"},"content":".module-selector {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Btaykb":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#A3BCF9, 20%);","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#A3BCF9, 40%);","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#A3BCF9, 20%);","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #7796CB;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bakano98":4,"-":15}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"         title\u003d\"Module Mate Finder\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"            \u003cMenuItem fx:id\u003d\"switchMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSwitchMenu\" text\u003d\"Switch to Archived\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"            \u003cMenuItem fx:id\u003d\"exitMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Add\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"            \u003cMenuItem fx:id\u003d\"addMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleAdd\" text\u003d\"Add\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Edit\"\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"            \u003cMenuItem fx:id\u003d\"editMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleEdit\" text\u003d\"Edit\"/\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"bakano98":8,"-":58,"fantablack":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"210.0\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"      \u003cFlowPane fx:id\u003d\"modules\" /\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"      \u003cImageView fx:id\u003d\"statusImage\" fitHeight\u003d\"85.0\" fitWidth\u003d\"74.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"   \u003cGridPane\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"     \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"       \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"400.0\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"     \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"     \u003crowConstraints\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"       \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"     \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"      \u003cLabel fx:id\u003d\"comment\" prefWidth\u003d\"400.0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$comment\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"      \u003c/children\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"   \u003c/GridPane\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bakano98":24,"Btaykb":1,"-":29}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"Btaykb"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withModules().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Btaykb":1,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"        public Path getArchivedAddressBookFilePath() {","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"lawwm"},"content":"        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"lawwm"},"content":"        public void sortPerson(SortCommand.PersonComparator comparator) {","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"lawwm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"bakano98":5,"lawwm":5,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/AddModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fantablack"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"fantablack"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"fantablack"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"fantablack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_PM1;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_SWE;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"fantablack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"fantablack"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"fantablack"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"fantablack"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"fantablack"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"fantablack"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"fantablack"},"content":"class AddModuleCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"fantablack"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"fantablack"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"    void execute_addModuleUnfilteredList_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"fantablack"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"fantablack"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withModules(VALID_MODULE_SWE, VALID_MODULE_PM1).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"        List\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"fantablack"},"content":"        modules.add(new Module(VALID_MODULE_PM1));","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"        AddModuleCommand addModuleCommand \u003d new AddModuleCommand(INDEX_FIRST_PERSON, modules);","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"        String expectedMessage \u003d String.format(AddModuleCommand.MESSAGE_SUCCESS, firstPerson.getName(), modules);","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"fantablack"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"fantablack"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"fantablack"},"content":"        assertCommandSuccess(addModuleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"fantablack"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"fantablack"},"content":"    public void equals() {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"fantablack"},"content":"        Person first \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"Btaykb"},"content":"        List\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e(first.getModules());","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"fantablack"},"content":"        AddModuleCommand addFirstCommand \u003d new AddModuleCommand(INDEX_FIRST_PERSON, modules);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"fantablack"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"fantablack"},"content":"        assertEquals(addFirstCommand, addFirstCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"fantablack"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"fantablack"},"content":"        AddModuleCommand deleteFirstCommandCopy \u003d new AddModuleCommand(INDEX_FIRST_PERSON, modules);","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"fantablack"},"content":"        assertEquals(addFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"fantablack"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"fantablack"},"content":"        assertNotEquals(1, addFirstCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"fantablack"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"fantablack"},"content":"        assertNotEquals(addFirstCommand, null);","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"fantablack"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"fantablack"},"content":"        Person second \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"Btaykb"},"content":"        List\u003cModule\u003e modulesCopy \u003d new ArrayList\u003c\u003e(second.getModules());","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"fantablack"},"content":"        AddModuleCommand addSecondCommand \u003d new AddModuleCommand(INDEX_SECOND_PERSON, modulesCopy);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"fantablack"},"content":"        assertNotEquals(addFirstCommand, addSecondCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"fantablack"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"Btaykb":8,"fantablack":62}},{"path":"src/test/java/seedu/address/logic/commands/ClearModulesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"class ClearModulesCommandTest {","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    public void execute_validIndexUnFilteredList_success() {","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"        Person personToClear \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand clearCommand \u003d new ClearModulesCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        String expectedMessage \u003d String.format(ClearModulesCommand.MESSAGE_SUCCESS, personToClear.getName());","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"        Person editedPerson \u003d new PersonBuilder(personToClear).withModules().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        expectedModel.setPerson(personToClear, editedPerson);","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"        assertCommandSuccess(clearCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand clearCommand \u003d new ClearModulesCommand(outOfBoundIndex);","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        assertCommandFailure(clearCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        // Filter the second person and delete first index","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand deleteCommand \u003d new ClearModulesCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        Person personToClear \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        String expectedMessage \u003d String.format(ClearModulesCommand.MESSAGE_SUCCESS, personToClear.getName());","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"Btaykb"},"content":"        Person editedPerson \u003d new PersonBuilder(personToClear).withModules().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"        expectedModel.setPerson(personToClear, editedPerson);","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"    public void equals() {","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand clearFirstCommand \u003d new ClearModulesCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand clearSecondCommand \u003d new ClearModulesCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"        assertTrue(clearFirstCommand.equals(clearFirstCommand));","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand clearFirstCommandCopy \u003d new ClearModulesCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"        assertTrue(clearFirstCommand.equals(clearFirstCommandCopy));","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"        assertFalse(clearFirstCommand.equals(1));","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"        assertFalse(clearFirstCommand.equals(null));","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"lawwm"},"content":"        assertFalse(clearFirstCommand.equals(clearSecondCommand));","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":86,"Btaykb":2}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"                false, false, false, false, false, false)));","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true,","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"fantablack"},"content":"                false, false, false, false, false, false)));","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"        // different showAdd value -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"fantablack"},"content":"                true, false, false, false, false, false)));","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"        // different showEdit value -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"fantablack"},"content":"                false, true, false, false, false, false)));","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"fantablack"},"content":"                false, false, true, false, false, false)));","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true,","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"fantablack"},"content":"                false, false, false, false, false, false).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"        // different showEdit value -\u003e returns different hashcode","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true,","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"fantablack"},"content":"                true, false, false, false, false, false).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"        // different showEdit value -\u003e returns different hashcode","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true,","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"fantablack"},"content":"                false, true, false, false, false, false).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"fantablack"},"content":"                false, false, true, false, false, false).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"bakano98":17,"-":49,"fantablack":9}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"    public static final String VALID_STATUS_AMY \u003d Person.FAVOURITE;","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"    public static final String VALID_STATUS_BOB \u003d Person.BLACKLIST;","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"Btaykb"},"content":"    public static final String VALID_MODULE \u003d \"CS2101\";","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"    public static final String VALID_MODULE_SWE \u003d \"CS2103T\";","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"fantablack"},"content":"    public static final String VALID_MODULE_PM1 \u003d \"CS1101S\";","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"Btaykb"},"content":"    public static final String VALID_COMMENT \u003d \"Good at programming\";","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"Btaykb"},"content":"    public static final String MODULE_DESC_CS2103T \u003d \" \" + PREFIX_MODULE + VALID_MODULE_SWE;","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"    public static final String MODULE_DESC_CS2101 \u003d \" \" + PREFIX_MODULE + VALID_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"Btaykb"},"content":"    public static final String COMMENT_DESC \u003d \" \" + PREFIX_COMMENT + VALID_COMMENT;","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"Btaykb"},"content":"    public static final String INVALID_MODULE_DESC \u003d \" \" + PREFIX_MODULE + \"hubby*\"; // \u0027*\u0027 not allowed in modules","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"Btaykb"},"content":"                .withModules(VALID_MODULE_SWE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"Btaykb"},"content":"                .withModules(VALID_MODULE, VALID_MODULE_SWE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bakano98":2,"Btaykb":11,"-":121,"fantablack":1}},{"path":"src/test/java/seedu/address/logic/commands/CommentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Btaykb"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Btaykb"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMENT;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"Btaykb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Btaykb"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"class CommentCommandTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"    public void execute_addCommentUnfilteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"Btaykb"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withComment(VALID_COMMENT).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON, new Comment(VALID_COMMENT));","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"Btaykb"},"content":"        String expectedMessage \u003d String.format(CommentCommand.MESSAGE_ADD_SUCCESS,","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"                firstPerson.getName(), VALID_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"        assertCommandSuccess(commentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"Btaykb"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"Btaykb"},"content":"    public void equals() {","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"        CommentCommand emptyCommentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"Btaykb"},"content":"        CommentCommand firstCommentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"Test\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"Btaykb"},"content":"        CommentCommand secondCommentCommand \u003d new CommentCommand(INDEX_SECOND_PERSON, new Comment(\"Test\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"        assertTrue(emptyCommentCommand.equals(emptyCommentCommand));","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"Btaykb"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"Btaykb"},"content":"        CommentCommand emptyCommentCommandCopy \u003d new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"Btaykb"},"content":"        assertTrue(emptyCommentCommandCopy.equals(emptyCommentCommand));","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"Btaykb"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"Btaykb"},"content":"        assertFalse(emptyCommentCommand.equals(\"Test\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"Btaykb"},"content":"        assertFalse(emptyCommentCommand.equals(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"Btaykb"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"Btaykb"},"content":"        assertFalse(firstCommentCommand.equals(secondCommentCommand));","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"Btaykb"},"content":"        // different comment -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"Btaykb"},"content":"        assertFalse(firstCommentCommand.equals(emptyCommentCommand));","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"Btaykb"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"Btaykb":64}},{"path":"src/test/java/seedu/address/logic/commands/CopyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.FormatPersonUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"class CopyCommandTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"    private List\u003cPrefix\u003e partialPrefixes \u003d Arrays.asList(PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"            PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"    private List\u003cPrefix\u003e allPrefixes \u003d Arrays.asList(PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"            PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_STATUS, PREFIX_MODULE, PREFIX_COMMENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"    private FormatPersonUtil fpJson \u003d new FormatPersonUtil(FormatPersonUtil.JSON_FORMAT);","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    public void execute_validCopyCommand_copyPerson() {","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"            CopyCommand copyCommand \u003d new CopyCommand(INDEX_FIRST_PERSON, partialPrefixes, fpJson);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"            Person personToCopy \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"            String expectedMessage \u003d fpJson.formatPerson(personToCopy, partialPrefixes);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"            ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"            assertCommandSuccess(copyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"            assert false;","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"    public void execute_validCopyCommand_copyAddressBook() {","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"            CopyCommand copyCommand \u003d new CopyCommand(allPrefixes, fpJson);","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"            List\u003cPerson\u003e personToCopy \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"            String expectedMessage \u003d fpJson.formatAddressBook(personToCopy, allPrefixes);","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"            ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"            assertCommandSuccess(copyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"            assert false;","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"    public void execute_invalidCopyCommand_outOfBound() {","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"            assertCommandFailure(new CopyCommand(Index.fromOneBased(1231), partialPrefixes, fpJson),","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"                    model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"            assert false;","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"        CopyCommand firstCopyCommand \u003d new CopyCommand(INDEX_FIRST_PERSON, partialPrefixes, fpJson);","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"        CopyCommand secondCopyCommand \u003d new CopyCommand(INDEX_SECOND_PERSON, allPrefixes, fpJson);","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"lawwm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"        assertTrue(firstCopyCommand.equals(firstCopyCommand));","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"lawwm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"lawwm"},"content":"        CopyCommand firstCopyCommandCopy \u003d new CopyCommand(INDEX_FIRST_PERSON, partialPrefixes, fpJson);","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"lawwm"},"content":"        assertTrue(firstCopyCommand.equals(firstCopyCommandCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"        assertFalse(firstCopyCommand.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"lawwm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"lawwm"},"content":"        assertFalse(firstCopyCommand.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"lawwm"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"lawwm"},"content":"        assertFalse(firstCopyCommand.equals(secondCopyCommand));","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"lawwm":103}},{"path":"src/test/java/seedu/address/logic/commands/DeleteModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"class DeleteModuleCommandTest {","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"        List\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e(personToDelete.getModules());","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        DeleteModuleCommand deleteCommand \u003d new DeleteModuleCommand(INDEX_FIRST_PERSON, modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        String expectedMessage \u003d String.format(DeleteModuleCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"                personToDelete.getName(), personToDelete.getModules());","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"Btaykb"},"content":"        Person editedPerson \u003d new PersonBuilder(personToDelete).withModules().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"        expectedModel.setPerson(personToDelete, editedPerson);","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"    public void execute_invalidIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"        List\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e(personToDelete.getModules());","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        DeleteModuleCommand deleteCommand \u003d new DeleteModuleCommand(Index.fromOneBased(1000), modules);","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        assertCommandFailure(deleteCommand, model, expectedMessage);","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"    public void execute_modulesToDeleteDoesNotExistListUnfilteredList_failure() {","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"        List\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e(personToDelete.getModules());","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"        List\u003cModule\u003e modulesPersonDoesNotHave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"        // Change first letter of modules, e.g. \"CS2106\" to \"DS2106\"","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        for (Module module : modules) {","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"            String moduleString \u003d module.toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"            String moduleName \u003d moduleString.substring(1, moduleString.length() - 1);","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"            String changedFirstLetterModuleName \u003d String.valueOf((char) (moduleName.charAt(0) + 1));","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"            String alteredModuleName \u003d changedFirstLetterModuleName + moduleName.substring(1);","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"            modulesPersonDoesNotHave.add(new Module(alteredModuleName));","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"        DeleteModuleCommand deleteCommand \u003d new DeleteModuleCommand(INDEX_FIRST_PERSON, modulesPersonDoesNotHave);","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"        String expectedMessage \u003d String.format(DeleteModuleCommand.MESSAGE_FAILURE, modulesPersonDoesNotHave);","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"        assertCommandFailure(deleteCommand, model, expectedMessage);","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"    public void equals() {","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"        Person first \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"Btaykb"},"content":"        List\u003cModule\u003e modules \u003d first.getModules().stream()","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"        DeleteModuleCommand deleteFirstCommand \u003d new DeleteModuleCommand(INDEX_FIRST_PERSON, modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-02-26"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2022-02-26"},{"lineNumber":89,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":90,"author":{"gitId":"lawwm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-02-26"},{"lineNumber":91,"author":{"gitId":"lawwm"},"content":"        DeleteModuleCommand deleteFirstCommandCopy \u003d new DeleteModuleCommand(INDEX_FIRST_PERSON, modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"lawwm"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2022-02-26"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":95,"author":{"gitId":"lawwm"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-02-26"},{"lineNumber":96,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"lawwm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":98,"author":{"gitId":"lawwm"},"content":"        assertNotEquals(deleteFirstCommand, null);","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":100,"author":{"gitId":"lawwm"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"lawwm"},"content":"        Person second \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"Btaykb"},"content":"        List\u003cModule\u003e modulesCopy \u003d second.getModules().stream()","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"lawwm"},"content":"        DeleteModuleCommand deleteSecondCommand \u003d new DeleteModuleCommand(INDEX_SECOND_PERSON, modulesCopy);","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"lawwm"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2022-02-26"},{"lineNumber":106,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":107,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":101,"Btaykb":6}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_SWE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"Btaykb"},"content":"        Person editedPerson \u003d new PersonBuilder().withModules(VALID_MODULE_SWE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"Btaykb"},"content":"                .build();","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"Btaykb"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Btaykb":4,"-":169}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"Btaykb"},"content":"        // different modules -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withModules(VALID_MODULE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Btaykb":3,"-":55}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false,","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"                false, false, true, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bakano98":1,"-":19,"fantablack":1}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import java.util.Optional;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.NameContainsModulePredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterCommand}.","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"public class FilterCommandTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    public void equals() {","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"        NameContainsModulePredicate firstPredicate \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"                new NameContainsModulePredicate(\"CS2103T\");","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"        NameContainsModulePredicate secondPredicate \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"                new NameContainsModulePredicate(\"CS2102\");","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"        FilterCommand findFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"        FilterCommand findSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"        FilterCommand findFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"Btaykb"},"content":"    public void execute_zeroModules_noPersonFound() {","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"Btaykb"},"content":"        NameContainsModulePredicate predicate \u003d preparePredicate(\"CS2102\");","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"Btaykb"},"content":"    public void execute_oneModule_onePersonFound() {","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"Btaykb"},"content":"        Optional\u003cModule\u003e tagToString \u003d BENSON.getModules().stream()","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"                .findFirst();","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"        String moduleName \u003d tagToString","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"                .map(x -\u003e x.toString().substring(1, x.toString().length() - 1))","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"                .orElse(\"CS2103T\");","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"        Integer numOfMatches \u003d (int) (TypicalPersons.getTypicalPersons().stream()","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"Btaykb"},"content":"                .filter(x -\u003e x.getModules().contains(tagToString.orElse(new Module(\"CS2103T\"))))","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"                .count());","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, numOfMatches);","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"Btaykb"},"content":"        NameContainsModulePredicate predicate \u003d preparePredicate(moduleName);","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"        assertTrue(model.getFilteredPersonList().contains(BENSON));","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":89,"author":{"gitId":"Btaykb"},"content":"     * Parses {@code userInput} into a {@code NameContainsModulePredicate}.","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":91,"author":{"gitId":"Btaykb"},"content":"    private NameContainsModulePredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"Btaykb"},"content":"        return new NameContainsModulePredicate(userInput);","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":67,"lawwm":12,"Btaykb":15}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true,","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"                false, false, false, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bakano98":1,"-":19,"fantablack":1}},{"path":"src/test/java/seedu/address/logic/commands/PersonComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.SortCommand.PersonComparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"class PersonComparatorTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    public void compare_valid_person() {","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"        Person alice \u003d TypicalPersons.ALICE;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"        Person bob \u003d TypicalPersons.BOB;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"        PersonComparator nameComparator \u003d new PersonComparator(Arrays.asList(PREFIX_NAME), Arrays.asList(\"desc\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"        PersonComparator emailComparator \u003d new PersonComparator(Arrays.asList(PREFIX_EMAIL), Arrays.asList(\"asc\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"        PersonComparator addressComparator \u003d new PersonComparator(Arrays.asList(PREFIX_ADDRESS), Arrays.asList(\"asc\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"        PersonComparator statusComparator \u003d new PersonComparator(Arrays.asList(PREFIX_STATUS), Arrays.asList(\"asc\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"        PersonComparator phoneComparator \u003d new PersonComparator(Arrays.asList(PREFIX_PHONE), Arrays.asList(\"asc\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        PersonComparator moduleComparator \u003d new PersonComparator(Arrays.asList(PREFIX_MODULE), Arrays.asList(\"asc\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        assertTrue(nameComparator.compare(alice, bob) \u003d\u003d -1 * alice.getName().compareTo(bob.getName()));","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"        assertTrue(emailComparator.compare(alice, bob) \u003d\u003d alice.getEmail().compareTo(bob.getEmail()));","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        assertTrue(addressComparator.compare(alice, bob) \u003d\u003d alice.getAddress().compareTo(bob.getAddress()));","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"        assertTrue(statusComparator.compare(alice, bob) \u003d\u003d alice.getStatus().compareTo(bob.getStatus()));","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        assertTrue(phoneComparator.compare(alice, bob) \u003d\u003d alice.getPhone().compareTo(bob.getPhone()));","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"        assertTrue(moduleComparator.compare(alice, bob)","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"                \u003d\u003d Integer.compare(alice.getModules().size(), bob.getModules().size()));","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        List\u003cString\u003e firstOrder \u003d Arrays.asList(\"asc\", \"asc\", \"desc\", \"desc\");","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        List\u003cString\u003e secondOrder \u003d Arrays.asList(\"asc\", \"asc\");","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        PersonComparator firstPersonComparator \u003d new PersonComparator(Arrays.asList(PREFIX_NAME, PREFIX_EMAIL,","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"                PREFIX_ADDRESS, PREFIX_STATUS), firstOrder);","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        PersonComparator secondPersonComparator \u003d new PersonComparator(Arrays.asList(PREFIX_NAME,","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"                PREFIX_STATUS), secondOrder);","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        assertTrue(firstPersonComparator.equals(firstPersonComparator));","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"        PersonComparator firstPersonComparatorCopy \u003d new PersonComparator(Arrays.asList(PREFIX_NAME, PREFIX_EMAIL,","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"                PREFIX_ADDRESS, PREFIX_STATUS), firstOrder);","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        assertTrue(firstPersonComparator.equals(firstPersonComparatorCopy));","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"        assertFalse(firstPersonComparator.equals(1));","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"        assertFalse(firstPersonComparator.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"        assertFalse(firstPersonComparator.equals(secondPersonComparator));","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"lawwm":70}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.SortCommandParser;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"class SortCommandTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    public void execute_validSortCommand_sortsList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"            List\u003cPrefix\u003e prefixes \u003d Arrays.asList(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"                    PREFIX_ADDRESS, PREFIX_STATUS, PREFIX_MODULE);","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"            List\u003cString\u003e orders \u003d Arrays.asList(\"asc\", \"asc\", \"desc\", \"asc\", \"asc\", \"desc\");","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"            String successMessage \u003d SortCommandParser.formatFields(prefixes, orders);","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"            SortCommand sortCommand \u003d new SortCommand(prefixes, orders, successMessage);","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"            String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, successMessage);","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"            ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"            expectedModel.sortPerson(new SortCommand.PersonComparator(prefixes, orders));","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"            assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"            assert false;","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        List\u003cPrefix\u003e firstPrefixList \u003d Arrays.asList(PREFIX_NAME, PREFIX_STATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        List\u003cPrefix\u003e secondPrefixList \u003d Arrays.asList(PREFIX_NAME, PREFIX_STATUS, PREFIX_EMAIL);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        List\u003cString\u003e firstOrder \u003d Arrays.asList(\"asc\", \"asc\");","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        List\u003cString\u003e secondOrder \u003d Arrays.asList(\"asc\", \"asc\", \"desc\");","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"            SortCommand firstSortCommand \u003d new SortCommand(firstPrefixList,","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"                    firstOrder, SortCommandParser.formatFields(firstPrefixList, firstOrder));","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"            SortCommand secondSortCommand \u003d new SortCommand(secondPrefixList,","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"                    secondOrder, SortCommandParser.formatFields(secondPrefixList, secondOrder));","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"            // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"            assertTrue(firstSortCommand.equals(firstSortCommand));","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"            // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"            SortCommand firstSortCommandCopy \u003d new SortCommand(firstPrefixList,","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"                    firstOrder, SortCommandParser.formatFields(firstPrefixList, firstOrder));","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"            assertTrue(firstSortCommand.equals(firstSortCommandCopy));","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"            // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"            assertFalse(firstSortCommand.equals(1));","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"            // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"            assertFalse(firstSortCommand.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"            // different person -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"            assertFalse(firstSortCommand.equals(secondSortCommand));","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"            assert false;","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"lawwm":82}},{"path":"src/test/java/seedu/address/logic/commands/StatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":" * Contains integration tests (interaction with the Model) and unit tests for StatusCommand.","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"public class StatusCommandTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"    private static final String STATUS_STUB \u003d \"favourite\";","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"    public void execute_addStatusUnfilteredList_success() {","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withStatus(STATUS_STUB).build();","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(editedPerson.getStatus().value));","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        String expectedMessage \u003d String.format(StatusCommand.MESSAGE_ADD_STATUS_SUCCESS, editedPerson);","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"        assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"    public void execute_addStatusUnfilteredList_failure() throws IllegalArgumentException {","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"        boolean isStatusAdded;","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"            Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"            Person editedPerson \u003d new PersonBuilder(firstPerson).withStatus(\"asdf\").build();","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"            StatusCommand statusCommand \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(\"asdf\"));","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"            String expectedMessage \u003d String.format(StatusCommand.MESSAGE_ADD_STATUS_FAILURE, editedPerson);","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"            Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"            expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"            isStatusAdded \u003d true;","lastModifiedDate":"2022-02-25"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"            // Unable to actually execute this due to IllegalArgumentException when \"asdf\" is passed in.","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"            // Instead, check if isStatusAdded is false.","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"            assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"            isStatusAdded \u003d false;","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"        assertFalse(isStatusAdded);","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"    public void execute_deleteStatusUnfilteredList_success() {","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-20"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withStatus(\"\").build();","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"                new Status(editedPerson.getStatus().toString()));","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"        String expectedMessage \u003d String.format(StatusCommand.MESSAGE_DELETE_STATUS_SUCCESS, editedPerson);","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-02-20"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-02-20"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"        assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-02-20"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-20"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-20"},{"lineNumber":92,"author":{"gitId":"bakano98"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList()","lastModifiedDate":"2022-02-20"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased())).withStatus(STATUS_STUB).build();","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":95,"author":{"gitId":"bakano98"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(editedPerson.getStatus().value));","lastModifiedDate":"2022-02-25"},{"lineNumber":96,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":97,"author":{"gitId":"bakano98"},"content":"        String expectedMessage \u003d String.format(StatusCommand.MESSAGE_ADD_STATUS_SUCCESS, editedPerson);","lastModifiedDate":"2022-02-25"},{"lineNumber":98,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":99,"author":{"gitId":"bakano98"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-02-20"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-02-20"},{"lineNumber":101,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":102,"author":{"gitId":"bakano98"},"content":"        assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":103,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":105,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-02-20"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-02-20"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(outOfBoundIndex, new Status(VALID_STATUS_BOB));","lastModifiedDate":"2022-02-26"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"        assertCommandFailure(statusCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":112,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":113,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":114,"author":{"gitId":"bakano98"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-02-20"},{"lineNumber":115,"author":{"gitId":"bakano98"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-02-20"},{"lineNumber":116,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":117,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":118,"author":{"gitId":"bakano98"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-02-20"},{"lineNumber":119,"author":{"gitId":"bakano98"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-20"},{"lineNumber":120,"author":{"gitId":"bakano98"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-20"},{"lineNumber":121,"author":{"gitId":"bakano98"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-02-20"},{"lineNumber":122,"author":{"gitId":"bakano98"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-02-20"},{"lineNumber":123,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":124,"author":{"gitId":"bakano98"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(outOfBoundIndex, new Status(VALID_STATUS_BOB));","lastModifiedDate":"2022-02-26"},{"lineNumber":125,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":126,"author":{"gitId":"bakano98"},"content":"        assertCommandFailure(statusCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-25"},{"lineNumber":127,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":128,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":129,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":130,"author":{"gitId":"bakano98"},"content":"    public void equals() {","lastModifiedDate":"2022-02-20"},{"lineNumber":131,"author":{"gitId":"bakano98"},"content":"        final StatusCommand standardCommand \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(VALID_STATUS_AMY));","lastModifiedDate":"2022-02-26"},{"lineNumber":132,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":133,"author":{"gitId":"bakano98"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-02-20"},{"lineNumber":134,"author":{"gitId":"bakano98"},"content":"        StatusCommand commandWithSameValues \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(VALID_STATUS_AMY));","lastModifiedDate":"2022-02-26"},{"lineNumber":135,"author":{"gitId":"bakano98"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-02-20"},{"lineNumber":136,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":137,"author":{"gitId":"bakano98"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-02-20"},{"lineNumber":138,"author":{"gitId":"bakano98"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-02-20"},{"lineNumber":139,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":140,"author":{"gitId":"bakano98"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-02-20"},{"lineNumber":141,"author":{"gitId":"bakano98"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-02-20"},{"lineNumber":142,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":143,"author":{"gitId":"bakano98"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-02-20"},{"lineNumber":144,"author":{"gitId":"bakano98"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-02-20"},{"lineNumber":145,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":146,"author":{"gitId":"bakano98"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-02-20"},{"lineNumber":147,"author":{"gitId":"bakano98"},"content":"        assertFalse(standardCommand.equals(new StatusCommand(INDEX_SECOND_PERSON, new Status(VALID_STATUS_AMY))));","lastModifiedDate":"2022-02-26"},{"lineNumber":148,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":149,"author":{"gitId":"bakano98"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":150,"author":{"gitId":"bakano98"},"content":"        assertFalse(standardCommand.equals(new StatusCommand(INDEX_FIRST_PERSON, new Status(VALID_STATUS_BOB))));","lastModifiedDate":"2022-02-26"},{"lineNumber":151,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":152,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"bakano98":152}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MODULE_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_DESC_CS2101;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_DESC_CS2103T;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_SWE;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"Btaykb"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withModules(VALID_MODULE_SWE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"Btaykb"},"content":"                + ADDRESS_DESC_BOB + MODULE_DESC_CS2103T, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"Btaykb"},"content":"                + ADDRESS_DESC_BOB + MODULE_DESC_CS2103T, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"Btaykb"},"content":"                + ADDRESS_DESC_BOB + MODULE_DESC_CS2103T, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"Btaykb"},"content":"                + ADDRESS_DESC_BOB + MODULE_DESC_CS2103T, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"Btaykb"},"content":"                + ADDRESS_DESC_BOB + MODULE_DESC_CS2103T, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"Btaykb"},"content":"        // multiple modules - all accepted","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"Btaykb"},"content":"        Person expectedPersonMultipleModules \u003d new PersonBuilder(BOB).withModules(VALID_MODULE_SWE, VALID_MODULE)","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"Btaykb"},"content":"                + MODULE_DESC_CS2101 + MODULE_DESC_CS2103T, new AddCommand(expectedPersonMultipleModules));","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"Btaykb"},"content":"        // zero modules","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"Btaykb"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withModules().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"Btaykb"},"content":"                + MODULE_DESC_CS2101 + MODULE_DESC_CS2103T, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"Btaykb"},"content":"                + MODULE_DESC_CS2101 + MODULE_DESC_CS2103T, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"Btaykb"},"content":"                + MODULE_DESC_CS2101 + MODULE_DESC_CS2103T, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"Btaykb"},"content":"                + MODULE_DESC_CS2101 + MODULE_DESC_CS2103T, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"Btaykb"},"content":"        // invalid module","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"Btaykb"},"content":"                + INVALID_MODULE_DESC + VALID_MODULE_SWE, Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"Btaykb"},"content":"                + ADDRESS_DESC_BOB + MODULE_DESC_CS2101 + MODULE_DESC_CS2103T,","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Btaykb":24,"-":117}},{"path":"src/test/java/seedu/address/logic/parser/AddModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fantablack"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"fantablack"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MODULE_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_DESC_CS2101;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_DESC_CS2103T;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_SWE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"fantablack"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":"import seedu.address.logic.commands.AddModuleCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"class AddModuleCommandParserTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"fantablack"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"fantablack"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddModuleCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"fantablack"},"content":"    private final AddModuleCommandParser parser \u003d new AddModuleCommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"fantablack"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"fantablack"},"content":"        // no index specified","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, VALID_MODULE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"fantablack"},"content":"        // no field specified","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"fantablack"},"content":"        assertParseFailure(parser, \"1\", AddModuleCommandParser.MESSAGE_EMPTY);","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"fantablack"},"content":"        // no index and no field specified","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"fantablack"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"fantablack"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"fantablack"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"fantablack"},"content":"        // negative index","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"-5\" + VALID_MODULE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"fantablack"},"content":"        // zero index","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"0\" + VALID_MODULE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"fantablack"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"fantablack"},"content":"        assertParseFailure(parser, \"1 definitely invalid argument\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"fantablack"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"fantablack"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"fantablack"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"fantablack"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MODULE_DESC, Module.MESSAGE_CONSTRAINTS); // invalid module","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"fantablack"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"fantablack"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"fantablack"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"Btaykb"},"content":"        String userInput \u003d targetIndex.getOneBased() + MODULE_DESC_CS2101","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"Btaykb"},"content":"                + MODULE_DESC_CS2103T;","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"Btaykb"},"content":"        List\u003cModule\u003e expectedModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"Btaykb"},"content":"        expectedModules.add(new Module(VALID_MODULE_SWE));","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"Btaykb"},"content":"        expectedModules.add(new Module(VALID_MODULE));","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"Btaykb"},"content":"        AddModuleCommand expectedCommand \u003d new AddModuleCommand(targetIndex, expectedModules);","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"fantablack"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"fantablack"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"fantablack"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"Btaykb":16,"fantablack":57}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"Btaykb"},"content":"        assertTrue(parser.parseCommand(EditCommand.COMMAND_WORD + \" 1\" + \" n/Bob\")","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Btaykb"},"content":"                instanceof EditCommand);","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Btaykb"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Btaykb"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Btaykb"},"content":"        String userInput \u003d EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Btaykb"},"content":"                + \"1 \" + \" n/\" + VALID_NAME_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Btaykb"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor),","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"Btaykb"},"content":"                parser.parseCommand(userInput));","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Btaykb":9,"-":96}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\", \"\");","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\", \"\");","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\", \"\");","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\", \"\");","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"Btaykb"},"content":"        String argsString \u003d \"  some random string /t module with leading and trailing spaces \";","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"lawwm"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\", \"\");","lastModifiedDate":"2022-03-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"lawwm"},"content":"        assertEquals(aaa, new Prefix(\"aaa\", \"\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"lawwm"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\", \"\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"lawwm":7,"Btaykb":1,"-":142}},{"path":"src/test/java/seedu/address/logic/parser/ClearModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.ClearModulesCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"class ClearModuleCommandParserTest {","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"    private ClearModuleCommandParser parser \u003d new ClearModuleCommandParser();","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"    public void parse_validArgs_returnsClearModulesCommand() {","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"        assertParseSuccess(parser, \"1\", new ClearModulesCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearModulesCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":28}},{"path":"src/test/java/seedu/address/logic/parser/CommentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Btaykb"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMENT_DESC;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMENT;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"Btaykb"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"class CommentCommandParserTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, CommentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Btaykb"},"content":"    private CommentCommandParser parser \u003d new CommentCommandParser();","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"5 Very rude\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"Btaykb"},"content":"    public void parse_deleteComment_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"        String userInput \u003d \"1 c/\";","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"        CommentCommand expectedCommand \u003d new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"Btaykb"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"    public void parse_noIndex_failure() {","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \" c/Good at leadership\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"Btaykb"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"Btaykb"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"Btaykb"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"Btaykb"},"content":"        String userInput \u003d targetIndex.getOneBased() + COMMENT_DESC;","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"Btaykb"},"content":"        CommentCommand expectedCommand \u003d new CommentCommand(targetIndex, new Comment(VALID_COMMENT));","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"Btaykb":46}},{"path":"src/test/java/seedu/address/logic/parser/CopyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.FormatPersonUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"class CopyCommandParserTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"    private CopyCommandParser parser \u003d new CopyCommandParser();","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    private FormatPersonUtil fpCsv \u003d new FormatPersonUtil(FormatPersonUtil.CSV_FORMAT);","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    private List\u003cPrefix\u003e partialPrefixes \u003d Arrays.asList(PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"        PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    private List\u003cPrefix\u003e allPrefixes \u003d Arrays.asList(PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_STATUS, PREFIX_MODULE, PREFIX_COMMENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"    public void parse_validArgs_person() {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"        CopyCommand correctCommand \u003d new CopyCommand(INDEX_FIRST_PERSON, partialPrefixes, fpCsv);","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        assertParseSuccess(parser, \" 1 n/ p/ e/ a/ f/csv\", correctCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    public void parse_validArgs_addressBook() {","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"        CopyCommand correctCommand \u003d new CopyCommand(partialPrefixes, fpCsv);","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        assertParseSuccess(parser, \" n/ p/ e/ a/ f/csv\", correctCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"    public void parse_validArgs_noPrefixes() {","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        CopyCommand correctCommand \u003d new CopyCommand(INDEX_FIRST_PERSON, allPrefixes, fpCsv);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        assertParseSuccess(parser, \" 1 f/csv\", correctCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"    public void parse_validArgs_noArgs() {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        CopyCommand correctCommand \u003d new CopyCommand(allPrefixes, fpCsv);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        assertParseSuccess(parser, \" f/csv\", correctCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"    public void parse_invalidArgs_noArgs() {","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \" +1-234 n/ f/csv\",","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CopyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"lawwm":62}},{"path":"src/test/java/seedu/address/logic/parser/DeleteModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MODULE_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_DESC_CS2101;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_DESC_CS2103T;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_SWE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.DeleteModuleCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"class DeleteModuleCommandParserTest {","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteModuleCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    private DeleteModuleCommandParser parser \u003d new DeleteModuleCommandParser();","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"        // no index specified","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, VALID_MODULE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        // no field specified","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"1\", DeleteModuleCommandParser.MESSAGE_EMPTY);","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"        // no index and no field specified","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"        // negative index","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"-5\" + VALID_MODULE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        // zero index","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"0\" + VALID_MODULE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MODULE_DESC, Module.MESSAGE_CONSTRAINTS); // invalid module","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"Btaykb"},"content":"        String userInput \u003d targetIndex.getOneBased() + MODULE_DESC_CS2101","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"Btaykb"},"content":"                + MODULE_DESC_CS2103T;","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"Btaykb"},"content":"        List\u003cModule\u003e expectedModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"Btaykb"},"content":"        expectedModules.add(new Module(VALID_MODULE_SWE));","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"Btaykb"},"content":"        expectedModules.add(new Module(VALID_MODULE));","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"Btaykb"},"content":"        DeleteModuleCommand expectedCommand \u003d new DeleteModuleCommand(targetIndex, expectedModules);","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":57,"Btaykb":16}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"Btaykb"},"content":"    private static final String MODULE_EMPTY \u003d \" \" + PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Btaykb"},"content":"        // attempt to edit the module field","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"1 m/CS2100\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"Btaykb"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"Btaykb"},"content":"    public void parse_moduleFieldSpecified_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"1 n/Bob a/Kent Ridge Hall m/CS2103\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"2 n/George m/CS2103\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"3 p/12345980 m/CS2103\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"Btaykb"},"content":"        assertParseFailure(parser, \"4 e/amy@email m/CS2103\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":106,"author":{"gitId":"Btaykb"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"Btaykb"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"Btaykb"},"content":"                .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"Btaykb"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-08"},{"lineNumber":162,"author":{"gitId":"Btaykb"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"lawwm"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-02-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"lawwm":1,"Btaykb":18,"-":170}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.NameContainsModulePredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"        // occurs if \u003e 1 module, or \u003c 1 module","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"                new FilterCommand(new NameContainsModulePredicate(\"CS3230\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"        // only valid form is without whitespaces","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"        assertParseSuccess(parser, \"CS3230\", expectedFilterCommand);","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":28,"Btaykb":3}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"Btaykb"},"content":"    private static final String INVALID_MODULE \u003d \"#friend\";","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"    private static final String VALID_MODULE_1 \u003d \"CS2101\";","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"    private static final String VALID_MODULE_2 \u003d \"CS2103T\";","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"Btaykb"},"content":"    public void parseModule_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"Btaykb"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseModule(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"Btaykb"},"content":"    public void parseModule_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"Btaykb"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseModule(INVALID_MODULE));","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"Btaykb"},"content":"    public void parseModule_validValueWithoutWhitespace_returnsModule() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"Btaykb"},"content":"        Module expectedModule \u003d new Module(VALID_MODULE_1);","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"Btaykb"},"content":"        assertEquals(expectedModule, ParserUtil.parseModule(VALID_MODULE_1));","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"Btaykb"},"content":"    public void parseModule_validValueWithWhitespace_returnsTrimmedModule() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"Btaykb"},"content":"        String moduleWithWhitespace \u003d WHITESPACE + VALID_MODULE_1 + WHITESPACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"Btaykb"},"content":"        Module expectedModule \u003d new Module(VALID_MODULE_1);","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"Btaykb"},"content":"        assertEquals(expectedModule, ParserUtil.parseModule(moduleWithWhitespace));","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"Btaykb"},"content":"    public void parseModules_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"Btaykb"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseModules(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"Btaykb"},"content":"    public void parseModules_collectionWithInvalidModules_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":181,"author":{"gitId":"Btaykb"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseModules(","lastModifiedDate":"2022-03-18"},{"lineNumber":182,"author":{"gitId":"Btaykb"},"content":"                Arrays.asList(VALID_MODULE_1, INVALID_MODULE)));","lastModifiedDate":"2022-03-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"Btaykb"},"content":"    public void parseModules_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":187,"author":{"gitId":"Btaykb"},"content":"        assertTrue(ParserUtil.parseModules(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-03-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"Btaykb"},"content":"    public void parseModules_collectionWithValidModules_returnsModuleSet() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":192,"author":{"gitId":"Btaykb"},"content":"        Set\u003cModule\u003e actualModuleSet \u003d ParserUtil.parseModules(","lastModifiedDate":"2022-03-18"},{"lineNumber":193,"author":{"gitId":"Btaykb"},"content":"                Arrays.asList(VALID_MODULE_1, VALID_MODULE_2));","lastModifiedDate":"2022-03-18"},{"lineNumber":194,"author":{"gitId":"Btaykb"},"content":"        Set\u003cModule\u003e expectedModuleSet \u003d new HashSet\u003cModule\u003e(","lastModifiedDate":"2022-03-18"},{"lineNumber":195,"author":{"gitId":"Btaykb"},"content":"                Arrays.asList(new Module(VALID_MODULE_1), new Module(VALID_MODULE_2)));","lastModifiedDate":"2022-03-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"Btaykb"},"content":"        assertEquals(expectedModuleSet, actualModuleSet);","lastModifiedDate":"2022-03-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Btaykb":28,"-":171}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_PARAMETERS_SUPPLIED;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"class SortCommandParserTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    public void parse_validArgs_returnsSortModulesCommand() {","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"            List\u003cPrefix\u003e prefixes \u003d Arrays.asList(PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"                    PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_STATUS, PREFIX_MODULE);","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"            List\u003cString\u003e firstOrder \u003d Arrays.asList(\"asc\", \"asc\", \"desc\", \"asc\", \"asc\", \"desc\");","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"            SortCommand correctCommand \u003d new SortCommand(prefixes,","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"                    firstOrder, SortCommandParser.formatFields(prefixes, firstOrder));","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"            assertParseSuccess(parser, \" n/asc p/asc e/desc a/asc s/asc m/desc\", correctCommand);","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"            assert false;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    public void parse_noArgs_returnsSortModulesCommand() {","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"                String.format(MESSAGE_NO_PARAMETERS_SUPPLIED, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"    public void parse_invalidArgs_returnsSortModulesCommand() {","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \" 1 n/asc m/desc\",","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \" n/asc e/desc p/asccc\",","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"lawwm":54}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"Btaykb"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withModules(VALID_MODULE)","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"Btaykb"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withModules(VALID_MODULE)","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Btaykb":3,"-":99}},{"path":"src/test/java/seedu/address/model/module/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Btaykb"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"Btaykb"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"public class ModuleTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"Btaykb"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"Btaykb"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"Btaykb"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"Btaykb"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"Btaykb"},"content":"    public void constructor_invalidModuleName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"Btaykb"},"content":"        String invalidModuleName \u003d \"\";","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(invalidModuleName));","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"Btaykb"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(\"CS123S \")); // Need 4 digits","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(\"CSCS1231S \")); // Less than 4 letters prefix","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(\"C1231S \")); // More than 1 digits prefix","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"Btaykb"},"content":"    public void isValidModuleName() {","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"        // null module name","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"        assertThrows(NullPointerException.class, () -\u003e Module.isValidModuleName(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"        assertTrue(Module.isValidModuleName(\"CS1231S\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"        assertTrue(Module.isValidModuleName(\"GEQ1000\"));;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Btaykb":36}},{"path":"src/test/java/seedu/address/model/person/FormatPersonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"class FormatPersonUtilTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"    private FormatPersonUtil fpDefault \u003d new FormatPersonUtil();","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    private FormatPersonUtil fpCsv \u003d new FormatPersonUtil(\"csv\");","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    private FormatPersonUtil fpJson \u003d new FormatPersonUtil(\"json\");","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    private List\u003cPrefix\u003e prefixes \u003d List.of(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"            PREFIX_ADDRESS, PREFIX_MODULE, PREFIX_COMMENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"    private String ls \u003d System.lineSeparator();","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    public void formatPerson_default_validInputSuccess() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"        String formattedPerson \u003d fpDefault.formatPerson(ALICE, prefixes);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"        assertEquals(helperPerson(ALICE, \"\\n\", prefixes), formattedPerson);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"    public void formatAddressBook_default_validInputSuccess() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        String formattedPerson \u003d fpDefault.formatAddressBook(List.of(ALICE, BENSON), prefixes);","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"        sb.append(helperPerson(ALICE, \"\\n\", prefixes));","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"        sb.append(helperPerson(BENSON, \"\\n\", prefixes));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"        assertEquals(sb.toString(), formattedPerson);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"    public void formatPerson_csv_validInputSuccess() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        String formattedPerson \u003d fpCsv.formatPerson(ALICE, prefixes);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        assertEquals(helperPerson(ALICE, \" | \", prefixes), formattedPerson);","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"    public void formatAddressBook_csv_validInputSuccess() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        String formattedPerson \u003d fpCsv.formatAddressBook(List.of(ALICE, BENSON),","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"                prefixes);","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c prefixes.size(); i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"            sb.append(prefixes.get(i).getDescription());","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"            if (i !\u003d prefixes.size() - 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"                sb.append(\" | \");","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"        sb.append(helperPerson(ALICE, \" | \", prefixes));","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"        sb.append(helperPerson(BENSON, \" | \", prefixes));","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"        assertEquals(sb.toString(), formattedPerson);","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"    public void formatPerson_json_validInputSuccess() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"        String formattedPerson \u003d fpJson.formatPerson(ALICE, prefixes);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"        assertEquals(helperPersonJson(ALICE, prefixes), formattedPerson);","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"    private String helperPersonJson(Person p, List\u003cPrefix\u003e prefixes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"        String tab \u003d \"  \";","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"        sb.append(\"{\" + ls);","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c prefixes.size(); i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"lawwm"},"content":"            sb.append(tab);","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"            sb.append(\"\\\"\");","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"            sb.append(prefixes.get(i).getDescription());","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"lawwm"},"content":"            sb.append(\"\\\"\");","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"lawwm"},"content":"            sb.append(\" : \");","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"lawwm"},"content":"            if (prefixes.get(i).equals(PREFIX_MODULE)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"                String module \u003d FormatPersonUtil.getPersonField(p, prefixes.get(i));","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"                sb.append(\"[ \\\"\");","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"lawwm"},"content":"                sb.append(module.substring(2, module.length() - 2));","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"lawwm"},"content":"                sb.append(\"\\\" ]\");","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"lawwm"},"content":"            } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"lawwm"},"content":"                sb.append(\"\\\"\");","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"lawwm"},"content":"                sb.append(FormatPersonUtil.getPersonField(p, prefixes.get(i)));","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"lawwm"},"content":"                sb.append(\"\\\"\");","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"            if (i !\u003d prefixes.size() - 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"lawwm"},"content":"                sb.append(\",\" + ls);","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"lawwm"},"content":"            } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"lawwm"},"content":"                sb.append(ls);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"lawwm"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"lawwm"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"lawwm"},"content":"    private String helperPerson(Person p, String delimiter, List\u003cPrefix\u003e prefixes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"lawwm"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c prefixes.size(); i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"lawwm"},"content":"            sb.append(FormatPersonUtil.getPersonField(p, prefixes.get(i)));","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"lawwm"},"content":"            if (i !\u003d prefixes.size() - 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"lawwm"},"content":"                sb.append(delimiter);","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"lawwm"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"lawwm":123}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"Btaykb"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getModules().remove(0));","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"Btaykb"},"content":"                .withAddress(VALID_ADDRESS_BOB).withModules(VALID_MODULE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"Btaykb"},"content":"        // different modules -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"Btaykb"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withModules(VALID_MODULE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Btaykb":5,"-":86}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withModules(VALID_MODULE)","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"Btaykb"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withModules(VALID_MODULE)","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Btaykb":3,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Btaykb"},"content":"    private static final String INVALID_MODULE \u003d \"#friend\";","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"Btaykb"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_MODULES \u003d BENSON.getModules().stream()","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Btaykb"},"content":"    private static final String VALID_COMMENT \u003d BENSON.getComment().toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"Btaykb"},"content":"                        VALID_ADDRESS, VALID_STATUS, VALID_MODULES, VALID_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"Btaykb"},"content":"                        VALID_STATUS, VALID_MODULES, VALID_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Btaykb"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"Btaykb"},"content":"                        VALID_ADDRESS, VALID_STATUS, VALID_MODULES, VALID_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-20"},{"lineNumber":73,"author":{"gitId":"Btaykb"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"Btaykb"},"content":"                        VALID_STATUS, VALID_MODULES, VALID_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Btaykb"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"Btaykb"},"content":"                        VALID_ADDRESS, VALID_STATUS, VALID_MODULES, VALID_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"Btaykb"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"Btaykb"},"content":"                        VALID_STATUS, VALID_MODULES, VALID_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"Btaykb"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"Btaykb"},"content":"                        INVALID_ADDRESS, VALID_STATUS, VALID_MODULES, VALID_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-20"},{"lineNumber":109,"author":{"gitId":"Btaykb"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"Btaykb"},"content":"                        VALID_STATUS, VALID_MODULES, VALID_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"Btaykb"},"content":"    public void toModelType_invalidModules_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"Btaykb"},"content":"        List\u003cJsonAdaptedTag\u003e invalidModules \u003d new ArrayList\u003c\u003e(VALID_MODULES);","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"Btaykb"},"content":"        invalidModules.add(new JsonAdaptedTag(INVALID_MODULE));","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"Btaykb"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"Btaykb"},"content":"                        VALID_ADDRESS, VALID_STATUS, invalidModules, VALID_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bakano98":5,"Btaykb":24,"-":96}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lawwm":1,"-":47}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"Btaykb"},"content":"        descriptor.setModules(person.getModules());","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"Btaykb"},"content":"     * Parses the {@code modules} into a {@code Set\u003cModule\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"Btaykb"},"content":"    public EditPersonDescriptorBuilder withModules(String... modules) {","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"Btaykb"},"content":"        Set\u003cModule\u003e moduleSet \u003d Stream.of(modules).map(Module::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"Btaykb"},"content":"        descriptor.setModules(moduleSet);","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Btaykb":6,"-":81}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"    public static final String DEFAULT_STATUS \u003d \"\";","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"    public static final String DEFAULT_COMMENT \u003d \"\";","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    private Status status;","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"    private Set\u003cModule\u003e modules;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Btaykb"},"content":"    private Comment comment;","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"Btaykb"},"content":"        modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"Btaykb"},"content":"        comment \u003d new Comment(DEFAULT_COMMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"        status \u003d personToCopy.getStatus();","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"Btaykb"},"content":"        modules \u003d new HashSet\u003c\u003e(personToCopy.getModules());","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Btaykb"},"content":"        comment \u003d personToCopy.getComment();","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"Btaykb"},"content":"     * Parses the {@code modules} into a {@code Set\u003cModule\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"Btaykb"},"content":"    public PersonBuilder withModules(String ... modules) {","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"Btaykb"},"content":"        this.modules \u003d SampleDataUtil.getModuleSet(modules);","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":103,"author":{"gitId":"bakano98"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2022-02-25"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":105,"author":{"gitId":"bakano98"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2022-02-25"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"        return this;","lastModifiedDate":"2022-02-20"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":110,"author":{"gitId":"Btaykb"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"Btaykb"},"content":"     * Sets the {@code Comment} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"Btaykb"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"Btaykb"},"content":"    public PersonBuilder withComment(String comment) {","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"Btaykb"},"content":"        this.comment \u003d new Comment(comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"Btaykb"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"Btaykb"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":119,"author":{"gitId":"Btaykb"},"content":"        return new Person(name, phone, email, address, status, modules, comment);","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"bakano98":13,"Btaykb":21,"-":88}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"Btaykb"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"        person.getModules().stream().forEach(","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"Btaykb"},"content":"            s -\u003e sb.append(PREFIX_MODULE + s.moduleName + \" \")","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"Btaykb"},"content":"        if (descriptor.getModules().isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"Btaykb"},"content":"            Set\u003cModule\u003e modules \u003d descriptor.getModules().get();","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Btaykb"},"content":"            if (modules.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"                sb.append(PREFIX_MODULE);","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"Btaykb"},"content":"                modules.forEach(s -\u003e sb.append(PREFIX_MODULE).append(s.moduleName).append(\" \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Btaykb":9,"-":53}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Btaykb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_SWE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"            .withModules(\"CS2103T\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Btaykb"},"content":"            .withModules(\"CS2103T\", \"MA1101R\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"Btaykb"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withModules(\"CS2103T\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"Btaykb"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withModules(VALID_MODULE_SWE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"Btaykb"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withModules(VALID_MODULE, VALID_MODULE_SWE)","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Btaykb":7,"-":69}}]
