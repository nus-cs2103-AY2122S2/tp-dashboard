[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T13-4/tp/branch/master/graph/badge.svg?token\u003d7ST0L6C9AY)](https://codecov.io/gh/AY2122S2-CS2103T-T13-4/tp)","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T13-4/tp/actions)","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"## ModuleMateFinder","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"Ever find it difficult to keep track of what modules your friends are taking?  ","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"Want to form groups with friends for certain modules, but don\u0027t know what they are taking?","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"Worry not! With ModuleMateFinder, you can:","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"1) Add friends into ModuleMateFinder, and their contact details","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"2) Keep track of what modules they are taking","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"3) Favourite people who you want to work with the most","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"4) Blacklist people who you want to **avoid** working with","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"5) Find people by the modules they are taking","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"6) Many more...","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"- Head over to the [User Guide](https://ay2122s2-cs2103t-t13-4.github.io/tp/UserGuide.html) to find out more","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"- You can also see the mockup in [Figma](https://www.figma.com/file/COWAJJL0DBAPffotRIkHXz/ModuleMateFinder?node-id\u003d0%3A1)","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"**This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).**","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"bakano98":19,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"### Bryan Tan Jing Kai","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"\u003cimg src\u003d\"images/fantablack.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"[[github](https://github.com/fantablack)]","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"[[portfolio](team/fantablack.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"Btaykb"},"content":"* Role: Developer","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"fantablack"},"content":"* Responsibilities: TBA","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"Btaykb"},"content":"### Benjamin Tay Keck Bin","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Btaykb"},"content":"\u003cimg src\u003d\"images/btaykb.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Btaykb"},"content":"[[github](https://github.com/Btaykb)]","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"Btaykb"},"content":"[[portfolio](team/btaykb.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Btaykb"},"content":"* Role: Developer","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"Btaykb"},"content":"* Responsibilities: TBC","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Jane Doe","lastModifiedDate":"2020-06-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"### Julio Harjo","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"\u003cimg src\u003d\"images/junlee1991.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"[[github](https://github.com/junlee1991)] ","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"[[portfolio](team/junlee1991.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"### Wei Jie","lastModifiedDate":"2022-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"\u003cimg src\u003d\"images/bakano98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"[[github](http://github.com/bakano98)]","lastModifiedDate":"2022-02-19"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"[[portfolio](team/bakano98.md)]","lastModifiedDate":"2022-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"### Law Wei Ming","lastModifiedDate":"2022-02-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"\u003cimg src\u003d\"images/lawwm.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"[[github](http://github.com/lawwm)]","lastModifiedDate":"2022-02-22"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"[[portfolio](team/lawwm.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bakano98":4,"lawwm":4,"junlee1991":4,"Btaykb":8,"-":46,"fantablack":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"fantablack"},"content":"* has a need to manage a significant number of contacts within their educational organisation","lastModifiedDate":"2022-03-03"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​                                   | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"fantablack"},"content":"| -------- |-------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-03-03"},{"lineNumber":275,"author":{"gitId":"fantablack"},"content":"| `* * *`  | student                                   | add modules that I am taking | keep track of the modules                                              |","lastModifiedDate":"2022-03-03"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                  | see usage instructions       | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| `* * *`  | user                                      | add a new person             |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| `* * *`  | user                                      | delete a person              | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| `* * *`  | user                                      | find a person by name        | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"| `* *`    | user                                      | hide private contact details | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name         | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"bakano98"},"content":"(For all use cases below, the **System** is `ModuleMateFinder` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":290,"author":{"gitId":"Btaykb"},"content":"**Use case: UC01 - Listing all contacts**","lastModifiedDate":"2022-03-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"Btaykb"},"content":"1. User requests to list out all contacts.","lastModifiedDate":"2022-03-05"},{"lineNumber":295,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of all contacts.","lastModifiedDate":"2022-03-05"},{"lineNumber":296,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":297,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":298,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":299,"author":{"gitId":"bakano98"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"bakano98"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":302,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":303,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":304,"author":{"gitId":"Btaykb"},"content":"**Use case: UC02 - Adding a contact**","lastModifiedDate":"2022-03-05"},{"lineNumber":305,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":306,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":307,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":308,"author":{"gitId":"Btaykb"},"content":"1. User requests to add a person as a contact.","lastModifiedDate":"2022-03-05"},{"lineNumber":309,"author":{"gitId":"Btaykb"},"content":"2. User inputs the information of the person.","lastModifiedDate":"2022-03-05"},{"lineNumber":310,"author":{"gitId":"Btaykb"},"content":"3. ModuleMateFinder adds the person as a contact.","lastModifiedDate":"2022-03-05"},{"lineNumber":311,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":312,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":313,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":314,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-05"},{"lineNumber":315,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":316,"author":{"gitId":"Btaykb"},"content":"- 3a. The given name already exists in ModuleMateFinder.","lastModifiedDate":"2022-03-05"},{"lineNumber":317,"author":{"gitId":"bakano98"},"content":"    - 3a1. ModuleMateFinder shows an error message.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":318,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-05"},{"lineNumber":319,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":320,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":321,"author":{"gitId":"Btaykb"},"content":"**Use case: UC03 - Favourite a contact**","lastModifiedDate":"2022-03-05"},{"lineNumber":322,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":323,"author":{"gitId":"bakano98"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":324,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":325,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":326,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":327,"author":{"gitId":"Btaykb"},"content":"3. User requests to favourite a person in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":328,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder favourites the person.","lastModifiedDate":"2022-03-05"},{"lineNumber":329,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":330,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":334,"author":{"gitId":"bakano98"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":335,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":336,"author":{"gitId":"Btaykb"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2022-03-05"},{"lineNumber":337,"author":{"gitId":"bakano98"},"content":"    - 3a1. ModuleMateFinder shows an error message.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":338,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-05"},{"lineNumber":339,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":340,"author":{"gitId":"Btaykb"},"content":"  ","lastModifiedDate":"2022-03-05"},{"lineNumber":341,"author":{"gitId":"Btaykb"},"content":"**Use case: UC04 - Blacklisting a contact**","lastModifiedDate":"2022-03-05"},{"lineNumber":342,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":343,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":344,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":345,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":346,"author":{"gitId":"Btaykb"},"content":"3. User requests to blacklist a person in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":347,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder blacklist the person. ","lastModifiedDate":"2022-03-05"},{"lineNumber":348,"author":{"gitId":"Btaykb"},"content":"   ","lastModifiedDate":"2022-03-05"},{"lineNumber":349,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":350,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":351,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-05"},{"lineNumber":352,"author":{"gitId":"Btaykb"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":353,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":354,"author":{"gitId":"Btaykb"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2022-03-05"},{"lineNumber":355,"author":{"gitId":"Btaykb"},"content":"    - 3a1. ModuleMateFinder shows an error message.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":356,"author":{"gitId":"Btaykb"},"content":"      ","lastModifiedDate":"2022-03-05"},{"lineNumber":357,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-05"},{"lineNumber":358,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":359,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":360,"author":{"gitId":"Btaykb"},"content":"**Use case: UC05 - Filter contacts by modules**","lastModifiedDate":"2022-03-05"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":363,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":364,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":365,"author":{"gitId":"Btaykb"},"content":"3. User requests to filter the list by a certain module (e.g. `CS3230`).","lastModifiedDate":"2022-03-05"},{"lineNumber":366,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder finds all persons with the module `CS3230`.","lastModifiedDate":"2022-03-05"},{"lineNumber":367,"author":{"gitId":"Btaykb"},"content":"5. ModuleMateFinder shows a list of persons with the module `CS3230`.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":368,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":369,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":370,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-05"},{"lineNumber":371,"author":{"gitId":"Btaykb"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":372,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":373,"author":{"gitId":"Btaykb"},"content":"- 3a. No persons has a matching module.","lastModifiedDate":"2022-03-05"},{"lineNumber":374,"author":{"gitId":"Btaykb"},"content":"    - 3a1. ModuleMateFinder shows an empty list.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":375,"author":{"gitId":"Btaykb"},"content":"      Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"Btaykb"},"content":"**Use case: UC06 - Filter contacts by name**","lastModifiedDate":"2022-03-05"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"bakano98"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":381,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":382,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":383,"author":{"gitId":"Btaykb"},"content":"3. User requests to filter the list by a certain name (e.g. `Hans`).","lastModifiedDate":"2022-03-05"},{"lineNumber":384,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder finds all persons with the tag `Hans`.","lastModifiedDate":"2022-03-05"},{"lineNumber":385,"author":{"gitId":"Btaykb"},"content":"5. ModuleMateFinder shows a list of persons with the tag `Hans`.","lastModifiedDate":"2022-03-05"},{"lineNumber":386,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":389,"author":{"gitId":"bakano98"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":390,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":391,"author":{"gitId":"Btaykb"},"content":"- 3a. No persons has a matching name.","lastModifiedDate":"2022-03-05"},{"lineNumber":392,"author":{"gitId":"bakano98"},"content":"    - 3a1. ModuleMateFinder shows an empty list.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":393,"author":{"gitId":"Btaykb"},"content":"      Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":394,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":395,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":396,"author":{"gitId":"Btaykb"},"content":"**Use case: UC07 - Editing a contact\u0027s details**","lastModifiedDate":"2022-03-05"},{"lineNumber":397,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":398,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":400,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":401,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":402,"author":{"gitId":"Btaykb"},"content":"3. User requests to edit a contact on the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":403,"author":{"gitId":"Btaykb"},"content":"4. User inputs the updated information.","lastModifiedDate":"2022-03-05"},{"lineNumber":404,"author":{"gitId":"Btaykb"},"content":"5. ModuleMateFinder updates the contact\u0027s details.","lastModifiedDate":"2022-03-05"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":406,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":407,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":408,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-05"},{"lineNumber":409,"author":{"gitId":"Btaykb"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":410,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":411,"author":{"gitId":"Btaykb"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2022-03-05"},{"lineNumber":412,"author":{"gitId":"Btaykb"},"content":"    - 3a1. ModuleMateFinder displays an error message.","lastModifiedDate":"2022-03-05"},{"lineNumber":413,"author":{"gitId":"Btaykb"},"content":"      ","lastModifiedDate":"2022-03-05"},{"lineNumber":414,"author":{"gitId":"Btaykb"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-05"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":416,"author":{"gitId":"Btaykb"},"content":"**Use case: UC08 - Deleting a contact**","lastModifiedDate":"2022-03-05"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":418,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":419,"author":{"gitId":"Btaykb"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2022-03-05"},{"lineNumber":420,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder shows a list of persons.","lastModifiedDate":"2022-03-05"},{"lineNumber":421,"author":{"gitId":"Btaykb"},"content":"3. User requests to delete a contact at a given index.","lastModifiedDate":"2022-03-05"},{"lineNumber":422,"author":{"gitId":"Btaykb"},"content":"4. ModuleMateFinder deletes the contact at the index .","lastModifiedDate":"2022-03-05"},{"lineNumber":423,"author":{"gitId":"Btaykb"},"content":"   ","lastModifiedDate":"2022-03-05"},{"lineNumber":424,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":426,"author":{"gitId":"Btaykb"},"content":"**Extensions**","lastModifiedDate":"2022-03-05"},{"lineNumber":427,"author":{"gitId":"Btaykb"},"content":"- 2a. The list is empty.  ","lastModifiedDate":"2022-03-05"},{"lineNumber":428,"author":{"gitId":"Btaykb"},"content":"  Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":429,"author":{"gitId":"Btaykb"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2022-03-05"},{"lineNumber":430,"author":{"gitId":"Btaykb"},"content":"    - 3a1. ModuleMateFinder displays an error message.","lastModifiedDate":"2022-03-05"},{"lineNumber":431,"author":{"gitId":"Btaykb"},"content":"      ","lastModifiedDate":"2022-03-05"},{"lineNumber":432,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-05"},{"lineNumber":433,"author":{"gitId":"Btaykb"},"content":"  ","lastModifiedDate":"2022-03-05"},{"lineNumber":434,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":435,"author":{"gitId":"Btaykb"},"content":"**Use case: UC09 - Clearing all entries**","lastModifiedDate":"2022-03-05"},{"lineNumber":436,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":437,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":438,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":439,"author":{"gitId":"Btaykb"},"content":"1. User requests to clear all entries in ModuleMateFinder.","lastModifiedDate":"2022-03-05"},{"lineNumber":440,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder removes all saved data and displays a success ","lastModifiedDate":"2022-03-05"},{"lineNumber":441,"author":{"gitId":"Btaykb"},"content":"message.","lastModifiedDate":"2022-03-05"},{"lineNumber":442,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":443,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":444,"author":{"gitId":"Btaykb"},"content":"**Use case: UC10 - Exiting the application**","lastModifiedDate":"2022-03-05"},{"lineNumber":445,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":446,"author":{"gitId":"Btaykb"},"content":"**MSS**","lastModifiedDate":"2022-03-05"},{"lineNumber":447,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":448,"author":{"gitId":"Btaykb"},"content":"1. User requests to exit ModuleMateFinder.","lastModifiedDate":"2022-03-05"},{"lineNumber":449,"author":{"gitId":"Btaykb"},"content":"2. ModuleMateFinder closes.","lastModifiedDate":"2022-03-05"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"Btaykb"},"content":"   Use case ends.","lastModifiedDate":"2022-03-05"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"fantablack"},"content":"1. The application must be _free_.","lastModifiedDate":"2022-03-03"},{"lineNumber":458,"author":{"gitId":"fantablack"},"content":"2. Simple to use even if you have no experience.","lastModifiedDate":"2022-03-03"},{"lineNumber":459,"author":{"gitId":"fantablack"},"content":"3. Offline application used by each person.","lastModifiedDate":"2022-03-03"},{"lineNumber":460,"author":{"gitId":"fantablack"},"content":"4. The application should run on Linux, MacOS and Windows as long as it has Java 11 or above installed.","lastModifiedDate":"2022-03-03"},{"lineNumber":461,"author":{"gitId":"fantablack"},"content":"5. The product is not required to handle the forming of groups for users.","lastModifiedDate":"2022-03-03"},{"lineNumber":462,"author":{"gitId":"fantablack"},"content":"6. The product should be highly testable.","lastModifiedDate":"2022-03-03"},{"lineNumber":463,"author":{"gitId":"fantablack"},"content":"7. Documentation for the product must be written clearly and concisely.","lastModifiedDate":"2022-03-03"},{"lineNumber":464,"author":{"gitId":"fantablack"},"content":"8. This product is not required to be installed; it can be run as an executable.","lastModifiedDate":"2022-03-03"},{"lineNumber":465,"author":{"gitId":"fantablack"},"content":"9. Clear and comprehensible error messages?","lastModifiedDate":"2022-03-03"},{"lineNumber":466,"author":{"gitId":"fantablack"},"content":"10. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2022-03-03"},{"lineNumber":467,"author":{"gitId":"fantablack"},"content":"11. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-03-03"},{"lineNumber":468,"author":{"gitId":"fantablack"},"content":"12. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-03"},{"lineNumber":469,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bakano98":15,"Btaykb":128,"-":370,"fantablack":16}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"fantablack"},"content":"ModuleMateFinder Level 3 (MMF3) is a **desktop app for managing contacts in your educational organization, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, MMF3 can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":8,"author":{"gitId":"fantablack"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"- [Features](#features)","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":"  - [Quick Jump](#quick-jump)","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"- [FAQ](#faq)","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"1. Download the latest `ModuleMateFinder.jar` from [here](https://github.com/se-edu/ModuleMateFinder-level3/releases).","lastModifiedDate":"2022-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ModuleMateFinder.","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to ModuleMate Finder.","lastModifiedDate":"2022-02-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"ModuleMate Finder is a desktop app that allows students to find people taking the same modules as them, easily and efficiently","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"  e.g. in `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`, `NAME`, `PHONE_NUMBER`, `EMAIL` and `ADDRESS`  are parameters which cannot be left empty. ","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"junlee1991"},"content":"* Parameters has to be in order.\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"junlee1991"},"content":"  e.g. if the command specifies `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`, then it must follow strictly that format.","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"### Quick Jump","lastModifiedDate":"2022-02-19"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"- [Help](#viewing-help--help)","lastModifiedDate":"2022-02-19"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"- [List](#listing-all-persons--list)","lastModifiedDate":"2022-02-19"},{"lineNumber":75,"author":{"gitId":"fantablack"},"content":"- [Add Contact](#adding-a-contact--add)","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"fantablack"},"content":"- [Add Module to Contact](#adding-a-module-to-a-contact--add)","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"- [Delete](#deleting-a-person--delete)","lastModifiedDate":"2022-02-19"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"- [Edit](#editing-a-person--edit)","lastModifiedDate":"2022-02-19"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"- [Clear](#clearing-all-entries--clear)","lastModifiedDate":"2022-02-19"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"- [Tags](#tagging-a-person--tag)","lastModifiedDate":"2022-02-19"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"- [Find](#locating-a-person-find)","lastModifiedDate":"2022-02-19"},{"lineNumber":82,"author":{"gitId":"Btaykb"},"content":"- [Undo](#undo-a-command--undo)","lastModifiedDate":"2022-03-01"},{"lineNumber":83,"author":{"gitId":"Btaykb"},"content":"- [Redo](#redo-a-command--redo)","lastModifiedDate":"2022-03-01"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"- [Exit](#exiting-the-program--exit)","lastModifiedDate":"2022-02-19"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"### Listing all persons : `list`","lastModifiedDate":"2022-02-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":96,"author":{"gitId":"bakano98"},"content":"Shows a list of all persons in ModuleMate Finder.","lastModifiedDate":"2022-02-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":98,"author":{"gitId":"bakano98"},"content":"Format: `list`","lastModifiedDate":"2022-02-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"fantablack"},"content":"### Adding a Contact : `add`","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"fantablack"},"content":"Adds a contact to ModuleMate Finder.","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"fantablack"},"content":"Format: `add -c n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS​`","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"fantablack"},"content":"* `add -c n/Bob p/87654321 e/bob@u.nus.edu`","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"fantablack"},"content":"### Adding a Module to a Contact : `add`","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"fantablack"},"content":"Adds a module to an existing contact","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"fantablack"},"content":"Format: `add INDEX -m c/CODE`","lastModifiedDate":"2022-02-28"},{"lineNumber":114,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"fantablack"},"content":"* Adds a module represented by module code `CODE` to a contact at index `INDEX`","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"fantablack"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-02-28"},{"lineNumber":117,"author":{"gitId":"fantablack"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"fantablack"},"content":"Examples:","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"fantablack"},"content":"* `add 2 -m c/CS1231`","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"bakano98"},"content":"Edits an existing person in ModuleMate Finder.","lastModifiedDate":"2022-02-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"bakano98"},"content":"Deletes the specified person from ModuleMate Finder.","lastModifiedDate":"2022-02-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"bakano98"},"content":"* `list` followed by `delete 2` deletes the 2nd person in ModuleMate Finder.","lastModifiedDate":"2022-02-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"lawwm"},"content":"### Deleting a module : `deletemodule`","lastModifiedDate":"2022-02-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":155,"author":{"gitId":"lawwm"},"content":"Deletes the specified module from contact in ModuleMate Finder.","lastModifiedDate":"2022-02-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":157,"author":{"gitId":"lawwm"},"content":"Format: `deletemodule INDEX t/TAG...`","lastModifiedDate":"2022-02-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":159,"author":{"gitId":"lawwm"},"content":"* Deletes modules for the person at the specified `INDEX`.","lastModifiedDate":"2022-02-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-02-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-26"},{"lineNumber":162,"author":{"gitId":"lawwm"},"content":"* The modules will be deleted only if the person has the specified modules.","lastModifiedDate":"2022-02-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":165,"author":{"gitId":"lawwm"},"content":"* `list` followed by `delete 2 t/CS3230` deletes the module CS3230 for the 2nd person in ModuleMate Finder.","lastModifiedDate":"2022-02-26"},{"lineNumber":166,"author":{"gitId":"lawwm"},"content":"* `find Betsy` followed by `delete 1 t/CS2102 t/CS2040S` deletes the specified modules for the 1st person in the results of the `find` command.","lastModifiedDate":"2022-02-26"},{"lineNumber":167,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2022-02-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-02-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":175,"author":{"gitId":"bakano98"},"content":"Examples:","lastModifiedDate":"2022-02-19"},{"lineNumber":176,"author":{"gitId":"lawwm"},"content":"- `clear` wipes all data from ModuleMate Finder.","lastModifiedDate":"2022-02-26"},{"lineNumber":177,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":178,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":179,"author":{"gitId":"lawwm"},"content":"### Clearing all modules for a person : `clearmodules`","lastModifiedDate":"2022-02-26"},{"lineNumber":180,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":181,"author":{"gitId":"lawwm"},"content":"Clears all modules based on the given index from ModuleMate Finder.","lastModifiedDate":"2022-02-26"},{"lineNumber":182,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":183,"author":{"gitId":"lawwm"},"content":"Format: `clearmodules INDEX`","lastModifiedDate":"2022-02-26"},{"lineNumber":184,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":185,"author":{"gitId":"lawwm"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":186,"author":{"gitId":"lawwm"},"content":"- `clear 5` wipes all modules for person in index 5.","lastModifiedDate":"2022-02-26"},{"lineNumber":187,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":188,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":189,"author":{"gitId":"lawwm"},"content":"### Set a status for a Person : `status`","lastModifiedDate":"2022-02-26"},{"lineNumber":190,"author":{"gitId":"lawwm"},"content":"Sets a person\u0027s status as favourite or blacklisted.","lastModifiedDate":"2022-02-26"},{"lineNumber":191,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":192,"author":{"gitId":"lawwm"},"content":"Format: `status INDEX s/STATUS`","lastModifiedDate":"2022-02-26"},{"lineNumber":193,"author":{"gitId":"lawwm"},"content":"- Gives a status to the person at specified `INDEX`","lastModifiedDate":"2022-02-26"},{"lineNumber":194,"author":{"gitId":"lawwm"},"content":"- Status can either be a `blacklist` or `favourite`, a person can have no status tagged.","lastModifiedDate":"2022-02-26"},{"lineNumber":195,"author":{"gitId":"bakano98"},"content":"- `INDEX` must be a **positive integer** 1, 2, 3, ...","lastModifiedDate":"2022-02-19"},{"lineNumber":196,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":197,"author":{"gitId":"bakano98"},"content":"Examples:","lastModifiedDate":"2022-02-19"},{"lineNumber":198,"author":{"gitId":"lawwm"},"content":"- `status 1 s/blacklist` tags the 1st person in ModuleMate Finder as blacklisted.","lastModifiedDate":"2022-02-26"},{"lineNumber":199,"author":{"gitId":"lawwm"},"content":"- `status 2 s/favourite` tags the 2nd person in ModuleMate Finder as favourite.","lastModifiedDate":"2022-02-26"},{"lineNumber":200,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":201,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":202,"author":{"gitId":"bakano98"},"content":"### Locating a person: `find`","lastModifiedDate":"2022-02-19"},{"lineNumber":203,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":204,"author":{"gitId":"bakano98"},"content":"Finds a person by the given flag and keyword.","lastModifiedDate":"2022-02-19"},{"lineNumber":205,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":206,"author":{"gitId":"lawwm"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-02-26"},{"lineNumber":207,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":208,"author":{"gitId":"bakano98"},"content":"- The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2022-02-19"},{"lineNumber":209,"author":{"gitId":"bakano98"},"content":"- Only the given flag + keyword is searched","lastModifiedDate":"2022-02-19"},{"lineNumber":210,"author":{"gitId":"bakano98"},"content":"- Keyword not matching the indicator is ignored","lastModifiedDate":"2022-02-19"},{"lineNumber":211,"author":{"gitId":"bakano98"},"content":"- Only full keywords will be matched e.g. `CS323` will not match `CS3230`","lastModifiedDate":"2022-02-19"},{"lineNumber":212,"author":{"gitId":"bakano98"},"content":"-Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-02-19"},{"lineNumber":213,"author":{"gitId":"bakano98"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2022-02-19"},{"lineNumber":214,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":215,"author":{"gitId":"bakano98"},"content":"Examples:","lastModifiedDate":"2022-02-19"},{"lineNumber":216,"author":{"gitId":"bakano98"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2022-02-19"},{"lineNumber":217,"author":{"gitId":"lawwm"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-02-26"},{"lineNumber":218,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":219,"author":{"gitId":"lawwm"},"content":"### Locating a person by their module: `filter`","lastModifiedDate":"2022-02-26"},{"lineNumber":220,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":221,"author":{"gitId":"lawwm"},"content":"Finds a person by the given module code. ","lastModifiedDate":"2022-02-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"lawwm"},"content":"Format: `filter t/TAG`","lastModifiedDate":"2022-02-26"},{"lineNumber":224,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":225,"author":{"gitId":"lawwm"},"content":"- Only the given flag + keyword is searched","lastModifiedDate":"2022-02-26"},{"lineNumber":226,"author":{"gitId":"lawwm"},"content":"- Keyword not matching the indicator is ignored","lastModifiedDate":"2022-02-26"},{"lineNumber":227,"author":{"gitId":"lawwm"},"content":"- Valid module code have 2-3 prefix letters followed by 4 digits and one optional letter.","lastModifiedDate":"2022-02-26"},{"lineNumber":228,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":229,"author":{"gitId":"lawwm"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":230,"author":{"gitId":"lawwm"},"content":"* `filter t/CS3230`  will find all persons with the module CS3230","lastModifiedDate":"2022-02-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"Btaykb"},"content":"### Undo a command : `undo`","lastModifiedDate":"2022-03-01"},{"lineNumber":233,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":234,"author":{"gitId":"Btaykb"},"content":"Undoes the most recent command. ","lastModifiedDate":"2022-03-01"},{"lineNumber":235,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":236,"author":{"gitId":"Btaykb"},"content":"Format: `undo`","lastModifiedDate":"2022-03-01"},{"lineNumber":237,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":238,"author":{"gitId":"Btaykb"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":239,"author":{"gitId":"Btaykb"},"content":"- After deleting a contact at index 5, `undo` will reverse the delete command and bring the contact back at index 5.","lastModifiedDate":"2022-03-01"},{"lineNumber":240,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":241,"author":{"gitId":"Btaykb"},"content":"### Redo a command : `redo`","lastModifiedDate":"2022-03-01"},{"lineNumber":242,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":243,"author":{"gitId":"Btaykb"},"content":"Restores most recent command that was undone using `undo`.","lastModifiedDate":"2022-03-01"},{"lineNumber":244,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":245,"author":{"gitId":"Btaykb"},"content":"Format: `redo`","lastModifiedDate":"2022-03-01"},{"lineNumber":246,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":247,"author":{"gitId":"Btaykb"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":248,"author":{"gitId":"Btaykb"},"content":"- After editing a contact\u0027s name at index 3 from `George` to `Adam` and using `undo` to reverse the contact\u0027s name","lastModifiedDate":"2022-03-01"},{"lineNumber":249,"author":{"gitId":"Btaykb"},"content":"back to `George`, using `redo` will restore the contact\u0027s name back to `Adam`.","lastModifiedDate":"2022-03-01"},{"lineNumber":250,"author":{"gitId":"Btaykb"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"bakano98"},"content":"ModuleMateFinder data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":264,"author":{"gitId":"bakano98"},"content":"ModuleMateFinder data are saved as a JSON file `[JAR file location]/data/ModuleMateFinder.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-02-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":267,"author":{"gitId":"bakano98"},"content":"If your changes to the data file makes its format invalid, ModuleMateFinder will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-02-19"},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":270,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":271,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"junlee1991"},"content":"Q: Are all modules offered by NUS available in ModuleMateFinder","lastModifiedDate":"2022-02-26"},{"lineNumber":281,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":282,"author":{"gitId":"junlee1991"},"content":"A: As long as the module offered can be found in NUSmod, it will be available on ModuleMateFinder as well.  ","lastModifiedDate":"2022-02-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"fantablack"},"content":"| Action            | Format                                                                                             | Examples                               |","lastModifiedDate":"2022-02-28"},{"lineNumber":289,"author":{"gitId":"fantablack"},"content":"|-------------------|----------------------------------------------------------------------------------------------------|----------------------------------------|","lastModifiedDate":"2022-02-28"},{"lineNumber":290,"author":{"gitId":"fantablack"},"content":"| **List**          | `list -flags`                                                                                      | `list -m`, `list -c`                   |","lastModifiedDate":"2022-02-28"},{"lineNumber":291,"author":{"gitId":"fantablack"},"content":"| **Add**           | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`                                                      | `add n/Bob p/87654321 e/bob@u.nus.edu` |","lastModifiedDate":"2022-02-28"},{"lineNumber":292,"author":{"gitId":"fantablack"},"content":"| **Delete**        | `delete index`                                                                                     | `delete 3`                             |","lastModifiedDate":"2022-02-28"},{"lineNumber":293,"author":{"gitId":"fantablack"},"content":"| **Delete Module** | `deletemodule index t/TAG`...                                                                      | `deletemodule 1 t/CS1231`              |","lastModifiedDate":"2022-02-28"},{"lineNumber":294,"author":{"gitId":"fantablack"},"content":"| **Edit**          | `edit index [n/NAME] [c/CODE] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]` **brackets indicate optional | `edit 1 -c n/Alice`                    |","lastModifiedDate":"2022-02-28"},{"lineNumber":295,"author":{"gitId":"fantablack"},"content":"| **Clear**         | `clear`                                                                                            | `clear`                                |","lastModifiedDate":"2022-02-28"},{"lineNumber":296,"author":{"gitId":"fantablack"},"content":"| **Clear Modules** | `clear INDEX`                                                                                      | `clear 3`                              |","lastModifiedDate":"2022-02-28"},{"lineNumber":297,"author":{"gitId":"fantablack"},"content":"| **Status**        | `status INDEX s/STATUS`                                                                            | `status 2 s/favourite`                 |","lastModifiedDate":"2022-02-28"},{"lineNumber":298,"author":{"gitId":"fantablack"},"content":"| **Find**          | `find KEYWORD [MORE_KEYWORDS]`                                                                     | `find James Jake`                      |","lastModifiedDate":"2022-02-28"},{"lineNumber":299,"author":{"gitId":"fantablack"},"content":"| **Filter**        | `filter t/TAG`                                                                                     | `filter t/CS3230`                      |","lastModifiedDate":"2022-02-28"},{"lineNumber":300,"author":{"gitId":"Btaykb"},"content":"| **Undo**          | `undo`                                                                                             | `undo`                                 |","lastModifiedDate":"2022-03-01"},{"lineNumber":301,"author":{"gitId":"Btaykb"},"content":"| **Redo**          | `redo`                                                                                             | `redo`                                 |","lastModifiedDate":"2022-03-01"},{"lineNumber":302,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"bakano98":48,"lawwm":41,"junlee1991":7,"Btaykb":23,"-":149,"fantablack":34}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"bakano98"},"content":"    content: \"ModuleMate Finder\";","lastModifiedDate":"2022-03-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"bakano98":1,"-":294}},{"path":"docs/team/bakano98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"---","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"layout: page","lastModifiedDate":"2022-02-19"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"title: Wei Jies Project Portfolio Page","lastModifiedDate":"2022-02-19"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"---","lastModifiedDate":"2022-02-19"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"# Skeleton of the Project Portfolio Page for Wei Jie","lastModifiedDate":"2022-02-19"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-19"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"- **Administrative**:","lastModifiedDate":"2022-02-19"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"  - Fully set up team repo","lastModifiedDate":"2022-02-19"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"  - Set up User Guide for ease of update","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"- **New Feature**:","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"  - Added the ability to blacklist/favourite users in the ModuleMateFinder","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"  - Added the ability to filter by users by module code","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-19"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-19"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-19"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-19"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-19"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-19"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"* **Project management**:","lastModifiedDate":"2022-02-19"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-19"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-19"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-19"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-19"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-19"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"    * User Guide:","lastModifiedDate":"2022-02-19"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-19"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-19"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-19"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-19"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"* **Community**:","lastModifiedDate":"2022-02-19"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-19"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-19"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-19"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-19"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"* **Tools**:","lastModifiedDate":"2022-02-19"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-19"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-19"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"bakano98":57}},{"path":"docs/team/btaykb.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"Btaykb"},"content":"title: Benjamin\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"Btaykb":1,"-":45}},{"path":"docs/team/fantablack.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fantablack"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"fantablack"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"fantablack"},"content":"title: Bryan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"fantablack"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"fantablack"},"content":"# Skeleton of the Project Portfolio Page for Bryan","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"fantablack"},"content":"### Project: ModuleMate Finder Level 3","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"fantablack"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"fantablack"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"fantablack"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"fantablack"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"fantablack"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"fantablack"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"fantablack"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"fantablack"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"fantablack"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"fantablack"},"content":"* **Project management**:","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"fantablack"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"fantablack"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"fantablack"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"fantablack"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"fantablack"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"fantablack"},"content":"    * User Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"fantablack"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"fantablack"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"fantablack"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"fantablack"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"fantablack"},"content":"* **Community**:","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"fantablack"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"fantablack"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"fantablack"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"fantablack"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"fantablack"},"content":"* **Tools**:","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"fantablack"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"fantablack"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"fantablack"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"fantablack"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"fantablack":47}},{"path":"docs/team/junlee1991.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"title: Julio Harjo\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"# Skeleton of the Project Portfolio Page for Julio Harjo","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"junlee1991":3,"-":45}},{"path":"docs/team/lawwm.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"title: Wei Ming\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"# Skeleton of the Project Portfolio Page for Wei Ming","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"- **Administrative**:","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"    - Fully set up team repo","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"    - Set up User Guide for ease of update","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"* **Project management**:","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"    * User Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"* **Community**:","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"* **Tools**:","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"lawwm":53}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"    public static final String MESSAGE_MORE_TAGS_THAN_EXPECTED \u003d \"There should only be 1 tag!\";","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bakano98":1,"-":13}},{"path":"src/main/java/seedu/address/logic/commands/ClearModulesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import java.util.Set;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"public class ClearModulesCommand extends Command {","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    public static final String COMMAND_WORD \u003d \"clearmodules\";","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"            + \": Clear all modules of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%s\u0027s modules have been cleared\";","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"    public ClearModulesCommand(Index targetIndex) {","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit);","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson.getName()));","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"    private static Person createEditedPerson(Person personToEdit) {","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"        Status updatedStatus \u003d personToEdit.getStatus();","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedStatus, updatedTags);","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"                || (other instanceof ClearModulesCommand // instanceof handles nulls","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 targetIndex.equals(((ClearModulesCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":82}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lawwm":1,"-":70}},{"path":"src/main/java/seedu/address/logic/commands/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import java.util.Set;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"public class DeleteModuleCommand extends Command {","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    public static final String COMMAND_WORD \u003d \"deletemodule\";","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"            + \": Clear specified modules of the person identified by the index \"","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"            + \"number used in the displayed person list.\\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_TAG + \"CS3230 \" + PREFIX_TAG + \"CS1231S\\n\";","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted Modules for %s: %s\";","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_FAILURE \u003d \"These modules were not found: %s\";","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"    private final List\u003cTag\u003e modules;","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"     * @param targetIndex of the person in the filtered person list","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"     * @param modules modules to be deleted","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"    public DeleteModuleCommand(Index targetIndex, List\u003cTag\u003e modules) {","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"        List\u003cTag\u003e modulesToDelete \u003d new ArrayList\u003c\u003e(modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"        if (modules.size() !\u003d 0) {","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"            throw new CommandException(String.format(MESSAGE_FAILURE, modules));","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson.getName(), modulesToDelete));","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"    private static Person createEditedPerson(Person personToEdit, List\u003cTag\u003e modules) {","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"lawwm"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-02-26"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"        Status updatedStatus \u003d personToEdit.getStatus();","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":90,"author":{"gitId":"lawwm"},"content":"        Set\u003cTag\u003e oldTags \u003d personToEdit.getTags();","lastModifiedDate":"2022-02-26"},{"lineNumber":91,"author":{"gitId":"lawwm"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(oldTags);","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"lawwm"},"content":"        modules.removeIf(module -\u003e updatedTags.remove(module));","lastModifiedDate":"2022-02-26"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedStatus, updatedTags);","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":96,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-02-26"},{"lineNumber":98,"author":{"gitId":"lawwm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"lawwm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-26"},{"lineNumber":100,"author":{"gitId":"lawwm"},"content":"                || (other instanceof DeleteModuleCommand // instanceof handles nulls","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteModuleCommand) other).targetIndex)) // state check","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"lawwm"},"content":"                \u0026\u0026 modules.equals(((DeleteModuleCommand) other).modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":104}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"bakano98"},"content":"        Status updatedStatus \u003d editPersonDescriptor.getStatus().orElse(personToEdit.getStatus());","lastModifiedDate":"2022-02-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedStatus, updatedTags);","lastModifiedDate":"2022-02-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"bakano98"},"content":"        private Status status;","lastModifiedDate":"2022-02-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"bakano98"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2022-02-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"bakano98"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2022-02-25"},{"lineNumber":194,"author":{"gitId":"bakano98"},"content":"            this.status \u003d status;","lastModifiedDate":"2022-02-25"},{"lineNumber":195,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":196,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":197,"author":{"gitId":"bakano98"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2022-02-25"},{"lineNumber":198,"author":{"gitId":"bakano98"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2022-02-25"},{"lineNumber":199,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":200,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"bakano98"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2022-02-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"bakano98":16,"-":225}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.NameContainsTagPredicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":" * Searches persons by their corresponding tags. This allows filtering by modules for users within ModuleMateFinder","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose tags contain any of \"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"            + \"the specified keyword (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"            + \"Parameters: KEYWORD \\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS3230\";","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"    private final NameContainsTagPredicate predicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    public FilterCommand(NameContainsTagPredicate predicate) {","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"        return new CommandResult(","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":42}},{"path":"src/main/java/seedu/address/logic/commands/StatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import java.util.List;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":" * Changes the status of an existing person in the address book.","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"public class StatusCommand extends Command {","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"    public static final String COMMAND_WORD \u003d \"status\";","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"    public static final String MESSAGE_ADD_STATUS_SUCCESS \u003d \"Added status to Person: %1$s\";","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    public static final String MESSAGE_ADD_STATUS_FAILURE \u003d \"Tags should be either \u0027blacklist\u0027 or \u0027favourite\u0027\";","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"    public static final String MESSAGE_DELETE_STATUS_SUCCESS \u003d \"Removed status from Person: %1$s\";","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the status of the person identified \"","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"            + \"Existing status will be overwritten by the input.\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"            + PREFIX_STATUS + \"[STATUS]\\n\"","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"            + PREFIX_STATUS + \"blacklist\";","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"    private final Index index;","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"    private final Status status;","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"     * @param index of the person in the filtered person list to edit the status","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"     * @param status of the person to be updated to","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"    public StatusCommand(Index index, Status status) {","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        requireAllNonNull(index, status);","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"                personToEdit.getAddress(), status, personToEdit.getTags());","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-02-20"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-02-20"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2022-02-20"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"     * Generates a command execution success message based on whether the status is added to or removed from","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2022-02-20"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2022-02-20"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"        String message \u003d !status.value.isEmpty() ? MESSAGE_ADD_STATUS_SUCCESS : MESSAGE_DELETE_STATUS_SUCCESS;","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2022-02-20"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-20"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-20"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"        // short circuit if same object","lastModifiedDate":"2022-02-20"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-20"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"            return true;","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-02-20"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"        if (!(other instanceof StatusCommand)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"            return false;","lastModifiedDate":"2022-02-20"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"        // state check","lastModifiedDate":"2022-02-20"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"        StatusCommand e \u003d (StatusCommand) other;","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-02-20"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"                \u0026\u0026 status.equals(e.status);","lastModifiedDate":"2022-02-25"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"bakano98":91}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"        Status status \u003d new Status(\"\"); // disallow adding status when adding a person","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"        Person person \u003d new Person(name, phone, email, address, status, tagList);","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"bakano98":3,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.ClearModulesCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.DeleteModuleCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.StatusCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"        case ClearModulesCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"            return new ClearModuleCommandParser().parse(arguments);","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"        case DeleteModuleCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"            return new DeleteModuleCommandParser().parse(arguments);","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"        case StatusCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"            return new StatusCommandParser().parse(arguments);","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-25"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bakano98":6,"lawwm":8,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/ClearModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.ClearModulesCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"public class ClearModuleCommandParser implements Parser\u003cClearModulesCommand\u003e {","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"    public ClearModulesCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"            return new ClearModulesCommand(index);","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearModulesCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":30}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"    /* Prefix definitions. Add Prefixes here whenever you add a new command */","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bakano98":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import java.util.Collection;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import java.util.Set;","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.DeleteModuleCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"public class DeleteModuleCommandParser implements Parser\u003cDeleteModuleCommand\u003e {","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_EMPTY \u003d \"You did not input modules to be deleted.\";","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteModuleCommand","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"     * and returns an DeleteModuleCommand object for execution.","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    public DeleteModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        Index index;","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        List\u003cTag\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteModuleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        modules.addAll(parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)));","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        return new DeleteModuleCommand(index, modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"    private Set\u003cTag\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"            throw new ParseException(MESSAGE_EMPTY);","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"        return ParserUtil.parseTags(tagSet);","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":69}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MORE_TAGS_THAN_EXPECTED;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.NameContainsTagPredicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"        if (tagKeywords.length \u003e 1) {","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"                    String.format(MESSAGE_MORE_TAGS_THAN_EXPECTED, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"        // because we only allow ONE tag.","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"        String tagToFind \u003d tagKeywords[0];","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"        return new FilterCommand(new NameContainsTagPredicate(tagToFind));","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":37}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2022-02-21"},{"lineNumber":101,"author":{"gitId":"bakano98"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-21"},{"lineNumber":102,"author":{"gitId":"bakano98"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":103,"author":{"gitId":"bakano98"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2022-02-21"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":105,"author":{"gitId":"bakano98"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-02-25"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2022-02-25"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2022-02-25"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-25"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":111,"author":{"gitId":"bakano98"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2022-02-25"},{"lineNumber":112,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":113,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bakano98":16,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/StatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.StatusCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":" * Parses input arguments and creates a new {@code StatusCommand} object","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"public class StatusCommandParser implements Parser\u003cStatusCommand\u003e {","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code StatusCommand}","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"     * and returns a {@code StatusCommand} object for execution.","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    public StatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STATUS);","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"        Index index;","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"            Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"            return new StatusCommand(index, status);","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"        } catch (NoSuchElementException nsee) {","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE), nsee);","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"bakano98":43}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"lawwm"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"lawwm"},"content":"        ObservableList\u003cPerson\u003e personList \u003d persons.asUnmodifiableObservableList();","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"lawwm"},"content":"        for (Person p : personList) {","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"            sb.append(p.toString());","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"lawwm"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":106,"author":{"gitId":"lawwm"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-26"},{"lineNumber":107,"author":{"gitId":"lawwm"},"content":"        //return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2022-02-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lawwm":8,"-":119}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bakano98":1,"-":150}},{"path":"src/main/java/seedu/address/model/person/NameContainsTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import java.util.Set;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"public class NameContainsTagPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"    // May possibly change to a list of tags","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"    private final Tag tag;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"    public NameContainsTagPredicate(String tag) {","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"        this.tag \u003d new Tag(tag);","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"        // instead of converting to stream, it is simply a tag now","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"        // so, to do the \"test\", we only need to check if tag is within the set of tags","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"        Set\u003cTag\u003e tags \u003d person.getTags();","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"        return tags.contains(tag);","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"                || (other instanceof NameContainsTagPredicate // instanceof handles nulls","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"                \u0026\u0026 tag.equals(((NameContainsTagPredicate) other).tag)); // state check","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":34}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    // constants","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"    public static final String BLACKLIST \u003d \"blacklist\";","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"    public static final String FAVOURITE \u003d \"favourite\";","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"    private final Status status;","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Status status, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"        // This is how to add a proper blacklist/favourite when editing the thing!","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"        if (status.toString().equals(BLACKLIST) || status.toString().equals(FAVOURITE)) {","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"            this.status \u003d status;","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        } else {","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"            this.status \u003d new Status(\"\");","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"    public Status getStatus() {","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"        return status;","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-02-20"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"                \u0026\u0026 otherPerson.getStatus().equals(getStatus());","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"bakano98"},"content":"                .append(getAddress())","lastModifiedDate":"2022-02-20"},{"lineNumber":129,"author":{"gitId":"bakano98"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2022-02-25"},{"lineNumber":130,"author":{"gitId":"bakano98"},"content":"                .append(getStatus());","lastModifiedDate":"2022-02-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bakano98":20,"-":120}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":" * Represents a Person\u0027s status in the address book.","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"public class Status {","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status should be either \u0027blacklist\u0027 or \u0027favourite\u0027\";","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"    public final String value;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"     * Constructor for a status","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"     * Represents a status for a Person.","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"     * @param status","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"    public Status(String status) {","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"        String lowerCaseStatus \u003d status.toLowerCase();","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"        checkArgument(isValidStatus(lowerCaseStatus), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"        // Here, we ensure that status is in lower case.","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"        value \u003d lowerCaseStatus;","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"    public String toString() {","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"        return value;","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"                \u0026\u0026 value.equals(((Status) other).value)); // state check","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        return (test.equals(\"blacklist\") || test.equals(\"favourite\") || test.equals(\"\"));","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":49}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should have 2-3 letters prefix \"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"            + \"followed by 4 digits and an optional letter\\n\";","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z]{2,3}\\\\d{4}[a-zA-Z]?\";","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"        this.tagName \u003d tagName.toUpperCase();","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lawwm":5,"-":51}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"    public static final Status EMPTY_STATUS \u003d new Status(\"\");","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_STATUS,","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"bakano98":10,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    private final String status;","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"            @JsonProperty(\"status\") String status,","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"        status \u003d source.getStatus().value;","lastModifiedDate":"2022-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-02-25"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":112,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":113,"author":{"gitId":"bakano98"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-02-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"bakano98"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2022-02-25"},{"lineNumber":116,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":117,"author":{"gitId":"bakano98"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelStatus, modelTags);","lastModifiedDate":"2022-02-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bakano98":13,"-":107}},{"path":"src/main/java/seedu/address/ui/AddWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":" * Controller for an Add page","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"public class AddWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"    public static final String HELP_MESSAGE \u003d \"You can add a person easily here\";","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"    public static final String NAME_LABEL \u003d \"Name: \";","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    public static final String PHONE_LABEL \u003d \"Number: \";","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"    public static final String ADDRESS_LABEL \u003d \"Address: \";","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"    public static final String EMAIL_LABEL \u003d \"Email: \";","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddWindow.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"    private static final String FXML \u003d \"AddWindow.fxml\";","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"    private Logic logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"    private Button addButton;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"    private Label addMessageLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"    private Label nameLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"    private Label phoneLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"    private Label addressLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"    private Label emailLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"    private Label errorLabel;","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"    private TextField nameField;","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"    private TextField phoneField;","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"    private TextField addressField;","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"    private TextField emailField;","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"     * Creates a new AddWindow.","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"     * @param root Stage to use as the root of the AddWindow.","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"    public AddWindow(Stage root) {","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"        super(FXML, root);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"     * Creates a new AddWindow.","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"    public AddWindow(Logic logic) {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"        this(new Stage());","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"        addMessageLabel.setText(HELP_MESSAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"        nameLabel.setText(NAME_LABEL);","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"        phoneLabel.setText(PHONE_LABEL);","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"        addressLabel.setText(ADDRESS_LABEL);","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"        emailLabel.setText(EMAIL_LABEL);","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"        errorLabel.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"     * Shows the add window.","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"bakano98"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"bakano98"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"bakano98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"bakano98"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"bakano98"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"    public void show() {","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"        getRoot().show();","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"bakano98"},"content":"     * Resets the fields when handleCancel() is triggered, or when submission is successful","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"bakano98"},"content":"    public void resetFields() {","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"bakano98"},"content":"        nameField.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"bakano98"},"content":"        phoneField.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"bakano98"},"content":"        addressField.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"bakano98"},"content":"        emailField.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"bakano98"},"content":"        errorLabel.setText(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"bakano98"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"bakano98"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"bakano98"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"bakano98"},"content":"     * Hides the add window.","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"bakano98"},"content":"    public void hide() {","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"bakano98"},"content":"        getRoot().hide();","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"bakano98"},"content":"     * Focuses on the help window.","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"bakano98"},"content":"    public void focus() {","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"bakano98"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"bakano98"},"content":"     * Handles submission of the fields inputted by the user through AddWindow\u0027s Ui.","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"bakano98"},"content":"    private void handleAdd() {","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"bakano98"},"content":"        String name \u003d \"n/\" + nameField.getText();","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"bakano98"},"content":"        String phone \u003d \"p/\" + phoneField.getText();","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"bakano98"},"content":"        String address \u003d \"a/\" + addressField.getText();","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"bakano98"},"content":"        String email \u003d \"e/\" + emailField.getText();","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"bakano98"},"content":"        StringBuilder userInput \u003d new StringBuilder();","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"bakano98"},"content":"        String[] personFields \u003d {\"add\", name, phone, address, email};","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"bakano98"},"content":"        if (isAnyFieldEmpty()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"bakano98"},"content":"            errorLabel.setText(\"You must input all fields!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"bakano98"},"content":"            return;","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"bakano98"},"content":"        // Craft the user input to be fed into executeCommand","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"bakano98"},"content":"        for (int i \u003d 0; i \u003c personFields.length; i++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"bakano98"},"content":"            userInput.append(personFields[i]).append(\" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"bakano98"},"content":"            executeCommand(userInput.toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"bakano98"},"content":"            // reset all fields and then hide the panel","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"bakano98"},"content":"            this.resetFields();","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"bakano98"},"content":"            this.hide();","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"bakano98"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"bakano98"},"content":"            errorLabel.setText(\"Error encountered\");","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"bakano98"},"content":"     * Checks all the fields to make sure none of it is empty.","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"bakano98"},"content":"     * @return true if any of the field is empty","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"bakano98"},"content":"    private boolean isAnyFieldEmpty() {","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"bakano98"},"content":"        if (nameField.getText().equals(\"\") || phoneField.getText().equals(\"\")","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"bakano98"},"content":"                || addressField.getText().equals(\"\") || emailField.getText().equals(\"\")) {","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"bakano98"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":186,"author":{"gitId":"bakano98"},"content":"        return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":189,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":190,"author":{"gitId":"bakano98"},"content":"    private void handleCancel() {","lastModifiedDate":"2022-03-06"},{"lineNumber":191,"author":{"gitId":"bakano98"},"content":"        this.resetFields();","lastModifiedDate":"2022-03-06"},{"lineNumber":192,"author":{"gitId":"bakano98"},"content":"        this.hide();","lastModifiedDate":"2022-03-06"},{"lineNumber":193,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":194,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":195,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":196,"author":{"gitId":"bakano98"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-03-06"},{"lineNumber":197,"author":{"gitId":"bakano98"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":198,"author":{"gitId":"bakano98"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2022-03-06"},{"lineNumber":199,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":200,"author":{"gitId":"bakano98"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":201,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":202,"author":{"gitId":"bakano98"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2022-03-06"},{"lineNumber":203,"author":{"gitId":"bakano98"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-06"},{"lineNumber":204,"author":{"gitId":"bakano98"},"content":"            MainWindow.resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-06"},{"lineNumber":205,"author":{"gitId":"bakano98"},"content":"            return commandResult;","lastModifiedDate":"2022-03-06"},{"lineNumber":206,"author":{"gitId":"bakano98"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":207,"author":{"gitId":"bakano98"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2022-03-06"},{"lineNumber":208,"author":{"gitId":"bakano98"},"content":"            MainWindow.resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2022-03-06"},{"lineNumber":209,"author":{"gitId":"bakano98"},"content":"            throw e;","lastModifiedDate":"2022-03-06"},{"lineNumber":210,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":211,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":212,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"bakano98":212}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"    // This is also a Ui part in MainWindow.","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"    protected static ResultDisplay resultDisplay;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"    private AddWindow addWindow;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"        // Pass the logic into AddWindow so we can use it to execute commands as well","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"        addWindow \u003d new AddWindow(logic);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"bakano98"},"content":"     * Opens the add window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"bakano98"},"content":"    public void handleAdd() {","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"bakano98"},"content":"        if (!addWindow.isShowing()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"bakano98"},"content":"            addWindow.show();","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"bakano98"},"content":"        } else {","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"bakano98"},"content":"            addWindow.focus();","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"bakano98"},"content":"        addWindow.hide();","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bakano98":19,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    public final Person person;","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"    // Credits to flaticon.com for the below two images","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"    private final Image favouriteImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/favourite.png\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"    private final Image blacklistImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/blacklist.png\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    private final Image placeholderImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/placeholder.png\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"    @FXML","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"    private ImageView statusImage;","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"        // Get the image to display","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"        Image imageToDisplay \u003d getImageToDisplay(person.getStatus().value);","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"        // Then set the image","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"        statusImage.setImage(imageToDisplay);","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"    private Image getImageToDisplay(String statusText) {","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"        switch (statusText) {","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"        case \"blacklist\":","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"            return blacklistImage;","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"        case \"favourite\":","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"            return favouriteImage;","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"        default:","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"            return placeholderImage;","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bakano98":26,"-":75}},{"path":"src/main/resources/view/AddWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"#copyButton {","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #6F686D;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"#copyButton:hover {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"#copyButton:armed {","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"#addContainer {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"#nameLabel {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #6F686D;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"#phoneLabel {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #6F686D;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"#addressLabel {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #6F686D;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"#emailLabel {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"    -fx-background-color: #6F686D;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"bakano98":35}},{"path":"src/main/resources/view/AddWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Add Person\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    \u003cicons\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"                \u003cURL value\u003d\"@AddWindow.css\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"            \u003cHBox fx:id\u003d\"addContainer\" alignment\u003d\"BOTTOM_RIGHT\" prefHeight\u003d\"419.0\" prefWidth\u003d\"546.0\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"               \u003cVBox prefHeight\u003d\"404.0\" prefWidth\u003d\"524.0\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"                     \u003cLabel fx:id\u003d\"addMessageLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"41.0\" prefWidth\u003d\"540.0\" text\u003d\"Label\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"                           \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"nameLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\" textFill\u003d\"#ffe5e5\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"nameField\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"John Doe\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"phoneLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\" textFill\u003d\"#ffe5e5\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"phoneField\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"91234567\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"addressLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\" textFill\u003d\"#ffe5e5\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"addressField\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"123, Woodlands Ave 16, #02-123\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"                           \u003cLabel fx:id\u003d\"emailLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"75.0\" text\u003d\"Label\" textFill\u003d\"#ffe5e5\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"                                 \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"                           \u003cTextField fx:id\u003d\"emailField\" prefHeight\u003d\"44.0\" prefWidth\u003d\"449.0\" promptText\u003d\"johndoe@example.com\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"                     \u003cLabel fx:id\u003d\"errorLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"57.0\" prefWidth\u003d\"524.0\" text\u003d\"Label\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"                           \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"                     \u003cRegion prefHeight\u003d\"89.0\" prefWidth\u003d\"524.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"                     \u003cHBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"                                \u003cButton fx:id\u003d\"cancelButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCancel\" prefHeight\u003d\"40.0\" prefWidth\u003d\"102.0\" text\u003d\"Cancel\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"                           \u003cRegion prefHeight\u003d\"7.0\" prefWidth\u003d\"325.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"                           \u003cButton fx:id\u003d\"addButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"TOP\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleAdd\" prefHeight\u003d\"41.0\" prefWidth\u003d\"104.0\" text\u003d\"Submit\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"bakano98"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"bakano98"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"bakano98"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"bakano98"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"bakano98"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"bakano98"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"bakano98":100}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Add\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"            \u003cMenuItem fx:id\u003d\"addMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleAdd\" text\u003d\"Add\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"bakano98":3,"-":60}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"   \u003cImageView fx:id\u003d\"statusImage\" fitHeight\u003d\"85.0\" fitWidth\u003d\"74.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"      \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"         \u003cInsets right\u003d\"30.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"      \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bakano98":13,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/ClearModulesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"class ClearModulesCommandTest {","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    public void execute_validIndexUnFilteredList_success() {","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"        Person personToClear \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand clearCommand \u003d new ClearModulesCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        String expectedMessage \u003d String.format(ClearModulesCommand.MESSAGE_SUCCESS, personToClear.getName());","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"        Person editedPerson \u003d new PersonBuilder(personToClear).withTags().build();","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        expectedModel.setPerson(personToClear, editedPerson);","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"        assertCommandSuccess(clearCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand clearCommand \u003d new ClearModulesCommand(outOfBoundIndex);","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        assertCommandFailure(clearCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        // Filter the second person and delete first index","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand deleteCommand \u003d new ClearModulesCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        Person personToClear \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        String expectedMessage \u003d String.format(ClearModulesCommand.MESSAGE_SUCCESS, personToClear.getName());","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"        Person editedPerson \u003d new PersonBuilder(personToClear).withTags().build();","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"        expectedModel.setPerson(personToClear, editedPerson);","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"    public void equals() {","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand clearFirstCommand \u003d new ClearModulesCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand clearSecondCommand \u003d new ClearModulesCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"        assertTrue(clearFirstCommand.equals(clearFirstCommand));","lastModifiedDate":"2022-02-26"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"        ClearModulesCommand clearFirstCommandCopy \u003d new ClearModulesCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"        assertTrue(clearFirstCommand.equals(clearFirstCommandCopy));","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"        assertFalse(clearFirstCommand.equals(1));","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"        assertFalse(clearFirstCommand.equals(null));","lastModifiedDate":"2022-02-26"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"lawwm"},"content":"        assertFalse(clearFirstCommand.equals(clearSecondCommand));","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":88}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"    public static final String VALID_STATUS_AMY \u003d Person.FAVOURITE;","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"    public static final String VALID_STATUS_BOB \u003d Person.BLACKLIST;","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    public static final String VALID_TAG_MODULE \u003d \"CS2101\";","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    public static final String VALID_TAG_MODULE_SWE \u003d \"CS2103T\";","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"    public static final String TAG_DESC_CS2103T \u003d \" \" + PREFIX_TAG + VALID_TAG_MODULE_SWE;","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    public static final String TAG_DESC_CS2101 \u003d \" \" + PREFIX_TAG + VALID_TAG_MODULE;","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"                .withTags(VALID_TAG_MODULE_SWE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"                .withTags(VALID_TAG_MODULE, VALID_TAG_MODULE_SWE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"            System.out.println(result.feedbackToUser);","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"            System.out.println(expectedCommandResult.feedbackToUser);","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bakano98":2,"lawwm":8,"-":122}},{"path":"src/test/java/seedu/address/logic/commands/DeleteModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"class DeleteModuleCommandTest {","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"        List\u003cTag\u003e modules \u003d personToDelete.getTags().stream()","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"        DeleteModuleCommand deleteCommand \u003d new DeleteModuleCommand(INDEX_FIRST_PERSON, modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"        String expectedMessage \u003d String.format(DeleteModuleCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"                personToDelete.getName(), personToDelete.getTags());","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"        Person editedPerson \u003d new PersonBuilder(personToDelete).withTags().build();","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        expectedModel.setPerson(personToDelete, editedPerson);","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"    public void equals() {","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        Person first \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        List\u003cTag\u003e modules \u003d first.getTags().stream()","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"        DeleteModuleCommand deleteFirstCommand \u003d new DeleteModuleCommand(INDEX_FIRST_PERSON, modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        DeleteModuleCommand deleteFirstCommandCopy \u003d new DeleteModuleCommand(INDEX_FIRST_PERSON, modules);","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"        assertNotEquals(deleteFirstCommand, null);","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"        Person second \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"        List\u003cTag\u003e modulesCopy \u003d second.getTags().stream()","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"        DeleteModuleCommand deleteSecondCommand \u003d new DeleteModuleCommand(INDEX_SECOND_PERSON, modulesCopy);","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":71}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"                .withTags(VALID_TAG_MODULE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_MODULE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"lawwm":3,"-":170}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE;","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_MODULE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"lawwm":2,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import java.util.Optional;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.NameContainsTagPredicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterCommand}.","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"public class FilterCommandTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"    public void equals() {","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"        NameContainsTagPredicate firstPredicate \u003d","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"                new NameContainsTagPredicate(\"CS2103T\");","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"        NameContainsTagPredicate secondPredicate \u003d","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"                new NameContainsTagPredicate(\"CS2102\");","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"        FilterCommand findFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"        FilterCommand findSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"        FilterCommand findFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"    public void execute_zeroTags_noPersonFound() {","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"        NameContainsTagPredicate predicate \u003d preparePredicate(\"CS2102\");","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"    public void execute_oneTag_onePersonFound() {","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"        Optional\u003cTag\u003e tagToString \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"                .findFirst();","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"        String moduleName \u003d tagToString","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"                .map(x -\u003e x.toString().substring(1, x.toString().length() - 1))","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"                .orElse(\"CS2103T\");","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"        Integer numOfMatches \u003d (int) (TypicalPersons.getTypicalPersons().stream()","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"                .filter(x -\u003e x.getTags().contains(tagToString.orElse(new Tag(\"CS2103T\"))))","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"                .count());","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, numOfMatches);","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"        NameContainsTagPredicate predicate \u003d preparePredicate(moduleName);","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"        assertTrue(model.getFilteredPersonList().contains(BENSON));","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"     * Parses {@code userInput} into a {@code NameContainsTagPredicate}.","lastModifiedDate":"2022-02-25"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"    private NameContainsTagPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-02-25"},{"lineNumber":92,"author":{"gitId":"bakano98"},"content":"        return new NameContainsTagPredicate(userInput);","lastModifiedDate":"2022-02-25"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":75,"lawwm":19}},{"path":"src/test/java/seedu/address/logic/commands/StatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"/**","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":" * Contains integration tests (interaction with the Model) and unit tests for StatusCommand.","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":" */","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"public class StatusCommandTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"    private static final String STATUS_STUB \u003d \"favourite\";","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"bakano98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"bakano98"},"content":"    public void execute_addStatusUnfilteredList_success() {","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"bakano98"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"bakano98"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withStatus(STATUS_STUB).build();","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"bakano98"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(editedPerson.getStatus().value));","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"bakano98"},"content":"        String expectedMessage \u003d String.format(StatusCommand.MESSAGE_ADD_STATUS_SUCCESS, editedPerson);","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"bakano98"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"bakano98"},"content":"        assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"bakano98"},"content":"    public void execute_addStatusUnfilteredList_failure() throws IllegalArgumentException {","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"        boolean isStatusAdded;","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"        try {","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"bakano98"},"content":"            Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"bakano98"},"content":"            Person editedPerson \u003d new PersonBuilder(firstPerson).withStatus(\"asdf\").build();","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"bakano98"},"content":"            StatusCommand statusCommand \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(\"asdf\"));","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"bakano98"},"content":"            String expectedMessage \u003d String.format(StatusCommand.MESSAGE_ADD_STATUS_FAILURE, editedPerson);","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":59,"author":{"gitId":"bakano98"},"content":"            Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-02-25"},{"lineNumber":60,"author":{"gitId":"bakano98"},"content":"            expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"            isStatusAdded \u003d true;","lastModifiedDate":"2022-02-25"},{"lineNumber":62,"author":{"gitId":"bakano98"},"content":"            // Unable to actually execute this due to IllegalArgumentException when \"asdf\" is passed in.","lastModifiedDate":"2022-02-25"},{"lineNumber":63,"author":{"gitId":"bakano98"},"content":"            // Instead, check if isStatusAdded is false.","lastModifiedDate":"2022-02-25"},{"lineNumber":64,"author":{"gitId":"bakano98"},"content":"            assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"bakano98"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"bakano98"},"content":"            isStatusAdded \u003d false;","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"bakano98"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"        assertFalse(isStatusAdded);","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":72,"author":{"gitId":"bakano98"},"content":"    public void execute_deleteStatusUnfilteredList_success() {","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"bakano98"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-20"},{"lineNumber":74,"author":{"gitId":"bakano98"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withStatus(\"\").build();","lastModifiedDate":"2022-02-25"},{"lineNumber":75,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":76,"author":{"gitId":"bakano98"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"                new Status(editedPerson.getStatus().toString()));","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"bakano98"},"content":"        String expectedMessage \u003d String.format(StatusCommand.MESSAGE_DELETE_STATUS_SUCCESS, editedPerson);","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":81,"author":{"gitId":"bakano98"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-02-20"},{"lineNumber":82,"author":{"gitId":"bakano98"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-02-20"},{"lineNumber":83,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"        assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":87,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":88,"author":{"gitId":"bakano98"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-02-20"},{"lineNumber":89,"author":{"gitId":"bakano98"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-20"},{"lineNumber":90,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"bakano98"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-02-20"},{"lineNumber":92,"author":{"gitId":"bakano98"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList()","lastModifiedDate":"2022-02-20"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased())).withStatus(STATUS_STUB).build();","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":95,"author":{"gitId":"bakano98"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(editedPerson.getStatus().value));","lastModifiedDate":"2022-02-25"},{"lineNumber":96,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":97,"author":{"gitId":"bakano98"},"content":"        String expectedMessage \u003d String.format(StatusCommand.MESSAGE_ADD_STATUS_SUCCESS, editedPerson);","lastModifiedDate":"2022-02-25"},{"lineNumber":98,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":99,"author":{"gitId":"bakano98"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-02-20"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-02-20"},{"lineNumber":101,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":102,"author":{"gitId":"bakano98"},"content":"        assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-25"},{"lineNumber":103,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":105,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-02-20"},{"lineNumber":107,"author":{"gitId":"bakano98"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-02-20"},{"lineNumber":108,"author":{"gitId":"bakano98"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(outOfBoundIndex, new Status(VALID_STATUS_BOB));","lastModifiedDate":"2022-02-26"},{"lineNumber":109,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":110,"author":{"gitId":"bakano98"},"content":"        assertCommandFailure(statusCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":112,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":113,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":114,"author":{"gitId":"bakano98"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-02-20"},{"lineNumber":115,"author":{"gitId":"bakano98"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-02-20"},{"lineNumber":116,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":117,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":118,"author":{"gitId":"bakano98"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-02-20"},{"lineNumber":119,"author":{"gitId":"bakano98"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-02-20"},{"lineNumber":120,"author":{"gitId":"bakano98"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-20"},{"lineNumber":121,"author":{"gitId":"bakano98"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-02-20"},{"lineNumber":122,"author":{"gitId":"bakano98"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-02-20"},{"lineNumber":123,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":124,"author":{"gitId":"bakano98"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(outOfBoundIndex, new Status(VALID_STATUS_BOB));","lastModifiedDate":"2022-02-26"},{"lineNumber":125,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":126,"author":{"gitId":"bakano98"},"content":"        assertCommandFailure(statusCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-25"},{"lineNumber":127,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":128,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":129,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":130,"author":{"gitId":"bakano98"},"content":"    public void equals() {","lastModifiedDate":"2022-02-20"},{"lineNumber":131,"author":{"gitId":"bakano98"},"content":"        final StatusCommand standardCommand \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(VALID_STATUS_AMY));","lastModifiedDate":"2022-02-26"},{"lineNumber":132,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":133,"author":{"gitId":"bakano98"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-02-20"},{"lineNumber":134,"author":{"gitId":"bakano98"},"content":"        StatusCommand commandWithSameValues \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(VALID_STATUS_AMY));","lastModifiedDate":"2022-02-26"},{"lineNumber":135,"author":{"gitId":"bakano98"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-02-20"},{"lineNumber":136,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":137,"author":{"gitId":"bakano98"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-02-20"},{"lineNumber":138,"author":{"gitId":"bakano98"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-02-20"},{"lineNumber":139,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":140,"author":{"gitId":"bakano98"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-02-20"},{"lineNumber":141,"author":{"gitId":"bakano98"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-02-20"},{"lineNumber":142,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":143,"author":{"gitId":"bakano98"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-02-20"},{"lineNumber":144,"author":{"gitId":"bakano98"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-02-20"},{"lineNumber":145,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":146,"author":{"gitId":"bakano98"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-02-20"},{"lineNumber":147,"author":{"gitId":"bakano98"},"content":"        assertFalse(standardCommand.equals(new StatusCommand(INDEX_SECOND_PERSON, new Status(VALID_STATUS_AMY))));","lastModifiedDate":"2022-02-26"},{"lineNumber":148,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":149,"author":{"gitId":"bakano98"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2022-02-25"},{"lineNumber":150,"author":{"gitId":"bakano98"},"content":"        assertFalse(standardCommand.equals(new StatusCommand(INDEX_FIRST_PERSON, new Status(VALID_STATUS_BOB))));","lastModifiedDate":"2022-02-26"},{"lineNumber":151,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":152,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"bakano98":152}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CS2101;","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CS2103T;","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE;","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE_SWE;","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_MODULE_SWE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_CS2103T, new AddCommand(expectedPerson));","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_CS2103T, new AddCommand(expectedPerson));","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_CS2103T, new AddCommand(expectedPerson));","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_CS2103T, new AddCommand(expectedPerson));","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_CS2103T, new AddCommand(expectedPerson));","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_MODULE_SWE, VALID_TAG_MODULE)","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"                + TAG_DESC_CS2101 + TAG_DESC_CS2103T, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"lawwm"},"content":"                + TAG_DESC_CS2101 + TAG_DESC_CS2103T, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"lawwm"},"content":"                + TAG_DESC_CS2101 + TAG_DESC_CS2103T, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"lawwm"},"content":"                + TAG_DESC_CS2101 + TAG_DESC_CS2103T, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"lawwm"},"content":"                + TAG_DESC_CS2101 + TAG_DESC_CS2103T, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"lawwm"},"content":"                + INVALID_TAG_DESC + VALID_TAG_MODULE_SWE, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"lawwm"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_CS2101 + TAG_DESC_CS2103T,","lastModifiedDate":"2022-02-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"lawwm":18,"-":123}},{"path":"src/test/java/seedu/address/logic/parser/ClearModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.ClearModulesCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"class ClearModuleCommandParserTest {","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"    private ClearModuleCommandParser parser \u003d new ClearModuleCommandParser();","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"    public void parse_validArgs_returnsClearModulesCommand() {","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"        assertParseSuccess(parser, \"1\", new ClearModulesCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearModulesCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":28}},{"path":"src/test/java/seedu/address/logic/parser/DeleteModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CS2101;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CS2103T;","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE_SWE;","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"import seedu.address.logic.commands.DeleteModuleCommand;","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"class DeleteModuleCommandParserTest {","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteModuleCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    private DeleteModuleCommandParser parser \u003d new DeleteModuleCommandParser();","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"        // no index specified","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, VALID_TAG_MODULE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        // no field specified","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"1\", DeleteModuleCommandParser.MESSAGE_EMPTY);","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"        // no index and no field specified","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"        // negative index","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"-5\" + VALID_TAG_MODULE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        // zero index","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"0\" + VALID_TAG_MODULE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-02-26"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"    @Test","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_CS2101","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"                + TAG_DESC_CS2103T;","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"        List\u003cTag\u003e expectedTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"        expectedTags.add(new Tag(VALID_TAG_MODULE_SWE));","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"        expectedTags.add(new Tag(VALID_TAG_MODULE));","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"        DeleteModuleCommand expectedCommand \u003d new DeleteModuleCommand(targetIndex, expectedTags);","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-02-26"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-02-26"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lawwm":73}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CS2101;","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CS2103T;","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE;","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE_SWE;","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_CS2103T + TAG_DESC_CS2101 + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-26"},{"lineNumber":100,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_CS2103T + TAG_EMPTY + TAG_DESC_CS2101, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"lawwm"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_CS2103T + TAG_DESC_CS2101, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"lawwm"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_CS2101","lastModifiedDate":"2022-02-26"},{"lineNumber":112,"author":{"gitId":"lawwm"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_CS2103T;","lastModifiedDate":"2022-02-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"lawwm"},"content":"                .withTags(VALID_TAG_MODULE, VALID_TAG_MODULE_SWE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"lawwm"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_CS2103T;","lastModifiedDate":"2022-02-26"},{"lineNumber":163,"author":{"gitId":"lawwm"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_MODULE_SWE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"lawwm"},"content":"                + TAG_DESC_CS2103T + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_CS2103T","lastModifiedDate":"2022-02-26"},{"lineNumber":173,"author":{"gitId":"lawwm"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_CS2101;","lastModifiedDate":"2022-02-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"lawwm"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-02-26"},{"lineNumber":177,"author":{"gitId":"lawwm"},"content":"                .withTags(VALID_TAG_MODULE_SWE, VALID_TAG_MODULE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"lawwm":16,"-":195}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bakano98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"bakano98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"bakano98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"bakano98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"bakano98"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.NameContainsTagPredicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"bakano98"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"bakano98"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"bakano98"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"bakano98"},"content":"        // occurs if \u003e 1 tag, or \u003c 1 tag","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"bakano98"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"bakano98"},"content":"    @Test","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"bakano98"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"bakano98"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"bakano98"},"content":"                new FilterCommand(new NameContainsTagPredicate(\"CS3230\"));","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"bakano98"},"content":"        // only valid form is without whitespaces","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"bakano98"},"content":"        assertParseSuccess(parser, \"CS3230\", expectedFilterCommand);","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"bakano98":31}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"    private static final String VALID_TAG_1 \u003d \"CS2101\";","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"    private static final String VALID_TAG_2 \u003d \"CS2103T\";","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"lawwm":2,"-":194}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_MODULE)","lastModifiedDate":"2022-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_MODULE)","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"lawwm":3,"-":99}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE;","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_MODULE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_MODULE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"lawwm":3,"-":88}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE;","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_MODULE)","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_MODULE)","lastModifiedDate":"2022-02-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"lawwm":3,"-":167}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(\"CS123S \")); // Need 4 digits","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(\"CSCS1231S \")); // Less than 4 letters prefix","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(\"C1231S \")); // More than 1 digits prefix","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        assertTrue(Tag.isValidTagName(\"CS1231S\"));","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"        assertTrue(Tag.isValidTagName(\"GEQ1000\"));;","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"lawwm":10,"-":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"bakano98"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"bakano98"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"bakano98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"bakano98"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"bakano98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-20"},{"lineNumber":69,"author":{"gitId":"bakano98"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"bakano98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"bakano98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-20"},{"lineNumber":85,"author":{"gitId":"bakano98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"bakano98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-20"},{"lineNumber":101,"author":{"gitId":"bakano98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"bakano98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_STATUS, invalidTags);","lastModifiedDate":"2022-02-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bakano98":14,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lawwm":1,"-":47}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"bakano98"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"bakano98"},"content":"    public static final String DEFAULT_STATUS \u003d \"\";","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"bakano98"},"content":"    private Status status;","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"bakano98"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"bakano98"},"content":"        status \u003d personToCopy.getStatus();","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"bakano98"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":98,"author":{"gitId":"bakano98"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2022-02-25"},{"lineNumber":99,"author":{"gitId":"bakano98"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":100,"author":{"gitId":"bakano98"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2022-02-25"},{"lineNumber":101,"author":{"gitId":"bakano98"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2022-02-25"},{"lineNumber":102,"author":{"gitId":"bakano98"},"content":"        return this;","lastModifiedDate":"2022-02-20"},{"lineNumber":103,"author":{"gitId":"bakano98"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":104,"author":{"gitId":"bakano98"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"bakano98"},"content":"        return new Person(name, phone, email, address, status, tags);","lastModifiedDate":"2022-02-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"bakano98":14,"-":95}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE;","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MODULE_SWE;","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"            .withTags(\"CS2103T\").build();","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"            .withTags(\"CS2103T\", \"MA1101R\").build();","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"CS2103T\").build();","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_MODULE_SWE).build();","lastModifiedDate":"2022-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_MODULE, VALID_TAG_MODULE_SWE)","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"lawwm":7,"-":69}}]
