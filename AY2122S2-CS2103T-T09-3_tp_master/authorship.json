[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T09-3/tp/actions)","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"* Trackermon is a **desktop app for managing shows, optimized for use via a Command Line Interface**.\u003cbr\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"  * as a tool to keep track of shows a user is currently watching","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"  * as a tool to rate and review shows a user has finished watching","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"  ","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"* It is named `Trackermon` because it was created with a mascot in mind to help track the user\u0027s shows.","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"* For the detailed documentation of this project, see the [Trackermon Product Website](https://AY2122S2-CS2103T-T09-3.github.io/tp/).","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"arcornior":9,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"mainClassName \u003d \u0027seedu.trackermon.Main\u0027","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"    archiveName \u003d \u0027Trackermon.jar\u0027","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"run {","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"arcornior":2,"aweijun":1,"-":72,"Ardentsoul":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"### Jonathan Yeo","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"\u003cimg src\u003d\"images/jonathanhoshi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"50px\"\u003e](http://github.com/jonathanhoshi) \u0026nbsp; \u0026nbsp; \u0026nbsp;","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/portfolio-icon.png\" width\u003d\"50px\"\u003e](team/jonathanhoshi.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"|   Role    | Responsibilities   |","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"|:---------:|:-------------------|","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"| Developer | Team Lead \u003cbr/\u003e UI |","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"### Ang Wei Jun","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/aweijun.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"50px\"\u003e](https://github.com/aweijun) \u0026nbsp; \u0026nbsp; \u0026nbsp;","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/portfolio-icon.png\" width\u003d\"50px\"\u003e](team/aweijun.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"|   Role    | Responsibilities        |","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"|:---------:|:------------------------|","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"| Developer | Integration \u003cbr/\u003e Model |","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"### Low Kaiwei","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/lowkaiwei98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"50px\"\u003e](http://github.com/lowkaiwei98) \u0026nbsp; \u0026nbsp; \u0026nbsp;","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/portfolio-icon.png\" width\u003d\"50px\"\u003e](team/lowkaiwei98.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"|   Role    | Responsibilities         |","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"|:---------:|:-------------------------|","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"| Developer | Code Quality \u003cbr/\u003e Logic |","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"### Lim Shao Cong","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"\u003cimg src\u003d\"images/arcornior.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"50px\"\u003e](http://github.com/arcornior) \u0026nbsp; \u0026nbsp; \u0026nbsp;","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/portfolio-icon.png\" width\u003d\"50px\"\u003e](team/arcornior.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"|   Role    | Responsibilities            |","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"|:---------:|:----------------------------|","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"| Developer | Documentation \u003cbr/\u003e Storage |","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"### Zachary Chan","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/ardentsoul.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"50px\"\u003e](https://github.com/Ardentsoul) \u0026nbsp; \u0026nbsp; \u0026nbsp;","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/portfolio-icon.png\" width\u003d\"50px\"\u003e](team/ardentsoul.md)","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"|   Role    | Responsibilities                |","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"|:---------:|:--------------------------------|","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"| Developer | Quality Assurance \u003cbr/\u003e Command |","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"arcornior":10,"-":28,"lowkaiwei98":1,"Ardentsoul":22,"JonathanHoshi":2}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T09-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S2-CS2103T-T09-3/tp) in that page reflects the coverage of your project.","lastModifiedDate":"2022-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Ardentsoul"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2122S2-CS2103T-T09-3/tp/tree/master/src/main/java/seedu/trackermon/MainApp.java).","lastModifiedDate":"2022-04-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"-":78,"Ardentsoul":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"### Table of Contents","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"* [**Introduction**](#introduction)","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"* [**Setting up, getting started**](#setting-up-getting-started)","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"* [**About**](#about)","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"  * [Purpose](#purpose)","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"  * [Scope](#scope)","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"  * [Developer guide navigation](#developer-guide-navigation)","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"* [**Design**](#design)","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"  * [Architecture](#architecture)","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"  * [UI component](#ui-component)","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"  * [Logic component](#logic-component)","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"  * [Model component](#model-component)","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"  * [Storage component](#storage-component)","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"  * [Common classes](#common-classes)","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"  * [**Implementation**](#implementation)","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"    * [Find command feature](#find-command-feature)","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"      * [What it does](#what-it-does)","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"      * [Implementation](#implementation-1)","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"      * [Design considerations](#design-considerations)","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"    * [Sort command feature](#sort-command-feature)","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"      * [What it does](#what-it-does-1)","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"      * [Implementation](#implementation-2)","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"      * [Design considerations](#design-considerations-1)","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    * [Import and Export feature](#import-and-export-feature)","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"      * [What it does](#what-it-does-2)","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"      * [Implementation](#implementation-3)","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"      * [Design considerations](#design-considerations-2)","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    * [Show status](#show-status)","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"      * [What it does](#what-it-does-3)","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"      * [Implementation](#implementation-4)","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"      * [Design considerations](#design-considerations-3)","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"* [**Documentation, logging, testing, configuration, dev-ops**](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"* [**Appendix A: Requirements**](#appendix-a-requirements)","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"  * [Product scope](#product-scope)","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"  * [User stories](#user-stories)","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"  * [Use cases](#use-cases)","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"  * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"* [**Appendix B: Glossary**](#appendix-b-glossary)","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"* [**Appendix C: Instructions for manual testing**](#appendix-c-instructions-for-manual-testing)","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"  * [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"JonathanHoshi"},"content":"  * [Adding a show](#adding-a-show)","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"  * [Deleting a show](#deleting-a-show)","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"  * [Editing a show](#editing-a-show)","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"  * [Saving data](#saving-data)","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"  * [Finding a show](#finding-a-show)","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"  * [Importing Trackermon data](#importing-trackermon-data)","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"  * [Exporting Trackermon data](#exporting-trackermon-data)","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"## **Introduction**","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"Trackermon is a **desktop application** for **tracking and managing shows, optimized for use via a Command Line Interface (CLI)** while still having the **benefits of a Graphical User Interface (GUI)**. Trackermon allows people who want to track and remember what shows they have watched, are currently watching, or plan to watch.","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-04-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"## **About**","lastModifiedDate":"2022-04-03"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"### Purpose","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"Ardentsoul"},"content":"This document specifies architecture and software design decisions for the application, Trackermon.","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"Ardentsoul"},"content":"### Scope","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"Ardentsoul"},"content":"The developer guide allows developers who want to work on Trackermon to gain a better understanding on the application\u0027s implementation.","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"Ardentsoul"},"content":"### Developer guide navigation","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"| Syntax                                                                    | Description                                             |","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"Ardentsoul"},"content":"|---------------------------------------------------------------------------|---------------------------------------------------------|","lastModifiedDate":"2022-04-03"},{"lineNumber":84,"author":{"gitId":"Ardentsoul"},"content":"| \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:bulb: \u003c/div\u003e            | A small but useful piece of information                 |","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"Ardentsoul"},"content":"| \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: \u003c/div\u003e | Additional information                                  |","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"Ardentsoul"},"content":"| \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e:exclamation: \u003c/div\u003e      | Important information to take note                      |","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"Ardentsoul"},"content":"| \\\u003cInstructions for Parameters\\\u003e                                           | Represents certain requirements you will need to follow |","lastModifiedDate":"2022-04-03"},{"lineNumber":88,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-04-03"},{"lineNumber":90,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"Ardentsoul"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103T-T09-3/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-04-03"},{"lineNumber":101,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"Ardentsoul"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103T-T09-3/tp/tree/master/src/main/java/seedu/trackermon/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103T-T09-3/tp/tree/master/src/main/java/seedu/trackermon/MainApp.java). It is responsible for,","lastModifiedDate":"2022-04-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"Ardentsoul"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103T-T09-3/tp/tree/master/src/main/java/seedu/trackermon/ui/Ui.java)","lastModifiedDate":"2022-04-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"JonathanHoshi"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ShowListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"Ardentsoul"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S2-CS2103T-T09-3/tp/tree/master/src/main/java/seedu/trackermon/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com//AY2122S2-CS2103T-T09-3/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-04-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"JonathanHoshi"},"content":"* depends on some classes in the `Model` component, as it displays `Show` object residing in the `Model`.","lastModifiedDate":"2022-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"Ardentsoul"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103T-T09-3/tp/tree/master/src/main/java/seedu/trackermon/logic/Logic.java)","lastModifiedDate":"2022-04-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"Ardentsoul"},"content":"1. When `Logic` is called upon to execute a command, it uses the `TrackermonParser` class to parse the user command.","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"Ardentsoul"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a show).","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"Ardentsoul"},"content":"* When called upon to parse a user command, the `TrackermonParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `TrackermonParser` returns back as a `Command` object.","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":202,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"Ardentsoul"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103T-T09-3/tp/tree/master/src/main/java/seedu/trackermon/model/Model.java)","lastModifiedDate":"2022-04-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"aweijun"},"content":"* stores the show list data i.e., all `Show` objects (which are contained in a `UniqueShowList` object).","lastModifiedDate":"2022-03-14"},{"lineNumber":211,"author":{"gitId":"aweijun"},"content":"* stores the currently \u0027selected\u0027 `Show` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cShow\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"aweijun"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `ShowList`, which `Show` references. This allows `ShowList` to only require one `Tag` object per unique tag, instead of each `Show` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":223,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"Ardentsoul"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/trackermon/storage/Storage.java)","lastModifiedDate":"2022-04-03"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"arcornior"},"content":"* can save both show list data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-03-14"},{"lineNumber":233,"author":{"gitId":"arcornior"},"content":"* inherits from both `ShowListStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-03-14"},{"lineNumber":234,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"aweijun"},"content":"Classes used by multiple components are in the `seedu.trackermon.commons` package.","lastModifiedDate":"2022-03-16"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":246,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"Ardentsoul"},"content":"### Find command feature","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"Ardentsoul"},"content":"#### What it does","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"Ardentsoul"},"content":"Looks for a show in a list of shows and displays all the shows that match the user\u0027s input. If the user\u0027s input contains no prefixes, `find` will do a general search through all fields in the `Show` class.","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":257,"author":{"gitId":"Ardentsoul"},"content":"#### Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/FindSequenceDiagram.png\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"Ardentsoul"},"content":"After executing the `find` command, `FindCommandParser` will map any prefixes in the user\u0027s input to Trackermon\u0027s prefix syntax. Then, it will do a check whether there are any prefixes in the input. ","lastModifiedDate":"2022-03-25"},{"lineNumber":261,"author":{"gitId":"Ardentsoul"},"content":"- If prefixes are specified, a `FindCommand` object will be created with predicates looking through the specified prefixes. ","lastModifiedDate":"2022-03-25"},{"lineNumber":262,"author":{"gitId":"Ardentsoul"},"content":"- Else, a general show predicate will be created by scanning through the name, status, rating and tag fields of the `Show` class. ","lastModifiedDate":"2022-04-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"Ardentsoul"},"content":"Then, `LogicManager` will execute the given `findCommand` object and scan through the shows in the model\u0027s list of shows while checking if any shows matches the user\u0027s input. The model is then updated with the filtered show list.","lastModifiedDate":"2022-03-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":266,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The sequence diagram below illustrates the parsing implementation of `FindCommandParser`.","lastModifiedDate":"2022-03-25"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":268,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/FindSequenceReferenceDiagram.png\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":269,"author":{"gitId":"Ardentsoul"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"Ardentsoul"},"content":"Given below is an example usage scenario and the step-by-step flow of the find command.","lastModifiedDate":"2022-03-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"Ardentsoul"},"content":"Step 1: The user launches Trackermon and is presented with a list of all shows retrieved from local storage `Trackermon.json`.","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"Ardentsoul"},"content":"Step 2: The user executes `find t/Anime` to find a show.","lastModifiedDate":"2022-03-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"Ardentsoul"},"content":"Step 3: The `find` command will check and see whether any shows contain the tag `Anime` using the `Model#updateFilteredShowList` method.","lastModifiedDate":"2022-03-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"Ardentsoul"},"content":"Step 4:","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"Ardentsoul"},"content":"`Model#updateFilteredShowList` will be called and model will be updated without modifying the original show list. If no shows match the keywords given by the user, an empty list will be displayed.","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":282,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":283,"author":{"gitId":"Ardentsoul"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":284,"author":{"gitId":"Ardentsoul"},"content":"`find Anime` will also work, however it will scan through the name, status, rating and tag fields instead of the tag field only.","lastModifiedDate":"2022-04-03"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":287,"author":{"gitId":"Ardentsoul"},"content":"The following activity diagram summarizes what happens when a user executes a valid find command:","lastModifiedDate":"2022-03-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":289,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/FindShowDiagram.png\" \u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":291,"author":{"gitId":"Ardentsoul"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-23"},{"lineNumber":292,"author":{"gitId":"Ardentsoul"},"content":"- **Alternative 1 (current choice):** The `find` command checks for keywords after the prefix. ","lastModifiedDate":"2022-03-25"},{"lineNumber":293,"author":{"gitId":"Ardentsoul"},"content":"  - If there are no prefixes, it will perform a general search using `ShowContainsKeywordsPredicate` which scans through the name, status, rating and tag fields in the `Show` class. ","lastModifiedDate":"2022-04-03"},{"lineNumber":294,"author":{"gitId":"Ardentsoul"},"content":"  - Else, `ArgumentMultimap#arePrefixesPresent` will check and return a new predicate for each value after each prefix if it is present and then generate a keyword predicate that will match values in that field.","lastModifiedDate":"2022-03-25"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":296,"author":{"gitId":"Ardentsoul"},"content":"  A for loop is implemented for the name, rating and tag predicates. This will allow an `AND` search within a list of keywords within these three parameters. The user does not need to type in the full word for any find searches as each predicate uses a fragmented search.","lastModifiedDate":"2022-04-03"},{"lineNumber":297,"author":{"gitId":"Ardentsoul"},"content":"  - Pros: Abstraction of predicates and encapsulating the checking of shows allows the predicates to be used more flexibly elsewhere to match other shows.","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"Ardentsoul"},"content":"  - Cons: More abstraction may make developers take a longer time to extend the functionality if new prefixes are being added.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":299,"author":{"gitId":"Ardentsoul"},"content":"  ","lastModifiedDate":"2022-03-23"},{"lineNumber":300,"author":{"gitId":"Ardentsoul"},"content":"- **Alternative 2:** Directly check whether the show is in the show list in `FindCommandParser` without a predicate.","lastModifiedDate":"2022-03-25"},{"lineNumber":301,"author":{"gitId":"Ardentsoul"},"content":"  - Pros: Developers can easily understand the code and its functionality as all the code is consolidated in a single class.","lastModifiedDate":"2022-03-24"},{"lineNumber":302,"author":{"gitId":"Ardentsoul"},"content":"  - Cons: Bad coding and Object-Oriented Programming (OOP) practices is prominent due to the lack of abstraction.","lastModifiedDate":"2022-03-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-24"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":306,"author":{"gitId":"lowkaiwei98"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":308,"author":{"gitId":"lowkaiwei98"},"content":"### Sort command feature","lastModifiedDate":"2022-03-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":310,"author":{"gitId":"lowkaiwei98"},"content":"#### What it does","lastModifiedDate":"2022-03-23"},{"lineNumber":311,"author":{"gitId":"lowkaiwei98"},"content":"Sorts the list of shows according to the user\u0027s input prefix. If the input contains no prefixes, sort will default to organizing the shows in ascending order by name. The format for sort is `sort [n/ORDER] [s/ORDER] [t/ORDER] [r/ORDER] [so/SEQUENCE]`. `ORDER` must be either \"asc\" or \"dsc\". If two or more of the above prefixes are being used, sort will prioritise sorting by name, then status, followed by rating, and finally tags. Use `so/` to change the priority. `SEQUENCE` must contain the full name of the prefix used and the user have to list it in the sequence in the order which sort prioritise. ","lastModifiedDate":"2022-03-30"},{"lineNumber":312,"author":{"gitId":"lowkaiwei98"},"content":"#### Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":313,"author":{"gitId":"lowkaiwei98"},"content":"After entering the sort command, the tokenizer in parser will map any prefixes in the user\u0027s input to Trackermon\u0027s prefix syntax. Then, the parser will do a check whether there are any prefixes in the input. If prefixes are specified, a `SortCommand` object will be created with `Comparator` according to the specified prefixes. Else, a `NameComparator` will be created which can be used to sort names in ascending order. `SortCommand` is a class that inherits the `Command` abstract class. `SortCommand` implements the `execute()` method from the `Command` abstract class where on execution, sort the model\u0027s list of shows according to the `Comparator`. The model is then updated with the sorted show list.","lastModifiedDate":"2022-03-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":315,"author":{"gitId":"lowkaiwei98"},"content":"Given below is an example usage scenario and the step-by-step flow of the sort command.","lastModifiedDate":"2022-03-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":317,"author":{"gitId":"lowkaiwei98"},"content":"Step 1: The user launches Trackermon and enters `sort n/asc s/dsc` to sort the list of shows.","lastModifiedDate":"2022-03-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":319,"author":{"gitId":"lowkaiwei98"},"content":"Step 2: The sort command parser will check for prefixes and generate the appropriate `Comparator` for the SortCommand. In this case it generate a `NameComparator().thenComparing(StatusComparator().reverse()))`","lastModifiedDate":"2022-03-23"},{"lineNumber":320,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":321,"author":{"gitId":"lowkaiwei98"},"content":"Step 3: When the sort command executes, it will call`Model#updateSortedShowList` method.","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":323,"author":{"gitId":"lowkaiwei98"},"content":"Step 4: The sorted list in model will apply the Comparator and model will be updated in order by ascending name then descending status.","lastModifiedDate":"2022-03-23"},{"lineNumber":324,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":325,"author":{"gitId":"lowkaiwei98"},"content":"The following activity diagram summarizes what happens when a user executes a sort command:","lastModifiedDate":"2022-03-23"},{"lineNumber":326,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":327,"author":{"gitId":"lowkaiwei98"},"content":"After the user input the sort commands, `SortCommandParser` will parse commands arguments. Then a map is used to keep track of what order prefixes (`n/`, `s/`, `t/`, `r/`) are being used and also how they are being ordered. If the user use `so/` it will reorder the Map based on the input `SEQUENCE`. Afterwards a comparator is being built according the Map and passed into SortCommand. SortCommand executes and model will update the list accordingly. ","lastModifiedDate":"2022-03-29"},{"lineNumber":328,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":329,"author":{"gitId":"lowkaiwei98"},"content":"\u003cimg src\u003d\"images/SortShowDiagram.png\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":330,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":331,"author":{"gitId":"lowkaiwei98"},"content":"The following sequence diagram summarizes what happens when a user executes a sort command, in this case sort with no prefix:","lastModifiedDate":"2022-03-23"},{"lineNumber":332,"author":{"gitId":"lowkaiwei98"},"content":"\u003cimg src\u003d\"images/SortSequenceDiagram.png\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":333,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":334,"author":{"gitId":"lowkaiwei98"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-23"},{"lineNumber":335,"author":{"gitId":"lowkaiwei98"},"content":"- **Alternative 1:** The `sort` command checks for the optional prefix. If the user\u0027s input contains no prefixes, sort will sort by name in ascending order. If both prefixes for ascending and descending are used, it will only sort by ascending. If both prefixes for name and status are used, it will sort by name then by default.","lastModifiedDate":"2022-03-29"},{"lineNumber":336,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":337,"author":{"gitId":"lowkaiwei98"},"content":"  - Pros: No invalid commands input by the user","lastModifiedDate":"2022-03-23"},{"lineNumber":338,"author":{"gitId":"lowkaiwei98"},"content":"  - Cons: Users need to get use to the prefixes used.","lastModifiedDate":"2022-03-23"},{"lineNumber":339,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":340,"author":{"gitId":"lowkaiwei98"},"content":"- **Alternative 2 (current choice):** The `sort` command checks for the non-optional prefix. Users have to provide valid input to specify which attribute to sort by and by ascending or descending. ","lastModifiedDate":"2022-03-29"},{"lineNumber":341,"author":{"gitId":"lowkaiwei98"},"content":"    - Pros: Users have fewer prefixes to remember","lastModifiedDate":"2022-03-23"},{"lineNumber":342,"author":{"gitId":"lowkaiwei98"},"content":"    - Cons: Users need to remember valid inputs","lastModifiedDate":"2022-03-23"},{"lineNumber":343,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":344,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-24"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":346,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"Ardentsoul"},"content":"### Import and Export feature","lastModifiedDate":"2022-03-25"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":350,"author":{"gitId":"Ardentsoul"},"content":"#### What it does","lastModifiedDate":"2022-04-03"},{"lineNumber":351,"author":{"gitId":"Ardentsoul"},"content":"Allows the user to quickly import/export existing Trackermon data for ease of updating multiple copies of Trackermon data across different platforms.","lastModifiedDate":"2022-03-25"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":353,"author":{"gitId":"Ardentsoul"},"content":"#### Implementation","lastModifiedDate":"2022-04-03"},{"lineNumber":354,"author":{"gitId":"arcornior"},"content":"When the import/export command is executed, a `JsonFileManager` is created. The `JsonFileManager` creates the File Explorer GUI using `JavaFx`\u0027s `FileChooser` library, and handles the logic behind import/export. The user can then use the File Explorer GUI to select which file they want to import, or where they want to export Trackermon data.","lastModifiedDate":"2022-03-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":356,"author":{"gitId":"arcornior"},"content":"For `import`: ","lastModifiedDate":"2022-03-31"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":358,"author":{"gitId":"arcornior"},"content":"After the file is selected, `ImportCommand` calls the `JsonFileManager#importFile(dataPath)` method. This method overwrites the file provided in dataPath with the selected file. ","lastModifiedDate":"2022-03-31"},{"lineNumber":359,"author":{"gitId":"arcornior"},"content":"`ImportCommand` passes in the file path of the data that Trackermon is currently using. ","lastModifiedDate":"2022-03-31"},{"lineNumber":360,"author":{"gitId":"arcornior"},"content":"After the file is overwritten, `ImportCommand` returns a `CommandResult` to `LogicManager`. ","lastModifiedDate":"2022-03-31"},{"lineNumber":361,"author":{"gitId":"arcornior"},"content":"In `LogicManager`, the new data will be read and converted into an `Optional\u003cReadOnlyShowList\u003e`. ","lastModifiedDate":"2022-03-31"},{"lineNumber":362,"author":{"gitId":"arcornior"},"content":"The old data is stored as another `ReadOnlyShowList`, and `Model#setShowList` is called to update `Model`\u0027s show list with the new data if it exists. ","lastModifiedDate":"2022-03-31"},{"lineNumber":363,"author":{"gitId":"arcornior"},"content":"If the new data does not exist, the show list will not be updated. Finally, `Storage#saveShowList` is called to update the actual data file.","lastModifiedDate":"2022-03-31"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":365,"author":{"gitId":"arcornior"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The sequence diagram below illustrates the interaction between `LogicManager`, `ImportCommand`, `JsonFileManager`, and `CommandResult`.","lastModifiedDate":"2022-03-31"},{"lineNumber":366,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":367,"author":{"gitId":"arcornior"},"content":"\u003cimg src\u003d\"images/ImportSequenceDiagram.png\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":368,"author":{"gitId":"arcornior"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":369,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":370,"author":{"gitId":"arcornior"},"content":"For `export`:","lastModifiedDate":"2022-03-31"},{"lineNumber":371,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":372,"author":{"gitId":"arcornior"},"content":"After the location is selected, `ExportCommand` calls the `JsonFileManager#exportFile(dataPath)` method. ","lastModifiedDate":"2022-03-31"},{"lineNumber":373,"author":{"gitId":"arcornior"},"content":"This method writes the data file into a file at the selected location provided by dataPath. ","lastModifiedDate":"2022-03-31"},{"lineNumber":374,"author":{"gitId":"arcornior"},"content":"After the data is written into the new file, `ExportCommand` returns a `CommandResult` to `LogicManager`.","lastModifiedDate":"2022-03-31"},{"lineNumber":375,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":376,"author":{"gitId":"arcornior"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The sequence diagram below illustrates the interaction between `LogicManager`, `ExportCommand`, `JsonFileManager`, and `CommandResult`.","lastModifiedDate":"2022-03-31"},{"lineNumber":377,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":378,"author":{"gitId":"arcornior"},"content":"\u003cimg src\u003d\"images/ExportSequenceDiagram.png\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":379,"author":{"gitId":"arcornior"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":381,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-31"},{"lineNumber":382,"author":{"gitId":"arcornior"},"content":"Implementing the FileChooser library allows us to create a File Explorer GUI similar to the user\u0027s Operating System\u0027s native File Explorer GUI.","lastModifiedDate":"2022-03-31"},{"lineNumber":383,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":384,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-04-03"},{"lineNumber":385,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":386,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":388,"author":{"gitId":"Ardentsoul"},"content":"### Show status","lastModifiedDate":"2022-03-25"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":390,"author":{"gitId":"Ardentsoul"},"content":"#### What it does","lastModifiedDate":"2022-03-25"},{"lineNumber":391,"author":{"gitId":"arcornior"},"content":"`Status` class is an attribute within the `Show` class. `Status` represents the watch status of the show, and can be represented by `completed`, `watching`, or `plan-to-watch`. ","lastModifiedDate":"2022-03-31"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":393,"author":{"gitId":"Ardentsoul"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":395,"author":{"gitId":"Ardentsoul"},"content":"`Status` class is implemented as a `enum` class. Enumerations are a list of named constants, where the named constants are `completed`, `watching` and `plan-to-watch`. ","lastModifiedDate":"2022-03-25"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":397,"author":{"gitId":"Ardentsoul"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-25"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":399,"author":{"gitId":"aweijun"},"content":"- **Alternative 1 (current choice):** ","lastModifiedDate":"2022-03-29"},{"lineNumber":400,"author":{"gitId":"aweijun"},"content":"  `Status` is implemented as a `enum` class. Enumerations offer compile time type safety, reducing the risk of runtime errors. Enumerations implementation would have better space complexity. With the `enum` implementation, all the shows would reference the same `enum` static class. However, for the class implementation, a new `Status` instance is  instantiated each time a `Show` object is created.","lastModifiedDate":"2022-03-29"},{"lineNumber":401,"author":{"gitId":"aweijun"},"content":"  - Pros: Offers compile time type safety.","lastModifiedDate":"2022-03-29"},{"lineNumber":402,"author":{"gitId":"aweijun"},"content":"  - Cons: Harder to implement for people who are not familiar with `enum` class.","lastModifiedDate":"2022-03-29"},{"lineNumber":403,"author":{"gitId":"aweijun"},"content":"- **Alternative 2 :** `Status` is implemented as a regular class that encapsulates a String or Integer which would represent the status of the show (`watching`, `completed` and `plan-to-watch`). ","lastModifiedDate":"2022-03-29"},{"lineNumber":404,"author":{"gitId":"aweijun"},"content":"  - Pros: Easier to implement as it is what most people are more familiar with.","lastModifiedDate":"2022-03-29"},{"lineNumber":405,"author":{"gitId":"aweijun"},"content":"  - Cons: Lack of compile time safety.","lastModifiedDate":"2022-03-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":407,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-25"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":410,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"Ardentsoul"},"content":"## **Appendix A: Requirements**","lastModifiedDate":"2022-03-25"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"Ardentsoul"},"content":"* wants to keep track of their shows.","lastModifiedDate":"2022-03-25"},{"lineNumber":428,"author":{"gitId":"Ardentsoul"},"content":"* prefers desktop applications over other interfaces.","lastModifiedDate":"2022-03-25"},{"lineNumber":429,"author":{"gitId":"aweijun"},"content":"* can type fast and prefers typing to mouse interactions.","lastModifiedDate":"2022-02-26"},{"lineNumber":430,"author":{"gitId":"aweijun"},"content":"* wants to be able to maintain a local copy of their list of shows","lastModifiedDate":"2022-02-26"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"aweijun"},"content":"**Value proposition**:","lastModifiedDate":"2022-02-26"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":434,"author":{"gitId":"aweijun"},"content":"* Helps users to keep track of all their shows in a single application.","lastModifiedDate":"2022-02-26"},{"lineNumber":435,"author":{"gitId":"aweijun"},"content":"* No need to create an account unlike traditional web based services.","lastModifiedDate":"2022-02-26"},{"lineNumber":436,"author":{"gitId":"aweijun"},"content":"* Able to keep a local copy of their list of shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":437,"author":{"gitId":"aweijun"},"content":"* Clean and minimal user interface.","lastModifiedDate":"2022-02-26"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":440,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":441,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":443,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"| Priority | As a…​                       | I want to…​                                           | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"Ardentsoul"},"content":"|----------|------------------------------|-------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-04-03"},{"lineNumber":449,"author":{"gitId":"Ardentsoul"},"content":"| `* * *`  | user                         | add shows                                             | add new shows into the list                                            |","lastModifiedDate":"2022-03-16"},{"lineNumber":450,"author":{"gitId":"Ardentsoul"},"content":"| `* * *`  | user                         | delete shows  \t\t                                      | remove wrong entries in the list                                       |","lastModifiedDate":"2022-03-25"},{"lineNumber":451,"author":{"gitId":"Ardentsoul"},"content":"| `* * *`  | user                         | find a show                                           | search whether a specific show is in the list                          |","lastModifiedDate":"2022-03-25"},{"lineNumber":452,"author":{"gitId":"aweijun"},"content":"| `* * *`  | user                         | list out all of my shows                              | see the details of all my shows in the list                            |","lastModifiedDate":"2022-03-16"},{"lineNumber":453,"author":{"gitId":"Ardentsoul"},"content":"| `* * *`  | user                         | edit a show from the list                             | change the name, status, rating, comment or tag of my show in the list |","lastModifiedDate":"2022-04-03"},{"lineNumber":454,"author":{"gitId":"Ardentsoul"},"content":"| `* *`    | new user                     | see usage instructions                                | refer to instructions when I forget how to use the application         |","lastModifiedDate":"2022-03-25"},{"lineNumber":455,"author":{"gitId":"Ardentsoul"},"content":"| `* * `   | long time user               | find shows of specific genres                         | recommend those shows to my friends                                    |","lastModifiedDate":"2022-03-23"},{"lineNumber":456,"author":{"gitId":"Ardentsoul"},"content":"| `* * `   | long time user               | find a show I may or may not have watched             | decide whether to watch that show or not                               |","lastModifiedDate":"2022-03-23"},{"lineNumber":457,"author":{"gitId":"Ardentsoul"},"content":"| `* * `   | long time user               | find whether a show I am watching is completed or not | continue watching if it is not completed                               |","lastModifiedDate":"2022-03-25"},{"lineNumber":458,"author":{"gitId":"arcornior"},"content":"| `* * `   | long time user               | sort the list of shows                                | view the list in an organised manner                                   |","lastModifiedDate":"2022-03-24"},{"lineNumber":459,"author":{"gitId":"Ardentsoul"},"content":"| `* * `   | user with multiple computers | import or export the show data easily                 | keep updated copies of the show data                                   |","lastModifiedDate":"2022-03-25"},{"lineNumber":460,"author":{"gitId":"aweijun"},"content":"| `* * `   | indecisive user              | get a suggestion                                      | easily decide on what show to watch                                    |","lastModifiedDate":"2022-03-30"},{"lineNumber":461,"author":{"gitId":"arcornior"},"content":"| `* * `   | user                         | comment on shows                                      | record my opinions about a show                                        |","lastModifiedDate":"2022-03-31"},{"lineNumber":462,"author":{"gitId":"arcornior"},"content":"| `* * `   | user                         | rate shows                                            | keep track of whether a show is good or bad                            |","lastModifiedDate":"2022-03-31"},{"lineNumber":463,"author":{"gitId":"arcornior"},"content":"| `* * `   | user                         | tag shows                                             | keep track of what genre the show belongs to                           |","lastModifiedDate":"2022-03-31"},{"lineNumber":464,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":465,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":467,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":469,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"Ardentsoul"},"content":"(For all use cases below, the **System** is `Trackermon` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-26"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":474,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":475,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC01 - Add a show**","lastModifiedDate":"2022-02-26"},{"lineNumber":476,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":477,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":478,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":479,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: Show will be added into Trackermon only if the user input matches the command format.**","lastModifiedDate":"2022-03-03"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"Ardentsoul"},"content":"1.  User requests to list shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":484,"author":{"gitId":"Ardentsoul"},"content":"2.  Trackermon shows a list of shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":485,"author":{"gitId":"Ardentsoul"},"content":"3.  User adds a show in Trackermon.","lastModifiedDate":"2022-02-26"},{"lineNumber":486,"author":{"gitId":"Ardentsoul"},"content":"4.  Trackermon stores the show in its storage.","lastModifiedDate":"2022-02-26"},{"lineNumber":487,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":488,"author":{"gitId":"Ardentsoul"},"content":"    Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":489,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":490,"author":{"gitId":"Ardentsoul"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":491,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":492,"author":{"gitId":"Ardentsoul"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-26"},{"lineNumber":493,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":494,"author":{"gitId":"Ardentsoul"},"content":"  Use case resumes at step 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":495,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":496,"author":{"gitId":"Ardentsoul"},"content":"* 3a. User adds a duplicate show.","lastModifiedDate":"2022-02-26"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"Ardentsoul"},"content":"    * 3a1. Trackermon shows an error message to user, indicating that there is a duplicate show in the list and requests the user to either delete the show in the list or add another show.","lastModifiedDate":"2022-02-26"},{"lineNumber":499,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":500,"author":{"gitId":"Ardentsoul"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":501,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":502,"author":{"gitId":"Ardentsoul"},"content":"* 3b. User enters command with the wrong syntax.","lastModifiedDate":"2022-03-03"},{"lineNumber":503,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":504,"author":{"gitId":"Ardentsoul"},"content":"    * 3b1. Trackermon shows an error message to user, indicating the format for adding shows is incorrect, and attaches the correct syntax format.","lastModifiedDate":"2022-02-26"},{"lineNumber":505,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":506,"author":{"gitId":"Ardentsoul"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":507,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":508,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":509,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":510,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":511,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":512,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC02 - Delete a show**","lastModifiedDate":"2022-02-26"},{"lineNumber":513,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":514,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":515,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":516,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: Show will be deleted from Trackermon only if the user input matches the command format.**","lastModifiedDate":"2022-03-03"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"Ardentsoul"},"content":"1.  User requests to list shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":521,"author":{"gitId":"Ardentsoul"},"content":"2.  Trackermon shows a list of shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":522,"author":{"gitId":"Ardentsoul"},"content":"3.  User requests to delete a specific show in the list.","lastModifiedDate":"2022-02-26"},{"lineNumber":523,"author":{"gitId":"Ardentsoul"},"content":"4.  Trackermon deletes the show.","lastModifiedDate":"2022-02-26"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"Ardentsoul"},"content":"    * 3a1. Trackermon shows an error message,  indicating the index for deleting shows is invalid.","lastModifiedDate":"2022-04-03"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"Ardentsoul"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":540,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":541,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC03 - List a show**","lastModifiedDate":"2022-02-26"},{"lineNumber":544,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":545,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":546,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":547,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: A list of shows will be displayed for the user.**","lastModifiedDate":"2022-02-26"},{"lineNumber":548,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":549,"author":{"gitId":"Ardentsoul"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":550,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":551,"author":{"gitId":"Ardentsoul"},"content":"1.  User requests to list shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":552,"author":{"gitId":"Ardentsoul"},"content":"2.  Trackermon shows a list of shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":553,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":554,"author":{"gitId":"Ardentsoul"},"content":"    Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":555,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":556,"author":{"gitId":"Ardentsoul"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":557,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":558,"author":{"gitId":"Ardentsoul"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-26"},{"lineNumber":559,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":560,"author":{"gitId":"Ardentsoul"},"content":"  Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":561,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":562,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":563,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":564,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":565,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":566,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC04 - View a list of commands**","lastModifiedDate":"2022-04-03"},{"lineNumber":567,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":568,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":569,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":570,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: A URL to the user-guide will be provided together with a command summary table.**","lastModifiedDate":"2022-04-03"},{"lineNumber":571,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":572,"author":{"gitId":"Ardentsoul"},"content":"**MSS**","lastModifiedDate":"2022-03-13"},{"lineNumber":573,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":574,"author":{"gitId":"Ardentsoul"},"content":"1.  User requests a list of commands that are available in Trackermon.","lastModifiedDate":"2022-03-13"},{"lineNumber":575,"author":{"gitId":"Ardentsoul"},"content":"2.  Trackermon shows the URL of the user-guide that contains a list of commands available in Trackermon. In addition, a command summary table will be provided.","lastModifiedDate":"2022-04-03"},{"lineNumber":576,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":577,"author":{"gitId":"Ardentsoul"},"content":"    Use case ends.","lastModifiedDate":"2022-03-13"},{"lineNumber":578,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":579,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":580,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":581,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-03-13"},{"lineNumber":582,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":583,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC05 - Exiting Trackermon**","lastModifiedDate":"2022-04-03"},{"lineNumber":584,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":585,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":586,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":587,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: Trackermon will exit.**","lastModifiedDate":"2022-04-03"},{"lineNumber":588,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":589,"author":{"gitId":"Ardentsoul"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":590,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":591,"author":{"gitId":"Ardentsoul"},"content":"1. User enters the command in Trackermon.","lastModifiedDate":"2022-03-03"},{"lineNumber":592,"author":{"gitId":"Ardentsoul"},"content":"2. Trackermon saves all changes into the disk.","lastModifiedDate":"2022-02-26"},{"lineNumber":593,"author":{"gitId":"Ardentsoul"},"content":"3. Trackermon closes.","lastModifiedDate":"2022-04-03"},{"lineNumber":594,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":595,"author":{"gitId":"Ardentsoul"},"content":"   Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":596,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":597,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":598,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":599,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":600,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":601,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC06 - Edit a show**","lastModifiedDate":"2022-04-03"},{"lineNumber":602,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":603,"author":{"gitId":"lowkaiwei98"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-03-16"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":605,"author":{"gitId":"lowkaiwei98"},"content":"**Guarantees: Show will be edited from Trackermon only if the user input matches the command format.**","lastModifiedDate":"2022-03-16"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":607,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-03-16"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":609,"author":{"gitId":"lowkaiwei98"},"content":"1.  User requests to list shows.","lastModifiedDate":"2022-03-16"},{"lineNumber":610,"author":{"gitId":"lowkaiwei98"},"content":"2.  Trackermon shows a list of shows.","lastModifiedDate":"2022-03-16"},{"lineNumber":611,"author":{"gitId":"lowkaiwei98"},"content":"3.  User requests to edit a specific show in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":612,"author":{"gitId":"lowkaiwei98"},"content":"4.  Trackermon edits the show.","lastModifiedDate":"2022-03-16"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":614,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-03-16"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":616,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-16"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":618,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":620,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-03-16"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":622,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":624,"author":{"gitId":"Ardentsoul"},"content":"    * 3a1. Trackermon shows an error message, indicating the index for editing shows is invalid.","lastModifiedDate":"2022-04-03"},{"lineNumber":625,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":626,"author":{"gitId":"lowkaiwei98"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-03-16"},{"lineNumber":627,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":628,"author":{"gitId":"lowkaiwei98"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-16"},{"lineNumber":629,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":630,"author":{"gitId":"lowkaiwei98"},"content":"---","lastModifiedDate":"2022-03-16"},{"lineNumber":631,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":632,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC07 - Find a show**","lastModifiedDate":"2022-04-03"},{"lineNumber":633,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":634,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-03-16"},{"lineNumber":635,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":636,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: Show will be found in Trackermon only if the user input matches the command format.**","lastModifiedDate":"2022-03-16"},{"lineNumber":637,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":638,"author":{"gitId":"Ardentsoul"},"content":"**MSS**","lastModifiedDate":"2022-03-16"},{"lineNumber":639,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":640,"author":{"gitId":"Ardentsoul"},"content":"1. User requests to find shows.","lastModifiedDate":"2022-03-16"},{"lineNumber":641,"author":{"gitId":"Ardentsoul"},"content":"2. Trackermon searches the existing show list.","lastModifiedDate":"2022-03-23"},{"lineNumber":642,"author":{"gitId":"Ardentsoul"},"content":"3. Trackermon shows a list of shows that matches the keyword entered by user.","lastModifiedDate":"2022-03-23"},{"lineNumber":643,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":644,"author":{"gitId":"Ardentsoul"},"content":"    Use case ends.","lastModifiedDate":"2022-03-16"},{"lineNumber":645,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":646,"author":{"gitId":"Ardentsoul"},"content":"**Extensions**","lastModifiedDate":"2022-03-16"},{"lineNumber":647,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":648,"author":{"gitId":"Ardentsoul"},"content":"* 1a. User enters the command with the wrong syntax.","lastModifiedDate":"2022-03-23"},{"lineNumber":649,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":650,"author":{"gitId":"Ardentsoul"},"content":"    * 1a1. Trackermon shows an error message to user, indicating the format for finding shows is incorrect, and attaches the correct syntax format.","lastModifiedDate":"2022-03-16"},{"lineNumber":651,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":652,"author":{"gitId":"Ardentsoul"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-03-16"},{"lineNumber":653,"author":{"gitId":"Ardentsoul"},"content":"  ","lastModifiedDate":"2022-03-16"},{"lineNumber":654,"author":{"gitId":"Ardentsoul"},"content":"* 3a. Trackermon shows an empty search result.","lastModifiedDate":"2022-03-23"},{"lineNumber":655,"author":{"gitId":"Ardentsoul"},"content":"    * 3a1. Trackermon shows a message informing the user that 0 shows are found.","lastModifiedDate":"2022-03-23"},{"lineNumber":656,"author":{"gitId":"Ardentsoul"},"content":"  ","lastModifiedDate":"2022-03-23"},{"lineNumber":657,"author":{"gitId":"Ardentsoul"},"content":"    Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":658,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":659,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-16"},{"lineNumber":660,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":661,"author":{"gitId":"lowkaiwei98"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":662,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":663,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC08 - Sort the list of shows**","lastModifiedDate":"2022-04-03"},{"lineNumber":664,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":665,"author":{"gitId":"lowkaiwei98"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-03-23"},{"lineNumber":666,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":667,"author":{"gitId":"lowkaiwei98"},"content":"**Guarantees: A list of sorted shows will be displayed for the user.**","lastModifiedDate":"2022-03-23"},{"lineNumber":668,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":669,"author":{"gitId":"lowkaiwei98"},"content":"**MSS**","lastModifiedDate":"2022-03-23"},{"lineNumber":670,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":671,"author":{"gitId":"lowkaiwei98"},"content":"1. User requests to sort the current list of shows.","lastModifiedDate":"2022-03-23"},{"lineNumber":672,"author":{"gitId":"lowkaiwei98"},"content":"2. Trackermon sort the show list.","lastModifiedDate":"2022-03-23"},{"lineNumber":673,"author":{"gitId":"lowkaiwei98"},"content":"3. Trackermon shows a list of shows in a sorted order.","lastModifiedDate":"2022-03-23"},{"lineNumber":674,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":675,"author":{"gitId":"lowkaiwei98"},"content":"   Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":677,"author":{"gitId":"lowkaiwei98"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":679,"author":{"gitId":"aweijun"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":680,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":681,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC09 - Quickly import shows**","lastModifiedDate":"2022-04-03"},{"lineNumber":682,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":683,"author":{"gitId":"arcornior"},"content":"**Preconditions: Trackermon application is started and there is pre-existing Trackermon data to import.**","lastModifiedDate":"2022-03-24"},{"lineNumber":684,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":685,"author":{"gitId":"arcornior"},"content":"**Guarantees: User\u0027s current Trackermon data will be replaced with imported Trackermon data.**","lastModifiedDate":"2022-03-24"},{"lineNumber":686,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":687,"author":{"gitId":"aweijun"},"content":"**MSS**","lastModifiedDate":"2022-03-23"},{"lineNumber":688,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":689,"author":{"gitId":"arcornior"},"content":"1. User requests to import Trackermon data.","lastModifiedDate":"2022-03-24"},{"lineNumber":690,"author":{"gitId":"arcornior"},"content":"2. Trackermon opens the file explorer GUI.","lastModifiedDate":"2022-03-24"},{"lineNumber":691,"author":{"gitId":"arcornior"},"content":"3. User selects the desired file to import.","lastModifiedDate":"2022-03-24"},{"lineNumber":692,"author":{"gitId":"arcornior"},"content":"4. Trackermon closes the file explorer GUI.","lastModifiedDate":"2022-03-24"},{"lineNumber":693,"author":{"gitId":"arcornior"},"content":"5. Trackermon imports the chosen file data.","lastModifiedDate":"2022-03-24"},{"lineNumber":694,"author":{"gitId":"arcornior"},"content":"6. Trackermon displays imported list of shows.","lastModifiedDate":"2022-03-24"},{"lineNumber":695,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":696,"author":{"gitId":"aweijun"},"content":"   Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":697,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":698,"author":{"gitId":"aweijun"},"content":"**Extensions**","lastModifiedDate":"2022-03-23"},{"lineNumber":699,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":700,"author":{"gitId":"arcornior"},"content":"* 2a. User closes the file explorer GUI.","lastModifiedDate":"2022-03-24"},{"lineNumber":701,"author":{"gitId":"arcornior"},"content":"    * 2a1. Trackermon shows an error message to user, indicating the import has failed.","lastModifiedDate":"2022-03-24"},{"lineNumber":702,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":703,"author":{"gitId":"aweijun"},"content":"      Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":704,"author":{"gitId":"aweijun"},"content":"    ","lastModifiedDate":"2022-03-23"},{"lineNumber":705,"author":{"gitId":"arcornior"},"content":"* 5a. Chosen file is a corrupted JSON file.","lastModifiedDate":"2022-03-31"},{"lineNumber":706,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":707,"author":{"gitId":"arcornior"},"content":"    * 5a1. Trackermon shows a message informing the user that the chosen file may be corrupted.","lastModifiedDate":"2022-03-31"},{"lineNumber":708,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":709,"author":{"gitId":"arcornior"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":710,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":711,"author":{"gitId":"aweijun"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-23"},{"lineNumber":712,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":713,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":714,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":715,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC10 - Quickly export shows**","lastModifiedDate":"2022-04-03"},{"lineNumber":716,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":717,"author":{"gitId":"arcornior"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-03-24"},{"lineNumber":718,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":719,"author":{"gitId":"arcornior"},"content":"**Guarantees: User\u0027s current Trackermon data will replace contents of selected file.**","lastModifiedDate":"2022-03-24"},{"lineNumber":720,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":721,"author":{"gitId":"arcornior"},"content":"**MSS**","lastModifiedDate":"2022-03-24"},{"lineNumber":722,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":723,"author":{"gitId":"arcornior"},"content":"1. User requests to export Trackermon data.","lastModifiedDate":"2022-03-24"},{"lineNumber":724,"author":{"gitId":"arcornior"},"content":"2. Trackermon displays the file explorer GUI.","lastModifiedDate":"2022-03-24"},{"lineNumber":725,"author":{"gitId":"arcornior"},"content":"3. User navigates to the desired directory or file to export Trackermon data to.","lastModifiedDate":"2022-03-24"},{"lineNumber":726,"author":{"gitId":"arcornior"},"content":"4. Trackermon closes the file explorer GUI.","lastModifiedDate":"2022-03-24"},{"lineNumber":727,"author":{"gitId":"arcornior"},"content":"5. Trackermon exports the chosen file data.","lastModifiedDate":"2022-03-24"},{"lineNumber":728,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":729,"author":{"gitId":"arcornior"},"content":"   Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":730,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":731,"author":{"gitId":"arcornior"},"content":"**Extensions**","lastModifiedDate":"2022-03-24"},{"lineNumber":732,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":733,"author":{"gitId":"arcornior"},"content":"* 2a. User closes the file explorer GUI.","lastModifiedDate":"2022-03-24"},{"lineNumber":734,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":735,"author":{"gitId":"arcornior"},"content":"    * 2a1. Trackermon shows an error message to user, indicating the export has failed.","lastModifiedDate":"2022-03-24"},{"lineNumber":736,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":737,"author":{"gitId":"arcornior"},"content":"      Use case ends.","lastModifiedDate":"2022-03-24"},{"lineNumber":738,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":739,"author":{"gitId":"arcornior"},"content":"* 3a. User changes default name to save exported data.","lastModifiedDate":"2022-03-24"},{"lineNumber":740,"author":{"gitId":"arcornior"},"content":"  \u003cbr\u003eUse case resumes at step 4.","lastModifiedDate":"2022-03-24"},{"lineNumber":741,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":742,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":743,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-24"},{"lineNumber":744,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":745,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-03-16"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"Ardentsoul"},"content":"1.  Should work on any [_Mainstream OS_](#glossary) as long as it has Java `11` or above installed.","lastModifiedDate":"2022-03-25"},{"lineNumber":750,"author":{"gitId":"lowkaiwei98"},"content":"2.  Should be able to hold up to 1000 shows without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-22"},{"lineNumber":751,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":756,"author":{"gitId":"Ardentsoul"},"content":"## **Appendix B: Glossary**","lastModifiedDate":"2022-04-03"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"Ardentsoul"},"content":"| Term              | Description                                                                                   |","lastModifiedDate":"2022-03-25"},{"lineNumber":759,"author":{"gitId":"Ardentsoul"},"content":"|-------------------|-----------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-03"},{"lineNumber":760,"author":{"gitId":"Ardentsoul"},"content":"| **Mainstream OS** | Windows, Linux, Unix, OS-X                                                                    |","lastModifiedDate":"2022-03-25"},{"lineNumber":761,"author":{"gitId":"Ardentsoul"},"content":"| **Parameter**     | Information passed in as part of a command with its type identified by a prefix (e.g. `NAME`) |","lastModifiedDate":"2022-03-25"},{"lineNumber":762,"author":{"gitId":"Ardentsoul"},"content":"| **JavaFx**        | \tJavaFX is a set of Java graphics libraries for creating Java GUI applications                |","lastModifiedDate":"2022-04-03"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":765,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"Ardentsoul"},"content":"## **Appendix C: Instructions for manual testing**","lastModifiedDate":"2022-03-25"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":777,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":778,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"JonathanHoshi"},"content":"1. Launching the app","lastModifiedDate":"2022-03-23"},{"lineNumber":781,"author":{"gitId":"JonathanHoshi"},"content":"   1. Prerequisites: Have a copy of `Trackermon.jar` in your computer.","lastModifiedDate":"2022-03-23"},{"lineNumber":782,"author":{"gitId":"JonathanHoshi"},"content":"      1. [Download](https://github.com/AY2122S2-CS2103T-T09-3/tp/releases) the jar file and copy the file into an empty folder.","lastModifiedDate":"2022-03-23"},{"lineNumber":783,"author":{"gitId":"JonathanHoshi"},"content":"   2. Double-click the jar file.","lastModifiedDate":"2022-03-23"},{"lineNumber":784,"author":{"gitId":"JonathanHoshi"},"content":"   3. Test case: Initial launch \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":785,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: Application launched with a set of sample shows.","lastModifiedDate":"2022-03-23"},{"lineNumber":786,"author":{"gitId":"JonathanHoshi"},"content":"   4. Test case: Subsequent Launch \u003cbr\u003e ","lastModifiedDate":"2022-03-24"},{"lineNumber":787,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: Application launched with user saved shows.","lastModifiedDate":"2022-03-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":789,"author":{"gitId":"JonathanHoshi"},"content":"2. Saving window preferences","lastModifiedDate":"2022-03-23"},{"lineNumber":790,"author":{"gitId":"JonathanHoshi"},"content":"   1. Launch the app. \u003cbr\u003e ","lastModifiedDate":"2022-03-23"},{"lineNumber":791,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The window size may not be optimum.","lastModifiedDate":"2022-03-23"},{"lineNumber":792,"author":{"gitId":"JonathanHoshi"},"content":"   2. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2022-03-23"},{"lineNumber":793,"author":{"gitId":"JonathanHoshi"},"content":"   3. Re-launch the app. \u003cbr\u003e ","lastModifiedDate":"2022-03-23"},{"lineNumber":794,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2022-03-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"JonathanHoshi"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"JonathanHoshi"},"content":"### Adding a show","lastModifiedDate":"2022-03-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"JonathanHoshi"},"content":"1. Prerequisites: None.","lastModifiedDate":"2022-03-23"},{"lineNumber":803,"author":{"gitId":"JonathanHoshi"},"content":"2. Test case: Adding a valid show","lastModifiedDate":"2022-03-23"},{"lineNumber":804,"author":{"gitId":"JonathanHoshi"},"content":"   1. Condition: Show named `Inception` must not exist in the show list.","lastModifiedDate":"2022-03-23"},{"lineNumber":805,"author":{"gitId":"JonathanHoshi"},"content":"   2. Command: `add n/Inception s/watching` \u003cbr\u003e ","lastModifiedDate":"2022-03-23"},{"lineNumber":806,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: Show is added into the show list. Added show details shown in the result display.","lastModifiedDate":"2022-03-23"},{"lineNumber":807,"author":{"gitId":"JonathanHoshi"},"content":"3. Test case: Adding an invalid show","lastModifiedDate":"2022-03-23"},{"lineNumber":808,"author":{"gitId":"JonathanHoshi"},"content":"   1. Condition: Show named `\"Inception\"` exists in the show list.","lastModifiedDate":"2022-03-23"},{"lineNumber":809,"author":{"gitId":"JonathanHoshi"},"content":"   2. Command: `add n/Inception s/watching` \u003cbr\u003e ","lastModifiedDate":"2022-03-23"},{"lineNumber":810,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: Show is not added into the show list. Error details shown in the result display.","lastModifiedDate":"2022-03-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":813,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":814,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":816,"author":{"gitId":"lowkaiwei98"},"content":"### Deleting a show","lastModifiedDate":"2022-02-28"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"JonathanHoshi"},"content":"1. Prerequisites: None, but if the list is empty, all deletions will result in an error.","lastModifiedDate":"2022-03-24"},{"lineNumber":819,"author":{"gitId":"JonathanHoshi"},"content":"   1. [Add shows](#adding-a-show) into the show list.","lastModifiedDate":"2022-03-23"},{"lineNumber":820,"author":{"gitId":"JonathanHoshi"},"content":"2. List all shows using the `list` command.","lastModifiedDate":"2022-03-23"},{"lineNumber":821,"author":{"gitId":"JonathanHoshi"},"content":"3. Test case: Deleting a show based on list index","lastModifiedDate":"2022-03-23"},{"lineNumber":822,"author":{"gitId":"JonathanHoshi"},"content":"   1. Condition: Range of shows must be within size of show list.","lastModifiedDate":"2022-03-24"},{"lineNumber":823,"author":{"gitId":"JonathanHoshi"},"content":"   2. Command: `delete 1` \u003cbr\u003e ","lastModifiedDate":"2022-03-23"},{"lineNumber":824,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: Show at specified index is deleted from the list. Deleted show details shown in the result display.","lastModifiedDate":"2022-03-23"},{"lineNumber":825,"author":{"gitId":"JonathanHoshi"},"content":"4. Test case: Invalid delete index","lastModifiedDate":"2022-03-23"},{"lineNumber":826,"author":{"gitId":"JonathanHoshi"},"content":"   1. Condition: Range of shows must be outside of list size.","lastModifiedDate":"2022-03-24"},{"lineNumber":827,"author":{"gitId":"JonathanHoshi"},"content":"   2. Command: `delete 0` `delete` `delete \u003cout_of_bound_integer\u003e` \u003cbr\u003e ","lastModifiedDate":"2022-03-23"},{"lineNumber":828,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: No show is deleted. Error details shown in the result display.","lastModifiedDate":"2022-03-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-23"},{"lineNumber":831,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":832,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":834,"author":{"gitId":"lowkaiwei98"},"content":"### Editing a show","lastModifiedDate":"2022-03-16"},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":836,"author":{"gitId":"JonathanHoshi"},"content":"1. Prerequisites: None, but if the list is empty, all edits will result in an error.","lastModifiedDate":"2022-03-24"},{"lineNumber":837,"author":{"gitId":"JonathanHoshi"},"content":"   1. [Add shows](#adding-a-show) into the show list.","lastModifiedDate":"2022-03-23"},{"lineNumber":838,"author":{"gitId":"JonathanHoshi"},"content":"2. List all shows using the `list` command.","lastModifiedDate":"2022-03-23"},{"lineNumber":839,"author":{"gitId":"Ardentsoul"},"content":"3. Test case: Edit show name","lastModifiedDate":"2022-03-25"},{"lineNumber":840,"author":{"gitId":"JonathanHoshi"},"content":"   1. Condition: Show named `One Piece` must not exist in the show list.","lastModifiedDate":"2022-03-23"},{"lineNumber":841,"author":{"gitId":"JonathanHoshi"},"content":"   2. Command: `edit 1 n/One Piece` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":842,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: Name of show at specified index is changed to `One Piece`. Edited show details shown in the result display.","lastModifiedDate":"2022-03-23"},{"lineNumber":843,"author":{"gitId":"Ardentsoul"},"content":"4. Test case: Edit show status","lastModifiedDate":"2022-03-25"},{"lineNumber":844,"author":{"gitId":"JonathanHoshi"},"content":"   1. Condition: None, if show status is already `completed`, expected output will be the same.","lastModifiedDate":"2022-03-23"},{"lineNumber":845,"author":{"gitId":"JonathanHoshi"},"content":"   2. Command: `edit 1 s/completed` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":846,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: Status of show at specified index is changed to `completed`. Edited show details shown in the result display.","lastModifiedDate":"2022-03-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":848,"author":{"gitId":"Ardentsoul"},"content":"5. Test case: Invalid edit index","lastModifiedDate":"2022-03-25"},{"lineNumber":849,"author":{"gitId":"JonathanHoshi"},"content":"   1. Condition: Range of shows must be outside of list size.","lastModifiedDate":"2022-03-24"},{"lineNumber":850,"author":{"gitId":"JonathanHoshi"},"content":"   2. Command: `edit 0` `edit 1` `edit \u003cout_of_bound_integer\u003e` `edit` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":851,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: No show is edited. Error details shown in the result display.","lastModifiedDate":"2022-03-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":853,"author":{"gitId":"Ardentsoul"},"content":"6. Test case: Invalid edit name","lastModifiedDate":"2022-03-25"},{"lineNumber":854,"author":{"gitId":"Ardentsoul"},"content":"   1. Condition: Show named `Inception` exists in the show list that is not currently being edited.","lastModifiedDate":"2022-04-03"},{"lineNumber":855,"author":{"gitId":"Ardentsoul"},"content":"   2. Command: `edit \u003cindex of show to be edited\u003e n/Inception` \u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":856,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: No show is edited. Error details shown in the result display.","lastModifiedDate":"2022-03-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":860,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":862,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":864,"author":{"gitId":"aweijun"},"content":"1. Saving data between sessions","lastModifiedDate":"2022-03-16"},{"lineNumber":865,"author":{"gitId":"aweijun"},"content":"   1. Launch the app.","lastModifiedDate":"2022-03-16"},{"lineNumber":866,"author":{"gitId":"Ardentsoul"},"content":"   2. Modify the show list using any commands that affect the details of a show.","lastModifiedDate":"2022-03-25"},{"lineNumber":867,"author":{"gitId":"JonathanHoshi"},"content":"   3. Relaunch the app. \u003cbr\u003e ","lastModifiedDate":"2022-03-23"},{"lineNumber":868,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The most recent changes made to the shows is retained.","lastModifiedDate":"2022-03-23"},{"lineNumber":869,"author":{"gitId":"aweijun"},"content":"    ","lastModifiedDate":"2022-03-16"},{"lineNumber":870,"author":{"gitId":"JonathanHoshi"},"content":"2. Dealing with missing files","lastModifiedDate":"2022-03-23"},{"lineNumber":871,"author":{"gitId":"JonathanHoshi"},"content":"   1. Prerequisites: JSON file is missing.","lastModifiedDate":"2022-03-23"},{"lineNumber":872,"author":{"gitId":"JonathanHoshi"},"content":"      1. Delete the `data/trackermon.json` file to simulate a missing file.","lastModifiedDate":"2022-03-23"},{"lineNumber":873,"author":{"gitId":"JonathanHoshi"},"content":"   2. Relaunch the app. \u003cbr\u003e Expected: The app starts with the default list of show list.","lastModifiedDate":"2022-03-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"JonathanHoshi"},"content":"3. Dealing with corrupted files","lastModifiedDate":"2022-03-23"},{"lineNumber":876,"author":{"gitId":"JonathanHoshi"},"content":"   1. Prerequisites: JSON file is corrupted.","lastModifiedDate":"2022-03-23"},{"lineNumber":877,"author":{"gitId":"JonathanHoshi"},"content":"      1. Modify the `data/trackermon.json` file with any software that would break the JSON format to simulate corrupted file.","lastModifiedDate":"2022-03-23"},{"lineNumber":878,"author":{"gitId":"JonathanHoshi"},"content":"   2. Relaunch the app. \u003cbr\u003e Expected: The app starts with an empty show list.","lastModifiedDate":"2022-03-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-23"},{"lineNumber":881,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":882,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":883,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":884,"author":{"gitId":"Ardentsoul"},"content":"### Finding a show","lastModifiedDate":"2022-03-23"},{"lineNumber":885,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":886,"author":{"gitId":"Ardentsoul"},"content":"1. Finding a show (General Find)","lastModifiedDate":"2022-03-23"},{"lineNumber":887,"author":{"gitId":"JonathanHoshi"},"content":"   1. Prerequisites: None, but if the list is empty, all searches will lead to no results.","lastModifiedDate":"2022-03-24"},{"lineNumber":888,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":889,"author":{"gitId":"JonathanHoshi"},"content":"   2. Test case: Find single keyword","lastModifiedDate":"2022-03-23"},{"lineNumber":890,"author":{"gitId":"JonathanHoshi"},"content":"      1. Command: `find shingeki` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":891,"author":{"gitId":"Ardentsoul"},"content":"         Expected: Looks through the name, status, rating and tag fields for any partial or full word of `shingeki` then displays them on the show list. \u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":892,"author":{"gitId":"Ardentsoul"},"content":"         E.g. `shingeki` from name, status, rating, or tag fields will be matched.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":893,"author":{"gitId":"Ardentsoul"},"content":"      ","lastModifiedDate":"2022-03-23"},{"lineNumber":894,"author":{"gitId":"JonathanHoshi"},"content":"   3. Test case: Find multiple keywords","lastModifiedDate":"2022-03-23"},{"lineNumber":895,"author":{"gitId":"JonathanHoshi"},"content":"      1. Command: `find shingeki shutter` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":896,"author":{"gitId":"Ardentsoul"},"content":"         Expected: Looks through the name, status, rating and tag fields for any partial or full word of `shingeki` or `shutter` then displays them on the show list. \u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":897,"author":{"gitId":"Ardentsoul"},"content":"         E.g. `shingeki` or `shutter` from name, status, rating, or tag fields will be matched (`OR` search).","lastModifiedDate":"2022-04-03"},{"lineNumber":898,"author":{"gitId":"Ardentsoul"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":899,"author":{"gitId":"JonathanHoshi"},"content":"      2. Command: `find 86 shutter` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":900,"author":{"gitId":"Ardentsoul"},"content":"         Expected: Looks through the name, status, rating and tag fields for any partial or full word of `86` or `shutter` then displays them on the show list. \u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":901,"author":{"gitId":"Ardentsoul"},"content":"         E.g. `86` or `shutter` from name, status, rating, or tag fields will be matched (`OR` search).","lastModifiedDate":"2022-04-03"},{"lineNumber":902,"author":{"gitId":"Ardentsoul"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":903,"author":{"gitId":"JonathanHoshi"},"content":"   4. Test case: Invalid command format","lastModifiedDate":"2022-03-23"},{"lineNumber":904,"author":{"gitId":"JonathanHoshi"},"content":"      1. Command: `find` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":905,"author":{"gitId":"Ardentsoul"},"content":"         Expected: No show is found. Error details shown in the result display, with a result message saying `Invalid command format!...`.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":906,"author":{"gitId":"Ardentsoul"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":907,"author":{"gitId":"JonathanHoshi"},"content":"   5. Test case: Unknown command","lastModifiedDate":"2022-03-23"},{"lineNumber":908,"author":{"gitId":"JonathanHoshi"},"content":"      1. Command: `find2` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":909,"author":{"gitId":"Ardentsoul"},"content":"         Expected: No show is found. Error details shown in the result display, with a result message saying `Unknown command`.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":910,"author":{"gitId":"Ardentsoul"},"content":"      ","lastModifiedDate":"2022-03-23"},{"lineNumber":911,"author":{"gitId":"JonathanHoshi"},"content":"2. Find a show (Precise Find)","lastModifiedDate":"2022-03-23"},{"lineNumber":912,"author":{"gitId":"JonathanHoshi"},"content":"   1. Prerequisites: None, but if the list is empty, all searches will lead to no results.","lastModifiedDate":"2022-03-24"},{"lineNumber":913,"author":{"gitId":"Ardentsoul"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":914,"author":{"gitId":"JonathanHoshi"},"content":"   2. Test case: Finding with a single prefix","lastModifiedDate":"2022-03-23"},{"lineNumber":915,"author":{"gitId":"JonathanHoshi"},"content":"      1. Command: `find n/shingeki` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":916,"author":{"gitId":"JonathanHoshi"},"content":"         Expected: Looks through the name field for any partial or full word of `shingeki` then displays them on the show list. \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":917,"author":{"gitId":"Ardentsoul"},"content":"         E.g. `shingeki` from the name field will be matched.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":918,"author":{"gitId":"JonathanHoshi"},"content":"      2. Command: `find n/shingeki no kyojin` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":919,"author":{"gitId":"JonathanHoshi"},"content":"         Expected: Looks through the name field for any partial or full word of `shingeki` and `no` and `kyojin` then displays them on the show list. \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":920,"author":{"gitId":"Ardentsoul"},"content":"         E.g. `shingeki` and `no` and `kyojin` from the name field will be matched (`AND` search within a single prefix).\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":921,"author":{"gitId":"Ardentsoul"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":922,"author":{"gitId":"JonathanHoshi"},"content":"   3. Test case: Finding with multiple prefixes","lastModifiedDate":"2022-03-23"},{"lineNumber":923,"author":{"gitId":"JonathanHoshi"},"content":"      1. Command: `find n/shingeki s/completed` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":924,"author":{"gitId":"JonathanHoshi"},"content":"         Expected: Looks through the name field for any partial or full word of `shingeki` and the status field for any partial or full word of `completed` then displays them on the show list. \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":925,"author":{"gitId":"Ardentsoul"},"content":"         E.g. **Both** `shingeki` from the name field and `completed` from the status field must be present to be matched (`AND` search between multiple prefixes).","lastModifiedDate":"2022-03-24"},{"lineNumber":926,"author":{"gitId":"Ardentsoul"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":927,"author":{"gitId":"JonathanHoshi"},"content":"      2. Command: `find n/shingeki t/seinen` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":928,"author":{"gitId":"JonathanHoshi"},"content":"         Expected: Looks through the name field for any partial or full word of `shingeki` and the tag field for any partial or full word of `seinen` then displays them on the show list. \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":929,"author":{"gitId":"Ardentsoul"},"content":"         E.g. **Both** `shingeki` from the name field and `seinen` from the tag field must be present to be matched (`AND` search between multiple prefixes).","lastModifiedDate":"2022-03-24"},{"lineNumber":930,"author":{"gitId":"Ardentsoul"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":931,"author":{"gitId":"Ardentsoul"},"content":"      3. Command: `find n/shingeki no kyojin r/5` \u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":932,"author":{"gitId":"Ardentsoul"},"content":"         Expected: Looks through the name field for any partial or full word of `shingeki` and `no` and `kyojin` and the rating field for number of `5` then displays them on the show list. \u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":933,"author":{"gitId":"Ardentsoul"},"content":"         E.g. `shingeki` and `no` and `kyojin` from the name field and `5` from the rating field will be matched (`AND` search within a single prefix and `AND` search between multiple prefixes).","lastModifiedDate":"2022-04-03"},{"lineNumber":934,"author":{"gitId":"Ardentsoul"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":935,"author":{"gitId":"JonathanHoshi"},"content":"   4. Test case: Invalid command format","lastModifiedDate":"2022-03-23"},{"lineNumber":936,"author":{"gitId":"JonathanHoshi"},"content":"      1. Command: `find n/` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":937,"author":{"gitId":"Ardentsoul"},"content":"         Expected: No show is found. Error details shown in the result display, with a result message saying `Invalid command format!...`.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":938,"author":{"gitId":"JonathanHoshi"},"content":"      2. Command: `find t/Action Anime` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":939,"author":{"gitId":"Ardentsoul"},"content":"         Expected: No show is found. Error details shown in the result display, with a result message saying `Invalid command format!...`.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":940,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"Ardentsoul"},"content":"   5. Test case: Multiple of the same prefix","lastModifiedDate":"2022-03-24"},{"lineNumber":942,"author":{"gitId":"JonathanHoshi"},"content":"      1. Command: `find n/shingeki n/shutter` \u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":943,"author":{"gitId":"Ardentsoul"},"content":"         Expected: Looks through the name field for any partial or full word of `shutter` then displays them on the show list (Ignores the first instance of n/) \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":944,"author":{"gitId":"Ardentsoul"},"content":"         E.g. `shutter` from the name field will be matched.","lastModifiedDate":"2022-03-23"},{"lineNumber":945,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":946,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-15"},{"lineNumber":947,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":948,"author":{"gitId":"JonathanHoshi"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":950,"author":{"gitId":"lowkaiwei98"},"content":"### Sorting the list of shows","lastModifiedDate":"2022-03-23"},{"lineNumber":951,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":952,"author":{"gitId":"JonathanHoshi"},"content":"1. Prerequisites: None, but if the list is empty, all sorts will lead to no results.","lastModifiedDate":"2022-03-24"},{"lineNumber":953,"author":{"gitId":"JonathanHoshi"},"content":"2. Test case: Sort with no prefix","lastModifiedDate":"2022-03-24"},{"lineNumber":954,"author":{"gitId":"JonathanHoshi"},"content":"   1. Command: `sort` \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":955,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The list of shows will default to being sorted by name in ascending order.","lastModifiedDate":"2022-03-24"},{"lineNumber":956,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":957,"author":{"gitId":"JonathanHoshi"},"content":"3. Test case: Sort with single prefix ","lastModifiedDate":"2022-03-24"},{"lineNumber":958,"author":{"gitId":"lowkaiwei98"},"content":"   1. Command: `sort n/asc` \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":959,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The list of shows is sorted by name in ascending order.","lastModifiedDate":"2022-03-24"},{"lineNumber":960,"author":{"gitId":"lowkaiwei98"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":961,"author":{"gitId":"lowkaiwei98"},"content":"   2. Command: `sort n/dsc` \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":962,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The list of shows is sorted by name in descending order.","lastModifiedDate":"2022-03-24"},{"lineNumber":963,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":964,"author":{"gitId":"lowkaiwei98"},"content":"   3. Command: `sort s/asc` \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":965,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The list of shows is sorted by status in ascending order.","lastModifiedDate":"2022-03-24"},{"lineNumber":966,"author":{"gitId":"lowkaiwei98"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":967,"author":{"gitId":"lowkaiwei98"},"content":"   4. Command: `sort s/dsc` \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":968,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The list of shows is sorted by status in descending order.","lastModifiedDate":"2022-03-24"},{"lineNumber":969,"author":{"gitId":"lowkaiwei98"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":970,"author":{"gitId":"lowkaiwei98"},"content":"   5. Command: `sort t/asc` \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":971,"author":{"gitId":"lowkaiwei98"},"content":"      Expected: The list of shows is sorted by tag in ascending order.","lastModifiedDate":"2022-03-29"},{"lineNumber":972,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":973,"author":{"gitId":"lowkaiwei98"},"content":"   6. Command: `sort t/dsc` \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":974,"author":{"gitId":"lowkaiwei98"},"content":"      Expected: The list of shows is sorted by tag in descending order.","lastModifiedDate":"2022-03-29"},{"lineNumber":975,"author":{"gitId":"lowkaiwei98"},"content":"   ","lastModifiedDate":"2022-03-29"},{"lineNumber":976,"author":{"gitId":"lowkaiwei98"},"content":"   7. Command: `sort r/asc` \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":977,"author":{"gitId":"lowkaiwei98"},"content":"      Expected: The list of shows is sorted by rating in ascending order.","lastModifiedDate":"2022-03-29"},{"lineNumber":978,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":979,"author":{"gitId":"lowkaiwei98"},"content":"   8. Command: `sort r/dsc` \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":980,"author":{"gitId":"lowkaiwei98"},"content":"      Expected: The list of shows is sorted by rating in descending order.","lastModifiedDate":"2022-03-29"},{"lineNumber":981,"author":{"gitId":"lowkaiwei98"},"content":"   ","lastModifiedDate":"2022-03-29"},{"lineNumber":982,"author":{"gitId":"JonathanHoshi"},"content":"4. Test case: Sort with multiple same prefixes ","lastModifiedDate":"2022-03-24"},{"lineNumber":983,"author":{"gitId":"lowkaiwei98"},"content":"   1. Command: `sort n/dsc n/asc` \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":984,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The list of shows is sorted by name in ascending order.","lastModifiedDate":"2022-03-24"},{"lineNumber":985,"author":{"gitId":"lowkaiwei98"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":986,"author":{"gitId":"lowkaiwei98"},"content":"   2. Command: `sort s/dsc s/asc` \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":987,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The list of shows is sorted by status in ascending order. ","lastModifiedDate":"2022-03-24"},{"lineNumber":988,"author":{"gitId":"lowkaiwei98"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":989,"author":{"gitId":"JonathanHoshi"},"content":"5. Test case: Sort with multiple different prefixes","lastModifiedDate":"2022-03-24"},{"lineNumber":990,"author":{"gitId":"lowkaiwei98"},"content":"   1. Command: `sort n/asc s/dsc` \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":991,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The list of shows is sorted by name in ascending order followed by status in descending order.","lastModifiedDate":"2022-03-24"},{"lineNumber":992,"author":{"gitId":"lowkaiwei98"},"content":"   ","lastModifiedDate":"2022-03-23"},{"lineNumber":993,"author":{"gitId":"lowkaiwei98"},"content":"   2. Command: `sort n/asc s/dsc so/statusname`\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":994,"author":{"gitId":"JonathanHoshi"},"content":"      Expected: The list of shows is sorted by status in descending order followed by name in ascending order.","lastModifiedDate":"2022-03-24"},{"lineNumber":995,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":996,"author":{"gitId":"lowkaiwei98"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-23"},{"lineNumber":997,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":998,"author":{"gitId":"lowkaiwei98"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":999,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1000,"author":{"gitId":"arcornior"},"content":"### Importing Trackermon data","lastModifiedDate":"2022-03-24"},{"lineNumber":1001,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1002,"author":{"gitId":"arcornior"},"content":"1. Prerequisites: Another valid copy of Trackermon data exists.","lastModifiedDate":"2022-03-31"},{"lineNumber":1003,"author":{"gitId":"arcornior"},"content":"2. Ensure that current Trackermon data is different from data we plan to import.","lastModifiedDate":"2022-03-31"},{"lineNumber":1004,"author":{"gitId":"arcornior"},"content":"3. Launch the app.","lastModifiedDate":"2022-03-31"},{"lineNumber":1005,"author":{"gitId":"arcornior"},"content":"4. Command: `import`","lastModifiedDate":"2022-03-31"},{"lineNumber":1006,"author":{"gitId":"arcornior"},"content":"5. Test case: Importing valid data","lastModifiedDate":"2022-03-31"},{"lineNumber":1007,"author":{"gitId":"arcornior"},"content":"   1. Condition: Valid Trackermon data file exists in storage.","lastModifiedDate":"2022-03-31"},{"lineNumber":1008,"author":{"gitId":"arcornior"},"content":"   2. Action: Select valid Trackermon data file to import.","lastModifiedDate":"2022-03-31"},{"lineNumber":1009,"author":{"gitId":"arcornior"},"content":"   ","lastModifiedDate":"2022-03-31"},{"lineNumber":1010,"author":{"gitId":"arcornior"},"content":"      Expected: Import succeeds, current show list is replaced with imported Trackermon data\u0027s show list.","lastModifiedDate":"2022-03-31"},{"lineNumber":1011,"author":{"gitId":"arcornior"},"content":"6. Test case: Cancelling import","lastModifiedDate":"2022-03-31"},{"lineNumber":1012,"author":{"gitId":"arcornior"},"content":"   1. Condition: None.","lastModifiedDate":"2022-03-31"},{"lineNumber":1013,"author":{"gitId":"arcornior"},"content":"   2. Action: Click \"Cancel\" button in File Explorer GUI.","lastModifiedDate":"2022-03-31"},{"lineNumber":1014,"author":{"gitId":"arcornior"},"content":"   ","lastModifiedDate":"2022-03-31"},{"lineNumber":1015,"author":{"gitId":"arcornior"},"content":"      Expected: Trackermon displays message saying `Import data aborted.`","lastModifiedDate":"2022-03-31"},{"lineNumber":1016,"author":{"gitId":"arcornior"},"content":"7. Test case: Importing corrupted Trackermon data file","lastModifiedDate":"2022-03-31"},{"lineNumber":1017,"author":{"gitId":"arcornior"},"content":"   1. Condition: Corrupted Trackermon data file exists in storage. Manually edit `data/trackermon.json` to break JSON formatting. An example would be removing the opening curly braces.","lastModifiedDate":"2022-03-31"},{"lineNumber":1018,"author":{"gitId":"arcornior"},"content":"   2. Action: Select corrupted Trackermon data file to import.","lastModifiedDate":"2022-03-31"},{"lineNumber":1019,"author":{"gitId":"arcornior"},"content":"   ","lastModifiedDate":"2022-03-31"},{"lineNumber":1020,"author":{"gitId":"arcornior"},"content":"      Expected: Trackermon displays error message saying `Could not read import data: File may be corrupted.`","lastModifiedDate":"2022-03-31"},{"lineNumber":1021,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1022,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-24"},{"lineNumber":1023,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1024,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":1025,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1026,"author":{"gitId":"arcornior"},"content":"### Exporting Trackermon data","lastModifiedDate":"2022-03-24"},{"lineNumber":1027,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1028,"author":{"gitId":"arcornior"},"content":"1. Prerequisites: None.","lastModifiedDate":"2022-03-31"},{"lineNumber":1029,"author":{"gitId":"arcornior"},"content":"2. Launch the app.","lastModifiedDate":"2022-03-31"},{"lineNumber":1030,"author":{"gitId":"arcornior"},"content":"3. Command: `export`","lastModifiedDate":"2022-03-31"},{"lineNumber":1031,"author":{"gitId":"arcornior"},"content":"4. Test case: Exporting data to directory without existing `trackermon.json`","lastModifiedDate":"2022-03-31"},{"lineNumber":1032,"author":{"gitId":"arcornior"},"content":"    1. Condition: Directory without existing `trackermon.json` exists.","lastModifiedDate":"2022-03-31"},{"lineNumber":1033,"author":{"gitId":"arcornior"},"content":"    2. Action: Select directory fulfilling condition to export Trackermon data to.","lastModifiedDate":"2022-03-31"},{"lineNumber":1034,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":1035,"author":{"gitId":"arcornior"},"content":"       Expected: Export succeeds, selected directory now has `trackermon.json` file containing exported show data.","lastModifiedDate":"2022-03-31"},{"lineNumber":1036,"author":{"gitId":"arcornior"},"content":"5. Test case: Exporting data to directory with existing `trackermon.json`","lastModifiedDate":"2022-03-31"},{"lineNumber":1037,"author":{"gitId":"arcornior"},"content":"    1. Condition: Directory with existing `trackermon.json` exists.","lastModifiedDate":"2022-03-31"},{"lineNumber":1038,"author":{"gitId":"arcornior"},"content":"    2. Action: Select directory fulfilling condition to export Trackermon data to.","lastModifiedDate":"2022-03-31"},{"lineNumber":1039,"author":{"gitId":"arcornior"},"content":"   ","lastModifiedDate":"2022-03-31"},{"lineNumber":1040,"author":{"gitId":"arcornior"},"content":"       Expected: Trackermon displays pop-up box informing user that `trackermon.json` exists, and asks if the user wants to replace it.","lastModifiedDate":"2022-03-31"},{"lineNumber":1041,"author":{"gitId":"arcornior"},"content":"6. Test case: Renaming exported data in File Explorer GUI.","lastModifiedDate":"2022-03-31"},{"lineNumber":1042,"author":{"gitId":"arcornior"},"content":"    1. Condition: None.","lastModifiedDate":"2022-03-31"},{"lineNumber":1043,"author":{"gitId":"arcornior"},"content":"    2. Action: Replace `trackermon` in File Explorer GUI with `testdata`, and export it to a directory not containing `testdata.json`.","lastModifiedDate":"2022-03-31"},{"lineNumber":1044,"author":{"gitId":"arcornior"},"content":"      ","lastModifiedDate":"2022-03-31"},{"lineNumber":1045,"author":{"gitId":"arcornior"},"content":"       Expected: Export succeeds, selected directory now has `testdata.json` file containing exported show data.","lastModifiedDate":"2022-03-31"},{"lineNumber":1046,"author":{"gitId":"arcornior"},"content":"7. Test case: Cancelling export","lastModifiedDate":"2022-03-31"},{"lineNumber":1047,"author":{"gitId":"arcornior"},"content":"    1. Condition: None.","lastModifiedDate":"2022-03-31"},{"lineNumber":1048,"author":{"gitId":"arcornior"},"content":"    2. Action: Click \"Cancel\" button in File Explorer GUI.","lastModifiedDate":"2022-03-31"},{"lineNumber":1049,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":1050,"author":{"gitId":"arcornior"},"content":"       Expected: Trackermon displays message saying `Export data aborted.`","lastModifiedDate":"2022-03-31"},{"lineNumber":1051,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1052,"author":{"gitId":"arcornior"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-24"},{"lineNumber":1053,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1054,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"arcornior":215,"aweijun":45,"-":283,"lowkaiwei98":102,"Ardentsoul":295,"JonathanHoshi":114}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"   1. Run the `seedu.trackermon.Main` and try a few commands.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"aweijun":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"   e.g. `seedu.trackermon.commons.StringUtilTest`","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"   e.g. `seedu.trackermon.storage.StorageManagerTest`","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"   e.g. `seedu.trackermon.logic.LogicManagerTest`","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aweijun":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"## Table of Contents","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"* [**Introduction**](#introduction)","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"* [**User guide navigation**](#user-guide-navigation)","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"* [**Quick start**](#quick-start)","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"* [**User interface**](#user-interface)","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"* [**Command structure**](#command-structure)","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"  * [Parameter conditions](#parameter-conditions)","lastModifiedDate":"2022-04-03"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"* [**Features**](#features)","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"  * [Viewing help: `help`](#viewing-help-help)","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"  * [Adding a show: `add`](#adding-a-show-add)","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"  * [Deleting a show: `delete`](#deleting-a-show-delete)","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"  * [Editing a show: `edit`](#editing-a-show-edit)","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"  * [Listing all shows: `list`](#listing-all-shows-list)","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"  * [Clearing all shows: `clear`](#clearing-all-shows-clear)","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"  * [Finding a show: `find`](#finding-a-show-find)","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    * [General find](#general-find)","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"    * [Precise find](#precise-find)","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"  * [Sorting the shows `sort`](#sorting-the-shows-sort)","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"  * [Suggesting a show `suggest`](#suggest-a-show-suggest)","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"  * [Import a show: `import`](#importing-a-show-import)","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"  * [Exporting a show: `export`](#exporting-a-show-export)","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"  * [Exiting the program: `exit`](#exiting-the-program-exit)","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"* [**FAQ**](#faq)","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"* [**Command Summary**](#command-summary)","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"* [**Glossary**](#glossary)","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"## Introduction","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"Always accessing MyAnimeList or IMDB to record down the shows you watched? Or finding it difficult to search the different websites that stored your show information? Fret not because **Trackermon** is the app just for you! But hold on, you may be wondering what is Trackermon?","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"Trackermon is a **desktop application** for **tracking and managing shows, optimized for use via a Command Line Interface ([CLI](#glossary))** while still having the **benefits of a Graphical User Interface ([GUI](#glossary))**. Trackermon allows you to track and remember what shows you have watched, are currently watching, or plan to watch. You can even review these shows!","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"## User guide navigation","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"Before you continue reading the rest of our user guide, the table below displays some important syntax to facilitate your reading.","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"| Syntax                                                                    | Description                                             |","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"|---------------------------------------------------------------------------|---------------------------------------------------------|","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"| **Bold**                                                                  | Important words to note                                 |","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"| `Git Flavoured Markdown`                                                  | Command word/prefix/parameter                           |","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"| \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:bulb: \u003c/div\u003e            | A small but useful piece of information                 |","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"| \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: \u003c/div\u003e | Additional information                                  |","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"| \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e:exclamation: \u003c/div\u003e      | Important information to watch out for                  |","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"| [Optional Parameters]                                                     | Indicates the parameters/prefixes that may be optional  |","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"| \\\u003cInstructions for Parameters\\\u003e                                           | Represents certain requirements you will need to follow |","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"| {Multiple Optional Parameters}                                            | At least one parameter must be provided                 |","lastModifiedDate":"2022-04-02"},{"lineNumber":55,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-04-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"1. Ensure you have `Java 11` or above installed in your Computer.","lastModifiedDate":"2022-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"JonathanHoshi"},"content":"2. Download the latest version of **Trackermon** [here](https://github.com/AY2122S2-CS2103T-T09-3/tp/releases).","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"JonathanHoshi"},"content":"3. Move the file to the folder you want to use as the _home folder_ for **Trackermon**.","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"4. Double-click the file to start the app. The layout of Trackermon\u0027s [GUI](#glossary) is shown in the [section below](#user-interface).","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"   * Do note that for Linux OS, you may have to [enable double-click to run JAR files](https://askubuntu.com/a/270175) first! \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"   ","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"5. For a quick overview of all available commands, please refer to our [command summary](#command-summary).","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"6. For details of each command, please proceed to the [command-structure](#command-structure) section.","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":76,"author":{"gitId":"Ardentsoul"},"content":"## User interface","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/Trackermon_UI_Info.png\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"Ardentsoul"},"content":"The table below briefly describes each of the **4 main components**.","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"| Component      | Description                                  |","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"Ardentsoul"},"content":"|----------------|----------------------------------------------|","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"Ardentsoul"},"content":"| Show List      | A panel to display a list of saved shows     |","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"Ardentsoul"},"content":"| Show Details   | A panel to display a specific show\u0027s details |","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"Ardentsoul"},"content":"| Result Display | A panel to display command results           |","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"Ardentsoul"},"content":"| Command Box    | A panel to enter commands                    |","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"Ardentsoul"},"content":"You can start communicating with Trackermon using the command box. Some example commands you can try are:","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"arcornior"},"content":"* **`list`** : Lists all shows.","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"JonathanHoshi"},"content":"* **`add`** `n/ReZero s/watching t/Anime` : Adds a show **named** `ReZero` with the **tag** `Anime` to Trackermon as **watching**.","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"JonathanHoshi"},"content":"* **`delete`** `3` : Deletes the **3rd show** shown in the current list.","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"Ardentsoul"},"content":"## Command structure","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"Ardentsoul"},"content":"Let us look at what makes up a command:","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"Ardentsoul"},"content":"| Component    | Description                                                                   |","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"Ardentsoul"},"content":"|--------------|-------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"Ardentsoul"},"content":"| Command Word | The word representing the action of the command                               |","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"Ardentsoul"},"content":"| Prefix       | The identifier used to recognise command parameters                           |","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"Ardentsoul"},"content":"| Parameters   | Follows directly behind a prefix and contains the information provided by you |","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"Ardentsoul"},"content":"For example, a command to find a show could look like this:","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"Ardentsoul"},"content":"`find n/ Django` ","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"Ardentsoul"},"content":"In the example above , `find` is the **command word** while `n/` is the **prefix** of the `Djanjo` **parameter**. A list of parameters along with their prefixes and descriptions have been included below for your convenience.","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"JonathanHoshi"},"content":"| Parameter  | Prefix | Description                                                                         |","lastModifiedDate":"2022-04-03"},{"lineNumber":119,"author":{"gitId":"Ardentsoul"},"content":"|------------|--------|-------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"Ardentsoul"},"content":"| KEYWORD    | None   | The input after the command word without a prefix                                   |","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"Ardentsoul"},"content":"| INDEX      | None   | The index of the show as shown in the show list                                     |","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"Ardentsoul"},"content":"| NAME       | n/     | The name to use for a show                                                          |","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"Ardentsoul"},"content":"| STATUS     | s/     | The status to label a show\u003cbr\u003e They are _COMPLETED_, _WATCHING_ and _PLAN-TO-WATCH_ |","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"Ardentsoul"},"content":"| TAG        | t/     | The tag to label a show                                                             |","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"Ardentsoul"},"content":"| COMMENT    | c/     | The comment to describe a show                                                      |","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"Ardentsoul"},"content":"| RATING     | r/     | The rating to give a show                                                           |","lastModifiedDate":"2022-04-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Ardentsoul"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by you.\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"Ardentsoul"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/Sex and the City`.","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"Ardentsoul"},"content":"* Items with `…`​ after them can be used multiple times.\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"Ardentsoul"},"content":"  e.g. `[t/TAG]…​` can be used as `t/Anime`, `t/Sitcom t/Kdrama` etc.","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"Ardentsoul"},"content":"* A whitespace must be included before every prefix.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"Ardentsoul"},"content":"  e.g. `n/Knives Out t/Suspense` is acceptable but `n/Knives Outt/Suspense` is not.","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"Ardentsoul"},"content":"  e.g. if the command specifies `n/NAME [t/TAG]…​`, `[t/TAG]…​ n/NAME` is also acceptable.","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Ardentsoul"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"Ardentsoul"},"content":"  e.g. if you specify `n/Batman n/Superman`, only `n/Superman` will be taken.","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":147,"author":{"gitId":"aweijun"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `exit` and `list` ) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":148,"author":{"gitId":"aweijun"},"content":"  e.g. if the command specifies `exit 123`, it will be interpreted as `exit`.","lastModifiedDate":"2022-03-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"JonathanHoshi"},"content":"---","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"JonathanHoshi"},"content":"### Parameter conditions","lastModifiedDate":"2022-04-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":158,"author":{"gitId":"JonathanHoshi"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":159,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":160,"author":{"gitId":"JonathanHoshi"},"content":"**:information_source: Notes about parameters:** NAME and STATUS are case-insensitive.","lastModifiedDate":"2022-04-03"},{"lineNumber":161,"author":{"gitId":"JonathanHoshi"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":163,"author":{"gitId":"JonathanHoshi"},"content":"| Parameter  | Prefix | Condition                                                                           |","lastModifiedDate":"2022-04-03"},{"lineNumber":164,"author":{"gitId":"JonathanHoshi"},"content":"|------------|--------|-------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-03"},{"lineNumber":165,"author":{"gitId":"JonathanHoshi"},"content":"| KEYWORD    | None   | A **single word** that only contains [**alphanumeric**](#glossary) characters.\u003cbr\u003eExample: `S1` `Attack` `Hero2`","lastModifiedDate":"2022-04-03"},{"lineNumber":166,"author":{"gitId":"JonathanHoshi"},"content":"| INDEX      | None   | An **positive whole number** that is **within the bounds** of the show list.\u003cbr\u003eExample: A show list containing **5 shows**, valid INDEX ranges from **1 to 5**                                            |","lastModifiedDate":"2022-04-03"},{"lineNumber":167,"author":{"gitId":"JonathanHoshi"},"content":"| NAME       | n/     | Show name must be **unique** and contains only [**alphanumeric**](#glossary) characters.\u003cbr\u003eExample: If you try to add `n/Stranger Things` into the show list that already contains that show, there will be a message telling you that this show already exists in the list. You could name it as `n/Stranger Things S2` instead.|","lastModifiedDate":"2022-04-03"},{"lineNumber":168,"author":{"gitId":"JonathanHoshi"},"content":"| STATUS     | s/     | Status can only contains _COMPLETED_, _WATCHING_ and _PLAN-TO-WATCH_                |","lastModifiedDate":"2022-04-03"},{"lineNumber":169,"author":{"gitId":"JonathanHoshi"},"content":"| TAG        | t/     | Tag must only be a keyword that is **less than 20 characters**.                     |","lastModifiedDate":"2022-04-03"},{"lineNumber":170,"author":{"gitId":"JonathanHoshi"},"content":"| COMMENT    | c/     | Comment ????                                                                        |","lastModifiedDate":"2022-04-03"},{"lineNumber":171,"author":{"gitId":"JonathanHoshi"},"content":"| RATING     | r/     | Rating must be a **whole number** from **0 to 5**                                   |","lastModifiedDate":"2022-04-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":173,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-04-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":176,"author":{"gitId":"Ardentsoul"},"content":"## Features","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"Ardentsoul"},"content":"### Viewing help: `help`","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"Ardentsoul"},"content":"**Description:** Are you new or confused with the commands? View the command summary and user guide through a quick pop up window!","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"Ardentsoul"},"content":"**Format:** `help`","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"Ardentsoul"},"content":"**Example \u0026 Output:** `help`","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/HelpWindow.png\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":187,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"Ardentsoul"},"content":"### Adding a show: `add`","lastModifiedDate":"2022-02-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"Ardentsoul"},"content":"**Description:** Planning to watch a show and want to store its details? Add it to Trackermon\u0027s show list!","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"Ardentsoul"},"content":"**Format:** `add n/NAME s/STATUS [r/RATING] [c/COMMENT] [t/TAG]…​`","lastModifiedDate":"2022-04-02"},{"lineNumber":197,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":198,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"JonathanHoshi"},"content":"**:exclamation: Caution:**\u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":201,"author":{"gitId":"JonathanHoshi"},"content":"* Refer to [parameter conditions](#parameter-conditions) section about `NAME` `INDEX` `STATUS` `TAG` `COMMENT` `RATING`.","lastModifiedDate":"2022-04-03"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"Ardentsoul"},"content":"**Example \u0026 Output:** `add n/All of us are dead s/plan-to-watch t/Horror`","lastModifiedDate":"2022-04-02"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":206,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/AddImage.png\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":208,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"JonathanHoshi"},"content":"---","lastModifiedDate":"2022-03-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":212,"author":{"gitId":"Ardentsoul"},"content":"### Deleting a show: `delete`","lastModifiedDate":"2022-03-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":214,"author":{"gitId":"Ardentsoul"},"content":"**Description:** Wanting to remove an unwanted show? Delete it at the specified index shown in Trackermon\u0027s show list!","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":216,"author":{"gitId":"Ardentsoul"},"content":"**Format:** `delete INDEX`","lastModifiedDate":"2022-03-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"JonathanHoshi"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e ","lastModifiedDate":"2022-04-03"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":220,"author":{"gitId":"JonathanHoshi"},"content":"**:exclamation: Caution:**\u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":221,"author":{"gitId":"Ardentsoul"},"content":"* Once a show is deleted, you cannot retrieve it back!","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"JonathanHoshi"},"content":"* Refer to [parameter conditions](#parameter-conditions) section about `INDEX`.","lastModifiedDate":"2022-04-03"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":224,"author":{"gitId":"Ardentsoul"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"Ardentsoul"},"content":"**Example \u0026 Output:** `delete 2`","lastModifiedDate":"2022-04-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":228,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/DeleteImage.png\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":230,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":232,"author":{"gitId":"lowkaiwei98"},"content":"---","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"Ardentsoul"},"content":"### Editing a show: `edit`","lastModifiedDate":"2022-03-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":236,"author":{"gitId":"Ardentsoul"},"content":"**Description:** Wanting to modify a show? Edit it at the specified index shown in Trackermon\u0027s show list!","lastModifiedDate":"2022-03-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":238,"author":{"gitId":"Ardentsoul"},"content":"**Format:** `edit INDEX {[n/NAME] [s/STATUS] [r/RATING] [c/COMMENT] [t/TAG]…​}`","lastModifiedDate":"2022-04-02"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":240,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"Ardentsoul"},"content":"Multiple show [parameters](#command-structure) can be edited at the same time","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"Ardentsoul"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":244,"author":{"gitId":"lowkaiwei98"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"lowkaiwei98"},"content":"**:information_source: Notes about the Rating and Comment feature:** \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"lowkaiwei98"},"content":"* Reset the rating of a show: `edit INDEX r/0`","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"lowkaiwei98"},"content":"* Removing a comment: `edit INDEX c/`","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"lowkaiwei98"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":251,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":252,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":253,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"Ardentsoul"},"content":"**:exclamation: Caution:**\u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":255,"author":{"gitId":"JonathanHoshi"},"content":"* Refer to [parameter conditions](#parameter-conditions) section about `NAME` `INDEX` `STATUS` `TAG` `COMMENT` `RATING`.","lastModifiedDate":"2022-04-03"},{"lineNumber":256,"author":{"gitId":"JonathanHoshi"},"content":"* Editing a `TAG` parameter can cause all the **previous tags of the show to be deleted**.","lastModifiedDate":"2022-04-03"},{"lineNumber":257,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":258,"author":{"gitId":"lowkaiwei98"},"content":":exclamation:**Adding, Editing and Deleting a Tag:** \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":259,"author":{"gitId":"lowkaiwei98"},"content":"* Doing any of these can result in your tags being deleted if you do not specify existing tags you want to keep. \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":260,"author":{"gitId":"lowkaiwei98"},"content":"* Adding a Tag:","lastModifiedDate":"2022-03-30"},{"lineNumber":261,"author":{"gitId":"lowkaiwei98"},"content":"  * `edit INDEX \u003cSpecify all tags in show\u003e t/NEW_TAG`","lastModifiedDate":"2022-03-30"},{"lineNumber":262,"author":{"gitId":"lowkaiwei98"},"content":"* Deleting a Tag:","lastModifiedDate":"2022-03-30"},{"lineNumber":263,"author":{"gitId":"lowkaiwei98"},"content":"  * `edit INDEX \u003cSpecify all tags in show except the tag you want to delete\u003e`","lastModifiedDate":"2022-03-30"},{"lineNumber":264,"author":{"gitId":"lowkaiwei98"},"content":"* Editing a Tag:","lastModifiedDate":"2022-03-30"},{"lineNumber":265,"author":{"gitId":"lowkaiwei98"},"content":"  * `edit INDEX \u003cSpecify all other tags in show\u003e t/EDITED_TAG`","lastModifiedDate":"2022-03-30"},{"lineNumber":266,"author":{"gitId":"JonathanHoshi"},"content":"* Example\u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":267,"author":{"gitId":"JonathanHoshi"},"content":"  \u003cimg src\u003d\"images/EditTagExample.png\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":268,"author":{"gitId":"JonathanHoshi"},"content":"  * Adding a new Tag `Mystery` to show named `Another`","lastModifiedDate":"2022-04-03"},{"lineNumber":269,"author":{"gitId":"JonathanHoshi"},"content":"    * `edit 1 t/Anime t/Horror t/Mystery`","lastModifiedDate":"2022-04-03"},{"lineNumber":270,"author":{"gitId":"JonathanHoshi"},"content":"  * Deleting the Tag `Movie` in show named `Spiderman`","lastModifiedDate":"2022-04-03"},{"lineNumber":271,"author":{"gitId":"JonathanHoshi"},"content":"    * `edit 2 t/Action`","lastModifiedDate":"2022-04-03"},{"lineNumber":272,"author":{"gitId":"JonathanHoshi"},"content":"  * Editing the Tag `Comdy` to `Comedy` to show named `Chicken papa`","lastModifiedDate":"2022-04-03"},{"lineNumber":273,"author":{"gitId":"JonathanHoshi"},"content":"    * `edit 3 t/Anime t/Comedy`","lastModifiedDate":"2022-04-03"},{"lineNumber":274,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":275,"author":{"gitId":"Ardentsoul"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":276,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":277,"author":{"gitId":"Ardentsoul"},"content":"**Example \u0026 Output:** `edit 2 n/Sailor Moo t/Horror`","lastModifiedDate":"2022-04-02"},{"lineNumber":278,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":279,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/EditImage.png\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":280,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":281,"author":{"gitId":"lowkaiwei98"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-16"},{"lineNumber":282,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":283,"author":{"gitId":"aweijun"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"Ardentsoul"},"content":"### Listing all shows: `list`","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"Ardentsoul"},"content":"**Description:** Wanting to view all your shows at once? Display a list of shows in Trackermon\u0027s show list!","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"Ardentsoul"},"content":"**Format:** `list`","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"Ardentsoul"},"content":"**Example:** `list`","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-03-29"},{"lineNumber":296,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"Ardentsoul"},"content":"### Clearing all shows: `clear`","lastModifiedDate":"2022-03-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":299,"author":{"gitId":"Ardentsoul"},"content":"**Description:** Wanting to reset your current show list? Clear all shows in Trackermon\u0027s show list!","lastModifiedDate":"2022-03-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":301,"author":{"gitId":"Ardentsoul"},"content":"**Format:** `clear`","lastModifiedDate":"2022-03-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":303,"author":{"gitId":"Ardentsoul"},"content":"**Example:** `clear`","lastModifiedDate":"2022-03-29"},{"lineNumber":304,"author":{"gitId":"JonathanHoshi"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":306,"author":{"gitId":"JonathanHoshi"},"content":":exclamation:**Caution:** Clear will delete the current list! Your list data will be lost!","lastModifiedDate":"2022-04-01"},{"lineNumber":307,"author":{"gitId":"JonathanHoshi"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":308,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":309,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-04-03"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":311,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-03-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":313,"author":{"gitId":"Ardentsoul"},"content":"### Finding a show: `find`","lastModifiedDate":"2022-03-13"},{"lineNumber":314,"author":{"gitId":"Ardentsoul"},"content":"#### General find","lastModifiedDate":"2022-03-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"JonathanHoshi"},"content":"**Description (General Find):** Wanting to search for a show across all [parameters](#command-structure)? Find shows containing the search words!","lastModifiedDate":"2022-04-03"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"JonathanHoshi"},"content":"**Format (General Find):** `find KEYWORD…​`","lastModifiedDate":"2022-04-03"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":320,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-29"},{"lineNumber":321,"author":{"gitId":"Ardentsoul"},"content":"Find is case-insensitive, and the order in which the keywords are entered is irrelevant. Partial words **will** be matched as well. e.g., `attac` will match `attack`.","lastModifiedDate":"2022-03-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":324,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":325,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":326,"author":{"gitId":"Ardentsoul"},"content":"**:information_source: Notes about General Find:**\u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":327,"author":{"gitId":"Ardentsoul"},"content":"* An [**OR search**](#glossary) is executed across Trackermon\u0027s show list and all shows with matching [parameters](#command-structure) will be returned.","lastModifiedDate":"2022-03-29"},{"lineNumber":328,"author":{"gitId":"JonathanHoshi"},"content":"* Refer to [parameter conditions](#parameter-conditions) section about `KEYWORD`.","lastModifiedDate":"2022-04-03"},{"lineNumber":329,"author":{"gitId":"Ardentsoul"},"content":"* `find attack on titan` displays all the shows in the list that contain the keywords `attack`, `on` or `titan`, whether it is a name, status or tag.","lastModifiedDate":"2022-03-26"},{"lineNumber":330,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":331,"author":{"gitId":"Ardentsoul"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"Ardentsoul"},"content":"**Example \u0026 Output:** `find attack on titan`","lastModifiedDate":"2022-04-02"},{"lineNumber":334,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":335,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/General_Find_UI.png\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":337,"author":{"gitId":"JonathanHoshi"},"content":"---","lastModifiedDate":"2022-04-03"},{"lineNumber":338,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":339,"author":{"gitId":"Ardentsoul"},"content":"#### Precise find","lastModifiedDate":"2022-03-29"},{"lineNumber":340,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":341,"author":{"gitId":"JonathanHoshi"},"content":"**Description (Precise Find):** Wanting to search for a show across specific [parameters](#command-structure)? Find shows containing the search words based on [prefix](#command-structure)!","lastModifiedDate":"2022-04-03"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"Ardentsoul"},"content":"**Format (Precise Find):** `find {[n/NAME] [s/STATUS] [r/RATING] [t/TAG]…​}`","lastModifiedDate":"2022-04-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-29"},{"lineNumber":346,"author":{"gitId":"Ardentsoul"},"content":"Find is case-insensitive, and the order in which the keywords are entered is irrelevant. Partial words **will** be matched as well. e.g., `attac` will match `attack`.","lastModifiedDate":"2022-03-29"},{"lineNumber":347,"author":{"gitId":"Ardentsoul"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":348,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":349,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":350,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":351,"author":{"gitId":"Ardentsoul"},"content":"**:information_source: Notes about Precise Find:**\u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":352,"author":{"gitId":"Ardentsoul"},"content":"* **Within a single [prefix](#command-structure)** and **across multiple [prefixes](#command-structure)**, an [**AND search**](#glossary) is executed across Trackermon\u0027s show list and only shows with matching [parameters](#command-structure) will be returned.","lastModifiedDate":"2022-03-26"},{"lineNumber":353,"author":{"gitId":"Ardentsoul"},"content":"* `find n/Shutter Island` displays all the shows in the Trackermon\u0027s show list that contain **Shutter** and **Island** in the `NAME` parameter.","lastModifiedDate":"2022-03-26"},{"lineNumber":354,"author":{"gitId":"Ardentsoul"},"content":"* `find n/Django s/completed r/3 t/Action` displays all the shows in the Trackermon\u0027s show list that contain **Django** in the `NAME` parameter, **completed** in the `STATUS` parameter, **3** in the `RATING` parameter and **Action** in the `TAG` parameter.","lastModifiedDate":"2022-04-02"},{"lineNumber":355,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":356,"author":{"gitId":"Ardentsoul"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":357,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":358,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":359,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":360,"author":{"gitId":"Ardentsoul"},"content":":exclamation:**Multiple of the same prefixes:**\u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":361,"author":{"gitId":"Ardentsoul"},"content":"* `find n/attack n/on n/titan n/S2` does not mean `find n/attack on titan S2`. The former will only find show names that match with **S2** (as mentioned in the notes of [command structure](#command-structure)) while the latter will find all show names that match **attack, on, titan, and S2**. This is only applicable to the `NAME` parameter.","lastModifiedDate":"2022-04-02"},{"lineNumber":362,"author":{"gitId":"Ardentsoul"},"content":"* `find t/Anime t/Action` does not mean `find t/Anime Action`. The former will find show tags that match with **Anime** and **Action** in the `TAG` parameter while the latter will show you that it is an **invalid command format**. This is only applicable to the `TAG` parameter.","lastModifiedDate":"2022-04-02"},{"lineNumber":363,"author":{"gitId":"Ardentsoul"},"content":"* `find r/4 5` does not mean `find r/4 r/5`. The former will find all show ratings with a **4 star rating and 5 star rating** while the latter will find all shows with a **5 star rating**. This is only applicable to the `RATING` parameter.","lastModifiedDate":"2022-04-02"},{"lineNumber":364,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":365,"author":{"gitId":"Ardentsoul"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":366,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":367,"author":{"gitId":"Ardentsoul"},"content":"**Example \u0026 Output:** `find n/Shutter Island`","lastModifiedDate":"2022-04-02"},{"lineNumber":368,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":369,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/Precise_Find_UI.png\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":370,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":371,"author":{"gitId":"Ardentsoul"},"content":"**Example \u0026 Output:** `find r/5`","lastModifiedDate":"2022-04-02"},{"lineNumber":372,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":373,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/Precise_Find_UI_2.png\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":374,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":375,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-14"},{"lineNumber":376,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":377,"author":{"gitId":"JonathanHoshi"},"content":"---","lastModifiedDate":"2022-03-14"},{"lineNumber":378,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":379,"author":{"gitId":"lowkaiwei98"},"content":"### Sorting the shows `sort`","lastModifiedDate":"2022-03-29"},{"lineNumber":380,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":381,"author":{"gitId":"JonathanHoshi"},"content":"**Description:** Wanting to organise your messy show list? Sort can help reorder the list for you!","lastModifiedDate":"2022-04-04"},{"lineNumber":382,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":383,"author":{"gitId":"JonathanHoshi"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":384,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":385,"author":{"gitId":"JonathanHoshi"},"content":":exclamation: **Caution:** You cannot undo the sort once you have applied it!","lastModifiedDate":"2022-04-01"},{"lineNumber":386,"author":{"gitId":"JonathanHoshi"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":387,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":388,"author":{"gitId":"JonathanHoshi"},"content":"**Format:** `sort [n/ORDER] [s/ORDER] [t/ORDER] [r/ORDER] [so/SEQUENCE]`","lastModifiedDate":"2022-04-01"},{"lineNumber":389,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":390,"author":{"gitId":"JonathanHoshi"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":391,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":392,"author":{"gitId":"JonathanHoshi"},"content":":bulb: **Tip:** `Sort` will sort according to the [prefixes](#command-structure).\u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":393,"author":{"gitId":"JonathanHoshi"},"content":"* Use `n/` if you want to sort by name.","lastModifiedDate":"2022-04-01"},{"lineNumber":394,"author":{"gitId":"JonathanHoshi"},"content":"* Use `s/` if you want to sort by status.","lastModifiedDate":"2022-04-01"},{"lineNumber":395,"author":{"gitId":"JonathanHoshi"},"content":"* Use `t/` if you want to sort by tag.","lastModifiedDate":"2022-04-01"},{"lineNumber":396,"author":{"gitId":"JonathanHoshi"},"content":"* Use `r/` if you want to sort by rating.","lastModifiedDate":"2022-04-01"},{"lineNumber":397,"author":{"gitId":"lowkaiwei98"},"content":"* For the above prefixes, you have to specify the `ORDER` right after the prefix.","lastModifiedDate":"2022-03-29"},{"lineNumber":398,"author":{"gitId":"lowkaiwei98"},"content":"* `ORDER` is the order you want to sort the list by! Type `asc` to sort by ascending or type `dsc` to sort by descending!","lastModifiedDate":"2022-03-29"},{"lineNumber":399,"author":{"gitId":"lowkaiwei98"},"content":"* If two or more of the above prefixes are being used, sort will prioritise sorting by name, then status, followed by rating, and finally tags.","lastModifiedDate":"2022-03-31"},{"lineNumber":400,"author":{"gitId":"lowkaiwei98"},"content":"* Use `so/` if you want to reorder the priority and state the `SEQUENCE`","lastModifiedDate":"2022-03-29"},{"lineNumber":401,"author":{"gitId":"lowkaiwei98"},"content":"* List the `SEQUENCE` by listing out the full name of the prefix used in the order you want.","lastModifiedDate":"2022-03-29"},{"lineNumber":402,"author":{"gitId":"JonathanHoshi"},"content":"* For example: you want to sort by name, then status, followed by rating, and finally tags, `SEQUENCE` will be \"name status rating tag\"","lastModifiedDate":"2022-04-01"},{"lineNumber":403,"author":{"gitId":"JonathanHoshi"},"content":"* `SEQUENCE` input is case-insensitive.","lastModifiedDate":"2022-04-01"},{"lineNumber":404,"author":{"gitId":"lowkaiwei98"},"content":"* If you are confused, don\u0027t worry! Just do not use any prefix, we will help you sort it by name in ascending order!","lastModifiedDate":"2022-03-29"},{"lineNumber":405,"author":{"gitId":"JonathanHoshi"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":406,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":407,"author":{"gitId":"lowkaiwei98"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":408,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":409,"author":{"gitId":"lowkaiwei98"},"content":"**:information_source: Notes about Sort:**\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":410,"author":{"gitId":"lowkaiwei98"},"content":"* By not entering any prefixes, it will sort by name in ascending order.","lastModifiedDate":"2022-03-29"},{"lineNumber":411,"author":{"gitId":"lowkaiwei98"},"content":"* Enter the right amount of prefixes! For example: if you only sort by status, use only `s/`. ","lastModifiedDate":"2022-03-30"},{"lineNumber":412,"author":{"gitId":"lowkaiwei98"},"content":"* The `ORDER` must be asc or dsc!","lastModifiedDate":"2022-03-29"},{"lineNumber":413,"author":{"gitId":"lowkaiwei98"},"content":"* The `SEQUENCE` must contain the full name of all the sort conditions used!","lastModifiedDate":"2022-03-31"},{"lineNumber":414,"author":{"gitId":"lowkaiwei98"},"content":"* For `SEQUENCE`, if the full name of a sort condition is being used multiple times, it will only consider the first instance of the full name. For example: \"RatingTagRating\" will sort by rating then tag.","lastModifiedDate":"2022-03-31"},{"lineNumber":415,"author":{"gitId":"lowkaiwei98"},"content":"* If the same prefix is being used multiple times, only the last prefix will be considered by the program! For example: `sort n/asc n/dsc` will sort name by descending order.","lastModifiedDate":"2022-03-30"},{"lineNumber":416,"author":{"gitId":"lowkaiwei98"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":417,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":418,"author":{"gitId":"lowkaiwei98"},"content":"**Example \u0026 Output:** `sort`","lastModifiedDate":"2022-03-29"},{"lineNumber":419,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":420,"author":{"gitId":"lowkaiwei98"},"content":"\u003cimg src\u003d\"images/Sort_UI.png\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":421,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":422,"author":{"gitId":"lowkaiwei98"},"content":"**Example \u0026 Output:** `sort t/dsc r/asc`","lastModifiedDate":"2022-03-29"},{"lineNumber":423,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":424,"author":{"gitId":"lowkaiwei98"},"content":"\u003cimg src\u003d\"images/Sort_UI2.png\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":425,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":426,"author":{"gitId":"lowkaiwei98"},"content":"**Example \u0026 Output:** `sort t/dsc r/asc so/tagrating`","lastModifiedDate":"2022-03-29"},{"lineNumber":427,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":428,"author":{"gitId":"lowkaiwei98"},"content":"\u003cimg src\u003d\"images/Sort_UI3.png\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":429,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":430,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-29"},{"lineNumber":431,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":432,"author":{"gitId":"aweijun"},"content":"---","lastModifiedDate":"2022-03-30"},{"lineNumber":433,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":434,"author":{"gitId":"aweijun"},"content":"### Suggest a Show: `suggest`","lastModifiedDate":"2022-03-30"},{"lineNumber":435,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":436,"author":{"gitId":"JonathanHoshi"},"content":"**Description:** Wanting to find a random show? This suggests a random show from the displayed list!","lastModifiedDate":"2022-04-03"},{"lineNumber":437,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":438,"author":{"gitId":"aweijun"},"content":"**Format:** `suggest`","lastModifiedDate":"2022-03-30"},{"lineNumber":439,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":440,"author":{"gitId":"JonathanHoshi"},"content":"**Example \u0026 Output:** `suggest`","lastModifiedDate":"2022-04-01"},{"lineNumber":441,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":442,"author":{"gitId":"JonathanHoshi"},"content":"\u003cimg src\u003d\"images/SuggestImage.png\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":443,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":444,"author":{"gitId":"aweijun"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-30"},{"lineNumber":445,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":446,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-03-29"},{"lineNumber":447,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":448,"author":{"gitId":"Ardentsoul"},"content":"### Importing a show: `import`","lastModifiedDate":"2022-03-29"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"JonathanHoshi"},"content":"**Description:** Wanting to easily import Trackermon data from other devices? Just use our import function!","lastModifiedDate":"2022-04-03"},{"lineNumber":451,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":452,"author":{"gitId":"arcornior"},"content":"**Format:** `import`","lastModifiedDate":"2022-03-31"},{"lineNumber":453,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":454,"author":{"gitId":"Ardentsoul"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":455,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":456,"author":{"gitId":"Ardentsoul"},"content":":exclamation:**Caution:** Import will override the current list if successful! Your previous list data will be lost!","lastModifiedDate":"2022-04-02"},{"lineNumber":457,"author":{"gitId":"Ardentsoul"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":458,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":459,"author":{"gitId":"arcornior"},"content":"**Example \u0026 Output:** `import`","lastModifiedDate":"2022-03-31"},{"lineNumber":460,"author":{"gitId":"arcornior"},"content":"- Step 1. Navigate to the Trackermon data you want to import using your OS\u0027 native [GUI](#glossary)!","lastModifiedDate":"2022-03-31"},{"lineNumber":461,"author":{"gitId":"arcornior"},"content":"- Step 2. Select the file and click \"Open\"","lastModifiedDate":"2022-03-31"},{"lineNumber":462,"author":{"gitId":"arcornior"},"content":"  - Do note that only JSON files can be imported!","lastModifiedDate":"2022-03-31"},{"lineNumber":463,"author":{"gitId":"arcornior"},"content":"- Step 3. Trackermon will import the selected file and display the imported show list!","lastModifiedDate":"2022-03-31"},{"lineNumber":464,"author":{"gitId":"arcornior"},"content":"  - If there was an error importing the file, Trackermon will display an error message!","lastModifiedDate":"2022-03-31"},{"lineNumber":465,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":466,"author":{"gitId":"arcornior"},"content":"\u003cimg src\u003d\"images/Import.png\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":467,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":468,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-14"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":470,"author":{"gitId":"lowkaiwei98"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":471,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":472,"author":{"gitId":"Ardentsoul"},"content":"### Exporting a show: `export`","lastModifiedDate":"2022-03-29"},{"lineNumber":473,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":474,"author":{"gitId":"JonathanHoshi"},"content":"**Description:** Wanting to easily export Trackermon data to other devices? Just use our export function!","lastModifiedDate":"2022-04-03"},{"lineNumber":475,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":476,"author":{"gitId":"arcornior"},"content":"**Format:** `export`","lastModifiedDate":"2022-03-31"},{"lineNumber":477,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":478,"author":{"gitId":"arcornior"},"content":"**Example \u0026 Output:** `export`","lastModifiedDate":"2022-03-31"},{"lineNumber":479,"author":{"gitId":"arcornior"},"content":"- Step 1. Navigate to the location you wish to export Trackermon data to using your OS\u0027 native [GUI](#glossary)!","lastModifiedDate":"2022-03-31"},{"lineNumber":480,"author":{"gitId":"arcornior"},"content":"- Step 2. Click \"Save\"","lastModifiedDate":"2022-03-31"},{"lineNumber":481,"author":{"gitId":"arcornior"},"content":"- Step 3. Trackermon will export the Trackermon data as a JSON file to your selected location. It\u0027s that easy!","lastModifiedDate":"2022-03-31"},{"lineNumber":482,"author":{"gitId":"arcornior"},"content":"  - If there was an error exporting the file, Trackermon will display an error message!","lastModifiedDate":"2022-03-31"},{"lineNumber":483,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":484,"author":{"gitId":"arcornior"},"content":"\u003cimg src\u003d\"images/Export.png\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":485,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":486,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-29"},{"lineNumber":487,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":488,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-03-29"},{"lineNumber":489,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":490,"author":{"gitId":"Ardentsoul"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2022-03-29"},{"lineNumber":491,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":492,"author":{"gitId":"Ardentsoul"},"content":"**Description:** Wanting to exit the application? This simple command is what you are looking for!","lastModifiedDate":"2022-03-29"},{"lineNumber":493,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":494,"author":{"gitId":"Ardentsoul"},"content":"**Format:** `exit`","lastModifiedDate":"2022-03-29"},{"lineNumber":495,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":496,"author":{"gitId":"Ardentsoul"},"content":"**Example:** `exit`","lastModifiedDate":"2022-03-29"},{"lineNumber":497,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":498,"author":{"gitId":"lowkaiwei98"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":501,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"Ardentsoul"},"content":"* **Q:** Where is the data of Trackermon saved?\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":503,"author":{"gitId":"arcornior"},"content":"**A:** Trackermon data is saved in the hard disk automatically after any command that changes the data! There is no need for you to save manually.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":504,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":505,"author":{"gitId":"Ardentsoul"},"content":"* **Q:** How is my data being saved in Trackermon?\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":506,"author":{"gitId":"arcornior"},"content":"**A:** Your data will be stored as a JSON file called `trackermon.json`! You can find it in the \"data\" folder in Trackermon\u0027s _home folder_.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"arcornior"},"content":"* **Q:** How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":509,"author":{"gitId":"Ardentsoul"},"content":"  **A:** ","lastModifiedDate":"2022-03-29"},{"lineNumber":510,"author":{"gitId":"arcornior"},"content":"  * Firstly, `export` your data to an external storage device. ","lastModifiedDate":"2022-03-31"},{"lineNumber":511,"author":{"gitId":"arcornior"},"content":"  * Next, on your other Computer, simply start up Trackermon and `import` the data from the previous step!","lastModifiedDate":"2022-03-31"},{"lineNumber":512,"author":{"gitId":"arcornior"},"content":"  * Congratulations! You\u0027ve just transferred your data across different computers!","lastModifiedDate":"2022-03-31"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-14"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"Ardentsoul"},"content":"| Action           | Format, Examples                                                                                                             |","lastModifiedDate":"2022-03-23"},{"lineNumber":520,"author":{"gitId":"Ardentsoul"},"content":"|------------------|------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-03"},{"lineNumber":521,"author":{"gitId":"Ardentsoul"},"content":"| **Help**         | `help`                                                                                                                       |","lastModifiedDate":"2022-03-29"},{"lineNumber":522,"author":{"gitId":"JonathanHoshi"},"content":"| **Add**          | `add n/NAME s/STATUS [r/RATING] [t/TAG]…​` \u003cbr\u003e e.g., `add n/ReZero s/watching r/3 t/Anime`                                      |","lastModifiedDate":"2022-04-04"},{"lineNumber":523,"author":{"gitId":"Ardentsoul"},"content":"| **Delete**       | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                          |","lastModifiedDate":"2022-03-26"},{"lineNumber":524,"author":{"gitId":"JonathanHoshi"},"content":"| **Edit**         | `edit INDEX {[n/NAME] [s/STATUS] [r/RATING] [c/COMMENT] [t/TAG]…​}` \u003cbr\u003e e.g., `edit 1 n/ReZero s/watching r/3 c/Good show t/Anime` |","lastModifiedDate":"2022-04-04"},{"lineNumber":525,"author":{"gitId":"Ardentsoul"},"content":"| **List**         | `list`                                                                                                                       |","lastModifiedDate":"2022-03-23"},{"lineNumber":526,"author":{"gitId":"Ardentsoul"},"content":"| **Clear**        | `clear`                                                                                                                      |","lastModifiedDate":"2022-03-29"},{"lineNumber":527,"author":{"gitId":"Ardentsoul"},"content":"| **General Find** | `find KEYWORD`\u003cbr\u003e e.g., `find hero`\u003cbr\u003e                                                                                     |","lastModifiedDate":"2022-03-29"},{"lineNumber":528,"author":{"gitId":"Ardentsoul"},"content":"| **Precise Find** | `find {[n/NAME] [s/STATUS] [r/RATING] [t/TAG]…​}`\u003cbr\u003ee.g., `find n/Shingeki no kyojin s/watching r/5 t/Anime t/Seinen`       |","lastModifiedDate":"2022-04-03"},{"lineNumber":529,"author":{"gitId":"lowkaiwei98"},"content":"| **Sort**         | `sort [n/ORDER] [s/ORDER] [r/ORDER] [t/ORDER] [so/SEQUENCE]`                                                                 | ","lastModifiedDate":"2022-03-29"},{"lineNumber":530,"author":{"gitId":"aweijun"},"content":"| **Suggest**      | `suggest`                                                                                                                    |","lastModifiedDate":"2022-03-30"},{"lineNumber":531,"author":{"gitId":"Ardentsoul"},"content":"| **Import**       | `import`                                                                                                                     |","lastModifiedDate":"2022-03-29"},{"lineNumber":532,"author":{"gitId":"Ardentsoul"},"content":"| **Export**       | `export`                                                                                                                     |","lastModifiedDate":"2022-03-29"},{"lineNumber":533,"author":{"gitId":"Ardentsoul"},"content":"| **Exit**         | `exit`                                                                                                                       |","lastModifiedDate":"2022-03-29"},{"lineNumber":534,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":535,"author":{"gitId":"Ardentsoul"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-23"},{"lineNumber":536,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":537,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":538,"author":{"gitId":"Ardentsoul"},"content":"## Glossary","lastModifiedDate":"2022-03-23"},{"lineNumber":539,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":540,"author":{"gitId":"Ardentsoul"},"content":"| Term                               | Description                                                                                                                                                                          |","lastModifiedDate":"2022-03-23"},{"lineNumber":541,"author":{"gitId":"Ardentsoul"},"content":"|------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-29"},{"lineNumber":542,"author":{"gitId":"Ardentsoul"},"content":"| **AND search**                     | AND search finds all of the keywords.  For example, `find n/Shutter Island` returns only results that contain Shutter and Island.                                                    |","lastModifiedDate":"2022-03-27"},{"lineNumber":543,"author":{"gitId":"Ardentsoul"},"content":"| **OR search**                      | OR search finds one keyword or the other.  For example, `find Shutter Island` returns all results that contain Shutter or Island.                                                    |","lastModifiedDate":"2022-03-29"},{"lineNumber":544,"author":{"gitId":"Ardentsoul"},"content":"| **Command Line Interface (CLI)**   | A Command Line Interface connects a you to a computer program or operating system. Through the CLI, you can interact with a system or application by typing in text (commands).      | ","lastModifiedDate":"2022-03-29"},{"lineNumber":545,"author":{"gitId":"Ardentsoul"},"content":"| **Graphical User Interface (GUI)** | A form of user interface that allows you to interact with electronic devices through graphical icons instead of text-based user interfaces, typed command labels or text navigation. |","lastModifiedDate":"2022-03-29"},{"lineNumber":546,"author":{"gitId":"JonathanHoshi"},"content":"| **Alphanumeric**                   | A character that is either a letter or a number.                  |","lastModifiedDate":"2022-04-03"},{"lineNumber":547,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":548,"author":{"gitId":"JonathanHoshi"},"content":"[return to top \u003cimg src\u003d\"images/toc-icon.png\" width\u003d\"25px\"\u003e](#table-of-contents)","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"arcornior":30,"aweijun":14,"-":99,"lowkaiwei98":63,"Ardentsoul":246,"JonathanHoshi":96}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Ardentsoul"},"content":"    content: \"Trackermon\";","lastModifiedDate":"2022-03-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"Ardentsoul":1}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# Only the main Sass file needs front matter (the dashes are enough)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \"minima/skins/{{ site.minima.skin | default: \u0027classic\u0027 }}\",","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \"minima/initialize\";","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":".icon {","lastModifiedDate":"2020-08-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    height: 21px;","lastModifiedDate":"2020-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    width: 21px","lastModifiedDate":"2020-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-01"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":".alert-danger {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    color: #721c24;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    background-image: linear-gradient(180deg, #f9dde0, #f8d7da);","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    border-color: #f5c6cb;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":".alert-warning {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    color: #856404;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"    background-image: linear-gradient(180deg, #fff5d5, #fff3cd);","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    border-color: #ffeeba;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"-":12,"Ardentsoul":12}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteShow(target)","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveShowList(showList)","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":36,"Ardentsoul":2}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"ShowList *-right-\u003e \"1\" UniqueShowList","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"ShowList *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"UniqueTagList -[hidden]down- UniqueShowList","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"UniqueTagList -[hidden]down- UniqueShowList","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"UniqueShowList -right-\u003e Show","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"Show -up-\u003e \"*\" Tag","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"Show *--\u003e Name","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"Show *--\u003e Status","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"Show *--\u003e Comment","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"aweijun":8,"-":11,"Ardentsoul":1}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"participant \":TrackermonParser\" as TrackermonParser LOGIC_COLOR","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"LogicManager -\u003e TrackermonParser : parseCommand(\"delete 1\")","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"activate TrackermonParser","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"TrackermonParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"DeleteCommandParser --\u003e TrackermonParser","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"TrackermonParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"DeleteCommandParser --\u003e TrackermonParser : d","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"DeleteCommandParser -[hidden]-\u003e TrackermonParser","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"TrackermonParser --\u003e LogicManager : d","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"deactivate TrackermonParser","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"DeleteCommand -\u003e Model : deleteShow(1)","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":58,"Ardentsoul":11}},{"path":"docs/diagrams/ExportSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"@startuml","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"!include style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"participant \":TrackermonParser\" as TrackermonParser LOGIC_COLOR","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"participant \":ExportCommand\" as ExportCommand LOGIC_COLOR","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"participant \"jfm:JsonFileManager\" as JsonFileManager STORAGE_COLOR","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"box","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"-\u003e LogicManager : execute(\"export\")","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"activate LogicManager","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"LogicManager -\u003e TrackermonParser : parseCommand(\"export\")","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"activate TrackermonParser","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"create ExportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"TrackermonParser -\u003e ExportCommand :","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"activate ExportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"ExportCommand --\u003e TrackermonParser","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"deactivate ExportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"deactivate TrackermonParser","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"LogicManager -\u003e ExportCommand : execute(model)","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"activate ExportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"create JsonFileManager","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"ExportCommand -\u003e JsonFileManager :","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"activate JsonFileManager","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"JsonFileManager --\u003e ExportCommand :","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"deactivate JsonFileManager","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"ExportCommand -\u003e JsonFileManager : exportFile(model.getShowListFilePath)","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"activate JsonFileManager","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"JsonFileManager --\u003e ExportCommand : result","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"deactivate JsonFileManager","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"create CommandResult","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"ExportCommand -\u003e CommandResult :","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"activate CommandResult","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"CommandResult --\u003e ExportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"ExportCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"deactivate ExportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"\u003c-- LogicManager","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"@enduml","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"arcornior":57}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"participant \":TrackermonParser\" as TrackermonParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"participant \"fc:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"[-\u003e LogicManager : execute(\"find t/Anime\")","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"LogicManager -\u003e TrackermonParser : parseCommand(\"find t/Anime\")","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"activate TrackermonParser","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"create FindCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"TrackermonParser -\u003e FindCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"activate FindCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"FindCommandParser --\u003e TrackermonParser","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"TrackermonParser -\u003e FindCommandParser :parse(\"t/Anime\")","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"activate FindCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"ref over FindCommandParser, FindCommand : Parsing implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"FindCommandParser --\u003e TrackermonParser : fc","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"FindCommandParser -[hidden]-\u003e TrackermonParser","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"destroy FindCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"TrackermonParser --\u003e LogicManager : fc","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"deactivate TrackermonParser","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"LogicManager -\u003e FindCommand : execute(model)","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"activate FindCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"FindCommand -\u003e Model : updateFilteredShowList(predicates)","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"deactivate FindCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Ardentsoul":64}},{"path":"docs/diagrams/FindSequenceReferenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"mainframe **sd** Parsing implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"participant \":TagsContainsKeywordsPredicate\" as TagsContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"participant \"fc:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"FindCommandParser -\u003e ArgumentTokenizer : tokenize(args, PREFIX_TAG)","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"activate ArgumentTokenizer","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"ArgumentTokenizer --\u003e FindCommandParser : argumentMultimap","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"create TagsContainsKeywordsPredicate","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"FindCommandParser -\u003e TagsContainsKeywordsPredicate : TagsContainsKeywordsPredicate(predicates)","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"activate TagsContainsKeywordsPredicate","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"TagsContainsKeywordsPredicate --\u003e FindCommandParser : predicates","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"deactivate TagsContainsKeywordsPredicate","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"create FindCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(predicates)","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"activate FindCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"FindCommand --\u003e FindCommandParser : fc","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"deactivate FindCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Ardentsoul":31}},{"path":"docs/diagrams/FindShowDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"start","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":":User enters find command;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":":Parse command arguments;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"if () then ([else])","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"    :Creates general show predicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"else ([hasPrefix])","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    :Creates predicate based on that prefix;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"endif","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    :Find command;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    :Update show list;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"stop","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Ardentsoul":18}},{"path":"docs/diagrams/ImportSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"@startuml","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"!include style.puml","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"participant \":TrackermonParser\" as TrackermonParser LOGIC_COLOR","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"participant \":ImportCommand\" as ImportCommand LOGIC_COLOR","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"participant \"jfm:JsonFileManager\" as JsonFileManager STORAGE_COLOR","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"box","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"-\u003e LogicManager : execute(\"import\")","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"activate LogicManager","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"LogicManager -\u003e TrackermonParser : parseCommand(\"import\")","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"activate TrackermonParser","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"create ImportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"TrackermonParser -\u003e ImportCommand :","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"activate ImportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"ImportCommand --\u003e TrackermonParser","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"deactivate ImportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"deactivate TrackermonParser","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"LogicManager -\u003e ImportCommand : execute(model)","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"activate ImportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"create JsonFileManager","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"ImportCommand -\u003e JsonFileManager :","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"activate JsonFileManager","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"JsonFileManager --\u003e ImportCommand :","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"deactivate JsonFileManager","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"ImportCommand -\u003e JsonFileManager : importFile(model.getShowListFilePath)","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"activate JsonFileManager","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"JsonFileManager --\u003e ImportCommand : result","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"deactivate JsonFileManager","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"create CommandResult","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"ImportCommand -\u003e CommandResult :","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"activate CommandResult","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"CommandResult --\u003e ImportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"ImportCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"deactivate ImportCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"\u003c-- LogicManager","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"@enduml","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"arcornior":57}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"Class TrackermonParser","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"LogicManager -right-\u003e\"1\" TrackermonParser","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"TrackermonParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"Ardentsoul":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyShowList\" as ReadOnlyShowList","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"Class ShowList","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"Class UniqueShowList","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"Class Show","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"Class Status","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"Class Comment","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"ShowList .up.|\u003e ReadOnlyShowList","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"Model .left.\u003e ReadOnlyShowList","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"ModelManager -left-\u003e \"1\" ShowList","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"ShowList *--\u003e \"1\" UniqueShowList","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"UniqueShowList --\u003e \"~* all\" Show","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"Show *--\u003e \"1\" Name","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"Show *--\u003e \"1\" Status","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"Show *--\u003e \"1\" Comment","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"Show *--\u003e \"*\" Tag","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"Name -[hidden]right-\u003e Status","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"Status -[hidden]right-\u003e  Tag","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"ModelManager --\u003e\"~* filtered\" Show","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"aweijun":18,"-":29}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"Class TrackermonParser","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"HiddenOutside ..\u003e TrackermonParser","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"TrackermonParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"TrackermonParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"Ardentsoul":4}},{"path":"docs/diagrams/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"participant \":TrackermonParser\" as TrackermonParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"participant \":SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"participant \"n:NameComparator\" as NameComparator MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"[-\u003e LogicManager : execute(\"sort\")","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"LogicManager -\u003e TrackermonParser : parseCommand(\"sort\")","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"activate TrackermonParser","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"create SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"TrackermonParser -\u003e SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"activate SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"SortCommandParser --\u003e TrackermonParser","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"deactivate SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"TrackermonParser -\u003e SortCommandParser : parse(\"\")","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"activate SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"create NameComparator","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"SortCommandParser -\u003e NameComparator","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"activate NameComparator","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"NameComparator --\u003e SortCommandParser : n","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"deactivate NameComparator","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"create SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"SortCommandParser -\u003e SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"activate SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"SortCommand --\u003e SortCommandParser : s","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"deactivate SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"SortCommandParser --\u003e TrackermonParser : s","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"deactivate SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"SortCommandParser -[hidden]-\u003e TrackermonParser","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"destroy SortCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"TrackermonParser --\u003e LogicManager : s","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"deactivate TrackermonParser","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"LogicManager -\u003e SortCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"activate SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"SortCommand -\u003e Model : updateSortedShowList(n)","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"SortCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"CommandResult --\u003e SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"SortCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"deactivate SortCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"lowkaiwei98":77}},{"path":"docs/diagrams/SortShowDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"start","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":":User enters sort command;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":":Parse command arguments;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"if () then ([has order Prefixes]])","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"    :Saves comparators in a Map;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"else ([else])","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"endif","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"if () then ([has prefix \u0027/so\u0027])","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"    :Reorder the Map;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"else ([else])","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"endif","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":":Use the Map to create Comparators in order;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":":return then execute the Sort command;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":":Update show list;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"stop","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"lowkaiwei98":21}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"package \"ShowList Storage\" #F4F6F6{","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nShowListStorage\" as ShowListStorage","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"Class JsonShowListStorage","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"Class JsonSerializableShowList","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"Class JsonAdaptedShow","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"StorageManager -up-\u003e \"1\" ShowListStorage","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"Storage -right-|\u003e ShowListStorage","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"JsonShowListStorage .up.|\u003e ShowListStorage","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"JsonShowListStorage ..\u003e JsonSerializableShowList","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"JsonSerializableShowList --\u003e \"*\" JsonAdaptedShow","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"JsonAdaptedShow --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arcornior":11,"-":32}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"Class ShowListPanel","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"Class ShowCard","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"Class ShowDetailsCard","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"Class CommandBuilder","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"MainWindow *-down-\u003e \"1\" ShowListPanel","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"MainWindow *-right-\u003e \"1\" ShowDetailsCard","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"HelpWindow --\u003e CommandBuilder","lastModifiedDate":"2022-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"ShowListPanel -down-\u003e \"*\" ShowCard","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"ShowListPanel --\u003e ShowDetailsCard","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"JonathanHoshi"},"content":"ShowDetailsCard --\u003e ShowCard","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"ShowListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"ShowCard --|\u003e UiPart","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"ShowDetailsCard --|\u003e UiPart","lastModifiedDate":"2022-04-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"ShowCard ..\u003e Model","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"ShowListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":52,"Ardentsoul":13,"JonathanHoshi":2}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"ecp -\u003e ec ++: index, editShowDescriptor","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":20,"lowkaiwei98":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"title: Trackermon","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T09-3/tp/actions)","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T09-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S2-CS2103T-T09-3/tp)","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"**Trackermon is a desktop application for to organise your shows.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"* If you are interested in using Trackermon, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"* If you are interested about developing Trackermon , the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"aweijun":6,"-":12}},{"path":"docs/team/arcornior.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"title: Lim Shao Cong\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"### Project: Trackermon","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"Trackermon is a desktop application for tracking and managing shows, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Trackermon helps people track and remember what shows they have watched, are currently watching, or plan to watch.","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"* **New Feature**: _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"  * What it does:","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"  * Justification:","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"  * Highlights:","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"  * Credits: *{if any}*","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"  * _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"  * _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"  * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"    * _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"    * _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"  * PRs reviewed (with non-trivial review comments): _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"  * Contributed to forum discussions _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"  * Reported bugs and suggestions for other teams in the class _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"  * Some parts of the history feature I added was adopted by several other class mates _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"* **Tools**:","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"arcornior":36,"lowkaiwei98":1}},{"path":"docs/team/ardentsoul.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"layout: page","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"title: Zachary\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"### Project: Trackermon","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"Trackermon is a desktop application for tracking and managing shows, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Trackermon helps people track and remember what shows they have watched, are currently watching, or plan to watch.","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dardentsoul\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2022-04-03"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"* **Enhancements to existing features**: Added the ability to search through specific parameters in a show through the `find` command. ([\\#134](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/134), [\\#176](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/176))","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"  * What it does: Allows the user to find and filter through shows with a greater degree of precision.","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"  * Justification: The ability to easily search for shows in a wide list of shows is vital because it saves time and reduces confusion for the user.","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"  * Highlights: Allows users to select the field they want to search across the list, as well as combine the specifications for a more tailored search.","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"  * Credits: The find feature was adopted from imPoster created by team [AY2021S2-CS2103T-T12-4](https://github.com/AY2021S2-CS2103T-T12-4/tp), [stackoverflow](https://stackoverflow.com/questions/24553761/how-to-apply-multiple-predicates-to-a-java-util-stream) and [AB-3](https://github.com/se-edu/addressbook-level3).","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"* **Enhancements to existing features**: Improved on the help window and its UI. ([\\#132](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/132), [\\#191](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/191))","lastModifiedDate":"2022-04-03"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"  * What it does: Allows the user to quickly see the command summary table without accessing the user guide.","lastModifiedDate":"2022-04-03"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"  * Justification: The ability to quickly search up the commands in the help window creates less hassle for the user. Otherwise, the user has to read up the user guide to know what commands are available in Trackermon.","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"  * Highlights: Allows users to see a table of commands that summarizes all available commands in Trackermon and use them quickly without accessing the user guide.","lastModifiedDate":"2022-04-03"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"  * Credits: The help window feature was adopted from the video [here](https://youtu.be/vego72w5kPU).","lastModifiedDate":"2022-04-03"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"  ","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"* **Project management**:","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"  * Necessary general code enhancements","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"    * Morphing the product into Trackermon from AB-3 [\\#61](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/61)","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"  * Updated user/developer docs that are not specific to a feature","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    * Restructured and reformatted the user/developer docs to enhance the user centricity of the documentations ([\\#164](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/164), [\\#166](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/166))","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"  * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    * Added documentation for the features `find` and `help` [\\#85](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/85).","lastModifiedDate":"2022-04-03"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"    * Added a command summary table [\\#134](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/134/files)","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"    * Did structural overhaul and improvement to existing documentation [\\#166](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/166).","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"      * Added Introduction","lastModifiedDate":"2022-04-03"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"      * Added User guide navigation","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"      * Added Command structure","lastModifiedDate":"2022-04-03"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"      * Added Glossary table","lastModifiedDate":"2022-04-03"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"    * Added implementation details of the `find` feature.","lastModifiedDate":"2022-04-03"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"    * Added use cases UC01-UC07.","lastModifiedDate":"2022-04-03"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"    * Updated documentation and UML diagrams for Architecture and Logic ([\\#81](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/81), [\\#92](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/92))","lastModifiedDate":"2022-04-03"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"    * Did structural overhaul and improvement to existing documentation [\\#164](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/164)","lastModifiedDate":"2022-04-03"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"      * Added Introduction ","lastModifiedDate":"2022-04-03"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"      * Added About section which includes the purpose and scope of Trackermon","lastModifiedDate":"2022-04-03"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"      * Added Developer guide navigation","lastModifiedDate":"2022-04-03"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"      * Added `find` sequence diagrams ","lastModifiedDate":"2022-04-03"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"      * Added Glossary table","lastModifiedDate":"2022-04-03"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"* **Community**:","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#149](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/149#discussion_r833837438), [\\#155](https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/155#discussion_r834350147).","lastModifiedDate":"2022-04-03"}],"authorContributionMap":{"lowkaiwei98":1,"Ardentsoul":54}},{"path":"docs/team/aweijun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"title: aweijun\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"Trackermon is a desktop application for tracking and managing shows, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Trackermon helps people track and remember what shows they have watched, are currently watching, or plan to watch.","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"    * About Me:","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"        * Updated the AboutMe Page with personal information.","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"    * Readme:","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"        * Created a mock up of the final product using figma.","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"    * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"        * Updated the glossary ","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"aweijun":48,"lowkaiwei98":1}},{"path":"docs/team/jonathanhoshi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JonathanHoshi"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"title: Jonathan Yeo\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"### Project: Trackermon","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"Trackermon is a desktop application for tracking and managing shows, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Trackermon helps people track and remember what shows they have watched, are currently watching, or plan to watch.","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"* **New Feature**: _TBA_","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"  * What it does: ","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"  * Justification: ","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"  * Highlights: ","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"  * Credits: *{if any}*","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"  ","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"  * _TBA_","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"  * _TBA_","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"  * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"    * Added basic information of Trackermon and Quick Start","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"    * _TBA_","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"  * PRs reviewed (with non-trivial review comments): _TBA_ \u003c!--[\\#12](), [\\#32](), [\\#19](), [\\#42]()--\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"lowkaiwei98":1,"JonathanHoshi":34}},{"path":"docs/team/lowkaiwei98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"title: Kaiwei\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"### Project: Trackermon","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"Trackermon is a desktop application for tracking and managing shows, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Trackermon helps people track and remember what shows they have watched, are currently watching, or plan to watch.","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dlowkaiwei98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2022-04-03"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"**New Feature**: Added the ability to sort the show list.","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"* What it does: allows the user to sort the list by name, status, tag, rating and the ability to change the priority of the sort. ","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"* Justification: This feature improves the product significantly because a user can sort the list and view it in an organised manner. Without this feature, the list might remain a mess, making it less appealing to the user. ","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"**Project management**:","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"  * Managed issues relating to Sort, Edit, Clear, etc. [\\#118] (https://github.com/AY2122S2-CS2103T-T09-3/tp/issues/118) [\\#103] (https://github.com/AY2122S2-CS2103T-T09-3/tp/issues/103)","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"  * Tested for bugs and asked teammates to fix bugs relating to their code [\\#145] (https://github.com/AY2122S2-CS2103T-T09-3/tp/issues/145)","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"**Enhancements to existing features**: ","lastModifiedDate":"2022-04-03"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"* Refactor and morph AB3 code into a working product for Trackermon [\\#77] (https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/77)","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"* Morph and implement Edit feature for Trackermon  [\\#102] (https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/102)","lastModifiedDate":"2022-04-03"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"* Morph and implement Clear feature for Trackermon [\\#147] (https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/147)","lastModifiedDate":"2022-04-03"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"**Documentation**:","lastModifiedDate":"2022-04-03"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"* In charge of Sort, Edit sections [\\#192] (https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/192/files) [#\\102] (https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/102/files)","lastModifiedDate":"2022-04-03"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"**Community**:","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"* PRs reviewed (with non-trivial review comments):[\\#149] (https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/149#discussion_r833837438) [\\#175] (https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/175) [\\#130] (https://github.com/AY2122S2-CS2103T-T09-3/tp/pull/130)","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"lowkaiwei98":31}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"aweijun"},"content":"Create a `RemarkCommandParser` class in the `seedu.trackermon.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"aweijun"},"content":"Create a new `Remark` in `seedu.trackermon.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"aweijun"},"content":"Simply add the following to [`seedu.trackermon.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-03-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"aweijun":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"The `address` field in `Person` is actually an instance of the `seedu.trackermon.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"aweijun":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.trackermon.logic.Logic`.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"A quick look at the `seedu.trackermon.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"aweijun":2,"-":299}},{"path":"src/main/java/seedu/trackermon/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.util.FileUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"aweijun":3,"-":61}},{"path":"src/main/java/seedu/trackermon/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"aweijun":1,"-":24}},{"path":"src/main/java/seedu/trackermon/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.Config;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.Version;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.util.ConfigUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.util.StringUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.Logic;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.LogicManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.storage.JsonShowListStorage;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.storage.ShowListStorage;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.storage.Storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.storage.StorageManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.storage.UserPrefsStorage;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.ui.Ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.ui.UiManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Trackermon ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"        ShowListStorage showListStorage \u003d new JsonShowListStorage(userPrefs.getShowListFilePath());","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"        storage \u003d new StorageManager(showListStorage, userPrefsStorage);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"JonathanHoshi"},"content":"        if (!Files.exists(storage.getShowListFilePath())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"JonathanHoshi"},"content":"            storage.saveShowList(model.getShowList());","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"JonathanHoshi"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s show list and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"     * The data from the sample show list will be used instead if {@code storage}\u0027s show list is not found,","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"JonathanHoshi"},"content":"     * or an empty show list will be used instead if errors occur when reading {@code storage}\u0027s show list.","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"JonathanHoshi"},"content":"        Optional\u003cReadOnlyShowList\u003e showListOptional;","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"JonathanHoshi"},"content":"        ReadOnlyShowList initialData;","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"JonathanHoshi"},"content":"            showListOptional \u003d storage.readShowList();","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"JonathanHoshi"},"content":"            if (!showListOptional.isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"JonathanHoshi"},"content":"                logger.info(\"Data file not found. Will be starting with a sample ShowList\");","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"            initialData \u003d showListOptional.orElseGet(SampleDataUtil::getSampleShowList);","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"JonathanHoshi"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ShowList\");","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"JonathanHoshi"},"content":"            initialData \u003d new ShowList();","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"JonathanHoshi"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ShowList\");","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"JonathanHoshi"},"content":"            initialData \u003d new ShowList();","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"JonathanHoshi"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ShowList\");","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"lowkaiwei98"},"content":"        logger.info(\"Starting ShowList \" + MainApp.VERSION);","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"Ardentsoul"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Trackermon ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"aweijun":24,"-":139,"lowkaiwei98":4,"Ardentsoul":2,"JonathanHoshi":19}},{"path":"src/main/java/seedu/trackermon/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.core;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d JarTools.runningFromJarFile()","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"                    ? Paths.get(JarTools.getClassLocationString(Config.class), \"config.json\")","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"                    : Paths.get(\"config.json\");","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"    private Path userPrefsFilePath \u003d JarTools.runningFromJarFile()","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"            ? Paths.get(JarTools.getClassLocationString(Config.class), \"preferences.json\")","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"            : Paths.get(\"preferences.json\");","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":1,"-":60,"JonathanHoshi":6}},{"path":"src/main/java/seedu/trackermon/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.core;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":1,"-":78}},{"path":"src/main/java/seedu/trackermon/commons/core/JarTools.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanHoshi"},"content":"package seedu.trackermon.commons.core;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import java.io.File;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"import java.io.UnsupportedEncodingException;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"import java.net.URL;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"public class JarTools {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"    private static File getClassLocation(Class cls, boolean trmjar) {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"        ClassLoader clsldr; // class loader","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"        URL urlobj; // url object","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"        String exturl; // external form of URL","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"        String lwrurl; // lowercase external form of URL","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"        File rtnfil; // return file","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"        if ((clsldr \u003d cls.getClassLoader()) \u003d\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"            clsldr \u003d ClassLoader.getSystemClassLoader();","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"        if ((urlobj \u003d clsldr.getResource(cls.getName().replace(\u0027.\u0027, \u0027/\u0027) + \".class\")) \u003d\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"            return null;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"JonathanHoshi"},"content":"        exturl \u003d urlobj.toExternalForm();","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"        lwrurl \u003d exturl.toLowerCase();","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"        while (lwrurl.startsWith(\"jar:\") || lwrurl.startsWith(\"file:/\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"            if (lwrurl.startsWith(\"jar:\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"                // strip encapsulating \"jar:\" and \"!/...\" from JAR url","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"                if (lwrurl.indexOf(\"!/\") !\u003d -1) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"                    exturl \u003d exturl.substring(4, (exturl.indexOf(\"!/\")));","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"                } else { // strip encapsulating \"jar:\"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"                    exturl \u003d exturl.substring(4);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"            if (lwrurl.startsWith(\"file:/\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"                exturl \u003d exturl.substring(6); // strip encapsulating \"file:/\"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"                if (!exturl.startsWith(\"/\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"                    exturl \u003d (\"/\" + exturl);","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"                while (exturl.length() \u003e 1 \u0026\u0026 exturl.charAt(1) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"                    exturl \u003d exturl.substring(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"JonathanHoshi"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"            lwrurl \u003d exturl.toLowerCase();","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"JonathanHoshi"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"JonathanHoshi"},"content":"            exturl \u003d java.net.URLDecoder.decode(exturl, \"UTF-8\");","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"JonathanHoshi"},"content":"        } catch (UnsupportedEncodingException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"JonathanHoshi"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"JonathanHoshi"},"content":"        rtnfil \u003d new File(exturl);","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"JonathanHoshi"},"content":"        if (lwrurl.endsWith(\".class\") || (trmjar \u0026\u0026 lwrurl.endsWith(\".jar\"))) {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"JonathanHoshi"},"content":"            rtnfil \u003d rtnfil.getParentFile();","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"JonathanHoshi"},"content":"        if (rtnfil.exists()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"JonathanHoshi"},"content":"            rtnfil \u003d rtnfil.getAbsoluteFile();","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"JonathanHoshi"},"content":"        return rtnfil;","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"JonathanHoshi"},"content":"    public static String getClassLocationString(Class cls) {","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"JonathanHoshi"},"content":"        return getClassLocation(cls, true).toPath().toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"JonathanHoshi"},"content":"     * Check if application is running from IntelliJ","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"JonathanHoshi"},"content":"     * @return whether application is running from IntelliJ","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"JonathanHoshi"},"content":"    public static boolean runningFromJarFile() {","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"JonathanHoshi"},"content":"        String resourcePath \u003d JarTools.class.getResource(\"JarTools.class\").toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"JonathanHoshi"},"content":"        return resourcePath.startsWith(\"jar:\") || resourcePath.startsWith(\"rsrc:\");","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"JonathanHoshi":73}},{"path":"src/main/java/seedu/trackermon/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.core;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"    private static final String LOG_FILE \u003d \"trackermon.log\";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"JonathanHoshi"},"content":"        String logFile \u003d JarTools.runningFromJarFile()","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"JonathanHoshi"},"content":"                ? Paths.get(JarTools.getClassLocationString(LogsCenter.class), LOG_FILE).toString()","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"JonathanHoshi"},"content":"                : LOG_FILE;","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"JonathanHoshi"},"content":"        FileHandler fileHandler \u003d new FileHandler(logFile, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":2,"-":109,"JonathanHoshi":6}},{"path":"src/main/java/seedu/trackermon/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.core;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_INVALID_SHOW_DISPLAYED_INDEX \u003d \"The show index provided is invalid\";","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_SHOWS_LISTED_OVERVIEW \u003d \"%1$d shows listed!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"Index out of bounds! \\n%1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aweijun":1,"-":9,"lowkaiwei98":2,"Ardentsoul":1}},{"path":"src/main/java/seedu/trackermon/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.core;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":1,"-":115}},{"path":"src/main/java/seedu/trackermon/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.core.index;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"aweijun":1,"-":53}},{"path":"src/main/java/seedu/trackermon/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":1,"-":10}},{"path":"src/main/java/seedu/trackermon/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aweijun":1,"-":20}},{"path":"src/main/java/seedu/trackermon/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.MainApp;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"aweijun":2,"-":40}},{"path":"src/main/java/seedu/trackermon/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aweijun":1,"-":34}},{"path":"src/main/java/seedu/trackermon/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.Config;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"aweijun":3,"-":20}},{"path":"src/main/java/seedu/trackermon/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String, String...)},","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":1,"-":81,"JonathanHoshi":1}},{"path":"src/main/java/seedu/trackermon/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":3,"-":140}},{"path":"src/main/java/seedu/trackermon/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"     *   Ignores case, but a fragmented word match is required.","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"     *       containsFragmentedWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"     *       containsFragmentedWordIgnoreCase(\"ABc def\", \"de\") \u003d\u003d true","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"     *       containsFragmentedWordIgnoreCase(\"ABc def\", \"df\") \u003d\u003d false // not in order","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"     * @param word cannot be null, cannot be empty, must be a fragmented word","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"    public static boolean containsFragmentedWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"        String preppedSentence \u003d sentence.trim().toLowerCase();","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"        return preppedSentence.contains(preppedWord);","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":2,"-":66,"Ardentsoul":24}},{"path":"src/main/java/seedu/trackermon/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.CommandResult;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":" * API of the Logic component","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"public interface Logic {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the ShowList.","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"     * @see Model#getShowList()","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"    ReadOnlyShowList getShowList();","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"    /** Returns an unmodifiable view of the filtered list of shows */","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"    ObservableList\u003cShow\u003e getFilteredShowList();","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"    /** Returns an unmodifiable view of the sorted list of shows */","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"    ObservableList\u003cShow\u003e getSortedShowList();","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the user prefs\u0027 show list file path.","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"    Path getShowListFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"aweijun":8,"lowkaiwei98":46}},{"path":"src/main/java/seedu/trackermon/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.Command;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.CommandResult;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.TrackermonParser;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.storage.Storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"    public static final String FILE_OPS_SAVE_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"    public static final String FILE_OPS_READ_ERROR_MESSAGE \u003d \"Could not read import data: File may be corrupted.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"    private final Model model;","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"    private final Storage storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"    private final TrackermonParser parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"        this.model \u003d model;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"        parser \u003d new TrackermonParser();","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"        CommandResult commandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"        Command command \u003d parser.parseCommand(commandText);","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"            if (commandResult.isImport()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"                Optional\u003cReadOnlyShowList\u003e showListOptional \u003d storage.readShowList();","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"                ReadOnlyShowList currentData \u003d model.getShowList();","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"                model.setShowList(showListOptional.orElse(currentData));","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"            storage.saveShowList(model.getShowList());","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"            throw new CommandException(FILE_OPS_SAVE_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"        } catch (DataConversionException dce) {","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"            undoImport();","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"            throw new CommandException(FILE_OPS_READ_ERROR_MESSAGE, dce);","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"        return commandResult;","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"    private void undoImport() throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"            // Since model\u0027s show list has yet to be updated, we can \"undo\" the import","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"arcornior"},"content":"            storage.saveShowList(model.getShowList());","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"arcornior"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"arcornior"},"content":"            throw new CommandException(FILE_OPS_SAVE_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"    public ReadOnlyShowList getShowList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"        return model.getShowList();","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"    public ObservableList\u003cShow\u003e getFilteredShowList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"        return model.getFilteredShowList();","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"    public ObservableList\u003cShow\u003e getSortedShowList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"        return model.getSortedShowList();","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"    public Path getShowListFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"        return model.getShowListFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"lowkaiwei98"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"lowkaiwei98"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"lowkaiwei98"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"lowkaiwei98"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"arcornior":24,"aweijun":12,"lowkaiwei98":73}},{"path":"src/main/java/seedu/trackermon/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":" * Adds a show to Trackermon.","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a show to Trackermon. \"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"            + \"[\" + PREFIX_RATING + \"Rating]...\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_NAME + \"Boku no Hero \"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_STATUS + \"completed \"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"            + PREFIX_COMMENT + \"This is about kids fighting \"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"            + PREFIX_RATING + \"2 \"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_TAG + \"Anime \"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_TAG + \"Action\";","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New show added: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_DUPLICATE_SHOW \u003d \"This show already exists in Trackermon\";","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"    private final Show toAdd;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"     * Creates an AddCommand to add the specified {@code Show}","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"     * @param show a show to add into the show list.","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"    public AddCommand(Show show) {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"        requireNonNull(show);","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"        toAdd \u003d show;","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"        if (model.hasShow(toAdd)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SHOW);","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"        model.addShow(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"JonathanHoshi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), model.getShowListSize() - 1);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"aweijun":13,"lowkaiwei98":5,"Ardentsoul":49,"JonathanHoshi":1}},{"path":"src/main/java/seedu/trackermon/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.ShowList;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":" * Clears the show list.","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Show list has been cleared!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"        model.setShowList(new ShowList());","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"lowkaiwei98":6,"-":17}},{"path":"src/main/java/seedu/trackermon/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aweijun":3,"-":17}},{"path":"src/main/java/seedu/trackermon/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"    public static final int DEFAULT_INDEX \u003d -1;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"    private final boolean isShowHelp;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"    private final boolean isExit;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"    /** The application is importing a file. */","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"    private final boolean isImport;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"    /** The index information of commands */","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"    private final int indexAffected;","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"     * Constructs a {@code CommandResult} with all specified fields.","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"    public CommandResult(String feedbackToUser, boolean isShowHelp, boolean isExit, boolean isImport,","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"                         int indexAffected) {","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"        this.isShowHelp \u003d isShowHelp;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"        this.isImport \u003d isImport;","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"        this.indexAffected \u003d indexAffected;","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code isShowHelp},","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"     * {@code isExit}, {@code isImport}, and other fields set to their default value.","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"    public CommandResult(String feedbackToUser, boolean isShowHelp, boolean isExit, boolean isImport) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"JonathanHoshi"},"content":"        this(feedbackToUser, isShowHelp, isExit, isImport, DEFAULT_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"JonathanHoshi"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code isShowHelp},","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"JonathanHoshi"},"content":"     * {@code isExit}, and other fields set to their default value.","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"    public CommandResult(String feedbackToUser, boolean isShowHelp, boolean isExit) {","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"        this(feedbackToUser, isShowHelp, isExit, false);","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"JonathanHoshi"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser} and {@code indexAffected},","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"JonathanHoshi"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"    public CommandResult(String feedbackToUser, int indexAffected) {","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"JonathanHoshi"},"content":"        this(feedbackToUser, false, false, false, indexAffected);","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"JonathanHoshi"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"JonathanHoshi"},"content":"        return isShowHelp;","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"JonathanHoshi"},"content":"        return isExit;","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"arcornior"},"content":"    public boolean isImport() {","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"arcornior"},"content":"        return isImport;","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"JonathanHoshi"},"content":"    public int getIndexAffected() {","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"JonathanHoshi"},"content":"        return indexAffected;","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"JonathanHoshi"},"content":"                \u0026\u0026 isShowHelp \u003d\u003d otherCommandResult.isShowHelp","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"JonathanHoshi"},"content":"                \u0026\u0026 isExit \u003d\u003d otherCommandResult.isExit;","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"JonathanHoshi"},"content":"        return Objects.hash(feedbackToUser, isShowHelp, isExit);","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arcornior":14,"aweijun":1,"-":57,"JonathanHoshi":41}},{"path":"src/main/java/seedu/trackermon/logic/commands/CommentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.model.Model.PREDICATE_SHOW_ALL_SHOWS;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.Messages;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":" * Allows users to comment on the show.","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"public class CommentCommand extends Command {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"    public static final String COMMENT_ADD_SUCCESS \u003d \"Added comment to show: %1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    public static final String COMMENT_DELETE_SUCCESS \u003d \"Delete comment from show: %1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"            + \"Existing comment will be overwritten by the input.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"            + PREFIX_COMMENT + \"[REMARK]\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"            + PREFIX_COMMENT + \"Good Show.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"    private final Index index;","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"    private final Comment comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"     * Creates an CommentCommand to edit comments on the specified show at {@code index}","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"     * @param index the index of the show whose comment are to be edited.","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"     * @param comment replace the show\u0027s comment with said comment","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    public CommentCommand(Index index, Comment comment) {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(index, comment);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        List\u003cShow\u003e lastShownList \u003d model.getFilteredShowList();","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SHOW_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"        Show showToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"        Show editedShow \u003d new Show(showToEdit.getName(), showToEdit.getStatus(),","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"                showToEdit.getTags(), showToEdit.getComment(), showToEdit.getRating());","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"        model.setShow(showToEdit, editedShow);","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"        model.updateFilteredShowList(PREDICATE_SHOW_ALL_SHOWS);","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"JonathanHoshi"},"content":"        return new CommandResult(generateSuccessMessage(editedShow), index.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"     * Generates a command execution success message based on whether the comment is added to or removed from","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"     * {@code showToEdit}.","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"    private String generateSuccessMessage(Show showToEdit) {","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"        String message \u003d !comment.comment.isEmpty() ? COMMENT_ADD_SUCCESS : COMMENT_DELETE_SUCCESS;","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"        return String.format(message, showToEdit);","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"            return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"        if (!(other instanceof CommentCommand)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"        CommentCommand e \u003d (CommentCommand) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 comment.equals(e.comment);","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"aweijun":89,"JonathanHoshi":1}},{"path":"src/main/java/seedu/trackermon/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":" * Deletes a show identified using it\u0027s displayed index from Trackermon.","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"            + \": Deletes the show identified by the index number used in the displayed Trackermon.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_DELETE_SHOW_SUCCESS \u003d \"Deleted Show: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"        List\u003cShow\u003e lastShownList \u003d model.getFilteredShowList();","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SHOW_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"        Show showToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"        model.deleteShow(showToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SHOW_SUCCESS, showToDelete));","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"aweijun":6,"-":39,"lowkaiwei98":3,"Ardentsoul":5}},{"path":"src/main/java/seedu/trackermon/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Rating;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Status;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":" * Edits the details of an existing show in Trackermon.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the show identified \"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"            + \"by the index number used in the displayed show list. \"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"            + \"[\" + PREFIX_COMMENT + \"COMMENT] \"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"            + PREFIX_NAME + \"Attack on Titan \"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"            + PREFIX_STATUS + \"watching \"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"            + PREFIX_COMMENT + \"This is not bad!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_EDIT_SHOW_SUCCESS \u003d \"Edited Show: %1$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_DUPLICATE_SHOW \u003d \"This show already exists in Trackermon.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"    private final Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"    private final EditShowDescriptor editShowDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"     * @param index of the show in the filtered show list to edit","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"     * @param editShowDescriptor details to edit the show with","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"    public EditCommand(Index index, EditShowDescriptor editShowDescriptor) {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(editShowDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"        this.editShowDescriptor \u003d new EditShowDescriptor(editShowDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"        List\u003cShow\u003e lastShownList \u003d model.getFilteredShowList();","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SHOW_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"        Show showToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"        Show editedShow \u003d createEditedShow(showToEdit, editShowDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"        if (!showToEdit.isSameShow(editedShow) \u0026\u0026 model.hasShow(editedShow)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SHOW);","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"        model.setShow(showToEdit, editedShow);","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"JonathanHoshi"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_SHOW_SUCCESS, editedShow), index.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"     * Creates and returns a {@code Show} with the details of {@code showToEdit}","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"     * edited with {@code editShowDescriptor}.","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"    private static Show createEditedShow(Show showToEdit, EditShowDescriptor editShowDescriptor) {","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"        assert showToEdit !\u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"        Name updatedName \u003d editShowDescriptor.getName().orElse(showToEdit.getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"        Status updatedStatus \u003d editShowDescriptor.getStatus().orElse(showToEdit.getStatus());","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"        Set\u003cTag\u003e updatedTags \u003d editShowDescriptor.getTags().orElse(showToEdit.getTags());","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"        Comment updateComment \u003d editShowDescriptor.getComment().orElse(showToEdit.getComment());","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"aweijun"},"content":"        Rating updateRating \u003d editShowDescriptor.getRating().orElse(showToEdit.getRating());","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"aweijun"},"content":"        return new Show(updatedName, updatedStatus, updatedTags, updateComment, updateRating);","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"lowkaiwei98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"lowkaiwei98"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"lowkaiwei98"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"lowkaiwei98"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"lowkaiwei98"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"lowkaiwei98"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"lowkaiwei98"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"lowkaiwei98"},"content":"        // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"lowkaiwei98"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"lowkaiwei98"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"lowkaiwei98"},"content":"                \u0026\u0026 editShowDescriptor.equals(e.editShowDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"lowkaiwei98"},"content":"     * Stores the details to edit the show with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"lowkaiwei98"},"content":"     * corresponding field value of the show.","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"lowkaiwei98"},"content":"    public static class EditShowDescriptor {","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"lowkaiwei98"},"content":"        private Name name;","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"lowkaiwei98"},"content":"        private Status status;","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"lowkaiwei98"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"aweijun"},"content":"        private Comment comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"aweijun"},"content":"        private Rating rating;","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"lowkaiwei98"},"content":"        public EditShowDescriptor() {}","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"lowkaiwei98"},"content":"        /**","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"lowkaiwei98"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"lowkaiwei98"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"lowkaiwei98"},"content":"         */","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"lowkaiwei98"},"content":"        public EditShowDescriptor(EditShowDescriptor toCopy) {","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"lowkaiwei98"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"lowkaiwei98"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"lowkaiwei98"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"aweijun"},"content":"            setComment(toCopy.comment);","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"aweijun"},"content":"            setRating(toCopy.rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"lowkaiwei98"},"content":"        /**","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"lowkaiwei98"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"lowkaiwei98"},"content":"         */","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"lowkaiwei98"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"aweijun"},"content":"            return CollectionUtil.isAnyNonNull(name, status, tags, comment, rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"lowkaiwei98"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"lowkaiwei98"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"lowkaiwei98"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"lowkaiwei98"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"lowkaiwei98"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"lowkaiwei98"},"content":"            this.status \u003d status;","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"lowkaiwei98"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"lowkaiwei98"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"aweijun"},"content":"        public void setComment(Comment comment) {","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"aweijun"},"content":"            this.comment \u003d comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"aweijun"},"content":"        public Optional\u003cComment\u003e getComment() {","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"aweijun"},"content":"            return Optional.ofNullable(comment);","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"aweijun"},"content":"        public void setRating(Rating rating) {","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"aweijun"},"content":"            this.rating \u003d rating;","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"aweijun"},"content":"        public Optional\u003cRating\u003e getRating() {","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"aweijun"},"content":"            return Optional.ofNullable(rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"lowkaiwei98"},"content":"        /**","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"lowkaiwei98"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"lowkaiwei98"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"lowkaiwei98"},"content":"         */","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"lowkaiwei98"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"lowkaiwei98"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"lowkaiwei98"},"content":"        /**","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"lowkaiwei98"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"lowkaiwei98"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"lowkaiwei98"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"lowkaiwei98"},"content":"         */","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"lowkaiwei98"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"lowkaiwei98"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"lowkaiwei98"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"lowkaiwei98"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"lowkaiwei98"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"lowkaiwei98"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"lowkaiwei98"},"content":"                return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"lowkaiwei98"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":209,"author":{"gitId":"lowkaiwei98"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":210,"author":{"gitId":"lowkaiwei98"},"content":"            if (!(other instanceof EditShowDescriptor)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"lowkaiwei98"},"content":"                return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"lowkaiwei98"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"lowkaiwei98"},"content":"            // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"lowkaiwei98"},"content":"            EditShowDescriptor e \u003d (EditShowDescriptor) other;","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"lowkaiwei98"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"lowkaiwei98"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"aweijun"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"aweijun"},"content":"                    \u0026\u0026 getComment().equals(e.getComment())","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"aweijun"},"content":"                    \u0026\u0026 getRating().equals(e.getRating());","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aweijun":46,"lowkaiwei98":176,"Ardentsoul":1,"JonathanHoshi":1}},{"path":"src/main/java/seedu/trackermon/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":" * Terminates Trackermon.","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Trackermon as requested ...\";","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":2,"-":15,"lowkaiwei98":2}},{"path":"src/main/java/seedu/trackermon/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import seedu.trackermon.storage.JsonFileManager;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":" * Exports data from Trackermon.","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Exported data file.\";","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"    public static final String MESSAGE_FAIL \u003d \"Data file export failed.\";","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"    public static final String MESSAGE_ABORT \u003d \"Export data aborted.\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"        JsonFileManager jfm \u003d new JsonFileManager(\"trackermon.json\");","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"        int result \u003d jfm.exportFile(model.getShowListFilePath());","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"        if (result \u003d\u003d JsonFileManager.SUCCESS) {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"        } else if (result \u003d\u003d JsonFileManager.CANCEL) {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"            return new CommandResult(MESSAGE_ABORT);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"        return new CommandResult(MESSAGE_FAIL);","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"arcornior":35}},{"path":"src/main/java/seedu/trackermon/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":" * Finds and lists all shows in Trackermon whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all shows whose names contain any of \"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"            + \"At least one parameter must be stated in the find command.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"            + \"Parameters: [n/NAME] [s/STATUS] [r/RATING] [t/TAG]…\\u200B\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"            + \"Example: \" + COMMAND_WORD + \" hero kyojin academia OR \"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"            + COMMAND_WORD + \" n/hero kyojin academia s/completed t/Action\";","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    public static final String TAG_ERROR \u003d \"Tag parameter must only be a single word.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"            + \"Example: \" + COMMAND_WORD + \" t/Action\";","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    public static final String RATING_ERROR \u003d \"Rating parameter must not be empty and must be a whole number ranging \"","lastModifiedDate":"2022-04-02"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"        + \"from 0 to 5!\\nExample: \" + COMMAND_WORD + \" r/5\";","lastModifiedDate":"2022-04-02"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    private final Predicate\u003cShow\u003e predicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"    public FindCommand(Predicate\u003cShow\u003e predicate) {","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"        model.updateFilteredShowList(predicate);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"                String.format(Messages.MESSAGE_SHOWS_LISTED_OVERVIEW, model.getFilteredShowList().size()));","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":3,"lowkaiwei98":1,"Ardentsoul":46,"JonathanHoshi":1}},{"path":"src/main/java/seedu/trackermon/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows Trackermon usage instructions.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"aweijun":2,"-":18,"Ardentsoul":1}},{"path":"src/main/java/seedu/trackermon/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import seedu.trackermon.storage.JsonFileManager;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":" * Imports data into Trackermon.","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Imported data file.\";","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"    public static final String MESSAGE_FAIL \u003d \"Data file import failed.\";","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"    public static final String MESSAGE_ABORT \u003d \"Import data aborted.\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"        JsonFileManager jfm \u003d new JsonFileManager();","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"        int result \u003d jfm.importFile(model.getShowListFilePath());","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"        if (result \u003d\u003d JsonFileManager.SUCCESS) {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"            return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"        } else if (result \u003d\u003d JsonFileManager.CANCEL) {","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"            return new CommandResult(MESSAGE_ABORT);","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"        return new CommandResult(MESSAGE_FAIL);","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"arcornior":34}},{"path":"src/main/java/seedu/trackermon/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.model.Model.PREDICATE_SHOW_ALL_SHOWS;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":" * Lists all shows in Trackermon to the user.","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all shows\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"        model.updateFilteredShowList(PREDICATE_SHOW_ALL_SHOWS);","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"aweijun":3,"lowkaiwei98":2,"Ardentsoul":18,"JonathanHoshi":1}},{"path":"src/main/java/seedu/trackermon/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":" * Sort the list of shows in Trackermon.","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"sort success!!\";","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"    private final Comparator\u003cShow\u003e comparator;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"    public SortCommand(Comparator\u003cShow\u003e comparator) {","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"        model.updateSortedShowList(comparator);","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"lowkaiwei98":33}},{"path":"src/main/java/seedu/trackermon/logic/commands/SuggestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import java.util.Random;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.SuggestPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":" * Returns a random Show from the displayed list.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"public class SuggestCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    public static final String COMMAND_WORD \u003d \"suggest\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here is my suggestion\";","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"    public static final String MESSAGE_FAILURE_NO_SHOWS \u003d \"There are no shows currently being listed!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    public static final String MESSAGE_FAILURE_ONE_SHOW \u003d \"There is only one show in the list\";","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"    public static final String TAG_ERROR \u003d \"Tag parameter must only be a single word.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"            + \"Example: \" + COMMAND_WORD + \" t/Action\";","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"        List\u003cShow\u003e currList \u003d model.getFilteredShowList();","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"        Integer sizeOfShowList \u003d currList.size();","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"        if (sizeOfShowList \u003c\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"            throw new CommandException(MESSAGE_FAILURE_NO_SHOWS);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"        if (sizeOfShowList \u003d\u003d 1) {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"            throw new CommandException(MESSAGE_FAILURE_ONE_SHOW);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"        Show randomShow \u003d getRandomShow(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"        SuggestPredicate suggestPredicate \u003d new SuggestPredicate(randomShow);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"        model.updateFilteredShowList(suggestPredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"    private static Show getRandomShow(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"        Random rn \u003d new Random();","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"        List\u003cShow\u003e currList \u003d model.getFilteredShowList();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"        Integer sizeOfShowList \u003d currList.size();","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"        Integer randomIndex \u003d rn.nextInt(sizeOfShowList - 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        return currList.get(randomIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aweijun":54}},{"path":"src/main/java/seedu/trackermon/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.Command;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"aweijun":2,"-":17}},{"path":"src/main/java/seedu/trackermon/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.AddCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Rating;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Status;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STATUS, PREFIX_TAG, PREFIX_COMMENT, PREFIX_RATING);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_STATUS)","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"        Rating rating \u003d ParserUtil.parseRating(argMultimap.getValue(PREFIX_RATING).orElse(\"0\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        Comment comment \u003d ParserUtil.parseComment(argMultimap.getValue(PREFIX_COMMENT).orElse(\"\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"        Show show \u003d new Show(name, status, tagList, comment, rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"        return new AddCommand(show);","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"aweijun":19,"-":37,"lowkaiwei98":3}},{"path":"src/main/java/seedu/trackermon/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"     * in the {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"    public boolean arePrefixesPresent(Prefix... prefixes) {","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e this.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"aweijun":1,"-":59,"Ardentsoul":9}},{"path":"src/main/java/seedu/trackermon/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"aweijun":1,"-":147}},{"path":"src/main/java/seedu/trackermon/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"public class CliSyntax {","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"    /* Prefix definitions */","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"    public static final Prefix PREFIX_COMMENT \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"    public static final Prefix PREFIX_RATING \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"    public static final Prefix PREFIX_SORT_ORDER \u003d new Prefix(\"so/\");","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"aweijun":2,"lowkaiwei98":3,"Ardentsoul":10}},{"path":"src/main/java/seedu/trackermon/logic/parser/CommentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.CommentCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":" * Parses input arguments and create a new CommentCommand object.","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"public class CommentCommandParser {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"     * Parse the given {@code String} of arguments in the context of the CommentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"     * and returns a CommentCommand object for execution.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"     * @throws ParseException if the user input does not confirm the expected format.","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"    public CommentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_COMMENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"        Index index;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"                    CommentCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"        Comment comment \u003d new Comment(argumentMultimap.getValue(PREFIX_COMMENT).orElse(\"\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"        System.out.println(comment.comment);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"        return new CommentCommand(index, comment);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"aweijun":39,"JonathanHoshi":1}},{"path":"src/main/java/seedu/trackermon/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"aweijun":5,"-":24}},{"path":"src/main/java/seedu/trackermon/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.EditCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.EditCommand.EditShowDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STATUS, PREFIX_TAG, PREFIX_COMMENT, PREFIX_RATING);","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"        EditCommand.EditShowDescriptor editShowDescriptor \u003d new EditShowDescriptor();","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"            editShowDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"            editShowDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editShowDescriptor::setTags);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"        if (argMultimap.getValue(PREFIX_COMMENT).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"            editShowDescriptor.setComment(ParserUtil.parseComment(argMultimap.getValue(PREFIX_COMMENT).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"        if (argMultimap.getValue(PREFIX_RATING).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"            editShowDescriptor.setRating(ParserUtil.parseRating(argMultimap.getValue(PREFIX_RATING).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"        if (!editShowDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"        return new EditCommand(index, editShowDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aweijun":18,"-":58,"lowkaiwei98":9}},{"path":"src/main/java/seedu/trackermon/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import java.util.List;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.FindCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.Rating;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.RatingContainsKeywordsPredicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.ShowContainsKeywordsPredicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.StatusContainsKeywordsPredicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.TagsContainsKeywordsPredicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"                args, PREFIX_NAME, PREFIX_STATUS, PREFIX_TAG, PREFIX_RATING);","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"        boolean hasPrefix \u003d false;","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"        boolean hasNamePrefix \u003d argumentMultimap.arePrefixesPresent(PREFIX_NAME);","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"        boolean hasStatusPrefix \u003d argumentMultimap.arePrefixesPresent(PREFIX_STATUS);","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"        boolean hasTagPrefix \u003d argumentMultimap.arePrefixesPresent(PREFIX_TAG);","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"        boolean hasRatingPrefix \u003d argumentMultimap.arePrefixesPresent(PREFIX_RATING);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"        String[] keywordsArr;","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"        List\u003cPredicate\u003cShow\u003e\u003e predicateArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"        if (hasNamePrefix) {","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"            hasPrefix \u003d true;","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"            String input \u003d argumentMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"            keywordsArr \u003d getKeywords(input);","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"            for (int i \u003d 0; i \u003c keywordsArr.length; i++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"                predicateArrayList.add(new NameContainsKeywordsPredicate(Arrays.asList(keywordsArr[i])));","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"        if (hasStatusPrefix) {","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"            hasPrefix \u003d true;","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"            String input \u003d argumentMultimap.getValue(PREFIX_STATUS).get();","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"            keywordsArr \u003d getKeywords(input);","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"            predicateArrayList.add(new StatusContainsKeywordsPredicate(Arrays.asList(keywordsArr)));","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"        if (hasTagPrefix) {","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"            hasPrefix \u003d true;","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"            List\u003cString\u003e input \u003d argumentMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"            for (int i \u003d 0; i \u003c input.size(); i++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"                if (!Tag.isValidTagName(input.get(i))) {","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.TAG_ERROR));","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"                predicateArrayList.add(new TagsContainsKeywordsPredicate(Arrays.asList(input.get(i))));","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"Ardentsoul"},"content":"        if (hasRatingPrefix) {","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"Ardentsoul"},"content":"            hasPrefix \u003d true;","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"Ardentsoul"},"content":"            String input \u003d argumentMultimap.getValue(PREFIX_RATING).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"Ardentsoul"},"content":"            input \u003d input.replaceFirst(\"^0+(?!$)\", \"\");","lastModifiedDate":"2022-04-02"},{"lineNumber":78,"author":{"gitId":"Ardentsoul"},"content":"            keywordsArr \u003d getRatingKeywords(input);","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"Ardentsoul"},"content":"            for (int i \u003d 0; i \u003c keywordsArr.length; i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"Ardentsoul"},"content":"                keywordsArr[i] \u003d keywordsArr[i].replaceFirst(\"^0+(?!$)\", \"\");","lastModifiedDate":"2022-04-02"},{"lineNumber":81,"author":{"gitId":"Ardentsoul"},"content":"                if (!Rating.isValidScore(keywordsArr[i])) {","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"                    throw new ParseException(String.format(MESSAGE_INDEX_OUT_OF_BOUNDS, FindCommand.RATING_ERROR));","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"Ardentsoul"},"content":"                }","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"Ardentsoul"},"content":"                predicateArrayList.add(new RatingContainsKeywordsPredicate(Arrays.asList(keywordsArr)));","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"Ardentsoul"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"Ardentsoul"},"content":"        if (!hasPrefix) {","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"Ardentsoul"},"content":"            keywordsArr \u003d getKeywords(args);","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"Ardentsoul"},"content":"            return new FindCommand(new ShowContainsKeywordsPredicate(Arrays.asList(keywordsArr)));","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"Ardentsoul"},"content":"        } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"Ardentsoul"},"content":"            return new FindCommand(predicateArrayList.stream().reduce(Predicate::and).orElse(x -\u003etrue));","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"Ardentsoul"},"content":"    public String[] getKeywords(String args) throws ParseException {","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"Ardentsoul"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"Ardentsoul"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"Ardentsoul"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"Ardentsoul"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"Ardentsoul"},"content":"        return trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"Ardentsoul"},"content":"    public String[] getRatingKeywords(String args) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"Ardentsoul"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"Ardentsoul"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"Ardentsoul"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"Ardentsoul"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.RATING_ERROR));","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"Ardentsoul"},"content":"        return trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"aweijun":5,"Ardentsoul":107}},{"path":"src/main/java/seedu/trackermon/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.Command;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"aweijun":3,"-":13,"lowkaiwei98":1}},{"path":"src/main/java/seedu/trackermon/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.SortCommandParser.VALUE_ASC;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.SortCommandParser.VALUE_DSC;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.util.StringUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Rating;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Status;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_INVALID_ORDER \u003d \"Invalid value!! Need to asc or dsc. For example: n/asc\";","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses a {@code String status} into a {@code Status}.","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"        String trimmedStatus \u003d status.trim().toUpperCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"        return Status.getStatus(trimmedStatus);","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"     * Parses a {@code String rating} into a {@code Rating}.","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"     * @throws ParseException if the given {@code rating} is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"    public static Rating parseRating(int rating) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"        requireNonNull(rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"        if (!Rating.isValidScore(rating)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"            throw new ParseException(Rating.INVALID_RATING);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"        return new Rating(rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"     * Parses a {@code String rating} into a {@code Rating}.","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"     * @throws ParseException if the given {@code rating} is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"    public static Rating parseRating(String rating) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"        requireNonNull(rating);","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"        if (!Rating.isValidScore(rating)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"            throw new ParseException(Rating.INVALID_RATING);","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"        return new Rating(rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"aweijun"},"content":"     * Parses {@code String comment} into a {@code Comment}","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"aweijun"},"content":"    public static Comment parseComment(String comment) {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"aweijun"},"content":"        requireNonNull(comment);","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"aweijun"},"content":"        Comment validComment \u003d new Comment(comment);","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"aweijun"},"content":"        return validComment;","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"lowkaiwei98"},"content":"     * Checks input string is valid.","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"lowkaiwei98"},"content":"     * @param order input string.","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"lowkaiwei98"},"content":"     * @return input string.","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException if the input is not valid.","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"lowkaiwei98"},"content":"    public static String checkOrder(String order) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(order);","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"lowkaiwei98"},"content":"        if (!order.equals(VALUE_ASC) \u0026\u0026 !order.equals(VALUE_DSC)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"lowkaiwei98"},"content":"            throw new ParseException(MESSAGE_INVALID_ORDER);","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"lowkaiwei98"},"content":"        return order;","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"aweijun":32,"-":91,"lowkaiwei98":26}},{"path":"src/main/java/seedu/trackermon/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"aweijun":1,"-":38}},{"path":"src/main/java/seedu/trackermon/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.SortCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.NameComparator;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.RatingComparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.StatusComparator;","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.TagComparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"    protected static final String VALUE_ASC \u003d \"ASC\";","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"    protected static final String VALUE_DSC \u003d \"DSC\";","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String VALUE_ORDER_NAME \u003d \"NAME\";","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String VALUE_ORDER_STATUS \u003d \"STATUS\";","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String VALUE_ORDER_RATING \u003d \"RATING\";","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String VALUE_ORDER_TAG \u003d \"TAG\";","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"    private static final int NO_VALUE \u003d -1;","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"    private static final int ADD_VALUE \u003d 100;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"    private static int startingValue \u003d 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"    private static HashMap\u003cComparator\u003cShow\u003e, Integer\u003e order \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String MESSAGE_INVALID_SO \u003d \"Invalid input for so/,\"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"            + \" please provide the exact number of correctly spelt names in a sequence you want.\"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"            + \"For example: sorting status than tags, \" + SortCommand.COMMAND_WORD","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"            + \" \" + PREFIX_TAG + VALUE_ASC + \" \" + PREFIX_STATUS + VALUE_ASC + \" \"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"            + PREFIX_SORT_ORDER + VALUE_ORDER_STATUS + \" \" + VALUE_ORDER_TAG;","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"            return new SortCommand(new NameComparator());","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"        Comparator\u003cShow\u003e nameComparator \u003d new NameComparator();","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"        Comparator\u003cShow\u003e statusComparator \u003d new StatusComparator();","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"        Comparator\u003cShow\u003e ratingComparator \u003d new RatingComparator();","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"        Comparator\u003cShow\u003e tagComparator \u003d new TagComparator();","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"                        PREFIX_STATUS, PREFIX_RATING, PREFIX_TAG, PREFIX_SORT_ORDER);","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"        order \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"        //Initialise order map","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"        order.put(nameComparator, NO_VALUE);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"        order.put(statusComparator, NO_VALUE);","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"        order.put(ratingComparator, NO_VALUE);","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"        order.put(tagComparator, NO_VALUE);","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"        //put into Order map for every prefix used","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"        Comparator\u003cShow\u003e finalNameComparator \u003d putIntoMap(nameComparator, PREFIX_NAME, argMultimap);","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"        Comparator\u003cShow\u003e finalStatusComparator \u003d putIntoMap(statusComparator, PREFIX_STATUS, argMultimap);","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"        Comparator\u003cShow\u003e finalRatingComparator \u003d putIntoMap(ratingComparator, PREFIX_RATING, argMultimap);","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"        Comparator\u003cShow\u003e finalTagComparator \u003d putIntoMap(tagComparator, PREFIX_TAG, argMultimap);","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"        //a new Map for knowing what word to search for in so/","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"        HashMap\u003cComparator\u003cShow\u003e, String\u003e comparatorString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"        comparatorString.put(finalNameComparator, VALUE_ORDER_NAME);","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"        comparatorString.put(finalStatusComparator, VALUE_ORDER_STATUS);","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"        comparatorString.put(finalRatingComparator, VALUE_ORDER_RATING);","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"        comparatorString.put(finalTagComparator, VALUE_ORDER_TAG);","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"        //reorder the Order map according to the input value in so/","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"        reorderMap(argMultimap, comparatorString);","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"        //sort the hashmap","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"        Map\u003cComparator\u003cShow\u003e, Integer\u003e sortedOrder \u003d order.entrySet().stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"                .sorted(Map.Entry.comparingByValue())","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"                .collect(Collectors.toMap(Map.Entry::getKey,","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"                        Map.Entry::getValue, (oldValue, newValue) -\u003e oldValue, LinkedHashMap::new));","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"        //the final comparator built according the Order Map","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"        Comparator\u003cShow\u003e comparator \u003d buildComparator(sortedOrder);","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"        //if no prefixes are present, sort by name ascending","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"        return new SortCommand(Objects.requireNonNullElse(comparator, nameComparator));","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns a comparator then chains the previous comparator to a new one if the previous is not null.","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"lowkaiwei98"},"content":"     * @param comparator previous comparator to built upon.","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"lowkaiwei98"},"content":"     * @param entry is the new comparator to chain.","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"lowkaiwei98"},"content":"     * @return a comparator build upon the previous comparator.","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"lowkaiwei98"},"content":"    private static Comparator\u003cShow\u003e chainComparator(Comparator\u003cShow\u003e comparator,","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"lowkaiwei98"},"content":"                                                    Map.Entry\u003cComparator\u003cShow\u003e, Integer\u003e entry) {","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"lowkaiwei98"},"content":"        if (comparator \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"lowkaiwei98"},"content":"            return entry.getKey();","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"lowkaiwei98"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"lowkaiwei98"},"content":"            return comparator.thenComparing(entry.getKey());","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns a new comparator based on the values in sorted Map.","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"lowkaiwei98"},"content":"     * @param sortedOrder the sorted map for the new comparator to build upon.","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"lowkaiwei98"},"content":"     * @return a new comparator based on the values in sorted Map.","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"lowkaiwei98"},"content":"    private static Comparator\u003cShow\u003e buildComparator(Map\u003cComparator\u003cShow\u003e, Integer\u003e sortedOrder) {","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"lowkaiwei98"},"content":"        Comparator\u003cShow\u003e overallComparator \u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"lowkaiwei98"},"content":"        for (Map.Entry\u003cComparator\u003cShow\u003e, Integer\u003e entry: sortedOrder.entrySet()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"lowkaiwei98"},"content":"            if (entry.getValue() !\u003d NO_VALUE) {","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"lowkaiwei98"},"content":"                overallComparator \u003d chainComparator(overallComparator, entry);","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"lowkaiwei98"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"lowkaiwei98"},"content":"        return overallComparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"lowkaiwei98"},"content":"     * Checks if the prefix is used and if it is, update Order map.","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"lowkaiwei98"},"content":"     * Checks if descending value is used correctly, update the Order map with descending comparator and","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"lowkaiwei98"},"content":"     * returns the comparator.","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"lowkaiwei98"},"content":"     * @param comparator key of the Order Map.","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"lowkaiwei98"},"content":"     * @param prefix the Prefix to search.","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"lowkaiwei98"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"lowkaiwei98"},"content":"     * @return a comparator depending on whether it was reversed.","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"lowkaiwei98"},"content":"    private static Comparator\u003cShow\u003e putIntoMap(Comparator\u003cShow\u003e comparator,","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"lowkaiwei98"},"content":"                                               Prefix prefix, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"lowkaiwei98"},"content":"        Comparator\u003cShow\u003e newComparator \u003d comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"lowkaiwei98"},"content":"        if (arePrefixesPresent(argMultimap, prefix)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"lowkaiwei98"},"content":"            String value \u003d argMultimap.getValue(prefix).orElse(VALUE_ASC);","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"lowkaiwei98"},"content":"            value \u003d ParserUtil.checkOrder(value.toUpperCase().trim());","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"lowkaiwei98"},"content":"            if (value.equals(VALUE_DSC)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"lowkaiwei98"},"content":"                newComparator \u003d comparator.reversed();","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"lowkaiwei98"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"lowkaiwei98"},"content":"            order.put(newComparator, startingValue);","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"lowkaiwei98"},"content":"            startingValue++;","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"lowkaiwei98"},"content":"        return newComparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"lowkaiwei98"},"content":"     * Updates value of Order Map if the value is not -1.","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"lowkaiwei98"},"content":"     * @param comparator key of the Order Map.","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"lowkaiwei98"},"content":"     * @param index new index to update.","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"lowkaiwei98"},"content":"    private static void updateMapValues(Comparator\u003cShow\u003e comparator, int index) {","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"lowkaiwei98"},"content":"        if (order.get(comparator) !\u003d NO_VALUE) {","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"lowkaiwei98"},"content":"            order.replace(comparator, index);","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"lowkaiwei98"},"content":"     * Add ADD_VALUE to value.","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"lowkaiwei98"},"content":"     * @param value integer to change.","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"lowkaiwei98"},"content":"     * @return the new value.","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"lowkaiwei98"},"content":"    private static int addValue(int value) {","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"lowkaiwei98"},"content":"        return value + ADD_VALUE;","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"lowkaiwei98"},"content":"     * Changes the values of Order Map based on input value for prefix so/.","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"lowkaiwei98"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"lowkaiwei98"},"content":"     * @param comparatorString Map that contains the comparator and the string to search.","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"lowkaiwei98"},"content":"    private static void reorderMap(ArgumentMultimap argMultimap, HashMap\u003cComparator\u003cShow\u003e,","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"lowkaiwei98"},"content":"            String\u003e comparatorString) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"lowkaiwei98"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_SORT_ORDER)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"lowkaiwei98"},"content":"            String valueOrder \u003d argMultimap.getValue(PREFIX_SORT_ORDER).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"lowkaiwei98"},"content":"            valueOrder \u003d valueOrder.toUpperCase().trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"lowkaiwei98"},"content":"            for (Map.Entry\u003cComparator\u003cShow\u003e, String\u003e entry : comparatorString.entrySet()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"lowkaiwei98"},"content":"                int index \u003d valueOrder.indexOf(entry.getValue());","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"lowkaiwei98"},"content":"                if (index !\u003d NO_VALUE) {","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"lowkaiwei98"},"content":"                    int newValue \u003d addValue(index);","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"lowkaiwei98"},"content":"                    updateMapValues(entry.getKey(), newValue);","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"lowkaiwei98"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"lowkaiwei98"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"lowkaiwei98"},"content":"            for (Map.Entry\u003cComparator\u003cShow\u003e, Integer\u003e entry : order.entrySet()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"lowkaiwei98"},"content":"                int value \u003d entry.getValue();","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"lowkaiwei98"},"content":"                if ((value \u003c ADD_VALUE) \u0026\u0026 value !\u003d NO_VALUE) {","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"lowkaiwei98"},"content":"                    throw new ParseException(MESSAGE_INVALID_SO);","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"lowkaiwei98"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"lowkaiwei98"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":201,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":205,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":206,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-21"},{"lineNumber":207,"author":{"gitId":"lowkaiwei98"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-21"},{"lineNumber":208,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":209,"author":{"gitId":"lowkaiwei98"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-21"},{"lineNumber":210,"author":{"gitId":"lowkaiwei98"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-21"},{"lineNumber":211,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":212,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":213,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"lowkaiwei98":212,"JonathanHoshi":1}},{"path":"src/main/java/seedu/trackermon/logic/parser/TrackermonParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.AddCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.Command;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.CommentCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.EditCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"import seedu.trackermon.logic.commands.ExportCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.FindCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"import seedu.trackermon.logic.commands.ImportCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.ListCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.SortCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.SuggestCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"public class TrackermonParser {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"                    HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"        case CommentCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"            return new CommentCommandParser().parse(arguments);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"arcornior"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"arcornior"},"content":"            return new ImportCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"arcornior"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"arcornior"},"content":"            return new ExportCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"        case SuggestCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"            return new SuggestCommand();","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"arcornior":8,"aweijun":20,"-":55,"lowkaiwei98":14}},{"path":"src/main/java/seedu/trackermon/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"aweijun":2,"-":15}},{"path":"src/main/java/seedu/trackermon/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":" * The API of the Model component.","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"public interface Model {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"    Predicate\u003cShow\u003e PREDICATE_SHOW_ALL_SHOWS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"     * Returns the user prefs.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the user prefs\u0027 show list file path.","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"    Path getShowListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"     * Sets the user prefs\u0027 show list file path.","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"    void setShowListFilePath(Path showListFilePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"     * Replaces show list data with the data in {@code showList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"    void setShowList(ReadOnlyShowList showList);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"    /** Returns the ShowList */","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"    ReadOnlyShowList getShowList();","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"JonathanHoshi"},"content":"    /** Returns the ShowList size */","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"JonathanHoshi"},"content":"    int getShowListSize();","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns true if a show with the same name as {@code show} exists in the show list.","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"    boolean hasShow(Show show);","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"     * Deletes the given show.","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"     * The person must exist in the show list.","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"    void deleteShow(Show target);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"     * Adds the given show.","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"     * {@code show} must not already exist in the show list.","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"    void addShow(Show show);","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"     * Replaces the given person {@code target} with {@code editedShow}.","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"     * {@code target} must exist in the show list.","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"     * The show name of {@code editedShow} must not be the same as another existing show in the show list.","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"    void setShow(Show target, Show editedShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"    /** Returns an unmodifiable view of the filtered show list */","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"    ObservableList\u003cShow\u003e getFilteredShowList();","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"     * Updates the filter of the filtered show list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"    void updateFilteredShowList(Predicate\u003cShow\u003e predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"    /** Returns an unmodifiable view of the sorted show list */","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"    ObservableList\u003cShow\u003e getSortedShowList();","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"     * Updates the sort of the sorted show list by the given {@code comparator}.","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"    void updateSortedShowList(Comparator\u003cShow\u003e comparator);","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"lowkaiwei98"},"content":"     * Saves the ordering of the sorted show list.","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"lowkaiwei98"},"content":"    void saveSortedShowList();","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":66,"lowkaiwei98":35,"JonathanHoshi":3}},{"path":"src/main/java/seedu/trackermon/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":" * Represents the in-memory model of the show list data.","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"    private final ShowList showList;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"    private final FilteredList\u003cShow\u003e filteredShows;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"    private final SortedList\u003cShow\u003e sortedShows;","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"     * Initializes a ModelManager with the given showList and userPrefs.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"    public ModelManager(ReadOnlyShowList showList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(showList, userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"        logger.fine(\"Initializing with show list: \" + showList + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"        this.showList \u003d new ShowList(showList);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"        sortedShows \u003d new SortedList\u003c\u003e(this.showList.getShows());","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"        filteredShows \u003d new FilteredList\u003c\u003e(sortedShows);","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"    public ModelManager() {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"        this(new ShowList(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"        return userPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"    public Path getShowListFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"        return userPrefs.getShowListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"    public void setShowListFilePath(Path showListFilePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"        requireNonNull(showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"        userPrefs.setShowListFilePath(showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ShowList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"    public void setShowList(ReadOnlyShowList showList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"        this.showList.resetData(showList);","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"    public ReadOnlyShowList getShowList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"        return showList;","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"JonathanHoshi"},"content":"     * Returns the ShowList size","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"JonathanHoshi"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"JonathanHoshi"},"content":"    public int getShowListSize() {","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"JonathanHoshi"},"content":"        return showList.getShows().size();","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"lowkaiwei98"},"content":"    public boolean hasShow(Show show) {","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(show);","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"lowkaiwei98"},"content":"        return showList.hasShow(show);","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"aweijun"},"content":"    public void deleteShow(Show target) {","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"aweijun"},"content":"        showList.removeShow(target);","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"lowkaiwei98"},"content":"    public void addShow(Show show) {","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"lowkaiwei98"},"content":"        showList.addShow(show);","lastModifiedDate":"2022-04-03"},{"lineNumber":117,"author":{"gitId":"lowkaiwei98"},"content":"        updateFilteredShowList(PREDICATE_SHOW_ALL_SHOWS);","lastModifiedDate":"2022-04-03"},{"lineNumber":118,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"aweijun"},"content":"    public void setShow(Show target, Show editedShow) {","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(target, editedShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"aweijun"},"content":"        showList.setShow(target, editedShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"aweijun"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Show List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"aweijun"},"content":"     * Returns an unmodifiable view of the list of {@code Show} backed by the internal list of","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"aweijun"},"content":"     * {@code versionedShowList}","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"aweijun"},"content":"    public ObservableList\u003cShow\u003e getFilteredShowList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"aweijun"},"content":"        return filteredShows;","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"aweijun"},"content":"    public void updateFilteredShowList(Predicate\u003cShow\u003e predicate) {","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"aweijun"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"aweijun"},"content":"        filteredShows.setPredicate(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"aweijun"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"aweijun"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"aweijun"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"aweijun"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"lowkaiwei98"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"aweijun"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"aweijun"},"content":"        // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"lowkaiwei98"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"aweijun"},"content":"        return showList.equals(other.showList)","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"lowkaiwei98"},"content":"                \u0026\u0026 filteredShows.equals(other.filteredShows)","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"lowkaiwei98"},"content":"                \u0026\u0026 sortedShows.equals(other.sortedShows);","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"lowkaiwei98"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sorted Show List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"lowkaiwei98"},"content":"    public ObservableList\u003cShow\u003e getSortedShowList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"lowkaiwei98"},"content":"        return sortedShows;","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"lowkaiwei98"},"content":"    public void updateSortedShowList(Comparator\u003cShow\u003e comparator) {","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"lowkaiwei98"},"content":"        sortedShows.setComparator(comparator);","lastModifiedDate":"2022-03-21"},{"lineNumber":174,"author":{"gitId":"lowkaiwei98"},"content":"        saveSortedShowList();","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"lowkaiwei98"},"content":"        sortedShows.setComparator(null);","lastModifiedDate":"2022-04-03"},{"lineNumber":176,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"lowkaiwei98"},"content":"    public void saveSortedShowList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"lowkaiwei98"},"content":"        ShowList newShowList \u003d new ShowList();","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"lowkaiwei98"},"content":"        for (int i \u003d 0; i \u003c sortedShows.size(); i++) {","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"lowkaiwei98"},"content":"            newShowList.addShow(sortedShows.get(i));","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"lowkaiwei98"},"content":"        showList.resetData(newShowList);","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":186,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":187,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":125,"lowkaiwei98":54,"JonathanHoshi":8}},{"path":"src/main/java/seedu/trackermon/model/ReadOnlyShowList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"public interface ReadOnlyShowList {","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"     * Returns an unmodifiable view of the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"     * This list will not contain any duplicate show.","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    ObservableList\u003cShow\u003e getShows();","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":12,"Ardentsoul":1}},{"path":"src/main/java/seedu/trackermon/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"    Path getShowListFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"aweijun":2,"-":12,"lowkaiwei98":1}},{"path":"src/main/java/seedu/trackermon/model/ShowList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.UniqueShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"public class ShowList implements ReadOnlyShowList {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"    private final UniqueShowList shows;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"    {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"        shows \u003d new UniqueShowList();","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"    public ShowList() {}","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"     * Creates an ShowList using the Shows in the {@code toBeCopied}","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"    public ShowList(ReadOnlyShowList toBeCopied) {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"        this();","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"     * Replaces the contents of the show list with {@code shows}.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"     * {@code shows} must not contain duplicate shows.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"    public void setShows(List\u003cShow\u003e shows) {","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"        this.shows.setShows(shows);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"     * Resets the existing data of this {@code ShowList} with {@code newData}.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    public void resetData(ReadOnlyShowList newData) {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"        setShows(newData.getShows());","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"     * Returns true if a show with the same identity as {@code show} exists in the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"    public boolean hasShow(Show show) {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        requireNonNull(show);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"        return shows.contains(show);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"     * Adds a show to the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"     * The show must not already exist in the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"    public void addShow(Show p) {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"        shows.add(p);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"     * Replaces the given show {@code target} in the list with {@code editedShow}.","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"     * {@code target} must exist in the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"     * The show identity of {@code editedShow} must not be the same as another existing show in the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"    public void setShow(Show target, Show editedShow) {","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"        requireNonNull(editedShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"        shows.setShow(target, editedShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"     * Removes {@code key} from this {@code ShowList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"     * {@code key} must exist in the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"    public void removeShow(Show key) {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"        shows.remove(key);","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"    //// util methods","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"        return shows.asUnmodifiableObservableList().size() + \" shows\";","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Ardentsoul"},"content":"    public ObservableList\u003cShow\u003e getShows() {","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"        return shows.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"aweijun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"                || (other instanceof ShowList // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 shows.equals(((ShowList) other).shows));","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"aweijun"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"aweijun"},"content":"        return shows.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":106,"Ardentsoul":2}},{"path":"src/main/java/seedu/trackermon/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"import seedu.trackermon.commons.core.JarTools;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"    private Path showListFilePath \u003d JarTools.runningFromJarFile()","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"            ? Paths.get(JarTools.getClassLocationString(UserPrefs.class), \"data\" , \"trackermon.json\")","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"            : Paths.get(\"data\" , \"trackermon.json\");","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"        setShowListFilePath(newUserPrefs.getShowListFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"    public Path getShowListFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"        return showListFilePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"    public void setShowListFilePath(Path showListFilePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"        requireNonNull(showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"        this.showListFilePath \u003d showListFilePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 showListFilePath.equals(o.showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"        return Objects.hash(guiSettings, showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"        sb.append(\"\\nLocal data file location : \" + showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":11,"-":74,"JonathanHoshi":4}},{"path":"src/main/java/seedu/trackermon/model/show/Comment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"public class Comment {","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"    public final String comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"    public Comment(String comment) {","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"    public String toString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"        return comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"                || (other instanceof Comment","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 comment.equals(((Comment) other).comment));","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"        return comment.hashCode();","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"aweijun":27}},{"path":"src/main/java/seedu/trackermon/model/show/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"                || (other instanceof seedu.trackermon.model.show.Name // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 fullName.equals(((seedu.trackermon.model.show.Name) other).fullName)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"    public int compareTo(Name other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"        return this.fullName.toUpperCase().compareTo(other.fullName.toUpperCase());","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"aweijun":5,"-":50,"lowkaiwei98":5}},{"path":"src/main/java/seedu/trackermon/model/show/NameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":" * Compares the two {@code Show}\u0027s {@code Name} and return an integer value based on the ordering.","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"public class NameComparator implements Comparator\u003cShow\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"    public int compare(Show show, Show other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(show);","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(other);","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"        return show.compareNames(other);","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"lowkaiwei98":19}},{"path":"src/main/java/seedu/trackermon/model/show/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.util.StringUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":" * Tests that a {@code Show}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cShow\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    public boolean test(Show show) {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"        // Checks for fragmented words in name","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsFragmentedWordIgnoreCase(show.getName().fullName, keyword));","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"aweijun":2,"-":25,"Ardentsoul":5}},{"path":"src/main/java/seedu/trackermon/model/show/Rating.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"public class Rating implements Comparable\u003cRating\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"    public static final String INVALID_RATING \u003d \"Rating should be a whole number between 0 to 5\";","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"    public static final int MAX_RATING \u003d 5;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"    public final int rating;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"     * Constructs a {@code rating}.","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"     * @param rating A valid rating.","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"    public Rating(int rating) {","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"        requireNonNull(rating);","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"        checkArgument(isValidScore(rating), INVALID_RATING);","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"     * Constructs a {@code rating}.","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"     * @param rating A valid rating.","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"    public Rating(String rating) {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"        requireNonNull(rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"        checkArgument(isValidScore(rating), INVALID_RATING);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"        this.rating \u003d Integer.parseInt(rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"     * Return true if a given rating is a valid rating.","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"    public static boolean isValidScore(int rating) {","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"        if (rating \u003c\u003d MAX_RATING \u0026\u0026 rating \u003e\u003d 0) {","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"            return true;","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"     * Return true if a given rating is a valid rating.","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"    public static boolean isValidScore(String rating) {","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"            int parsedScore \u003d Integer.parseInt(rating);","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"            return isValidScore(parsedScore);","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"            return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"    public String toString() {","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"        return Integer.toString(rating);","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"        return other \u003d\u003d this //short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"                || (other instanceof Rating","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 rating \u003d\u003d ((Rating) other).rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"        return Integer.valueOf(rating).hashCode();","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"    public int compareTo(Rating other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"        return Integer.compare(this.rating, other.rating);","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"aweijun":73,"lowkaiwei98":6,"Ardentsoul":1}},{"path":"src/main/java/seedu/trackermon/model/show/RatingComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":" * Compares the two {@code Show}\u0027s {@code rating} and return an integer value based on the ordering.","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"public class RatingComparator implements Comparator\u003cShow\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"    public int compare(Show show, Show other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(show);","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(other);","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"        return show.compareRating(other);","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"lowkaiwei98":19}},{"path":"src/main/java/seedu/trackermon/model/show/RatingContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.commons.util.StringUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":" * Tests that a {@code Show}\u0027s {@code Rating} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"public class RatingContainsKeywordsPredicate implements Predicate\u003cShow\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    public RatingContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    public boolean test(Show show) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"        // Checks for fragmented words in rating","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsFragmentedWordIgnoreCase(show.getRating().toString(), keyword));","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"                || (other instanceof RatingContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"                \u0026\u0026 keywords.equals(((RatingContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Ardentsoul":32}},{"path":"src/main/java/seedu/trackermon/model/show/Show.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"public class Show {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"    //Identity field","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"    private final Name name;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"    private final Status status;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    //Data field","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"    private final Comment comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"    private final Rating rating;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"    public Show(Name name, Status status, Set\u003cTag\u003e tags, Comment comment, Rating rating) {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(name, status, tags, comment, rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"    public Name getName() {","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"        return name;","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"    public Status getStatus() {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"        return status;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    public Rating getRating() {","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        return rating;","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"    public Comment getComment() {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"        return comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"     * Returns true if both show have the same name.","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"     * This defines a weaker notion of equality between two show.","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"    public boolean isSameShow(Show otherShow) {","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"        if (otherShow \u003d\u003d this) {","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"            return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"        return otherShow !\u003d null","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 otherShow.getName().equals(getName());","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"     * Returns true if both shows have the same identity and data fields.","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"     * This defines a stronger notion of equality between two shows.","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"            return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"        if (!(other instanceof Show)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"            return false;","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"        Show otherShow \u003d (Show) other;","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"        return otherShow.getName().equals(getName())","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 otherShow.getTags().equals(getTags())","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"                    \u0026\u0026 otherShow.getStatus().equals(getStatus())","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"                        \u0026\u0026 otherShow.getComment().equals(getComment())","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"                            \u0026\u0026 otherShow.getRating().equals(getRating());","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"aweijun"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"aweijun"},"content":"        return Objects.hash(name, tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"aweijun"},"content":"    public String toString() {","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"aweijun"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"aweijun"},"content":"        builder.append(getName().toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Ardentsoul"},"content":"        builder.append(\"; Status: \" + getStatus().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"Ardentsoul"},"content":"        builder.append(\"; Rating: \" + getRating().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"Ardentsoul"},"content":"        builder.append(\"; Comment: \" + getComment().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"aweijun"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"aweijun"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"aweijun"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"aweijun"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"aweijun"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"lowkaiwei98"},"content":"     * Compare this name with other lexicographically","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"lowkaiwei98"},"content":"    public int compareNames(Show other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"lowkaiwei98"},"content":"        return this.name.compareTo(other.name);","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"lowkaiwei98"},"content":"     * Compare this status with other lexicographically","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"lowkaiwei98"},"content":"    public int compareStatus(Show other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"lowkaiwei98"},"content":"        return this.status.compareTo(other.status);","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"lowkaiwei98"},"content":"     * Compare this rating with other by rating integer value","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"lowkaiwei98"},"content":"    public int compareRating(Show other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"lowkaiwei98"},"content":"        return this.rating.compareTo(other.rating);","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"lowkaiwei98"},"content":"     * Compare this tag with other by number of tags","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"lowkaiwei98"},"content":"    public int compareTags(Show other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"lowkaiwei98"},"content":"        return Integer.compare(this.tags.size(), other.tags.size());","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"aweijun":113,"lowkaiwei98":30,"Ardentsoul":3}},{"path":"src/main/java/seedu/trackermon/model/show/ShowContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.util.List;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.commons.util.StringUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":" * Tests that a {@code Show}\u0027s {@code Name}, {@code Status}, {@code Tag} or {@code Rating} matches any of the","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":" * keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"public class ShowContainsKeywordsPredicate implements Predicate\u003cShow\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    public ShowContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"    public boolean test(Show show) {","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"        // Checks for fragmented words in name, status, rating and tags","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsFragmentedWordIgnoreCase(show.getName().fullName, keyword)","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"                || StringUtil.containsFragmentedWordIgnoreCase(show.getStatus().toString(), keyword)","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"                || StringUtil.containsFragmentedWordIgnoreCase(show.getTags().toString(), keyword)","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"                || StringUtil.containsFragmentedWordIgnoreCase(show.getRating().toString(), keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"                || (other instanceof ShowContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"                \u0026\u0026 keywords.equals(((ShowContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"Ardentsoul":36}},{"path":"src/main/java/seedu/trackermon/model/show/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"public enum Status {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"    COMPLETED(\"completed\"),","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"    WATCHING(\"watching\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"    PLAN_TO_WATCH(\"plan-to-watch\");","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"            \"Status should only be completed or watching or plan to watch!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String PATTERN \u003d \"PLAN[^/]*TO[^/]*WATCH\";","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"    private final String status;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"    Status(String status) {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"    public static Status getStatus(String status) {","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"        status \u003d status.trim().toUpperCase();","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"        //find match pattern similar to \"plan-to-watch\" for example, user key in \"plan to watch\"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"        if (status.matches(PATTERN)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"            status \u003d PLAN_TO_WATCH.name();","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"        return Status.valueOf(status);","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"        return status;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"     * Checks the status of the show.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"     * @return true if the show status is completed.","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"    public Boolean isCompleted() {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"        return status.equals(COMPLETED);","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"     * Checks the status of the show.","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"    public static boolean isValidStatus(String status) {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"        status \u003d status.toUpperCase().trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"        //find match pattern similar to \"plan-to-watch\" for example, user key in \"plan to watch\"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"        if (status.matches(PATTERN)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"        return status.equals(COMPLETED.name()) || status.equals(WATCHING.name())","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"JonathanHoshi"},"content":"            || status.equals(PLAN_TO_WATCH.name());","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"     * Compare this status with other","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"    public int compareStatus(Status other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"        return this.status.compareTo(other.status);","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"arcornior":1,"aweijun":25,"lowkaiwei98":32,"JonathanHoshi":5}},{"path":"src/main/java/seedu/trackermon/model/show/StatusComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":" * Compares the two {@code Show}\u0027s {@code Status} and return an integer value based on the ordering.","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"public class StatusComparator implements Comparator\u003cShow\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"    public int compare(Show show, Show other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(show);","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(other);","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"        return show.compareStatus(other);","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"lowkaiwei98":19}},{"path":"src/main/java/seedu/trackermon/model/show/StatusContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.util.List;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.commons.util.StringUtil;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":" * Tests that a {@code Show}\u0027s {@code Status} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"public class StatusContainsKeywordsPredicate implements Predicate\u003cShow\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    public StatusContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    public boolean test(Show show) {","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"        // Checks for fragmented words in status","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsFragmentedWordIgnoreCase(show.getStatus().toString(), keyword));","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"                || (other instanceof StatusContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"                \u0026\u0026 keywords.equals(((StatusContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"Ardentsoul":32}},{"path":"src/main/java/seedu/trackermon/model/show/SuggestPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":" * Tests that {@code Show} is the same show as {@code testShow}.","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"public class SuggestPredicate implements Predicate\u003cShow\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"    private final Show testShow;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"    public SuggestPredicate(Show show) {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"        testShow \u003d show;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"    public boolean test(Show show) {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"        return testShow.isSameShow(show);","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"aweijun":20}},{"path":"src/main/java/seedu/trackermon/model/show/TagComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":" * Compares the two {@code Show}\u0027s number of {@code Tag} and return an integer value based on the ordering.","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"public class TagComparator implements Comparator\u003cShow\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"    public int compare(Show show, Show other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(show);","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(other);","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"        return show.compareTags(other);","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"lowkaiwei98":19}},{"path":"src/main/java/seedu/trackermon/model/show/TagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.util.List;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.commons.util.StringUtil;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":" * Tests that a {@code Show}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"public class TagsContainsKeywordsPredicate implements Predicate\u003cShow\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    public TagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    public boolean test(Show show) {","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"        // Checks for fragmented words in tags","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsFragmentedWordIgnoreCase(show.getTags().toString(), keyword));","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"                || (other instanceof TagsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"                \u0026\u0026 keywords.equals(((TagsContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"Ardentsoul":33}},{"path":"src/main/java/seedu/trackermon/model/show/UniqueShowList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.exceptions.DuplicatedShowException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.exceptions.ShowNotFoundException;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"public class UniqueShowList implements Iterable\u003cShow\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"    private final ObservableList\u003cShow\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    private final ObservableList\u003cShow\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"     * Returns true if the list contains an equivalent show as the given argument.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    public boolean contains(Show toCheck) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"        return internalList.stream().anyMatch(toCheck::isSameShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"     * Adds a show to the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"     * The show must not already exist in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"    public void add(Show toAdd) {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"            throw new DuplicatedShowException();","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"     * Replaces the show {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"     * The show identity of {@code editedShow} must not be the same as another existing show in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"    public void setShow(Show target, Show editedPerson) {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"            throw new ShowNotFoundException();","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"        if (!target.isSameShow(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"            throw new DuplicatedShowException();","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"     * Removes the equivalent show from the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"     * The show must exist in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"    public void remove(Show toRemove) {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"            //to-do: Add new exception","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"            throw new ShowNotFoundException();","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"    public void setShows(UniqueShowList replacement) {","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"    public void setShows(List\u003cShow\u003e lists) {","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(lists);","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"        if (!showsAreUnique(lists)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"            throw new DuplicatedShowException();","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"        internalList.setAll(lists);","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"    public ObservableList\u003cShow\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"aweijun"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"aweijun"},"content":"    public Iterator\u003cShow\u003e iterator() {","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"aweijun"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"aweijun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"aweijun"},"content":"                || (other instanceof UniqueShowList // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 internalList.equals(((UniqueShowList) other).internalList));","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"aweijun"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"aweijun"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"aweijun"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"aweijun"},"content":"    private boolean showsAreUnique(List\u003cShow\u003e lists) {","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"aweijun"},"content":"        for (int i \u003d 0; i \u003c lists.size() - 1; i++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"aweijun"},"content":"            for (int j \u003d i + 1; j \u003c lists.size(); j++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"aweijun"},"content":"                if (lists.get(i).isSameShow(lists.get(j))) {","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"aweijun"},"content":"                    return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"aweijun"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"aweijun"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"aweijun"},"content":"        return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":128}},{"path":"src/main/java/seedu/trackermon/model/show/exceptions/DuplicatedShowException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"public class DuplicatedShowException extends RuntimeException {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"    public DuplicatedShowException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"        super(\"Operation would result in duplicate shows\");","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"aweijun":8}},{"path":"src/main/java/seedu/trackermon/model/show/exceptions/RatingNotValidException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show.exceptions;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"public class RatingNotValidException extends RuntimeException {","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"    public RatingNotValidException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"        super(\"This is not a valid rating\");","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"aweijun":8}},{"path":"src/main/java/seedu/trackermon/model/show/exceptions/ShowNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"public class ShowNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":3}},{"path":"src/main/java/seedu/trackermon/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aweijun":2,"-":52}},{"path":"src/main/java/seedu/trackermon/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Rating;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Status;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":" * Contains utility methods for populating {@code ShowList} with sample data.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"public class SampleDataUtil {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"    public static Show[] getSampleShows() {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"        return new Show[] {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"            new Show(new Name(\"Attack on Titan\"), Status.WATCHING, getTagSet(\"Anime\"), new Comment(\"Levi\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"                    new Rating(3)),","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"            new Show(new Name(\"Another\"), Status.COMPLETED, getTagSet(\"Anime\", \"Horror\"), new Comment(\"WTF\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"                    new Rating(3))","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"        };","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"    public static ReadOnlyShowList getSampleShowList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"        ShowList sampleShowList \u003d new ShowList();","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"        for (Show sampleShow : getSampleShows()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"            sampleShowList.addShow(sampleShow);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"        return sampleShowList;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"                .map(Tag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"JonathanHoshi"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"aweijun":13,"lowkaiwei98":1,"JonathanHoshi":32}},{"path":"src/main/java/seedu/trackermon/storage/JsonAdaptedShow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Rating;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Status;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":" * Jackson-friendly version of {@link Show}.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"class JsonAdaptedShow {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Show\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"    private final String name;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"    private final String status;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"    private final String comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"    private final String rating;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"    public JsonAdaptedShow(@JsonProperty(\"name\") String name, @JsonProperty(\"status\") String status,","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"                           @JsonProperty(\"comment\") String comment, @JsonProperty(\"rating\") String rating) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"     * Converts a given {@code Show} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"    public JsonAdaptedShow(Show source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"        status \u003d source.getStatus().name();","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"        rating \u003d source.getRating().toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"        comment \u003d source.getComment().comment;","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"     * Converts this Jackson-friendly adapted show object into the model\u0027s {@code Show} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted show.","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"    public Show toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"        final List\u003cTag\u003e showTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"arcornior"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"arcornior"},"content":"            showTags.add(tag.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"arcornior"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"arcornior"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"arcornior"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"arcornior"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"arcornior"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"arcornior"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"arcornior"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"arcornior"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"        final Status modelStatus \u003d Status.getStatus(status.toUpperCase());","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"        final Comment modelComment \u003d new Comment(comment);","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"        if (rating \u003d\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"            throw new IllegalValueException(\"Rating Failed\");","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"aweijun"},"content":"        if (!Rating.isValidScore(rating)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"aweijun"},"content":"        final Rating modelRating \u003d new Rating(rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"arcornior"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(showTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"aweijun"},"content":"        return new Show(modelName, modelStatus, modelTags, modelComment, modelRating);","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":75,"aweijun":29,"lowkaiwei98":1}},{"path":"src/main/java/seedu/trackermon/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"aweijun":3,"-":45}},{"path":"src/main/java/seedu/trackermon/storage/JsonFileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package seedu.trackermon.storage;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.io.File;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.stage.FileChooser;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"public class JsonFileManager {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"    public static final int SUCCESS \u003d 0;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"    public static final int CANCEL \u003d 1;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"    public static final int ERROR \u003d 2;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"    private static final String IMPORT_TITLE \u003d \"Choose a JSON file to load into Trackermon\";","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"    private static final String EXPORT_TITLE \u003d \"Choose a location to save Trackermon\u0027s data\";","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"    private FileChooser fileChooser;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"     * Creates a {@code FileManager} that handles import and export without baseFileName.","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"    public JsonFileManager() {","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"        this(\"\");","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"     * Creates a {@code FileManager} that handles import and export.","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"     * @param baseFileName default file name in JFileChooser","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"    public JsonFileManager(String baseFileName) {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"        fileChooser \u003d new FileChooser();","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"        if (!baseFileName.isBlank()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"            baseFileName \u003d (baseFileName.endsWith(\".json\")) ? baseFileName : baseFileName + \".json\";","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"            fileChooser.setInitialFileName(baseFileName);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"        fileChooser.setInitialDirectory(new File(System.getProperty(\"user.home\")));","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"        fileChooser.getExtensionFilters().add(","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"                new FileChooser.ExtensionFilter(\"JSON file\", \"*.json\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"     * Takes in a dataPath and overwrites the selected file with filedata from dataPath.","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"     * @param dataPath","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"     * @return int value representing outcome.","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"    public int exportFile(Path dataPath) {","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"JonathanHoshi"},"content":"        fileChooser.setTitle(EXPORT_TITLE);","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"JonathanHoshi"},"content":"        File selectedFile \u003d fileChooser.showSaveDialog(null);","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"JonathanHoshi"},"content":"        if (selectedFile !\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"JonathanHoshi"},"content":"            if (!selectedFile.getAbsolutePath().endsWith(\".json\")) {","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"JonathanHoshi"},"content":"                selectedFile \u003d new File(selectedFile.getAbsolutePath() + \".json\");","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"            Path exportPath \u003d selectedFile.toPath();","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"                Files.copy(dataPath, exportPath, StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"                return SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"                return ERROR;","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"arcornior"},"content":"        return CANCEL;","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"     * Takes in a dataPath and overwrites the file at dataPath with selected file.","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"arcornior"},"content":"     * @param dataPath","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"arcornior"},"content":"     * @return int value representing outcome.","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"arcornior"},"content":"    public int importFile(Path dataPath) {","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"JonathanHoshi"},"content":"        fileChooser.setTitle(IMPORT_TITLE);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"JonathanHoshi"},"content":"        File selectedFile \u003d fileChooser.showOpenDialog(null);","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"JonathanHoshi"},"content":"        if (selectedFile !\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"JonathanHoshi"},"content":"            Path importPath \u003d selectedFile.toPath();","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"arcornior"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"arcornior"},"content":"                Files.copy(importPath, dataPath, StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"arcornior"},"content":"                return SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"arcornior"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"arcornior"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"arcornior"},"content":"                return ERROR;","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"arcornior"},"content":"        return CANCEL;","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"arcornior":73,"JonathanHoshi":21}},{"path":"src/main/java/seedu/trackermon/storage/JsonSerializableShowList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"@JsonRootName(value \u003d \"showlist\")","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"class JsonSerializableShowList {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"    public static final String MESSAGE_DUPLICATE_SHOW \u003d \"Trackermon contains duplicate show(s).\";","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"    private final List\u003cJsonAdaptedShow\u003e shows \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"     * Constructs a {@code JsonSerializableShowList} with the given shows.","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"    public JsonSerializableShowList(@JsonProperty(\"shows\") List\u003cJsonAdaptedShow\u003e shows) {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"        this.shows.addAll(shows);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"     * Converts a given {@code ReadOnlyShowList} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableShowList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"    public JsonSerializableShowList(ReadOnlyShowList source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"        shows.addAll(source.getShows().stream().map(JsonAdaptedShow::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"     * Converts this show list into the model\u0027s {@code ShowList} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"    public ShowList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"        ShowList showList \u003d new ShowList();","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"        for (JsonAdaptedShow jsonAdaptedShow : shows) {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"            Show show \u003d jsonAdaptedShow.toModelType();","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"            if (showList.hasShow(show)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SHOW);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"            showList.addShow(show);","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"        return showList;","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":50,"aweijun":5,"lowkaiwei98":4,"Ardentsoul":1}},{"path":"src/main/java/seedu/trackermon/storage/JsonShowListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.util.FileUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.util.JsonUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":" * A class to access Trackermon data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"public class JsonShowListStorage implements ShowListStorage {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonShowListStorage.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    public JsonShowListStorage(Path filePath) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"    public Path getShowListFilePath() {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"        return filePath;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"    public Optional\u003cReadOnlyShowList\u003e readShowList() throws DataConversionException {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"        return readShowList(filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"     * Similar to {@link #readShowList()}.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"    public Optional\u003cReadOnlyShowList\u003e readShowList(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"        Optional\u003cJsonSerializableShowList\u003e jsonShowList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"                filePath, JsonSerializableShowList.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"        if (!jsonShowList.isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"            return Optional.of(jsonShowList.get().toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"    public void saveShowList(ReadOnlyShowList showList) throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"        saveShowList(showList, filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"     * Similar to {@link #saveShowList(ReadOnlyShowList)}.","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"arcornior"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"    public void saveShowList(ReadOnlyShowList showList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"        requireNonNull(showList);","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"arcornior"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"arcornior"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"arcornior"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableShowList(showList), filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":72,"aweijun":7,"lowkaiwei98":1}},{"path":"src/main/java/seedu/trackermon/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.util.JsonUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"aweijun":5,"-":42,"JonathanHoshi":1}},{"path":"src/main/java/seedu/trackermon/storage/ShowListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":" * Represents a storage for {@link seedu.trackermon.model.ShowList}.","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"public interface ShowListStorage {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"    Path getShowListFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"     * Returns Trackermon data as a {@link ReadOnlyShowList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    Optional\u003cReadOnlyShowList\u003e readShowList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"     * @see #getShowListFilePath()","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"    Optional\u003cReadOnlyShowList\u003e readShowList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"     * Saves the given {@link ReadOnlyShowList} to the storage.","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"     * @param showList cannot be null.","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"    void saveShowList(ReadOnlyShowList showList) throws IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"     * @see #saveShowList(ReadOnlyShowList)","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"    void saveShowList(ReadOnlyShowList showList, Path filePath) throws IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":41,"aweijun":3,"Ardentsoul":1}},{"path":"src/main/java/seedu/trackermon/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":" * API of the Storage component","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"public interface Storage extends ShowListStorage, UserPrefsStorage {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"    Path getShowListFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"    Optional\u003cReadOnlyShowList\u003e readShowList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"    void saveShowList(ReadOnlyShowList showList) throws IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":24,"aweijun":5,"lowkaiwei98":3}},{"path":"src/main/java/seedu/trackermon/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":" * Manages storage of ShowList data in local storage.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"    private ShowListStorage showListStorage;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"    public StorageManager(ShowListStorage showListStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"        this.showListStorage \u003d showListStorage;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ShowList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"    public Path getShowListFilePath() {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"        return showListStorage.getShowListFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"    public Optional\u003cReadOnlyShowList\u003e readShowList() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"        return readShowList(showListStorage.getShowListFilePath());","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"    public Optional\u003cReadOnlyShowList\u003e readShowList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"        return showListStorage.readShowList(filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"    public void saveShowList(ReadOnlyShowList showList) throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"arcornior"},"content":"        saveShowList(showList, showListStorage.getShowListFilePath());","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"    public void saveShowList(ReadOnlyShowList showList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"arcornior"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"arcornior"},"content":"        showListStorage.saveShowList(showList, filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":66,"aweijun":6,"lowkaiwei98":6}},{"path":"src/main/java/seedu/trackermon/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"aweijun":4,"-":30,"lowkaiwei98":2}},{"path":"src/main/java/seedu/trackermon/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.CommandResult;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error-message\";","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"         * @see seedu.trackermon.logic.Logic#execute(String)","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"aweijun":5,"-":79,"JonathanHoshi":1}},{"path":"src/main/java/seedu/trackermon/ui/CommandBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"public class CommandBuilder {","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"    private SimpleStringProperty commandTitle;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"    private SimpleStringProperty commandInput;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"     * Creates a {@code CommandBuilder} to display command information in {@code Tableview}","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     * @param commandTitle title of command","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"     * @param commandInput command to input","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    public CommandBuilder(String commandTitle, String commandInput) {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"        this.commandTitle \u003d new SimpleStringProperty(commandTitle);","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"        this.commandInput \u003d new SimpleStringProperty(commandInput);;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    public String getCommandTitle() {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"        return commandTitle.get();","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    public SimpleStringProperty commandTitleProperty() {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"        return commandTitle;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    public String getCommandInput() {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"        return commandInput.get();","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    public SimpleStringProperty commandInputProperty() {","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"        return commandInput;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"Ardentsoul":33,"JonathanHoshi":1}},{"path":"src/main/java/seedu/trackermon/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-t09-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"    private static final double TITLE_COLUMN_RATIO \u003d 0.2;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"    private static final double COMMAND_INPUT_RATIO \u003d 0.795;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    private TableView\u003cCommandBuilder\u003e commandSummaryTableView;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"    private StackPane commandSummaryStackPane;","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"        commandSummaryTableView \u003d new TableView\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"        commandSummaryStackPane.getChildren().add(commandSummaryTableView);","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"        buildTable(commandSummaryTableView, getCommandSummary());","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"    public HelpWindow() {","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"        this(new Stage());","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"Ardentsoul"},"content":"     * Fills the table with command information.","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"Ardentsoul"},"content":"    private void buildTable(TableView\u003cCommandBuilder\u003e table, ObservableList\u003cCommandBuilder\u003e commands) {","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"Ardentsoul"},"content":"        TableColumn\u003cCommandBuilder, String\u003e titleColumn \u003d new TableColumn\u003c\u003e(\"Command Title\");","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"Ardentsoul"},"content":"        titleColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"commandTitle\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"Ardentsoul"},"content":"        TableColumn\u003cCommandBuilder, String\u003e commandInputColumn \u003d new TableColumn\u003c\u003e(\"Command Input\");","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"Ardentsoul"},"content":"        commandInputColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"commandInput\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"Ardentsoul"},"content":"        table.setItems(commands);","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"JonathanHoshi"},"content":"        titleColumn.prefWidthProperty().bind(table.widthProperty().multiply(TITLE_COLUMN_RATIO));","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"JonathanHoshi"},"content":"        commandInputColumn.prefWidthProperty().bind(table.widthProperty().multiply(COMMAND_INPUT_RATIO));","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"Ardentsoul"},"content":"        table.getColumns().add(titleColumn);","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"Ardentsoul"},"content":"        table.getColumns().add(commandInputColumn);","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"Ardentsoul"},"content":"        titleColumn.setStyle(\"-fx-alignment: CENTER;\");","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"Ardentsoul"},"content":"        table.prefHeightProperty().bind(commandSummaryStackPane.heightProperty());","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"Ardentsoul"},"content":"     * Describes the command information.","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"Ardentsoul"},"content":"    private static ObservableList\u003cCommandBuilder\u003e getCommandSummary() {","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"Ardentsoul"},"content":"        return FXCollections.observableArrayList(","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"Add\", \"add n/NAME s/STATUS [r/RATING] [c/COMMENT] \"","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"Ardentsoul"},"content":"                        + \" [t/TAG]…\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"Delete\", \"delete INDEX\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"Clear\", \"clear\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"Edit\", \"edit INDEX [n/NAME] [s/STATUS] [r/RATING] \"","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"Ardentsoul"},"content":"                        + \"[c/COMMENT] [t/TAG]…\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"Exit\", \"exit\"),","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"Export\", \"export\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"Find\", \"find KEYWORD\\nfind [n/NAME] [s/STATUS]\"","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"Ardentsoul"},"content":"                        + \" [r/RATING] [t/TAG]…\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"Help\", \"help\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"Import\", \"import\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"List\", \"list\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"Sort\", \"sort [n/ORDER] [s/ORDER] [r/ORDER] [t/ORDER]\"","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"Ardentsoul"},"content":"                        + \" [so/SEQUENCE]\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"Ardentsoul"},"content":"                new CommandBuilder(\"Suggest\", \"suggest\")","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"Ardentsoul"},"content":"        );","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"aweijun":2,"-":95,"Ardentsoul":64,"JonathanHoshi":5}},{"path":"src/main/java/seedu/trackermon/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.Logic;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.CommandResult;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"    private static final double PADDING \u003d 5;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"    private ShowListPanel showListPanel;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"    private ShowDetailsCard showDetailsCard;","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"JonathanHoshi"},"content":"    private StackPane showListPanelPlaceholder;","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"JonathanHoshi"},"content":"    private ScrollPane showDetailsPlaceholder;","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"JonathanHoshi"},"content":"        showDetailsCard \u003d new ShowDetailsCard();","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"JonathanHoshi"},"content":"        showDetailsPlaceholder.setContent(showDetailsCard.getRoot());","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"JonathanHoshi"},"content":"        showDetailsCard.getRoot().prefWidthProperty().bind(showDetailsPlaceholder","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"JonathanHoshi"},"content":"                .widthProperty().subtract(PADDING));","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"lowkaiwei98"},"content":"        showListPanel \u003d new ShowListPanel(logic.getFilteredShowList(), showDetailsCard);","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"JonathanHoshi"},"content":"        showListPanelPlaceholder.getChildren().add(showListPanel.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"JonathanHoshi"},"content":"        showDetailsPlaceholder.focusTraversableProperty().setValue(false);","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"JonathanHoshi"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getShowListFilePath());","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"JonathanHoshi"},"content":"        ChangeListener\u003cNumber\u003e stageSizeListener \u003d (observable, oldValue, newValue) -\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"JonathanHoshi"},"content":"                showListPanel.handleUpdatedList();","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"JonathanHoshi"},"content":"        primaryStage.widthProperty().addListener(stageSizeListener);","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"JonathanHoshi"},"content":"        primaryStage.heightProperty().addListener(stageSizeListener);","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"JonathanHoshi"},"content":"        handleUpdateList();","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"JonathanHoshi"},"content":"    private void handleUpdateList() {","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"JonathanHoshi"},"content":"        showListPanel.handleUpdatedList();","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"JonathanHoshi"},"content":"    public ShowListPanel getShowListPanel() {","lastModifiedDate":"2022-03-10"},{"lineNumber":195,"author":{"gitId":"JonathanHoshi"},"content":"        return showListPanel;","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"lowkaiwei98"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"JonathanHoshi"},"content":"            if (commandResult.getIndexAffected() !\u003d CommandResult.DEFAULT_INDEX) {","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"JonathanHoshi"},"content":"                showListPanel.updateSelection(commandResult.getIndexAffected());","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"JonathanHoshi"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"JonathanHoshi"},"content":"            handleUpdateList();","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2022-03-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2022-03-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"aweijun":7,"-":181,"lowkaiwei98":2,"JonathanHoshi":40}},{"path":"src/main/java/seedu/trackermon/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"aweijun":1,"-":27}},{"path":"src/main/java/seedu/trackermon/ui/ShowCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"import seedu.trackermon.MainApp;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"import seedu.trackermon.model.show.Rating;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":" * An UI component that displays information of a {@code Show}.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"public class ShowCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"    private static final String FXML \u003d \"ShowListCard.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"    private static final String ICON_STAR \u003d \"/images/icon_star_30.png\";","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"    private static final String ICON_STAR_FILLED \u003d \"/images/icon_star_filled_30.png\";","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"JonathanHoshi"},"content":"    private static final double IMAGE_SIZE \u003d 20;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"     * where Trackermon is based on\u003c/a\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"    public final Show show;","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"    private Label name;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"    private Label id;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"    private Label status;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"JonathanHoshi"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"JonathanHoshi"},"content":"    private FlowPane ratings;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"JonathanHoshi"},"content":"     * Creates a {@code ShowCard} with the given {@code Show} and index to display.","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"JonathanHoshi"},"content":"    public ShowCard(Show show, int displayedIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"JonathanHoshi"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"JonathanHoshi"},"content":"        this.show \u003d show;","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"JonathanHoshi"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"JonathanHoshi"},"content":"        name.setText(show.getName().fullName);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"JonathanHoshi"},"content":"        String statusString \u003d show.getStatus().toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"        String statusMessage \u003d \"[\" + statusString.substring(0, 1).toUpperCase()","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"JonathanHoshi"},"content":"                + statusString.substring(1) + \"]\";","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"JonathanHoshi"},"content":"        status.setText(statusMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"JonathanHoshi"},"content":"        show.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"JonathanHoshi"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"JonathanHoshi"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"JonathanHoshi"},"content":"        for (int i \u003d 0; i \u003c Rating.MAX_RATING; i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"JonathanHoshi"},"content":"            if (i \u003c show.getRating().rating) {","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"JonathanHoshi"},"content":"                ratings.getChildren().add(getImageNode(ICON_STAR_FILLED));","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"JonathanHoshi"},"content":"            } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"JonathanHoshi"},"content":"                ratings.getChildren().add(getImageNode(ICON_STAR));","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"JonathanHoshi"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"JonathanHoshi"},"content":"    private ImageView getImageNode(String imagePath) {","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"JonathanHoshi"},"content":"        ImageView imageNode \u003d new ImageView(new Image(MainApp.class.getResourceAsStream(imagePath)));","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"JonathanHoshi"},"content":"        imageNode.setFitHeight(IMAGE_SIZE);","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"JonathanHoshi"},"content":"        imageNode.setFitWidth(IMAGE_SIZE);","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"JonathanHoshi"},"content":"        return imageNode;","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"JonathanHoshi"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"JonathanHoshi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"JonathanHoshi"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"JonathanHoshi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"JonathanHoshi"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"JonathanHoshi"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"JonathanHoshi"},"content":"        if (!(other instanceof ShowCard)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"JonathanHoshi"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"JonathanHoshi"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"JonathanHoshi"},"content":"        ShowCard card \u003d (ShowCard) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"JonathanHoshi"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"JonathanHoshi"},"content":"                \u0026\u0026 show.equals(card.show);","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"aweijun":2,"JonathanHoshi":98}},{"path":"src/main/java/seedu/trackermon/ui/ShowDetailsCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanHoshi"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"import seedu.trackermon.MainApp;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"import seedu.trackermon.model.show.Rating;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":" * An UI component that displays information of a {@code Show}.","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"public class ShowDetailsCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"JonathanHoshi"},"content":"    private static final String FXML \u003d \"ShowDetailsCard.fxml\";","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"    private static final String ICON_STAR \u003d \"/images/icon_star_30.png\";","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"    private static final String ICON_STAR_FILLED \u003d \"/images/icon_star_filled_30.png\";","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"    private static final double SPACING \u003d 15;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"    private static final double IMAGE_SIZE \u003d 30;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"     * where Trackermon is based on\u003c/a\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"    private Show show;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"    private TextArea name;","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"JonathanHoshi"},"content":"    private Label status;","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"JonathanHoshi"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"JonathanHoshi"},"content":"    private FlowPane ratings;","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"JonathanHoshi"},"content":"    private TextArea comment;","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"JonathanHoshi"},"content":"     * Creates a default {@code ShowDetailsCard} that has no show to display.","lastModifiedDate":"2022-04-03"},{"lineNumber":57,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"JonathanHoshi"},"content":"    public ShowDetailsCard() {","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"JonathanHoshi"},"content":"        this(null);","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"JonathanHoshi"},"content":"     * Creates a {@code ShowDetailsCard} with the given {@code Show} to display.","lastModifiedDate":"2022-04-03"},{"lineNumber":64,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"JonathanHoshi"},"content":"    public ShowDetailsCard(Show show) {","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"JonathanHoshi"},"content":"        super(FXML);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"JonathanHoshi"},"content":"        this.show \u003d show;","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"JonathanHoshi"},"content":"        updateShowDetails(show);","lastModifiedDate":"2022-04-03"},{"lineNumber":69,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"JonathanHoshi"},"content":"     * Updates the show details information to show the new show details.","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"JonathanHoshi"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"JonathanHoshi"},"content":"     * @param show the show whose details should be showed.","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"JonathanHoshi"},"content":"    public void updateShowDetails(Show show) {","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"JonathanHoshi"},"content":"        boolean isShowExists \u003d (show !\u003d null);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"JonathanHoshi"},"content":"        name.setVisible(isShowExists);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"JonathanHoshi"},"content":"        status.setVisible(isShowExists);","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"JonathanHoshi"},"content":"        tags.setVisible(isShowExists);","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"JonathanHoshi"},"content":"        comment.setVisible(isShowExists);","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"JonathanHoshi"},"content":"        ratings.setVisible(isShowExists);","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"JonathanHoshi"},"content":"        if (!isShowExists) {","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"JonathanHoshi"},"content":"            return;","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"JonathanHoshi"},"content":"        assert show !\u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"JonathanHoshi"},"content":"        this.show \u003d show;","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"JonathanHoshi"},"content":"        name.setText(show.getName().fullName);","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"JonathanHoshi"},"content":"        String statusString \u003d show.getStatus().toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"JonathanHoshi"},"content":"        String statusMessage \u003d \"Status: \" + statusString.substring(0, 1).toUpperCase()","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"JonathanHoshi"},"content":"                + statusString.substring(1);","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"JonathanHoshi"},"content":"        status.setText(statusMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"JonathanHoshi"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"JonathanHoshi"},"content":"        show.getTags().stream()","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"JonathanHoshi"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"JonathanHoshi"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"JonathanHoshi"},"content":"        ratings.getChildren().clear();","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"JonathanHoshi"},"content":"        for (int i \u003d 0; i \u003c Rating.MAX_RATING; i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"JonathanHoshi"},"content":"            if (i \u003c show.getRating().rating) {","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"JonathanHoshi"},"content":"                ratings.getChildren().add(getImageNode(ICON_STAR_FILLED));","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"JonathanHoshi"},"content":"            } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"JonathanHoshi"},"content":"                ratings.getChildren().add(getImageNode(ICON_STAR));","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"JonathanHoshi"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"JonathanHoshi"},"content":"        comment.setText(show.getComment().comment);","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"JonathanHoshi"},"content":"        updateTextArea(name);","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"JonathanHoshi"},"content":"    private ImageView getImageNode(String imagePath) {","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"JonathanHoshi"},"content":"        ImageView imageNode \u003d new ImageView(new Image(MainApp.class.getResourceAsStream(imagePath)));","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"JonathanHoshi"},"content":"        imageNode.setFitHeight(IMAGE_SIZE);","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"JonathanHoshi"},"content":"        imageNode.setFitWidth(IMAGE_SIZE);","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"JonathanHoshi"},"content":"        return imageNode;","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"JonathanHoshi"},"content":"     * Updates TextArea to resize with text height length.","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"JonathanHoshi"},"content":"     * @param textArea the text area to be resized.","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"JonathanHoshi"},"content":"    private void updateTextArea(TextArea textArea) {","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"JonathanHoshi"},"content":"        Text helper \u003d new Text(textArea.getText());","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"JonathanHoshi"},"content":"        helper.setFont(textArea.getFont());","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"JonathanHoshi"},"content":"        double wrappingWidth \u003d textArea.getWidth();","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"JonathanHoshi"},"content":"        double fontHeight \u003d helper.getFont().getSize() + SPACING;","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"JonathanHoshi"},"content":"        double singleHeight \u003d helper.getBoundsInLocal().getHeight();","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"JonathanHoshi"},"content":"        helper.setWrappingWidth(wrappingWidth);","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"JonathanHoshi"},"content":"        double rowHeight \u003d helper.getBoundsInParent().getHeight();","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"JonathanHoshi"},"content":"        int count \u003d (int) Math.ceil(rowHeight / singleHeight);","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"JonathanHoshi"},"content":"        textArea.setPrefHeight(count * fontHeight);","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"JonathanHoshi":144}},{"path":"src/main/java/seedu/trackermon/ui/ShowListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":" * Panel containing the list of shows.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"public class ShowListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"    private static final String FXML \u003d \"ShowListPanel.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ShowListPanel.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"    private final ShowDetailsCard showDetailsCard;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"    private ListView\u003cShow\u003e showListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"     * Creates a {@code ShowListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"    public ShowListPanel(ObservableList\u003cShow\u003e showList, ShowDetailsCard showDetailsCard) {","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"        this.showDetailsCard \u003d showDetailsCard;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"        showListView.setItems(showList);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"        showListView.setCellFactory(listView -\u003e new ShowListViewCell());","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"        showListView.getSelectionModel().selectedItemProperty().addListener(new ChangeListener\u003cShow\u003e() {","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"            @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"            public void changed(ObservableValue\u003c? extends Show\u003e observable, Show oldValue, Show newValue) {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"                // Your action here","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"                showDetailsCard.updateShowDetails(newValue);","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"JonathanHoshi"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"        });","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"JonathanHoshi"},"content":"        handleUpdatedList();","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"JonathanHoshi"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"JonathanHoshi"},"content":"     * @param index","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"JonathanHoshi"},"content":"    public void updateSelection(int index) {","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"JonathanHoshi"},"content":"        showListView.getSelectionModel().select(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"JonathanHoshi"},"content":"        showListView.scrollTo(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"JonathanHoshi"},"content":"     * Updates the GUI of the list to select the first item.","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"JonathanHoshi"},"content":"    public void handleUpdatedList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"JonathanHoshi"},"content":"        if (showListView.getSelectionModel().getSelectedItem() \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"JonathanHoshi"},"content":"            showListView.getSelectionModel().selectFirst();","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"JonathanHoshi"},"content":"        showDetailsCard.updateShowDetails(showListView.getSelectionModel().getSelectedItem());","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"JonathanHoshi"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Show} using a {@code ShowCard}.","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"JonathanHoshi"},"content":"    class ShowListViewCell extends ListCell\u003cShow\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"JonathanHoshi"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"JonathanHoshi"},"content":"        protected void updateItem(Show show, boolean empty) {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"JonathanHoshi"},"content":"            super.updateItem(show, empty);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"JonathanHoshi"},"content":"            if (empty || show \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"JonathanHoshi"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"JonathanHoshi"},"content":"                setText(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"JonathanHoshi"},"content":"            } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"JonathanHoshi"},"content":"                setGraphic(new ShowCard(show, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"JonathanHoshi"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"aweijun":3,"JonathanHoshi":83}},{"path":"src/main/java/seedu/trackermon/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":1,"-":27}},{"path":"src/main/java/seedu/trackermon/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"aweijun":1,"-":12}},{"path":"src/main/java/seedu/trackermon/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.MainApp;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.util.StringUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.logic.Logic;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"JonathanHoshi"},"content":"    void showAlertDialogAndWait(AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"JonathanHoshi"},"content":"        showAlertDialogAndWait(AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"aweijun":5,"-":81,"JonathanHoshi":3}},{"path":"src/main/java/seedu/trackermon/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.MainApp;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"     * @see #UiPart(URL, Object)","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"aweijun":2,"-":85,"Ardentsoul":1}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"\u003cStackPane maxHeight\u003d\"50.0\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":7,"JonathanHoshi":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-prompt-text-fill: black; // change prompt text color","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-04-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: #23272a; //derive(#23272a, 10%);","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: #23272a;","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"JonathanHoshi"},"content":".list-view .list-cell:filled {","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-border-style: solid inside;","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-border-width: 5 0 5 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-border-color: #23272a;","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"JonathanHoshi"},"content":".list-view .list-cell:filled:selected {","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: #494e55;","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"JonathanHoshi"},"content":".list-cell:filled:selected .label {","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"JonathanHoshi"},"content":".cell_small_textfield .scroll-pane .viewport{","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: #494e55;","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-insets: 0 0 0 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"JonathanHoshi"},"content":".cell_small_textfield .scroll-pane .content{","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: #494e55;","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-insets: 0 0 0 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"JonathanHoshi"},"content":".cell_small_textfield {","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: #494e55;","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-insets: 0 0 0 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"JonathanHoshi"},"content":".cell_big_label_details .scroll-pane {","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-hbar-policy:never;","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-vbar-policy:never;","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"JonathanHoshi"},"content":".cell_big_label_details .scroll-pane .viewport{","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"JonathanHoshi"},"content":".cell_big_label_details .scroll-pane .content{","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"JonathanHoshi"},"content":".cell_big_label_details {","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-size: 28px;","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"JonathanHoshi"},"content":".cell_small_label_details {","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":195,"author":{"gitId":"JonathanHoshi"},"content":"     -fx-background-color: derive(#97a9b4, 20%);","lastModifiedDate":"2022-03-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"JonathanHoshi"},"content":".scroll-pane {","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"JonathanHoshi"},"content":"     -fx-background: derive(#97a9b4, 20%);","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"JonathanHoshi"},"content":"     -fx-border-color: derive(#97a9b4, 20%);","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"JonathanHoshi"},"content":"     -fx-background-insets: 0 0 0 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":205,"author":{"gitId":"JonathanHoshi"},"content":"     -fx-background-color: derive(#23272a, 10%);","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"JonathanHoshi"},"content":"     -fx-border-color: derive(#23272a, 10%);","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":210,"author":{"gitId":"JonathanHoshi"},"content":".pane-without-border {","lastModifiedDate":"2022-03-21"},{"lineNumber":211,"author":{"gitId":"JonathanHoshi"},"content":"     -fx-background-color: #23272a; //derive(#23272a, 10%);","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":213,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":220,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-04-03"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":222,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":225,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-04-03"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-04-03"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":362,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":384,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":387,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":389,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":390,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-28"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":393,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-04-03"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":395,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-21"},{"lineNumber":396,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":398,"author":{"gitId":"JonathanHoshi"},"content":"#commandTextField.error-message {","lastModifiedDate":"2022-03-28"},{"lineNumber":399,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-text-fill: red;","lastModifiedDate":"2022-03-28"},{"lineNumber":400,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":401,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":402,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":403,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":405,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":407,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":408,"author":{"gitId":"JonathanHoshi"},"content":"    -fx-background-color: derive(#97a9b4, 20%);","lastModifiedDate":"2022-03-21"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":410,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":412,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":415,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":417,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":424,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":334,"JonathanHoshi":90}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":".table-view *.scroll-bar:horizontal *.increment-button,","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":".table-view *.scroll-bar:horizontal *.decrement-button {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-color: null;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":".table-view *.scroll-bar:horizontal *.increment-arrow,","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":".table-view *.scroll-bar:horizontal *.decrement-arrow {","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-color: null;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    -fx-shape: null;","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":".table-view *.scroll-bar:vertical *.increment-button,","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":".table-view *.scroll-bar:vertical *.decrement-button {","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-color: null;","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":".table-view *.scroll-bar:vertical *.increment-arrow,","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":".table-view *.scroll-bar:vertical *.decrement-arrow {","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-color: null;","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"    -fx-shape: null;","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"-":19,"Ardentsoul":34}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"\u003cfx:root height\u003d\"425.0\" minHeight\u003d\"325.0\" minWidth\u003d\"512.0\" resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"            \u003cVBox prefHeight\u003d\"250.0\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"                    \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                            \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                                \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                                    \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                                \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                            \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                            \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                                \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                                    \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                                \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                            \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"                    \u003cStackPane fx:id\u003d\"commandSummaryStackPane\" minHeight\u003d\"200.0\" prefHeight\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"-":41,"Ardentsoul":9}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"\u003cfx:root minHeight\u003d\"675.0\" minWidth\u003d\"900.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Trackermon\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"          \u003cHBox styleClass\u003d\"pane-without-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"              \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"              \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"JonathanHoshi"},"content":"                  \u003cVBox fx:id\u003d\"showList\" minWidth\u003d\"260.0\" prefWidth\u003d\"260.0\" styleClass\u003d\"pane-without-border\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"JonathanHoshi"},"content":"                          \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"JonathanHoshi"},"content":"                      \u003cStackPane fx:id\u003d\"showListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"JonathanHoshi"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"JonathanHoshi"},"content":"                  \u003cVBox minWidth\u003d\"500.0\" styleClass\u003d\"pane-without-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"JonathanHoshi"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"JonathanHoshi"},"content":"                        \u003cScrollPane fx:id\u003d\"showDetailsPlaceholder\" focusTraversable\u003d\"false\" hbarPolicy\u003d\"NEVER\" minHeight\u003d\"200.0\" styleClass\u003d\"stack-pane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"JonathanHoshi"},"content":"                           \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"JonathanHoshi"},"content":"                              \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"JonathanHoshi"},"content":"                           \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"JonathanHoshi"},"content":"                        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"JonathanHoshi"},"content":"                          \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100.0\" minHeight\u003d\"100.0\" prefHeight\u003d\"100.0\" styleClass\u003d\"stack-pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"                           \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"JonathanHoshi"},"content":"                              \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"JonathanHoshi"},"content":"                           \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":65,"author":{"gitId":"JonathanHoshi"},"content":"                          \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxHeight\u003d\"50.0\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" styleClass\u003d\"stack-pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"JonathanHoshi"},"content":"                           \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"JonathanHoshi"},"content":"                              \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"JonathanHoshi"},"content":"                           \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"JonathanHoshi"},"content":"                          \u003c/StackPane\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"JonathanHoshi"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"JonathanHoshi"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"JonathanHoshi"},"content":"                          \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"JonathanHoshi"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":75,"author":{"gitId":"JonathanHoshi"},"content":"              \u003c/children\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"JonathanHoshi"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"JonathanHoshi"},"content":"          \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" styleClass\u003d\"pane-without-border\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":42,"JonathanHoshi":39}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"JonathanHoshi":2}},{"path":"src/main/resources/view/ShowDetailsCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanHoshi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"\u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"200.0\" prefWidth\u003d\"300.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"   \u003cTextArea fx:id\u003d\"name\" editable\u003d\"false\" focusTraversable\u003d\"false\" prefRowCount\u003d\"1\" styleClass\u003d\"cell_big_label_details\" text\u003d\"\\\\\\title\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"\u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"         \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"      \u003c/VBox.margin\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"\u003cLabel fx:id\u003d\"status\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_small_label_details\" text\u003d\"\\$status\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"         \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"      \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"   \u003cFlowPane fx:id\u003d\"ratings\" maxHeight\u003d\"40.0\" minWidth\u003d\"40.0\" prefHeight\u003d\"40.0\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"   \u003cTextArea fx:id\u003d\"comment\" editable\u003d\"false\" focusTraversable\u003d\"false\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"200.0\" prefRowCount\u003d\"1\" styleClass\u003d\"cell_small_textfield\" text\u003d\"\\\\\\comment\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"         \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"JonathanHoshi"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"   \u003c/TextArea\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"   \u003cPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"         \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"      \u003c/VBox.margin\u003e\u003c/Pane\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"JonathanHoshi":33}},{"path":"src/main/resources/view/ShowListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"         \u003cFlowPane fx:id\u003d\"ratings\" maxHeight\u003d\"25.0\" minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"-":28,"JonathanHoshi":11}},{"path":"src/main/resources/view/ShowListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"  \u003cListView fx:id\u003d\"showListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"-":7,"JonathanHoshi":1}},{"path":"src/test/java/seedu/trackermon/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"aweijun":1,"-":57}},{"path":"src/test/java/seedu/trackermon/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.core;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-04-03"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.Objects;","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"    public void hashMethod() {","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2022-04-03"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"        assertTrue(defaultConfig.hashCode() \u003d\u003d Objects.hash(defaultConfig.getLogLevel(),","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"                defaultConfig.getUserPrefsFilePath()));","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"    public void getUserPrefsFilePath_fromEditor_success() {","lastModifiedDate":"2022-04-03"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(Paths.get(\"preferences.json\"), defaultConfig.getUserPrefsFilePath());","lastModifiedDate":"2022-04-03"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"aweijun":1,"-":26,"JonathanHoshi":16}},{"path":"src/test/java/seedu/trackermon/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanHoshi"},"content":"package seedu.trackermon.commons.core;","lastModifiedDate":"2022-04-03"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-03"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-04-03"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-03"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"import java.awt.Point;","lastModifiedDate":"2022-04-03"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.Objects;","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-03"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"class GuiSettingsTest {","lastModifiedDate":"2022-04-03"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"    void equalsMethod() {","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"        GuiSettings defaultGuiSettings \u003d new GuiSettings();","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"        assertNotNull(defaultGuiSettings);","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"        assertTrue(defaultGuiSettings.equals(defaultGuiSettings));","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"    public void hashMethod() {","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"        GuiSettings defaultGuiSettings \u003d new GuiSettings();","lastModifiedDate":"2022-04-03"},{"lineNumber":24,"author":{"gitId":"JonathanHoshi"},"content":"        assertNotNull(defaultGuiSettings);","lastModifiedDate":"2022-04-03"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"        assertTrue(defaultGuiSettings.hashCode() \u003d\u003d Objects.hash(defaultGuiSettings.getWindowWidth(),","lastModifiedDate":"2022-04-03"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"                defaultGuiSettings.getWindowHeight(), defaultGuiSettings.getWindowCoordinates()));","lastModifiedDate":"2022-04-03"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"        double windowWidth \u003d 1080;","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"        double windowHeight \u003d 720;","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"        int xPos \u003d 0;","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"        int yPos \u003d 0;","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"        Point windowCoordinates \u003d new Point(xPos, yPos);","lastModifiedDate":"2022-04-03"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"        GuiSettings customGuiSettings \u003d new GuiSettings(windowWidth, windowHeight, xPos, yPos);","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"        assertTrue(customGuiSettings.hashCode() \u003d\u003d Objects.hash(windowWidth, windowHeight, windowCoordinates));","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"    void testToString() {","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"        String defaultGuiSettingsAsString \u003d \"Width : 740.0\\n\" + \"Height : 600.0\\n\"","lastModifiedDate":"2022-04-03"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"                + \"Position : null\";","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(defaultGuiSettingsAsString, new GuiSettings().toString());","lastModifiedDate":"2022-04-03"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-04-03"}],"authorContributionMap":{"JonathanHoshi":42}},{"path":"src/test/java/seedu/trackermon/commons/core/JarToolsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanHoshi"},"content":"package seedu.trackermon.commons.core;","lastModifiedDate":"2022-04-03"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-03"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-03"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-03"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"class JarToolsTest {","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"    void getClassLocationStringMethod() {","lastModifiedDate":"2022-04-03"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(JarTools.getClassLocationString(JarToolsTest.class),","lastModifiedDate":"2022-04-03"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"                JarTools.getClassLocationString(JarToolsTest.class));","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"    void runningFromJarFileMethod() {","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"        assertFalse(JarTools.runningFromJarFile());","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-04-03"}],"authorContributionMap":{"JonathanHoshi":20}},{"path":"src/test/java/seedu/trackermon/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.core;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":2,"-":133}},{"path":"src/test/java/seedu/trackermon/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.core.index;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"aweijun":2,"-":58}},{"path":"src/test/java/seedu/trackermon/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"aweijun":2,"-":34}},{"path":"src/test/java/seedu/trackermon/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"aweijun":3,"-":105}},{"path":"src/test/java/seedu/trackermon/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.Config;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"aweijun":4,"-":112}},{"path":"src/test/java/seedu/trackermon/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":2,"-":21}},{"path":"src/test/java/seedu/trackermon/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.SerializableTestClass;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.TestUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"///**","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"// * Tests JSON Read and Write","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"// */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//public class JsonUtilTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//        serializableTestClass.setTestValues();","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":3,"lowkaiwei98":42}},{"path":"src/test/java/seedu/trackermon/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"aweijun":2,"-":141}},{"path":"src/test/java/seedu/trackermon/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.logic;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_SHOW_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.COMMENT_DESC_BAD;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.NAME_DESC_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.RATING_DESC_HIGH;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.STATUS_DESC_COMPLETED;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.TypicalShows.ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-04-03"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.AddCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.CommandResult;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.ListCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.storage.JsonShowListStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.storage.StorageManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.testutil.ShowBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"        JsonShowListStorage showListStorage \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"JonathanHoshi"},"content":"                new JsonShowListStorage(temporaryFolder.resolve(\"Trackermon.json\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"        StorageManager storage \u003d new StorageManager(showListStorage, userPrefsStorage);","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_SHOW_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"        JsonShowListStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"                new JsonShowListIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_ALICE_IN_WONDERLAND + STATUS_DESC_COMPLETED","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"                + COMMENT_DESC_BAD + RATING_DESC_HIGH;","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"        Show expectedShow \u003d new ShowBuilder(ALICE_IN_WONDERLAND).withTags().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"        expectedModel.addShow(expectedShow);","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"arcornior"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_SAVE_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"    public void getFilteredShowList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredShowList().remove(0));","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":100,"author":{"gitId":"JonathanHoshi"},"content":"    public void testGetters() {","lastModifiedDate":"2022-04-03"},{"lineNumber":101,"author":{"gitId":"JonathanHoshi"},"content":"        // Checking showListFilePath","lastModifiedDate":"2022-04-03"},{"lineNumber":102,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(model.getShowListFilePath(), logic.getShowListFilePath());","lastModifiedDate":"2022-04-03"},{"lineNumber":103,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":104,"author":{"gitId":"JonathanHoshi"},"content":"        // Checking showList","lastModifiedDate":"2022-04-03"},{"lineNumber":105,"author":{"gitId":"JonathanHoshi"},"content":"        model.addShow(ALICE_IN_WONDERLAND);","lastModifiedDate":"2022-04-03"},{"lineNumber":106,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":107,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(Arrays.asList(ALICE_IN_WONDERLAND), logic.getShowList().getShows());","lastModifiedDate":"2022-04-03"},{"lineNumber":108,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":109,"author":{"gitId":"JonathanHoshi"},"content":"        // Checking GuiSettings","lastModifiedDate":"2022-04-03"},{"lineNumber":110,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(new GuiSettings(), logic.getGuiSettings());","lastModifiedDate":"2022-04-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"lowkaiwei98"},"content":"        Model expectedModel \u003d new ModelManager(model.getShowList(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"lowkaiwei98"},"content":"    private static class JsonShowListIoExceptionThrowingStub extends JsonShowListStorage {","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"lowkaiwei98"},"content":"        private JsonShowListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":175,"author":{"gitId":"lowkaiwei98"},"content":"        public void saveShowList(ReadOnlyShowList showList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"arcornior":1,"aweijun":5,"lowkaiwei98":36,"-":122,"JonathanHoshi":15}},{"path":"src/test/java/seedu/trackermon/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.getTypicalShowList;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ModelManager;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.testutil.ShowBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    private Model model;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"        model \u003d new ModelManager(getTypicalShowList(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_newShow_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"        Show validShow \u003d new ShowBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"        Model expectedModel \u003d new ModelManager(model.getShowList(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.addShow(validShow);","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(new AddCommand(validShow), model,","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validShow), expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_duplicateShow_throwsCommandException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"        Show showInList \u003d model.getShowList().getShows().get(0);","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandFailure(new AddCommand(showInList), model, AddCommand.MESSAGE_DUPLICATE_SHOW);","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"Ardentsoul":44}},{"path":"src/test/java/seedu/trackermon/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ShowList;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.testutil.ShowBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"public class AddCommandTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    public void constructor_nullShow_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_showAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"        ModelStubAcceptingShowAdded modelStub \u003d new ModelStubAcceptingShowAdded();","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"        Show validShow \u003d new ShowBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"        CommandResult commandResult \u003d new AddCommand(validShow).execute(modelStub);","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validShow), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(Arrays.asList(validShow), modelStub.showsAdded);","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_duplicateShow_throwsCommandException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"        Show validShow \u003d new ShowBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"        AddCommand addCommand \u003d new AddCommand(validShow);","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"        ModelStub modelStub \u003d new ModelStubWithShow(validShow);","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_SHOW, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"    public void equals() {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"        Show another \u003d new ShowBuilder().withName(\"Another\").build();","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"        Show blackClover \u003d new ShowBuilder().withName(\"Black Clover\").build();","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"        AddCommand addAnotherCommand \u003d new AddCommand(another);","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"        AddCommand addBlackCloverCommand \u003d new AddCommand(blackClover);","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(addAnotherCommand.equals(addAnotherCommand));","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"        AddCommand addAnotherCommandCopy \u003d new AddCommand(another);","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(addAnotherCommand.equals(addAnotherCommandCopy));","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(addAnotherCommand.equals(1));","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(addAnotherCommand.equals(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"Ardentsoul"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(addAnotherCommand.equals(addBlackCloverCommand));","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"Ardentsoul"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"Ardentsoul"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"Ardentsoul"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"Ardentsoul"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"Ardentsoul"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"Ardentsoul"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"Ardentsoul"},"content":"        public Path getShowListFilePath() {","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"lowkaiwei98"},"content":"        public void setShowListFilePath(Path showListFilePath) {","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"Ardentsoul"},"content":"        public void addShow(Show show) {","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"lowkaiwei98"},"content":"        public void setShowList(ReadOnlyShowList showList) {","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"Ardentsoul"},"content":"        public ReadOnlyShowList getShowList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"JonathanHoshi"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"JonathanHoshi"},"content":"         * Returns the ShowList size","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"JonathanHoshi"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"JonathanHoshi"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"JonathanHoshi"},"content":"        public int getShowListSize() {","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"JonathanHoshi"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"Ardentsoul"},"content":"        public boolean hasShow(Show show) {","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"Ardentsoul"},"content":"        public void deleteShow(Show target) {","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":146,"author":{"gitId":"Ardentsoul"},"content":"        public void setShow(Show target, Show editedShow) {","lastModifiedDate":"2022-03-17"},{"lineNumber":147,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":148,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"Ardentsoul"},"content":"        public ObservableList\u003cShow\u003e getFilteredShowList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"Ardentsoul"},"content":"        public void updateFilteredShowList(Predicate\u003cShow\u003e predicate) {","lastModifiedDate":"2022-03-17"},{"lineNumber":157,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":158,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"lowkaiwei98"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"lowkaiwei98"},"content":"        public ObservableList\u003cShow\u003e getSortedShowList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"lowkaiwei98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"lowkaiwei98"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"lowkaiwei98"},"content":"        public void updateSortedShowList(Comparator\u003cShow\u003e comparator) {","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"lowkaiwei98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-04-03"},{"lineNumber":168,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"lowkaiwei98"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"lowkaiwei98"},"content":"        public void saveSortedShowList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"lowkaiwei98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"Ardentsoul"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2022-03-17"},{"lineNumber":178,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"Ardentsoul"},"content":"    private class ModelStubWithShow extends ModelStub {","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"Ardentsoul"},"content":"        private final Show show;","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"Ardentsoul"},"content":"        ModelStubWithShow(Show show) {","lastModifiedDate":"2022-03-17"},{"lineNumber":183,"author":{"gitId":"Ardentsoul"},"content":"            requireNonNull(show);","lastModifiedDate":"2022-03-17"},{"lineNumber":184,"author":{"gitId":"Ardentsoul"},"content":"            this.show \u003d show;","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":186,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"Ardentsoul"},"content":"        public boolean hasShow(Show show) {","lastModifiedDate":"2022-03-17"},{"lineNumber":189,"author":{"gitId":"Ardentsoul"},"content":"            requireNonNull(show);","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"Ardentsoul"},"content":"            return this.show.isSameShow(show);","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"Ardentsoul"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2022-03-17"},{"lineNumber":196,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":197,"author":{"gitId":"Ardentsoul"},"content":"    private class ModelStubAcceptingShowAdded extends ModelStub {","lastModifiedDate":"2022-03-17"},{"lineNumber":198,"author":{"gitId":"Ardentsoul"},"content":"        final ArrayList\u003cShow\u003e showsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":199,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":200,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":201,"author":{"gitId":"Ardentsoul"},"content":"        public boolean hasShow(Show show) {","lastModifiedDate":"2022-03-17"},{"lineNumber":202,"author":{"gitId":"Ardentsoul"},"content":"            requireNonNull(show);","lastModifiedDate":"2022-03-17"},{"lineNumber":203,"author":{"gitId":"Ardentsoul"},"content":"            return showsAdded.stream().anyMatch(show::isSameShow);","lastModifiedDate":"2022-03-17"},{"lineNumber":204,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":205,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":206,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":207,"author":{"gitId":"Ardentsoul"},"content":"        public void addShow(Show show) {","lastModifiedDate":"2022-03-17"},{"lineNumber":208,"author":{"gitId":"Ardentsoul"},"content":"            requireNonNull(show);","lastModifiedDate":"2022-03-17"},{"lineNumber":209,"author":{"gitId":"Ardentsoul"},"content":"            showsAdded.add(show);","lastModifiedDate":"2022-03-17"},{"lineNumber":210,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":211,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":212,"author":{"gitId":"Ardentsoul"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":213,"author":{"gitId":"Ardentsoul"},"content":"        public ReadOnlyShowList getShowList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":214,"author":{"gitId":"Ardentsoul"},"content":"            return new ShowList();","lastModifiedDate":"2022-03-17"},{"lineNumber":215,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":216,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"JonathanHoshi"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"JonathanHoshi"},"content":"        public int getShowListSize() {","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"JonathanHoshi"},"content":"            return showsAdded.size();","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":222,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"lowkaiwei98":18,"Ardentsoul":191,"JonathanHoshi":13}},{"path":"src/test/java/seedu/trackermon/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.AddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//public class ClearCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":7,"lowkaiwei98":25}},{"path":"src/test/java/seedu/trackermon/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"aweijun":1,"-":53}},{"path":"src/test/java/seedu/trackermon/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ShowList;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.testutil.EditShowDescriptorBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"public class CommandTestUtil {","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \" \";","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    public static final String VALID_NAME_WEATHERING_WITH_YOU \u003d \"Weathering with You\";","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String VALID_NAME_ALICE_IN_WONDERLAND \u003d \"Alice in WonderLand\";","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"    public static final String VALID_NAME_HIMYM \u003d \"HIMYM\";","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String VALID_NAME_GONE \u003d \"gone\";","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"    public static final String VALID_NAME_HANCOCK \u003d \"Hancock\";","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"    public static final String VALID_RATING_LOW \u003d \"1\";","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"    public static final String VALID_RATING_HIGH \u003d \"5\";","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"    public static final String VALID_STATUS_COMPLETED \u003d \"completed\";","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    public static final String VALID_STATUS_WATCHING \u003d \"watching\";","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"    public static final String VALID_TAG_MOVIE \u003d \"movie\";","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"    public static final String VALID_TAG_SERIES \u003d \"series\";","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String VALID_TAG_YURI \u003d \"yuri\";","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String VALID_TAG_HENTAI \u003d \"hentai\";","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"    public static final String VALID_COMMENT_GOOD \u003d \"good\";","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"    public static final String VALID_COMMENT_BAD \u003d \"bad\";","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"    public static final String COMMENT_DESC_GOOD \u003d \" \" + PREFIX_COMMENT + VALID_COMMENT_GOOD;","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"    public static final String COMMENT_DESC_BAD \u003d \" \" + PREFIX_COMMENT + VALID_COMMENT_BAD;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String NAME_DESC_ALICE_IN_WONDERLAND \u003d \" \" + PREFIX_NAME + VALID_NAME_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String NAME_DESC_GONE \u003d \" \" + PREFIX_NAME + VALID_NAME_GONE;","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"    public static final String RATING_DESC_HIGH \u003d \" \" + PREFIX_RATING + VALID_RATING_HIGH;","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"    public static final String RATING_DESC_LOW \u003d \" \" + PREFIX_RATING + VALID_RATING_LOW;","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String STATUS_DESC_COMPLETED \u003d \" \" + PREFIX_STATUS + VALID_STATUS_COMPLETED;","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String STATUS_DESC_WATCHING \u003d \" \" + PREFIX_STATUS + VALID_STATUS_WATCHING;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String TAG_DESC_MOVIE \u003d \" \" + PREFIX_TAG + VALID_TAG_MOVIE;","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String TAG_DESC_YURI \u003d \" \" + PREFIX_TAG + VALID_TAG_YURI;","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String TAG_DESC_HENTAI \u003d \" \" + PREFIX_TAG + VALID_TAG_HENTAI;","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"PicoNoPiko\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"            + PREFIX_STATUS + \"Watch\"; // Status have to be completed or watching","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"    public static final String INVALID_RATING_DESC \u003d \" \" + PREFIX_TAG + \"A\"; // \u0027A\u0027 not allowed in rating","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"    public static final EditCommand.EditShowDescriptor DESC_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"    public static final EditCommand.EditShowDescriptor DESC_GONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"    static {","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"        DESC_ALICE_IN_WONDERLAND \u003d new EditShowDescriptorBuilder().withName(VALID_NAME_ALICE_IN_WONDERLAND)","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"                .withStatus(VALID_STATUS_COMPLETED).withTags(VALID_TAG_MOVIE).withComment(VALID_COMMENT_BAD)","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"                .withRating(VALID_RATING_HIGH).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"Ardentsoul"},"content":"        DESC_GONE \u003d new EditShowDescriptorBuilder().withName(VALID_NAME_GONE)","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"                .withStatus(VALID_STATUS_WATCHING).withTags(VALID_TAG_SERIES, VALID_TAG_HENTAI)","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"                .withComment(VALID_COMMENT_BAD).withRating(VALID_RATING_LOW).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"Ardentsoul"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"Ardentsoul"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"Ardentsoul"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"Ardentsoul"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"Ardentsoul"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"Ardentsoul"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"Ardentsoul"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"Ardentsoul"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"Ardentsoul"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"Ardentsoul"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"Ardentsoul"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"Ardentsoul"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"Ardentsoul"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"Ardentsoul"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"Ardentsoul"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"Ardentsoul"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"Ardentsoul"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"Ardentsoul"},"content":"     * - the show list, filtered show list and selected show in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"Ardentsoul"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"Ardentsoul"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"Ardentsoul"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"Ardentsoul"},"content":"        ShowList expectedShowList \u003d new ShowList(actualModel.getShowList());","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"Ardentsoul"},"content":"        List\u003cShow\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredShowList());","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"Ardentsoul"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(expectedShowList, actualModel.getShowList());","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredShowList());","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"Ardentsoul"},"content":"     * Updates {@code model}\u0027s filtered list to display only the show at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"Ardentsoul"},"content":"     * {@code model}\u0027s show list.","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"Ardentsoul"},"content":"    public static void showShowAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredShowList().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"Ardentsoul"},"content":"        Show show \u003d model.getFilteredShowList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"Ardentsoul"},"content":"        final String[] splitName \u003d show.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"Ardentsoul"},"content":"        model.updateFilteredShowList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(1, model.getFilteredShowList().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"aweijun":28,"lowkaiwei98":20,"Ardentsoul":87}},{"path":"src/test/java/seedu/trackermon/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.showShowAtIndex;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalIndexes.INDEX_FIRST_SHOW;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalIndexes.INDEX_SECOND_SHOW;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.getTypicalShowList;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.commons.core.Messages;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ModelManager;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    private Model model \u003d new ModelManager(getTypicalShowList(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"        Show showToDelete \u003d model.getFilteredShowList().get(INDEX_FIRST_SHOW.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_SHOW);","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_SHOW_SUCCESS, showToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getShowList(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.deleteShow(showToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredShowList().size() + 1);","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_SHOW_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"        showShowAtIndex(model, INDEX_FIRST_SHOW);","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"        Show showToDelete \u003d model.getFilteredShowList().get(INDEX_FIRST_SHOW.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_SHOW);","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_SHOW_SUCCESS, showToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"        Model expectedModel \u003d new ModelManager(model.getShowList(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.deleteShow(showToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"        showNoShow(expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"        showShowAtIndex(model, INDEX_FIRST_SHOW);","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_SHOW;","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"        // ensures that outOfBoundIndex is still in bounds of show list","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getShowList().getShows().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_SHOW_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"Ardentsoul"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_SHOW);","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_SHOW);","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"Ardentsoul"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_SHOW);","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"Ardentsoul"},"content":"    private void showNoShow(Model model) {","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"Ardentsoul"},"content":"        model.updateFilteredShowList(p -\u003e false);","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(model.getFilteredShowList().isEmpty());","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"-":70,"Ardentsoul":39}},{"path":"src/test/java/seedu/trackermon/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.DESC_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.DESC_GONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_COMMENT_BAD;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_GONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_WEATHERING_WITH_YOU;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_STATUS_WATCHING;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_SERIES;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.showShowAtIndex;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalIndexes.INDEX_FIRST_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalIndexes.INDEX_SECOND_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.getTypicalShowList;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.logic.commands.EditCommand.EditShowDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ShowList;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.testutil.EditShowDescriptorBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.testutil.ShowBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"public class EditCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"    private Model model \u003d new ModelManager(getTypicalShowList(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"        Show editedShow \u003d new ShowBuilder().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"        EditShowDescriptor descriptor \u003d new EditShowDescriptorBuilder(editedShow).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_SHOW, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_SHOW_SUCCESS, editedShow);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"        Model expectedModel \u003d new ModelManager(new ShowList(model.getShowList()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.setShow(model.getFilteredShowList().get(0), editedShow);","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"        Index indexLastShow \u003d Index.fromOneBased(model.getFilteredShowList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"        Show lastShow \u003d model.getFilteredShowList().get(indexLastShow.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"        ShowBuilder showInList \u003d new ShowBuilder(lastShow);","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"        Show editedShow \u003d showInList.withName(VALID_NAME_WEATHERING_WITH_YOU).withStatus(VALID_STATUS_WATCHING)","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"                .withTags(VALID_TAG_SERIES).withComment(VALID_COMMENT_BAD).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"        EditShowDescriptor descriptor \u003d new EditShowDescriptorBuilder().withName(VALID_NAME_WEATHERING_WITH_YOU)","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"                .withStatus(VALID_STATUS_WATCHING).withTags(VALID_TAG_SERIES).withComment(VALID_COMMENT_BAD).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastShow, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_SHOW_SUCCESS, editedShow);","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"        Model expectedModel \u003d new ModelManager(new ShowList(model.getShowList()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.setShow(lastShow, editedShow);","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"Ardentsoul"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_SHOW, new EditShowDescriptor());","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"Ardentsoul"},"content":"        Show editedShow \u003d model.getFilteredShowList().get(INDEX_FIRST_SHOW.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_SHOW_SUCCESS, editedShow);","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"Ardentsoul"},"content":"        Model expectedModel \u003d new ModelManager(new ShowList(model.getShowList()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"Ardentsoul"},"content":"        showShowAtIndex(model, INDEX_FIRST_SHOW);","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"Ardentsoul"},"content":"        Show showInFilteredList \u003d model.getFilteredShowList().get(INDEX_FIRST_SHOW.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"Ardentsoul"},"content":"        Show editedShow \u003d new ShowBuilder(showInFilteredList).withName(VALID_NAME_ALICE_IN_WONDERLAND).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"Ardentsoul"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_SHOW,","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"Ardentsoul"},"content":"                new EditShowDescriptorBuilder().withName(VALID_NAME_ALICE_IN_WONDERLAND).build());","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_SHOW_SUCCESS, editedShow);","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"Ardentsoul"},"content":"        Model expectedModel \u003d new ModelManager(new ShowList(model.getShowList()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.setShow(model.getFilteredShowList().get(0), editedShow);","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"        model.updateFilteredShowList(Model.PREDICATE_SHOW_ALL_SHOWS);","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_duplicateShowUnfilteredList_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"Ardentsoul"},"content":"        Show firstShow \u003d model.getFilteredShowList().get(INDEX_FIRST_SHOW.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"Ardentsoul"},"content":"        EditShowDescriptor descriptor \u003d new EditShowDescriptorBuilder(firstShow).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"Ardentsoul"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_SHOW, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_SHOW);","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_duplicateShowFilteredList_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"Ardentsoul"},"content":"        showShowAtIndex(model, INDEX_FIRST_SHOW);","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"Ardentsoul"},"content":"        // edit show in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"Ardentsoul"},"content":"        Show showInList \u003d model.getShowList().getShows().get(INDEX_SECOND_SHOW.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"Ardentsoul"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_SHOW,","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"Ardentsoul"},"content":"                new EditShowDescriptorBuilder(showInList).build());","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_SHOW);","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_invalidShowIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"Ardentsoul"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredShowList().size() + 1);","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"Ardentsoul"},"content":"        EditShowDescriptor descriptor \u003d new EditShowDescriptorBuilder().withName(VALID_NAME_GONE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"Ardentsoul"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_SHOW_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"Ardentsoul"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"Ardentsoul"},"content":"     * but smaller than size of show list","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_invalidShowIndexFilteredList_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"Ardentsoul"},"content":"        showShowAtIndex(model, INDEX_FIRST_SHOW);","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"Ardentsoul"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"Ardentsoul"},"content":"        // ensures that outOfBoundIndex is still in bounds of show list","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getShowList().getShows().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"Ardentsoul"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"Ardentsoul"},"content":"                new EditShowDescriptorBuilder().withName(VALID_NAME_GONE).build());","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_SHOW_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"Ardentsoul"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"Ardentsoul"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_SHOW, DESC_ALICE_IN_WONDERLAND);","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"Ardentsoul"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"Ardentsoul"},"content":"        EditShowDescriptor copyDescriptor \u003d new EditShowDescriptor(DESC_ALICE_IN_WONDERLAND);","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"Ardentsoul"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_SHOW, copyDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"Ardentsoul"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"Ardentsoul"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"Ardentsoul"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_SHOW, DESC_ALICE_IN_WONDERLAND)));","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"Ardentsoul"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_SHOW, DESC_GONE)));","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"aweijun":3,"lowkaiwei98":1,"Ardentsoul":168}},{"path":"src/test/java/seedu/trackermon/logic/commands/EditShowDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.DESC_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.DESC_GONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_GONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_STATUS_WATCHING;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_SERIES;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.logic.commands.EditCommand.EditShowDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.testutil.EditShowDescriptorBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"public class EditShowDescriptorTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"        EditShowDescriptor descriptorWithSameValues \u003d new EditShowDescriptor(DESC_ALICE_IN_WONDERLAND);","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(DESC_ALICE_IN_WONDERLAND.equals(descriptorWithSameValues));","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(DESC_ALICE_IN_WONDERLAND.equals(DESC_ALICE_IN_WONDERLAND));","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(DESC_ALICE_IN_WONDERLAND.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(DESC_ALICE_IN_WONDERLAND.equals(5));","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(DESC_ALICE_IN_WONDERLAND.equals(DESC_GONE));","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"        EditShowDescriptor editedAmy \u003d new EditShowDescriptorBuilder(DESC_ALICE_IN_WONDERLAND)","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"                .withName(VALID_NAME_GONE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(DESC_ALICE_IN_WONDERLAND.equals(editedAmy));","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"        editedAmy \u003d new EditShowDescriptorBuilder(DESC_ALICE_IN_WONDERLAND).withStatus(VALID_STATUS_WATCHING).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(DESC_ALICE_IN_WONDERLAND.equals(editedAmy));","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"        editedAmy \u003d new EditShowDescriptorBuilder(DESC_ALICE_IN_WONDERLAND).withTags(VALID_TAG_SERIES).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(DESC_ALICE_IN_WONDERLAND.equals(editedAmy));","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Ardentsoul":49}},{"path":"src/test/java/seedu/trackermon/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"-":15,"Ardentsoul":5}},{"path":"src/test/java/seedu/trackermon/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_SHOWS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.FRIENDS;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.GONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.HIMYM;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.getTypicalShowList;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.RatingContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.ShowContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.StatusContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.TagsContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"public class FindCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"    private Model model \u003d new ModelManager(getTypicalShowList(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalShowList(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"        ShowContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"                new ShowContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"        ShowContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"                new ShowContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_zeroKeywords_noShowFound() {","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SHOWS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"        ShowContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.updateFilteredShowList(predicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredShowList());","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_multipleKeywords_multipleShowsFound() {","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SHOWS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"Ardentsoul"},"content":"        ShowContainsKeywordsPredicate predicate \u003d preparePredicate(\"friends gone HIMYM\");","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"Ardentsoul"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.updateFilteredShowList(predicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(Arrays.asList(GONE, FRIENDS, HIMYM), model.getFilteredShowList());","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_nameField_preciseSearch() {","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"Ardentsoul"},"content":"        String input \u003d \"Alice in Wonderland\";","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"Ardentsoul"},"content":"        String[] keywordsArr \u003d getKeywords(input);","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"Ardentsoul"},"content":"        List\u003cPredicate\u003cShow\u003e\u003e predicateArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"Ardentsoul"},"content":"        for (int i \u003d 0; i \u003c keywordsArr.length; i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"Ardentsoul"},"content":"            predicateArrayList.add(new NameContainsKeywordsPredicate(Arrays.asList(keywordsArr[i])));","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SHOWS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"Ardentsoul"},"content":"        Predicate\u003cShow\u003e predicate \u003d predicateArrayList.stream().reduce(Predicate::and).orElse(x -\u003e true);","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"Ardentsoul"},"content":"        FindCommand command \u003d new FindCommand(predicateArrayList.stream().reduce(Predicate::and).orElse(x -\u003e true));","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.updateFilteredShowList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(Arrays.asList(ALICE_IN_WONDERLAND), model.getFilteredShowList());","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_statusField_preciseSearch() {","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SHOWS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"Ardentsoul"},"content":"        StatusContainsKeywordsPredicate predicate \u003d preparePredicateStatus(\"completed\");","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"Ardentsoul"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.updateFilteredShowList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(Arrays.asList(ALICE_IN_WONDERLAND), model.getFilteredShowList());","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_tagField_preciseSearch() {","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"Ardentsoul"},"content":"        List\u003cString\u003e input \u003d Arrays.asList(\"Horror\", \"friends\");","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"Ardentsoul"},"content":"        List\u003cPredicate\u003cShow\u003e\u003e predicateArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"Ardentsoul"},"content":"        for (int i \u003d 0; i \u003c input.size(); i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"Ardentsoul"},"content":"            predicateArrayList.add(new TagsContainsKeywordsPredicate(Arrays.asList(input.get(i))));","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SHOWS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"Ardentsoul"},"content":"        Predicate\u003cShow\u003e predicate \u003d predicateArrayList.stream().reduce(Predicate::and).orElse(x -\u003e true);","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"Ardentsoul"},"content":"        FindCommand command \u003d new FindCommand(predicateArrayList.stream().reduce(Predicate::and).orElse(x -\u003e true));","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.updateFilteredShowList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(Arrays.asList(FRIENDS, HIMYM), model.getFilteredShowList());","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_rateField_preciseSearch() {","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"Ardentsoul"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SHOWS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"Ardentsoul"},"content":"        RatingContainsKeywordsPredicate predicate \u003d preparePredicateRating(\"5\");","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"Ardentsoul"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel.updateFilteredShowList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(Arrays.asList(ALICE_IN_WONDERLAND), model.getFilteredShowList());","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"Ardentsoul"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"Ardentsoul"},"content":"    private ShowContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"Ardentsoul"},"content":"        return new ShowContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"Ardentsoul"},"content":"    private NameContainsKeywordsPredicate preparePredicateName(String userInput) {","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"Ardentsoul"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"Ardentsoul"},"content":"    private StatusContainsKeywordsPredicate preparePredicateStatus(String userInput) {","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"Ardentsoul"},"content":"        return new StatusContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"Ardentsoul"},"content":"    private TagsContainsKeywordsPredicate preparePredicateTags(String userInput) {","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"Ardentsoul"},"content":"        return new TagsContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"Ardentsoul"},"content":"    private RatingContainsKeywordsPredicate preparePredicateRating(String userInput) {","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"Ardentsoul"},"content":"        return new RatingContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"Ardentsoul"},"content":"    public String[] getKeywords(String args) {","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"Ardentsoul"},"content":"        return args.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Ardentsoul":163}},{"path":"src/test/java/seedu/trackermon/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"-":15,"Ardentsoul":5}},{"path":"src/test/java/seedu/trackermon/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.showShowAtIndex;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalIndexes.INDEX_FIRST_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.getTypicalShowList;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"public class ListCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"    private Model model;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"        model \u003d new ModelManager(getTypicalShowList(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"        expectedModel \u003d new ModelManager(model.getShowList(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"        showShowAtIndex(model, INDEX_FIRST_SHOW);","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Ardentsoul":39}},{"path":"src/test/java/seedu/trackermon/logic/commands/TempCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"///**","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"// * Contains helper methods for testing commands.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"// */","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"//public class CommandTestUtil {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"//    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"//    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"//    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"//    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"//    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"//    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"//    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"//    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"//    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"//    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"//    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"//    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"//    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"//    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"//    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"//    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"//    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"//    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"//    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"//    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"//    /*","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"//    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"//    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"//*/","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"//    static {","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"//        /*","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"//        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"//                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"//                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"//        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"//                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"//                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"//                */","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"//    }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"//    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"//     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"//     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"//     */","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"//    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"//            Model expectedModel) {","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"//        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"//            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"//            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"//            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"//        } catch (CommandException ce) {","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"//            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"//        }","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"//    }","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"//    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"//     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"//     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"//     */","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"//    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"//            Model expectedModel) {","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"//        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"//    }","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"//    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"//     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"//     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"//     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"//     */","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"//    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"//        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"aweijun"},"content":"//        // only do so by copying its components.","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"//        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"aweijun"},"content":"//        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"aweijun"},"content":"//        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"aweijun"},"content":"//        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"aweijun"},"content":"//        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"aweijun"},"content":"//    }","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"aweijun"},"content":"//    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"aweijun"},"content":"//     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"aweijun"},"content":"//     * {@code model}\u0027s address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"aweijun"},"content":"//     */","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"aweijun"},"content":"//    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"aweijun"},"content":"//        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"aweijun"},"content":"//        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"aweijun"},"content":"//        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"aweijun"},"content":"//        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"aweijun"},"content":"//        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"aweijun"},"content":"//    }","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"aweijun"},"content":"//","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"aweijun"},"content":"//}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"aweijun":117}},{"path":"src/test/java/seedu/trackermon/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.COMMENT_DESC_BAD;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.NAME_DESC_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.NAME_DESC_GONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.RATING_DESC_HIGH;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.RATING_DESC_LOW;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.STATUS_DESC_COMPLETED;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.STATUS_DESC_WATCHING;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.TAG_DESC_HENTAI;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.TAG_DESC_MOVIE;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.TAG_DESC_YURI;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_COMMENT_BAD;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_RATING_HIGH;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_RATING_LOW;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_STATUS_COMPLETED;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_HENTAI;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_MOVIE;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_YURI;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.TypicalShows.ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.TypicalShows.GONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.AddCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Status;","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.testutil.ShowBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"        Show expectedShow \u003d new ShowBuilder(ALICE_IN_WONDERLAND).withStatus(VALID_STATUS_COMPLETED)","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"                .withTags(VALID_TAG_MOVIE).withComment(VALID_COMMENT_BAD).withRating(VALID_RATING_HIGH).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_ALICE_IN_WONDERLAND","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"                + STATUS_DESC_COMPLETED + COMMENT_DESC_BAD + TAG_DESC_MOVIE + RATING_DESC_HIGH ,","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"                new AddCommand(expectedShow));","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, NAME_DESC_GONE + NAME_DESC_ALICE_IN_WONDERLAND","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"                + STATUS_DESC_COMPLETED + COMMENT_DESC_BAD + RATING_DESC_HIGH + TAG_DESC_MOVIE,","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"                new AddCommand(expectedShow));","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"        // multiple status - last status accepted","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"        assertParseSuccess(parser, NAME_DESC_ALICE_IN_WONDERLAND + STATUS_DESC_WATCHING + RATING_DESC_HIGH","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"                + COMMENT_DESC_BAD + TAG_DESC_MOVIE + STATUS_DESC_COMPLETED, new AddCommand(expectedShow));","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"        Show expectedShowMultipleTags \u003d new ShowBuilder(GONE).withComment(VALID_COMMENT_BAD)","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"                .withRating(VALID_RATING_LOW).withTags(VALID_TAG_YURI, VALID_TAG_HENTAI).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"        assertParseSuccess(parser, NAME_DESC_GONE + STATUS_DESC_WATCHING + COMMENT_DESC_BAD + RATING_DESC_LOW","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"                + TAG_DESC_YURI + TAG_DESC_HENTAI, new AddCommand(expectedShowMultipleTags));","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"        Show expectedShow \u003d new ShowBuilder(ALICE_IN_WONDERLAND).withTags().withComment().withRating().build();","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"        assertParseSuccess(parser, NAME_DESC_ALICE_IN_WONDERLAND + STATUS_DESC_COMPLETED,","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"                new AddCommand(expectedShow));","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"        // missing name prefix","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, VALID_NAME_ALICE_IN_WONDERLAND + STATUS_DESC_COMPLETED,","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"        // missing status prefix","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, NAME_DESC_ALICE_IN_WONDERLAND + VALID_STATUS_COMPLETED,","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"        // all prefixes missing","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, VALID_NAME_ALICE_IN_WONDERLAND + VALID_STATUS_COMPLETED,","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"        // invalid name","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + STATUS_DESC_COMPLETED","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"                + TAG_DESC_MOVIE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"lowkaiwei98"},"content":"        // invalid status","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, NAME_DESC_ALICE_IN_WONDERLAND + INVALID_STATUS_DESC","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"lowkaiwei98"},"content":"                + TAG_DESC_MOVIE, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"lowkaiwei98"},"content":"        // invalid tag","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, NAME_DESC_ALICE_IN_WONDERLAND + STATUS_DESC_COMPLETED","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"lowkaiwei98"},"content":"                + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"lowkaiwei98"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_STATUS_DESC,","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"lowkaiwei98"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"lowkaiwei98"},"content":"        // non-empty preamble","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_ALICE_IN_WONDERLAND","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"lowkaiwei98"},"content":"                        + STATUS_DESC_COMPLETED + TAG_DESC_MOVIE,","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"lowkaiwei98"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"aweijun":21,"lowkaiwei98":97}},{"path":"src/test/java/seedu/trackermon/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.logic.commands.EditCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.logic.commands.FindCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.PersonBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.PersonUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//public class AddressBookParserTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//    public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"//        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"//                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"//    public void parseCommand_help() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"//    public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"//    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(ParseException.class, String.format","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"//        (MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"//            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"//    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":15,"lowkaiwei98":82}},{"path":"src/test/java/seedu/trackermon/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"aweijun":1,"-":149}},{"path":"src/test/java/seedu/trackermon/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.Command;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"lowkaiwei98":3,"-":35}},{"path":"src/test/java/seedu/trackermon/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.TypicalIndexes.INDEX_FIRST_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_SHOW));","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"lowkaiwei98":7,"-":25}},{"path":"src/test/java/seedu/trackermon/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.COMMENT_DESC_BAD;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.NAME_DESC_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.NAME_DESC_GONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.STATUS_DESC_COMPLETED;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.STATUS_DESC_WATCHING;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.TAG_DESC_HENTAI;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.TAG_DESC_MOVIE;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.TAG_DESC_YURI;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_COMMENT_BAD;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_GONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_STATUS_COMPLETED;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_STATUS_WATCHING;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_HENTAI;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_MOVIE;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_YURI;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.TypicalIndexes.INDEX_FIRST_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.TypicalIndexes.INDEX_SECOND_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.TypicalIndexes.INDEX_THIRD_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.EditCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.EditCommand.EditShowDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Status;","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.testutil.EditShowDescriptorBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"        // no index specified","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, VALID_NAME_ALICE_IN_WONDERLAND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"        // no field specified","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"        // no index and no field specified","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"        // negative index","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_ALICE_IN_WONDERLAND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"        // zero index","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_ALICE_IN_WONDERLAND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STATUS_DESC, Status.MESSAGE_CONSTRAINTS); // invalid status","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"        // invalid name followed by valid status","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + STATUS_DESC_COMPLETED, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"        // valid name followed by invalid name. The test case for invalid name followed by valid name","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1\" + NAME_DESC_ALICE_IN_WONDERLAND + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Show} being edited,","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_MOVIE + TAG_DESC_HENTAI + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_MOVIE + TAG_EMPTY + TAG_DESC_HENTAI, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_MOVIE + TAG_DESC_HENTAI, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_STATUS_DESC,","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"lowkaiwei98"},"content":"        Index targetIndex \u003d INDEX_SECOND_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"lowkaiwei98"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_ALICE_IN_WONDERLAND","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"aweijun"},"content":"                + STATUS_DESC_COMPLETED + COMMENT_DESC_BAD + TAG_DESC_MOVIE","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"lowkaiwei98"},"content":"                + TAG_DESC_HENTAI;","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"lowkaiwei98"},"content":"        EditShowDescriptor descriptor \u003d new EditShowDescriptorBuilder().withName(VALID_NAME_ALICE_IN_WONDERLAND)","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"aweijun"},"content":"                .withStatus(VALID_STATUS_COMPLETED).withComment(VALID_COMMENT_BAD)","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"aweijun"},"content":"                .withTags(VALID_TAG_MOVIE, VALID_TAG_HENTAI).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"lowkaiwei98"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"lowkaiwei98"},"content":"        Index targetIndex \u003d INDEX_FIRST_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"lowkaiwei98"},"content":"        String userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"lowkaiwei98"},"content":"                + NAME_DESC_ALICE_IN_WONDERLAND + STATUS_DESC_COMPLETED;","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"lowkaiwei98"},"content":"        EditShowDescriptor descriptor \u003d new EditShowDescriptorBuilder()","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"lowkaiwei98"},"content":"                .withName(VALID_NAME_ALICE_IN_WONDERLAND)","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"lowkaiwei98"},"content":"                .withStatus(VALID_STATUS_COMPLETED).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"lowkaiwei98"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"lowkaiwei98"},"content":"        // name","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"lowkaiwei98"},"content":"        Index targetIndex \u003d INDEX_THIRD_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"lowkaiwei98"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"lowkaiwei98"},"content":"        EditShowDescriptor descriptor \u003d new EditShowDescriptorBuilder()","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"lowkaiwei98"},"content":"                .withName(VALID_NAME_ALICE_IN_WONDERLAND).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"lowkaiwei98"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"lowkaiwei98"},"content":"        // status","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"lowkaiwei98"},"content":"        userInput \u003d targetIndex.getOneBased() + STATUS_DESC_COMPLETED;","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor \u003d new EditShowDescriptorBuilder().withStatus(VALID_STATUS_COMPLETED).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"lowkaiwei98"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"lowkaiwei98"},"content":"        // tags","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"lowkaiwei98"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_HENTAI;","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor \u003d new EditShowDescriptorBuilder().withTags(VALID_TAG_HENTAI).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"lowkaiwei98"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"lowkaiwei98"},"content":"        Index targetIndex \u003d INDEX_FIRST_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"lowkaiwei98"},"content":"        String userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"lowkaiwei98"},"content":"                + NAME_DESC_ALICE_IN_WONDERLAND + STATUS_DESC_COMPLETED + TAG_DESC_HENTAI","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"lowkaiwei98"},"content":"                + NAME_DESC_GONE + STATUS_DESC_WATCHING + TAG_DESC_MOVIE + TAG_DESC_YURI;","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"lowkaiwei98"},"content":"        EditShowDescriptor descriptor \u003d new EditShowDescriptorBuilder().withName(VALID_NAME_GONE)","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"lowkaiwei98"},"content":"                .withStatus(VALID_STATUS_WATCHING).withTags(VALID_TAG_HENTAI, VALID_TAG_MOVIE, VALID_TAG_YURI)","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"lowkaiwei98"},"content":"                .build();","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"lowkaiwei98"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"lowkaiwei98"},"content":"        // no other valid values specified","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"lowkaiwei98"},"content":"        Index targetIndex \u003d INDEX_FIRST_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"lowkaiwei98"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_NAME_DESC","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"lowkaiwei98"},"content":"                + NAME_DESC_ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":173,"author":{"gitId":"lowkaiwei98"},"content":"        EditShowDescriptor descriptor \u003d new EditShowDescriptorBuilder()","lastModifiedDate":"2022-03-18"},{"lineNumber":174,"author":{"gitId":"lowkaiwei98"},"content":"                .withName(VALID_NAME_ALICE_IN_WONDERLAND).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":175,"author":{"gitId":"lowkaiwei98"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":177,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":178,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":179,"author":{"gitId":"lowkaiwei98"},"content":"        // other valid values specified","lastModifiedDate":"2022-03-18"},{"lineNumber":180,"author":{"gitId":"lowkaiwei98"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_NAME_DESC","lastModifiedDate":"2022-03-18"},{"lineNumber":181,"author":{"gitId":"lowkaiwei98"},"content":"                + NAME_DESC_ALICE_IN_WONDERLAND + TAG_DESC_MOVIE;","lastModifiedDate":"2022-03-18"},{"lineNumber":182,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor \u003d new EditShowDescriptorBuilder()","lastModifiedDate":"2022-03-18"},{"lineNumber":183,"author":{"gitId":"lowkaiwei98"},"content":"                .withName(VALID_NAME_ALICE_IN_WONDERLAND).withTags(VALID_TAG_MOVIE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":184,"author":{"gitId":"lowkaiwei98"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":185,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":186,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":187,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":188,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":189,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":190,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":191,"author":{"gitId":"lowkaiwei98"},"content":"        Index targetIndex \u003d INDEX_THIRD_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":192,"author":{"gitId":"lowkaiwei98"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-03-18"},{"lineNumber":193,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":194,"author":{"gitId":"lowkaiwei98"},"content":"        EditShowDescriptor descriptor \u003d new EditShowDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":195,"author":{"gitId":"lowkaiwei98"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":196,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":197,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":198,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":199,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"aweijun":5,"lowkaiwei98":194}},{"path":"src/test/java/seedu/trackermon/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.FindCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.ShowContainsKeywordsPredicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"                new FindCommand(new ShowContainsKeywordsPredicate(Arrays.asList(\"Gone\")));","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"        assertParseSuccess(parser, \"Gone\", expectedFindCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"        assertParseSuccess(parser, \" Gone \", expectedFindCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"lowkaiwei98":29,"Ardentsoul":3}},{"path":"src/test/java/seedu/trackermon/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.TypicalIndexes.INDEX_FIRST_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Status;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String INVALID_STATUS \u003d \" \";","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String VALID_NAME \u003d \"JoJo\";","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String VALID_STATUS \u003d \"completed\";","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String VALID_TAG_1 \u003d \"action\";","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"    private static final String VALID_TAG_2 \u003d \"horror\";","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"        assertEquals(INDEX_FIRST_SHOW, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"        assertEquals(INDEX_FIRST_SHOW, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseStatus_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStatus((String) null));","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseStatus_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStatus(INVALID_STATUS));","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseStatus_validValueWithoutWhitespace_returnsStatus() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"        Status expectedStatus \u003d Status.getStatus(VALID_STATUS);","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(VALID_STATUS));","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseStatus_validValueWithWhitespace_returnsTrimmedStatus() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"        String statusWithWhitespace \u003d WHITESPACE + VALID_STATUS + WHITESPACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"        Status expectedStatus \u003d Status.getStatus(VALID_STATUS);","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(statusWithWhitespace));","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"lowkaiwei98":26,"-":118}},{"path":"src/test/java/seedu/trackermon/logic/parser/TrackermonParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.testutil.TypicalIndexes.INDEX_FIRST_SHOW;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.AddCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.EditCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.EditCommand.EditShowDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.FindCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.ListCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"import seedu.trackermon.model.show.ShowContainsKeywordsPredicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.testutil.EditShowDescriptorBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.testutil.ShowBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.testutil.ShowUtil;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"public class TrackermonParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"    private final TrackermonParser parser \u003d new TrackermonParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"        Show show \u003d new ShowBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ShowUtil.getAddCommand(show));","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"        assertEquals(new AddCommand(show), command);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_SHOW.getOneBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_SHOW), command);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"        Show show \u003d new ShowBuilder().build();","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"        EditShowDescriptor descriptor \u003d new EditShowDescriptorBuilder(show).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"                + INDEX_FIRST_SHOW.getOneBased() + \" \" + ShowUtil.getEditShowDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_SHOW, descriptor), command);","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(new FindCommand(new ShowContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"        assertThrows(ParseException.class, String","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"                .format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"                        HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"lowkaiwei98":93,"Ardentsoul":2}},{"path":"src/test/java/seedu/trackermon/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Collection;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.PersonBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//public class AddressBookTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//    public void constructor() {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//        addressBook.resetData(newData);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(newData, addressBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//        // Two persons with the same identity fields","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"//    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"//                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"//    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"//     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"//    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"//        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"//        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"//            this.persons.setAll(persons);","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"//        }","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"//        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"//        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"//            return persons;","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"//        }","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":9,"lowkaiwei98":93}},{"path":"src/test/java/seedu/trackermon/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.AddressBookBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//public class ModelManagerTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//    public void constructor() {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"//        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"//        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"//        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"//        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"//        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"lowkaiwei98"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"lowkaiwei98"},"content":"//        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"lowkaiwei98"},"content":"//        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"lowkaiwei98"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"lowkaiwei98"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(modelManager.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"lowkaiwei98"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(modelManager.equals(5));","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"lowkaiwei98"},"content":"//        // different addressBook -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"lowkaiwei98"},"content":"//        // different filteredList -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"lowkaiwei98"},"content":"//        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"lowkaiwei98"},"content":"//        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"lowkaiwei98"},"content":"//        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"lowkaiwei98"},"content":"//        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"lowkaiwei98"},"content":"//        // different userPrefs -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"lowkaiwei98"},"content":"//        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":8,"lowkaiwei98":124}},{"path":"src/test/java/seedu/trackermon/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//public class UserPrefsTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":2,"lowkaiwei98":19}},{"path":"src/test/java/seedu/trackermon/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.model.person;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//public class AddressTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//        String invalidAddress \u003d \"\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    public void isValidAddress() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//        // null address","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        // invalid addresses","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//        // valid addresses","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":2,"lowkaiwei98":34}},{"path":"src/test/java/seedu/trackermon/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.model.person;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//public class EmailTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//        String invalidEmail \u003d \"\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    public void isValidEmail() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//        // null email","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        // blank email","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//        // missing parts","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//        // invalid parts","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//        // valid email","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":2,"lowkaiwei98":66}},{"path":"src/test/java/seedu/trackermon/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.model.person;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.PersonBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        NameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//        new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//        // One keyword","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//        new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//        // Multiple keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//        // Only one matching keyword","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//        // Mixed-case keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//        // Zero keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//        // Non-matching keyword","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"//        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"//                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":2,"lowkaiwei98":75}},{"path":"src/test/java/seedu/trackermon/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.model.person;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//public class NameTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    public void isValidName() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//        // null name","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        // invalid name","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//        // valid name","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":2,"lowkaiwei98":38}},{"path":"src/test/java/seedu/trackermon/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.model.person;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.PersonBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//public class PersonTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//    public void isSamePerson() {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":10,"lowkaiwei98":81}},{"path":"src/test/java/seedu/trackermon/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.model.person;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//public class PhoneTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//        String invalidPhone \u003d \"\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    public void isValidPhone() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//        // null phone number","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        // invalid phone numbers","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//        // valid phone numbers","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":2,"lowkaiwei98":38}},{"path":"src/test/java/seedu/trackermon/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.model.person;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.PersonBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//public class UniquePersonListTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"//        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"//                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"//        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"lowkaiwei98"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"lowkaiwei98"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.add(BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"lowkaiwei98"},"content":"//    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"lowkaiwei98"},"content":"//    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"lowkaiwei98"},"content":"//    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.remove(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"lowkaiwei98"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"lowkaiwei98"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"lowkaiwei98"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"lowkaiwei98"},"content":"//        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"lowkaiwei98"},"content":"//        uniquePersonList.setPersons(personList);","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"lowkaiwei98"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"lowkaiwei98"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"lowkaiwei98"},"content":"//        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"lowkaiwei98"},"content":"//    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"lowkaiwei98"},"content":"//            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":9,"lowkaiwei98":161}},{"path":"src/test/java/seedu/trackermon/model/show/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-03"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"public class NameTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    public void isValidName() {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"        // null name","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"        // invalid name","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"        assertFalse(Name.isValidName(\"you*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"        // valid name","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"        assertTrue(Name.isValidName(\"You\")); // alphabets only","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"        assertTrue(Name.isValidName(\"007\")); // numbers only","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"        assertTrue(Name.isValidName(\"Peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"        assertTrue(Name.isValidName(\"YoU\")); // with capital letters","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"        assertTrue(Name.isValidName(\"The Time I Got Bang Down by Truck kun\")); // long names","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":43,"author":{"gitId":"JonathanHoshi"},"content":"    void testToString() {","lastModifiedDate":"2022-04-03"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"        Name testName \u003d new Name(\"Another\");","lastModifiedDate":"2022-04-03"},{"lineNumber":45,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(\"Another\", testName.fullName);","lastModifiedDate":"2022-04-03"},{"lineNumber":46,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":47,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":48,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":49,"author":{"gitId":"JonathanHoshi"},"content":"    void testEquals() {","lastModifiedDate":"2022-04-03"},{"lineNumber":50,"author":{"gitId":"JonathanHoshi"},"content":"        Name testName \u003d new Name(\"Another\");","lastModifiedDate":"2022-04-03"},{"lineNumber":51,"author":{"gitId":"JonathanHoshi"},"content":"        assertTrue(testName.equals(testName));","lastModifiedDate":"2022-04-03"},{"lineNumber":52,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":53,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":54,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":55,"author":{"gitId":"JonathanHoshi"},"content":"    void testHashCode() {","lastModifiedDate":"2022-04-03"},{"lineNumber":56,"author":{"gitId":"JonathanHoshi"},"content":"        Name testName \u003d new Name(\"Another\");","lastModifiedDate":"2022-04-03"},{"lineNumber":57,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(\"Another\".hashCode(), testName.hashCode());","lastModifiedDate":"2022-04-03"},{"lineNumber":58,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":59,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":61,"author":{"gitId":"JonathanHoshi"},"content":"    void compareTo() {","lastModifiedDate":"2022-04-03"},{"lineNumber":62,"author":{"gitId":"JonathanHoshi"},"content":"        Name testName \u003d new Name(\"Another\");","lastModifiedDate":"2022-04-03"},{"lineNumber":63,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(0, testName.compareTo(new Name(\"ANOTHER\")));","lastModifiedDate":"2022-04-03"},{"lineNumber":64,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"aweijun":40,"JonathanHoshi":25}},{"path":"src/test/java/seedu/trackermon/model/show/ShowTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-03"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_HANCOCK;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_WEATHERING_WITH_YOU;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_STATUS_WATCHING;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_SERIES;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.TypicalShows.ALICE_IN_WONDERLAND;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.WEATHERING_WITH_YOU;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.Objects;","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.testutil.ShowBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"public class ShowTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"        Show show \u003d new ShowBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e show.getTags().remove(0));","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"    public void isSameShow() {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"        assertTrue(ALICE_IN_WONDERLAND.isSameShow(ALICE_IN_WONDERLAND));","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"        assertFalse(ALICE_IN_WONDERLAND.isSameShow(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"        Show editedAlice \u003d new ShowBuilder(ALICE_IN_WONDERLAND).withStatus(VALID_STATUS_WATCHING)","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"                .withTags(VALID_TAG_SERIES).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"        assertTrue(ALICE_IN_WONDERLAND.isSameShow(editedAlice));","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"        editedAlice \u003d new ShowBuilder(ALICE_IN_WONDERLAND).withName(VALID_NAME_WEATHERING_WITH_YOU).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"        assertFalse(ALICE_IN_WONDERLAND.isSameShow(editedAlice));","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"        Show editedYou \u003d new ShowBuilder(WEATHERING_WITH_YOU).withName(VALID_NAME_HANCOCK.toLowerCase()).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(WEATHERING_WITH_YOU.isSameShow(editedYou));","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_WEATHERING_WITH_YOU + \" \";","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"        editedYou \u003d new ShowBuilder(WEATHERING_WITH_YOU).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(WEATHERING_WITH_YOU.isSameShow(editedYou));","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"        Show aliceCopy \u003d new ShowBuilder(ALICE_IN_WONDERLAND).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"        assertTrue(ALICE_IN_WONDERLAND.equals(aliceCopy));","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"        assertTrue(ALICE_IN_WONDERLAND.equals(ALICE_IN_WONDERLAND));","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"        assertFalse(ALICE_IN_WONDERLAND.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"        assertFalse(ALICE_IN_WONDERLAND.equals(5));","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"        // different Show -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(ALICE_IN_WONDERLAND.equals(WEATHERING_WITH_YOU));","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"Ardentsoul"},"content":"        Show editedAlice \u003d new ShowBuilder(ALICE_IN_WONDERLAND).withName(VALID_NAME_WEATHERING_WITH_YOU).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"        assertFalse(ALICE_IN_WONDERLAND.equals(editedAlice));","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"        editedAlice \u003d new ShowBuilder(ALICE_IN_WONDERLAND).withStatus(VALID_STATUS_WATCHING).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"        assertFalse(ALICE_IN_WONDERLAND.equals(editedAlice));","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"        editedAlice \u003d new ShowBuilder(ALICE_IN_WONDERLAND).withTags(VALID_TAG_SERIES).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"        assertFalse(ALICE_IN_WONDERLAND.equals(editedAlice));","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":90,"author":{"gitId":"JonathanHoshi"},"content":"    void testGetters() {","lastModifiedDate":"2022-04-03"},{"lineNumber":91,"author":{"gitId":"JonathanHoshi"},"content":"        // test name getter","lastModifiedDate":"2022-04-03"},{"lineNumber":92,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(new Name(\"Alice in WonderLand\"), ALICE_IN_WONDERLAND.getName());","lastModifiedDate":"2022-04-03"},{"lineNumber":93,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":94,"author":{"gitId":"JonathanHoshi"},"content":"        // test status getter","lastModifiedDate":"2022-04-03"},{"lineNumber":95,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(Status.COMPLETED, ALICE_IN_WONDERLAND.getStatus());","lastModifiedDate":"2022-04-03"},{"lineNumber":96,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":97,"author":{"gitId":"JonathanHoshi"},"content":"        // test tag getter","lastModifiedDate":"2022-04-03"},{"lineNumber":98,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(Set.of(new Tag(\"movie\")), ALICE_IN_WONDERLAND.getTags());","lastModifiedDate":"2022-04-03"},{"lineNumber":99,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":100,"author":{"gitId":"JonathanHoshi"},"content":"        // test comment getter","lastModifiedDate":"2022-04-03"},{"lineNumber":101,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(new Comment(\"bad\"), ALICE_IN_WONDERLAND.getComment());","lastModifiedDate":"2022-04-03"},{"lineNumber":102,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":103,"author":{"gitId":"JonathanHoshi"},"content":"        // test rating getter","lastModifiedDate":"2022-04-03"},{"lineNumber":104,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(new Rating(5), ALICE_IN_WONDERLAND.getRating());","lastModifiedDate":"2022-04-03"},{"lineNumber":105,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":106,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":107,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":108,"author":{"gitId":"JonathanHoshi"},"content":"    void testHashCode() {","lastModifiedDate":"2022-04-03"},{"lineNumber":109,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(Objects.hash(new Name(\"Alice in WonderLand\"),","lastModifiedDate":"2022-04-03"},{"lineNumber":110,"author":{"gitId":"JonathanHoshi"},"content":"                Set.of(new Tag(\"movie\"))), ALICE_IN_WONDERLAND.hashCode());","lastModifiedDate":"2022-04-03"},{"lineNumber":111,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":112,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":113,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":114,"author":{"gitId":"JonathanHoshi"},"content":"    void testToString() {","lastModifiedDate":"2022-04-03"},{"lineNumber":115,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":116,"author":{"gitId":"JonathanHoshi"},"content":"        String expectedString \u003d \"Alice in WonderLand; Status: \" + Status.COMPLETED","lastModifiedDate":"2022-04-03"},{"lineNumber":117,"author":{"gitId":"JonathanHoshi"},"content":"                + \"; Rating: \" + new Rating(5) + \"; Comment: \"","lastModifiedDate":"2022-04-03"},{"lineNumber":118,"author":{"gitId":"JonathanHoshi"},"content":"                + new Comment(\"bad\") + \"; Tags: \" + new Tag(\"movie\");","lastModifiedDate":"2022-04-03"},{"lineNumber":119,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":120,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(expectedString, ALICE_IN_WONDERLAND.toString());","lastModifiedDate":"2022-04-03"},{"lineNumber":121,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":122,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"aweijun":72,"Ardentsoul":11,"JonathanHoshi":39}},{"path":"src/test/java/seedu/trackermon/model/show/UniqueShowListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.show;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_STATUS_WATCHING;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_MOVIE;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_SERIES;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.HANCOCK;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.testutil.TypicalShows.WEATHERING_WITH_YOU;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.exceptions.DuplicatedShowException;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.exceptions.ShowNotFoundException;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.testutil.ShowBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"public class UniqueShowListTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"    private final UniqueShowList uniqueShowList \u003d new UniqueShowList();","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"    public void contains_nullShow_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueShowList.contains(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"    public void contains_showNotInList_returnsFalse() {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"        assertFalse(uniqueShowList.contains(HANCOCK));","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"    public void contains_showInList_returnsTrue() {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.add(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"        assertTrue(uniqueShowList.contains(HANCOCK));","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"    public void contains_showWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.add(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"        Show editedMe \u003d new ShowBuilder(HANCOCK).withTags(VALID_TAG_MOVIE)","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"                .build();","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"        assertTrue(uniqueShowList.contains(editedMe));","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"    public void add_nullShow_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueShowList.add(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"    public void add_duplicateShow_throwsDuplicateShowException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.add(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"        assertThrows(DuplicatedShowException.class, () -\u003e uniqueShowList.add(HANCOCK));","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"    public void setShow_nullTargetShow_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueShowList.setShow(null, HANCOCK));","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"    public void setShow_nullEditedShow_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueShowList.setShow(HANCOCK, null));","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"    public void setShow_targetShowNotInList_throwsShowNotFoundException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"Ardentsoul"},"content":"        assertThrows(ShowNotFoundException.class, () -\u003e uniqueShowList.setShow(HANCOCK, HANCOCK));","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"    public void setShow_editedShowIsSameShow_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.add(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.setShow(HANCOCK, HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"        UniqueShowList expectedUniqueShowList \u003d new UniqueShowList();","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"        expectedUniqueShowList.add(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"        assertEquals(expectedUniqueShowList, uniqueShowList);","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"    public void setShow_editedShowHasSameIdentity_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.add(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"Ardentsoul"},"content":"        Show editedMe \u003d new ShowBuilder(HANCOCK).withStatus(VALID_STATUS_WATCHING).withTags(VALID_TAG_SERIES)","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"                .build();","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.setShow(HANCOCK, editedMe);","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"        UniqueShowList expectedUniqueShowList \u003d new UniqueShowList();","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"        expectedUniqueShowList.add(editedMe);","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"        assertEquals(expectedUniqueShowList, uniqueShowList);","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"    public void setShow_editedShowHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.add(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.setShow(HANCOCK, WEATHERING_WITH_YOU);","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"aweijun"},"content":"        UniqueShowList expectedUniqueShowList \u003d new UniqueShowList();","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"Ardentsoul"},"content":"        expectedUniqueShowList.add(WEATHERING_WITH_YOU);","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"aweijun"},"content":"        assertEquals(expectedUniqueShowList, uniqueShowList);","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"aweijun"},"content":"    public void setShow_editedShowHasNonUniqueIdentity_throwsDuplicateShowException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.add(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.add(WEATHERING_WITH_YOU);","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"Ardentsoul"},"content":"        assertThrows(DuplicatedShowException.class, () -\u003e uniqueShowList.setShow(HANCOCK, WEATHERING_WITH_YOU));","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"aweijun"},"content":"    public void remove_nullShow_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"aweijun"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueShowList.remove(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"aweijun"},"content":"    public void remove_showDoesNotExist_throwsShowNotFoundException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"Ardentsoul"},"content":"        assertThrows(ShowNotFoundException.class, () -\u003e uniqueShowList.remove(HANCOCK));","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"aweijun"},"content":"    public void remove_existingShow_removesShow() {","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.add(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.remove(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"aweijun"},"content":"        UniqueShowList expectedUniqueShowList \u003d new UniqueShowList();","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"aweijun"},"content":"        assertEquals(expectedUniqueShowList, uniqueShowList);","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"aweijun"},"content":"    public void setShows_nullUniqueShowList_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"aweijun"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueShowList.setShows((UniqueShowList) null));","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"aweijun"},"content":"    public void setShows_uniqueShowList_replacesOwnListWithProvidedUniqueShowList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.add(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"aweijun"},"content":"        UniqueShowList expectedUniqueShowList \u003d new UniqueShowList();","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"Ardentsoul"},"content":"        expectedUniqueShowList.add(WEATHERING_WITH_YOU);","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"aweijun"},"content":"        uniqueShowList.setShows(expectedUniqueShowList);","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"aweijun"},"content":"        assertEquals(expectedUniqueShowList, uniqueShowList);","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"aweijun"},"content":"    public void setShows_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"aweijun"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueShowList.setShows((List\u003cShow\u003e) null));","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"aweijun"},"content":"    public void setShows_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"Ardentsoul"},"content":"        uniqueShowList.add(HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"Ardentsoul"},"content":"        List\u003cShow\u003e showList \u003d Collections.singletonList(WEATHERING_WITH_YOU);","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"aweijun"},"content":"        uniqueShowList.setShows(showList);","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"aweijun"},"content":"        UniqueShowList expectedUniqueShowList \u003d new UniqueShowList();","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"Ardentsoul"},"content":"        expectedUniqueShowList.add(WEATHERING_WITH_YOU);","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"aweijun"},"content":"        assertEquals(expectedUniqueShowList, uniqueShowList);","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"aweijun"},"content":"    public void setShows_listWithDuplicateShows_throwsDuplicateShowException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"Ardentsoul"},"content":"        List\u003cShow\u003e listWithDuplicateShows \u003d Arrays.asList(HANCOCK, HANCOCK);","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"aweijun"},"content":"        assertThrows(DuplicatedShowException.class, () -\u003e uniqueShowList.setShows(listWithDuplicateShows));","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"aweijun"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"aweijun"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"aweijun"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"aweijun"},"content":"            -\u003e uniqueShowList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"aweijun":138,"Ardentsoul":33}},{"path":"src/test/java/seedu/trackermon/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.model.tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"aweijun":2,"-":24}},{"path":"src/test/java/seedu/trackermon/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.AddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//public class JsonAddressBookStorageTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//    @TempDir","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//    public Path testFolder;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//                : null;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"//        // Save in new file and read back","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"//        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"//        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"//        original.addPerson(HOON);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"//        original.removePerson(ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"//        // Save and read without specifying file path","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"//        original.addPerson(IDA);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"//        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"//    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"//     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"//    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"//        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"//            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"lowkaiwei98"},"content":"//                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"lowkaiwei98"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"lowkaiwei98"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"lowkaiwei98"},"content":"//        }","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"lowkaiwei98"},"content":"//    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":9,"lowkaiwei98":101}},{"path":"src/test/java/seedu/trackermon/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.commons.util.JsonUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.AddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.testutil.TypicalPersons;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//public class JsonSerializableAddressBookTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"//        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_SHOW,","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//                dataFromFile::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":6,"lowkaiwei98":40,"Ardentsoul":1}},{"path":"src/test/java/seedu/trackermon/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Optional;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//public class JsonUserPrefsStorageTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    @TempDir","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//    public Path testFolder;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//                : null;","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"//    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"//        return userPrefs;","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"//    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"//    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"//     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"//    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"//        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"//            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"//                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"lowkaiwei98"},"content":"//        }","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"lowkaiwei98"},"content":"//    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"lowkaiwei98"},"content":"//        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"lowkaiwei98"},"content":"//        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"lowkaiwei98"},"content":"//        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"lowkaiwei98"},"content":"//        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"lowkaiwei98"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"lowkaiwei98"},"content":"//        //Try saving when the file exists","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"lowkaiwei98"},"content":"//        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"lowkaiwei98"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"lowkaiwei98"},"content":"//        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":5,"lowkaiwei98":118}},{"path":"src/test/java/seedu/trackermon/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.commons.core.GuiSettings;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.AddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//public class StorageManagerTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//    @TempDir","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//    public Path testFolder;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    private StorageManager storageManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//    @BeforeEach","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//    public void setUp() {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//        return testFolder.resolve(fileName);","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//    public void prefsReadSave() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        /*","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//         */","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//        storageManager.saveUserPrefs(original);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(original, retrieved);","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//        /*","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//         */","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//        storageManager.saveAddressBook(original);","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//    public void getAddressBookFilePath() {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":6,"lowkaiwei98":62}},{"path":"src/test/java/seedu/trackermon/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.AddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"///**","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"// * A utility class to help with building Addressbook objects.","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"// * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"// *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"// */","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//public class AddressBookBuilder {","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//    private AddressBook addressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//    public AddressBookBuilder() {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//        addressBook \u003d new AddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//        this.addressBook \u003d addressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        addressBook.addPerson(person);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//    public AddressBook build() {","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//        return addressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":3,"lowkaiwei98":31}},{"path":"src/test/java/seedu/trackermon/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"aweijun":1,"-":33}},{"path":"src/test/java/seedu/trackermon/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Set;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.stream.Stream;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Address;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"///**","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"// * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"// */","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//public class EditPersonDescriptorBuilder {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//    private EditPersonDescriptor descriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.setName(person.getName());","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.setTags(person.getTags());","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"//    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"//        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"//     * that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"//    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"//        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.setTags(tagSet);","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"//        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"//    public EditPersonDescriptor build() {","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"//        return descriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":8,"lowkaiwei98":79}},{"path":"src/test/java/seedu/trackermon/testutil/EditShowDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.EditCommand.EditShowDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Comment;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Rating;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Status;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":" * A utility class to help with building EditShowDescriptor objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"public class EditShowDescriptorBuilder {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"    private EditShowDescriptor descriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"    public EditShowDescriptorBuilder() {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor \u003d new EditShowDescriptor();","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"    public EditShowDescriptorBuilder(EditShowDescriptor descriptor) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"        this.descriptor \u003d new EditShowDescriptor(descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns an {@code EditShowDescriptor} with fields containing {@code show}\u0027s details","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"    public EditShowDescriptorBuilder(Show show) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor \u003d new EditShowDescriptor();","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor.setName(show.getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor.setStatus(show.getStatus());","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor.setTags(show.getTags());","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"        descriptor.setComment(show.getComment());","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"        descriptor.setRating(show.getRating());","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"     * Sets the {@code Name} of the {@code EditShowDescriptor} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"    public EditShowDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"     * Sets the {@code Status} of the {@code EditShowDescriptor} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"    public EditShowDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor.setStatus(Status.getStatus(status));","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditShowDescriptor}","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"     * that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"    public EditShowDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"     * Parses the {@code comment} into a {@code Comment} and set it to the {@code EditShowDescriptor}","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"     * that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"    public EditShowDescriptorBuilder withComment(String comment) {","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"        descriptor.setComment(new Comment(comment));","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"     * Parses the {@code rating} into a {@code Rating} and set it to the {@code EditShowDescriptor}","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"     * that we are building.","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"    public EditShowDescriptorBuilder withRating(String rating) {","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"        descriptor.setRating(new Rating(rating));","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"    public EditShowDescriptor build() {","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"        return descriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"aweijun":22,"lowkaiwei98":69}},{"path":"src/test/java/seedu/trackermon/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.HashSet;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Set;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Address;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"///**","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"// * A utility class to help with building Person objects.","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"// */","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//public class PersonBuilder {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//    private Name name;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//    private Phone phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//    private Email email;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//    private Address address;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//    public PersonBuilder() {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//        name \u003d personToCopy.getName();","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//        email \u003d personToCopy.getEmail();","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//        address \u003d personToCopy.getAddress();","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//    public PersonBuilder withName(String name) {","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"//     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"//    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"//        this.address \u003d new Address(address);","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"//        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"//     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"//    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"//        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"//        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"//     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"//    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"//        this.email \u003d new Email(email);","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"//        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"//    public Person build() {","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"//        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":8,"lowkaiwei98":88}},{"path":"src/test/java/seedu/trackermon/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"//package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"//import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Set;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"//import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"///**","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"// * A utility class for Person.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"// */","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//public class PersonUtil {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"//     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"//    public static String getAddCommand(Person person) {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//    public static String getPersonDetails(Person person) {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//        person.getTags().stream().forEach(","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//        );","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//        return sb.toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//            if (tags.isEmpty()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//            } else {","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//            }","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//        }","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//        return sb.toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aweijun":9,"lowkaiwei98":52}},{"path":"src/test/java/seedu/trackermon/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aweijun":1,"-":71}},{"path":"src/test/java/seedu/trackermon/testutil/ShowBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Comment;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Rating;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Status;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"public class ShowBuilder {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"    public static final String DEFAULT_NAME \u003d \"Track Me\";","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"    public static final String DEFAULT_STATUS \u003d \"completed\";","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    public static final String DEFAULT_TAG \u003d \"Anime\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"    public static final String DEFAULT_COMMENT \u003d \"HELP\";","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"    public static final String DEFAULT_RATING \u003d \"1\";","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"    private Name name;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"    private Status status;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"    private Comment comment;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"    private Rating rating;","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"     * Creates a {@code ShowBuilder} with the default details.","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"    public ShowBuilder() {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"        status \u003d Status.getStatus(DEFAULT_STATUS);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"        comment \u003d new Comment(DEFAULT_COMMENT);","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"        rating \u003d new Rating(DEFAULT_RATING);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"     * Initializes the ShowBuilder with the data of {@code showToCopy}.","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"    public ShowBuilder(Show showToCopy) {","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"        name \u003d showToCopy.getName();","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        status \u003d showToCopy.getStatus();","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"        tags \u003d new HashSet\u003c\u003e(showToCopy.getTags());","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"        comment \u003d showToCopy.getComment();","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"        rating \u003d showToCopy.getRating();","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"     * Sets the {@code Name} of the {@code Show} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"    public ShowBuilder withName(String name) {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"     * Sets the {@code status} of the {@code Show} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"    public ShowBuilder withStatus(String status) {","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"        this.status \u003d Status.getStatus(status);","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"     * Sets the {@code comment} of the {@code Show} that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"    public ShowBuilder withComment(String comment) {","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"        this.comment \u003d new Comment(comment);","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"     * Sets the {@code comment} of the {@code Show} that we are building to empty.","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"    public ShowBuilder withComment() {","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"        this.comment \u003d new Comment(\"\");","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"     * Sets the {@code comment} of the {@code Show} that we are building.","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"    public ShowBuilder withRating(String rating) {","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"        this.rating \u003d new Rating(rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"     * Sets the {@code comment} of the {@code Show} that we are building to empty.","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"    public ShowBuilder withRating() {","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"        this.rating \u003d new Rating(\"0\");","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"aweijun"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"aweijun"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Show} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"aweijun"},"content":"    public ShowBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"aweijun"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"aweijun"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"aweijun"},"content":"    public Show build() {","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"aweijun"},"content":"        return new Show(name, status, tags, comment, rating);","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"aweijun":109}},{"path":"src/test/java/seedu/trackermon/testutil/ShowUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.trackermon.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.AddCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.logic.commands.EditCommand.EditShowDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.tag.Tag;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":" * A utility class for show.","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"public class ShowUtil {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns an add command string for adding the {@code show}.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"    public static String getAddCommand(Show show) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getShowDetails(show);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the part of command string for the given {@code show}\u0027s details.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"    public static String getShowDetails(Show show) {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"        sb.append(PREFIX_NAME + show.getName().fullName + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"        sb.append(PREFIX_COMMENT + show.getComment().comment + \" \");","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"        sb.append(PREFIX_STATUS + show.getStatus().name() + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"        sb.append(PREFIX_RATING + show.getRating().toString() + \" \");","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"        show.getTags().stream().forEach(","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"        );","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the part of command string for the given {@code EditShowDescriptor}\u0027s details.","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"    public static String getEditShowDescriptorDetails(EditShowDescriptor descriptor) {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"        descriptor.getStatus().ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.name()).append(\" \"));","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        descriptor.getComment().ifPresent(status -\u003e sb.append(PREFIX_COMMENT).append(status.comment).append(\" \"));","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"        descriptor.getRating().ifPresent(status -\u003e sb.append(PREFIX_RATING)","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"                .append(status.toString()).append(\" \"));","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"            } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"aweijun":9,"lowkaiwei98":59}},{"path":"src/test/java/seedu/trackermon/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the middle index of the show in the {@code model}\u0027s show list.","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"        return Index.fromOneBased(model.getFilteredShowList().size() / 2);","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the last index of the show in the {@code model}\u0027s show list.","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"        return Index.fromOneBased(model.getFilteredShowList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the show in the {@code model}\u0027s show list at {@code index}.","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"    public static Show getShow(Model model, Index index) {","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"        return model.getFilteredShowList().get(index.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"lowkaiwei98":11,"-":44}},{"path":"src/test/java/seedu/trackermon/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"    public static final Index INDEX_FIRST_SHOW \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"    public static final Index INDEX_SECOND_SHOW \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"    public static final Index INDEX_THIRD_SHOW \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"aweijun":2,"-":7,"lowkaiwei98":3}},{"path":"src/test/java/seedu/trackermon/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"///**","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"// * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"// */","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"//public class TypicalPersons {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"//            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"//            .withPhone(\"94351253\")","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"//            .withTags(\"friends\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"//            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"//            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"//            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"//            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"//            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"//            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"//            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"//            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"//    // Manually added","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"//            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"//            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"//    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"//            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"//            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"//            .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"//    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"//    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"//    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"//     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"//     */","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"//    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"//        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"//        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"//            ab.addPerson(person);","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"//        }","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"//        return ab;","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"//","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"//    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"//        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"//    }","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"//}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"lowkaiwei98":76}},{"path":"src/test/java/seedu/trackermon/testutil/TypicalShows.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_COMMENT_BAD;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_COMMENT_GOOD;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_HANCOCK;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_NAME_WEATHERING_WITH_YOU;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_STATUS_COMPLETED;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_STATUS_WATCHING;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_MOVIE;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.logic.commands.CommandTestUtil.VALID_TAG_SERIES;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.ShowList;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.model.show.Show;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"public class TypicalShows {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"    public static final Show ALICE_IN_WONDERLAND \u003d new ShowBuilder().withName(\"Alice in WonderLand\")","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"            .withStatus(\"completed\").withTags(\"movie\").withComment(\"bad\").withRating(\"5\").build();","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"    public static final Show GONE \u003d new ShowBuilder().withName(\"gone\")","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"            .withStatus(\"watching\").withTags().withComment(\"bad\").withRating().build();","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    public static final Show FRIENDS \u003d new ShowBuilder().withName(\"friends\")","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"            .withStatus(\"watching\").withTags(\"Horror\", \"friends\").withComment(\"good\").withRating().build();","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    public static final Show HIMYM \u003d new ShowBuilder().withName(\"HIMYM\")","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"            .withStatus(\"watching\").withTags(\"Horror\", \"friends\").withComment(\"good\").withRating().build();","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"    // Manually added - Show\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    public static final Show WEATHERING_WITH_YOU \u003d new ShowBuilder().withName(VALID_NAME_WEATHERING_WITH_YOU)","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"            .withStatus(VALID_STATUS_COMPLETED).withTags(VALID_TAG_MOVIE).withComment(VALID_COMMENT_BAD).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    public static final Show HANCOCK \u003d new ShowBuilder().withName(VALID_NAME_HANCOCK).withStatus(VALID_STATUS_WATCHING)","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"            .withTags(VALID_TAG_MOVIE, VALID_TAG_SERIES).withComment(VALID_COMMENT_GOOD).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"    private TypicalShows() {} // prevents instantiation","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"     * Returns an {@code ShowList} with all the typical shows.","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"    public static ShowList getTypicalShowList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"        ShowList ab \u003d new ShowList();","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        for (Show show : getTypicalShows()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"            ab.addShow(show);","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"        return ab;","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"     * Returns an {@code List} with all the typical shows.","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"    public static List\u003cShow\u003e getTypicalShows() {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_IN_WONDERLAND, GONE,","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"                FRIENDS, HIMYM, HANCOCK));","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"aweijun":47,"Ardentsoul":10}},{"path":"src/test/java/seedu/trackermon/ui/CommandBuilderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanHoshi"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-04-03"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-03"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-03"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-03"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"class CommandBuilderTest {","lastModifiedDate":"2022-04-03"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"    private CommandBuilder commandBuilder \u003d new CommandBuilder(\"Delete\", \"delete INDEX\");","lastModifiedDate":"2022-04-03"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"    void getCommandTitle() {","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(\"Delete\", commandBuilder.getCommandTitle());","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"    void getCommandInput() {","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"        assertEquals(\"delete INDEX\", commandBuilder.getCommandInput());","lastModifiedDate":"2022-04-03"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":24,"author":{"gitId":"JonathanHoshi"},"content":"    void commandTitleProperty() {","lastModifiedDate":"2022-04-03"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"        assertTrue(commandBuilder.commandTitleProperty().get().equals(\"Delete\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"    void commandInputProperty() {","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"        assertTrue(commandBuilder.commandInputProperty().get().equals(\"delete INDEX\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-04-03"}],"authorContributionMap":{"JonathanHoshi":32}},{"path":"src/test/java/seedu/trackermon/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"aweijun":1,"-":34}},{"path":"src/test/java/seedu/trackermon/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.trackermon.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import static seedu.trackermon.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.trackermon.MainApp;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"aweijun":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"\u003c?import seedu.trackermon.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"aweijun":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"\u003cfx:root type\u003d\"seedu.trackermon.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"aweijun":1,"-":5}}]
