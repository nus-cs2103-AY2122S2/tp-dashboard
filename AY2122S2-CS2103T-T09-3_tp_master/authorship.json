[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T09-3/tp/actions)","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"* Trackermon is a **desktop app for managing shows, optimized for use via a Command Line Interface**.\u003cbr\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"  * as a tool to keep track of shows a user is currently watching","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"  * as a tool to rate and review shows a user has finished watching","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"  ","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"* It is named `Trackermon` because it was created with a mascot in mind to help track the user\u0027s shows.","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"* For the detailed documentation of this project, see the [Trackermon Product Website](https://AY2122S2-CS2103T-T09-3.github.io/tp/).","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"arcornior":9,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"### Jonathan Yeo","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"\u003cimg src\u003d\"images/jonathanhoshi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"50px\"\u003e](http://github.com/jonathanhoshi) \u0026nbsp; \u0026nbsp; \u0026nbsp;","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/portfolio-icon.png\" width\u003d\"50px\"\u003e](team/jonathanhoshi.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"|   Role    | Responsibilities   |","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"|:---------:|:-------------------|","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"| Developer | Team Lead \u003cbr/\u003e UI |","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"### Ang Wei Jun","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/aweijun.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"50px\"\u003e](https://github.com/aweijun) \u0026nbsp; \u0026nbsp; \u0026nbsp;","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/portfolio-icon.png\" width\u003d\"50px\"\u003e](team/aweijun.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"|   Role    | Responsibilities |","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"|:---------:|:-----------------|","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"| Developer | Integration      |","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"### Low Kaiwei","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/lowkaiwei98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"50px\"\u003e](http://github.com/lowkaiwei98) \u0026nbsp; \u0026nbsp; \u0026nbsp;","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/portfolio-icon.png\" width\u003d\"50px\"\u003e](team/lowkaiwei98.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"|   Role    | Responsibilities |","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"|:---------:|:-----------------|","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"| Developer | Code Quality     |","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"### Lim Shao Cong","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"\u003cimg src\u003d\"images/arcornior.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"50px\"\u003e](http://github.com/arcornior) \u0026nbsp; \u0026nbsp; \u0026nbsp;","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/portfolio-icon.png\" width\u003d\"50px\"\u003e](team/arcornior.md)","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"|   Role    | Responsibilities |","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"|:---------:|:-----------------|","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"| Developer | Documentation    |","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"### Zachary Chan","lastModifiedDate":"2022-02-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"\u003cimg src\u003d\"images/ardentsoul.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"50px\"\u003e](https://github.com/Ardentsoul) \u0026nbsp; \u0026nbsp; \u0026nbsp;","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"[\u003cimg src\u003d\"images/portfolio-icon.png\" width\u003d\"50px\"\u003e](team/ardentsoul.md)","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"|   Role    | Responsibilities               |","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"|:---------:|:-------------------------------|","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"| Developer | Quality Assurance              |","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"arcornior":2,"-":30,"lowkaiwei98":1,"Ardentsoul":30,"JonathanHoshi":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"  {:toc}","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"aweijun"},"content":"* wants to keep track of their shows","lastModifiedDate":"2022-02-26"},{"lineNumber":261,"author":{"gitId":"aweijun"},"content":"* prefer desktop apps over other interfaces","lastModifiedDate":"2022-02-26"},{"lineNumber":262,"author":{"gitId":"aweijun"},"content":"* can type fast and prefers typing to mouse interactions.","lastModifiedDate":"2022-02-26"},{"lineNumber":263,"author":{"gitId":"aweijun"},"content":"* wants to be able to maintain a local copy of their list of shows","lastModifiedDate":"2022-02-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"aweijun"},"content":"**Value proposition**:","lastModifiedDate":"2022-02-26"},{"lineNumber":266,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":267,"author":{"gitId":"aweijun"},"content":"* Helps users to keep track of all their shows in a single application.","lastModifiedDate":"2022-02-26"},{"lineNumber":268,"author":{"gitId":"aweijun"},"content":"* No need to create an account unlike traditional web based services.","lastModifiedDate":"2022-02-26"},{"lineNumber":269,"author":{"gitId":"aweijun"},"content":"* Able to keep a local copy of their list of shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":270,"author":{"gitId":"aweijun"},"content":"* Clean and minimal user interface.","lastModifiedDate":"2022-02-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"aweijun"},"content":"| `* * *`  | user                                       | add new shows                  | add shows into the list                                                |","lastModifiedDate":"2022-02-26"},{"lineNumber":280,"author":{"gitId":"aweijun"},"content":"| `* * *`  | user                                       | delete shows from the list     | delete shows from the list                                             |","lastModifiedDate":"2022-02-26"},{"lineNumber":281,"author":{"gitId":"aweijun"},"content":"| `* * *`  | user                                       | change the status of the show  | mark shows as watched, watching, etc|","lastModifiedDate":"2022-02-26"},{"lineNumber":282,"author":{"gitId":"aweijun"},"content":"| `* * *`  | user                                       | list out all of my shows       | see the details of all  my show in the list                                         |","lastModifiedDate":"2022-02-26"},{"lineNumber":283,"author":{"gitId":"aweijun"},"content":"| `* *`    | new user                                   | see usage instructions         | refer to instructions when user forget how to use the App                 |","lastModifiedDate":"2022-02-26"},{"lineNumber":284,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"Ardentsoul"},"content":"(For all use cases below, the **System** is `Trackermon` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-26"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":293,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":294,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC01 - Add a show**","lastModifiedDate":"2022-02-26"},{"lineNumber":295,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":296,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":298,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: Show will be added into Trackermon only if the user input matches the command format.**","lastModifiedDate":"2022-03-03"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"Ardentsoul"},"content":"1.  User requests to list shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":303,"author":{"gitId":"Ardentsoul"},"content":"2.  Trackermon shows a list of shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":304,"author":{"gitId":"Ardentsoul"},"content":"3.  User adds a show in Trackermon.","lastModifiedDate":"2022-02-26"},{"lineNumber":305,"author":{"gitId":"Ardentsoul"},"content":"4.  Trackermon stores the show in its storage.","lastModifiedDate":"2022-02-26"},{"lineNumber":306,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":307,"author":{"gitId":"Ardentsoul"},"content":"    Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":308,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":309,"author":{"gitId":"Ardentsoul"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":310,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":311,"author":{"gitId":"Ardentsoul"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-26"},{"lineNumber":312,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":313,"author":{"gitId":"Ardentsoul"},"content":"  Use case resumes at step 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":314,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":315,"author":{"gitId":"Ardentsoul"},"content":"* 3a. User adds a duplicate show.","lastModifiedDate":"2022-02-26"},{"lineNumber":316,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":317,"author":{"gitId":"Ardentsoul"},"content":"    * 3a1. Trackermon shows an error message to user, indicating that there is a duplicate show in the list and requests the user to either delete the show in the list or add another show.","lastModifiedDate":"2022-02-26"},{"lineNumber":318,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":319,"author":{"gitId":"Ardentsoul"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":320,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":321,"author":{"gitId":"Ardentsoul"},"content":"* 3b. User enters command with the wrong syntax.","lastModifiedDate":"2022-03-03"},{"lineNumber":322,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":323,"author":{"gitId":"Ardentsoul"},"content":"    * 3b1. Trackermon shows an error message to user, indicating the format for adding shows is incorrect, and attaches the correct syntax format.","lastModifiedDate":"2022-02-26"},{"lineNumber":324,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":325,"author":{"gitId":"Ardentsoul"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":326,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":327,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":328,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":329,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC02 - Delete a show**","lastModifiedDate":"2022-02-26"},{"lineNumber":330,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":331,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":332,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":333,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: Show will be deleted from Trackermon only if the user input matches the command format.**","lastModifiedDate":"2022-03-03"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"Ardentsoul"},"content":"1.  User requests to list shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":338,"author":{"gitId":"Ardentsoul"},"content":"2.  Trackermon shows a list of shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":339,"author":{"gitId":"Ardentsoul"},"content":"3.  User requests to delete a specific show in the list.","lastModifiedDate":"2022-02-26"},{"lineNumber":340,"author":{"gitId":"Ardentsoul"},"content":"4.  Trackermon deletes the show.","lastModifiedDate":"2022-02-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"Ardentsoul"},"content":"    * 3a1. Trackermon shows an error message,  indicating the format for deleting shows is incorrect, and attaches the correct syntax format.","lastModifiedDate":"2022-02-26"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"Ardentsoul"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":357,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":358,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC03 - List a show**","lastModifiedDate":"2022-02-26"},{"lineNumber":359,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":360,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":361,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":362,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: A list of shows will be displayed for the user.**","lastModifiedDate":"2022-02-26"},{"lineNumber":363,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":364,"author":{"gitId":"Ardentsoul"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":365,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":366,"author":{"gitId":"Ardentsoul"},"content":"1.  User requests to list shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":367,"author":{"gitId":"Ardentsoul"},"content":"2.  Trackermon shows a list of shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":368,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":369,"author":{"gitId":"Ardentsoul"},"content":"    Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":370,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":371,"author":{"gitId":"Ardentsoul"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":372,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":373,"author":{"gitId":"Ardentsoul"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-26"},{"lineNumber":374,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":375,"author":{"gitId":"Ardentsoul"},"content":"  Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":376,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":377,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":378,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":379,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC04 - Mark a show**","lastModifiedDate":"2022-02-26"},{"lineNumber":380,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":381,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":382,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":383,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: Show will be marked in Trackermon only if the user input matches the command format.**","lastModifiedDate":"2022-03-03"},{"lineNumber":384,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":385,"author":{"gitId":"Ardentsoul"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":386,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":387,"author":{"gitId":"Ardentsoul"},"content":"1.  User requests to list shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":388,"author":{"gitId":"Ardentsoul"},"content":"2.  Trackermon shows a list of shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":389,"author":{"gitId":"Ardentsoul"},"content":"3.  User requests to mark a specific show in the list.","lastModifiedDate":"2022-02-26"},{"lineNumber":390,"author":{"gitId":"Ardentsoul"},"content":"4.  Trackermon marks the show.","lastModifiedDate":"2022-02-26"},{"lineNumber":391,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":392,"author":{"gitId":"Ardentsoul"},"content":"    Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":393,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":394,"author":{"gitId":"Ardentsoul"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":395,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":396,"author":{"gitId":"Ardentsoul"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-26"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":398,"author":{"gitId":"Ardentsoul"},"content":"  Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":399,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":400,"author":{"gitId":"Ardentsoul"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-02-26"},{"lineNumber":401,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":402,"author":{"gitId":"Ardentsoul"},"content":"    * 3a1. Trackermon shows an error message, indicating the format for marking shows is incorrect, and attaches the correct syntax format.","lastModifiedDate":"2022-02-26"},{"lineNumber":403,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":404,"author":{"gitId":"Ardentsoul"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":405,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":406,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":407,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":408,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC05 - Unmark a show**","lastModifiedDate":"2022-02-26"},{"lineNumber":409,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":410,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":411,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":412,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: Show will be unmarked in Trackermon only if the user input matches the command format.**","lastModifiedDate":"2022-03-03"},{"lineNumber":413,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":414,"author":{"gitId":"Ardentsoul"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":415,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":416,"author":{"gitId":"Ardentsoul"},"content":"1.  User requests to list shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":417,"author":{"gitId":"Ardentsoul"},"content":"2.  Trackermon shows a list of shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":418,"author":{"gitId":"Ardentsoul"},"content":"3.  User requests to unmark a specific show in the list since the show was not watched yet and marked on accident.","lastModifiedDate":"2022-02-26"},{"lineNumber":419,"author":{"gitId":"Ardentsoul"},"content":"4.  Trackermon unmarks the show.","lastModifiedDate":"2022-02-26"},{"lineNumber":420,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":421,"author":{"gitId":"Ardentsoul"},"content":"    Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":422,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":423,"author":{"gitId":"Ardentsoul"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":424,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":425,"author":{"gitId":"Ardentsoul"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-26"},{"lineNumber":426,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":427,"author":{"gitId":"Ardentsoul"},"content":"  Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":428,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":429,"author":{"gitId":"Ardentsoul"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-02-26"},{"lineNumber":430,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":431,"author":{"gitId":"Ardentsoul"},"content":"    * 3a1. Trackermon shows an error message, indicating the format for unmarking shows is incorrect, and attaches the correct syntax format.","lastModifiedDate":"2022-02-26"},{"lineNumber":432,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":433,"author":{"gitId":"Ardentsoul"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":434,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":435,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":436,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":437,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC06 - Tag a show** (coming in v1.3)","lastModifiedDate":"2022-03-03"},{"lineNumber":438,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":439,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":440,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":441,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: Show will be tagged in Trackermon only if the user input matches the command format.**","lastModifiedDate":"2022-03-03"},{"lineNumber":442,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":443,"author":{"gitId":"Ardentsoul"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":444,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":445,"author":{"gitId":"Ardentsoul"},"content":"1.  User requests to list shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":446,"author":{"gitId":"Ardentsoul"},"content":"2.  Trackermon shows a list of shows.","lastModifiedDate":"2022-02-26"},{"lineNumber":447,"author":{"gitId":"Ardentsoul"},"content":"3.  User requests to tag a specific show in the list.","lastModifiedDate":"2022-02-26"},{"lineNumber":448,"author":{"gitId":"Ardentsoul"},"content":"4.  Trackermon tags the show.","lastModifiedDate":"2022-02-26"},{"lineNumber":449,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":450,"author":{"gitId":"Ardentsoul"},"content":"    Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":451,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":452,"author":{"gitId":"Ardentsoul"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":453,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":454,"author":{"gitId":"Ardentsoul"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-26"},{"lineNumber":455,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":456,"author":{"gitId":"Ardentsoul"},"content":"  Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":457,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":458,"author":{"gitId":"Ardentsoul"},"content":"* 3a. User uses the command with the wrong syntax.","lastModifiedDate":"2022-03-03"},{"lineNumber":459,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":460,"author":{"gitId":"Ardentsoul"},"content":"    * 3a1. Trackermon shows an error message to user, indicating the format for adding shows is incorrect, and attaches the correct syntax format.","lastModifiedDate":"2022-02-26"},{"lineNumber":461,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":462,"author":{"gitId":"Ardentsoul"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":463,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":464,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":465,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":466,"author":{"gitId":"Ardentsoul"},"content":"**Use case: UC07 - Exiting Trackermon**","lastModifiedDate":"2022-02-26"},{"lineNumber":467,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":468,"author":{"gitId":"Ardentsoul"},"content":"**Preconditions: Trackermon application is started.**","lastModifiedDate":"2022-02-26"},{"lineNumber":469,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":470,"author":{"gitId":"Ardentsoul"},"content":"**Guarantees: Trackermon will exit and display an exit message for the user.**","lastModifiedDate":"2022-02-26"},{"lineNumber":471,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":472,"author":{"gitId":"Ardentsoul"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":473,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":474,"author":{"gitId":"Ardentsoul"},"content":"1. User enters the command in Trackermon.","lastModifiedDate":"2022-03-03"},{"lineNumber":475,"author":{"gitId":"Ardentsoul"},"content":"2. Trackermon saves all changes into the disk.","lastModifiedDate":"2022-02-26"},{"lineNumber":476,"author":{"gitId":"Ardentsoul"},"content":"3. Trackermon displays a message to tell the user that the app has successfully closed.","lastModifiedDate":"2022-02-26"},{"lineNumber":477,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":478,"author":{"gitId":"Ardentsoul"},"content":"   Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":479,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":480,"author":{"gitId":"Ardentsoul"},"content":"---  ","lastModifiedDate":"2022-02-26"},{"lineNumber":481,"author":{"gitId":"JonathanHoshi"},"content":"    ","lastModifiedDate":"2022-03-03"},{"lineNumber":482,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":485,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":486,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"lowkaiwei98"},"content":"2.  Should be able to hold up to 1000 shows without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-22"},{"lineNumber":490,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":494,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2022-02-28"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":496,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-02-28"},{"lineNumber":497,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2022-02-28"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":499,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":501,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2022-02-28"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":503,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2022-02-28"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":505,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2022-02-28"},{"lineNumber":506,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2022-02-28"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":508,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":510,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2022-02-28"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":512,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2022-02-28"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":514,"author":{"gitId":"lowkaiwei98"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2022-02-28"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":516,"author":{"gitId":"lowkaiwei98"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2022-02-28"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":518,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2022-02-28"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":520,"author":{"gitId":"lowkaiwei98"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2022-02-28"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":522,"author":{"gitId":"lowkaiwei98"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":523,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2022-02-28"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":525,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2022-02-28"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":527,"author":{"gitId":"lowkaiwei98"},"content":"### Deleting a show","lastModifiedDate":"2022-02-28"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":529,"author":{"gitId":"lowkaiwei98"},"content":"1. Deleting a show while all shows are being shown","lastModifiedDate":"2022-02-28"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":531,"author":{"gitId":"lowkaiwei98"},"content":"    1. Prerequisites: List all shows using the `list` command. Multiple persons in the list.","lastModifiedDate":"2022-02-28"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":533,"author":{"gitId":"lowkaiwei98"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":534,"author":{"gitId":"lowkaiwei98"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2022-02-28"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":536,"author":{"gitId":"lowkaiwei98"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":537,"author":{"gitId":"lowkaiwei98"},"content":"       Expected: No show is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-02-28"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":539,"author":{"gitId":"lowkaiwei98"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":540,"author":{"gitId":"lowkaiwei98"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-02-28"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":542,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2022-02-28"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":544,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2022-02-28"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":546,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2022-02-28"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":548,"author":{"gitId":"lowkaiwei98"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2022-02-28"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":550,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"aweijun":16,"-":346,"lowkaiwei98":16,"Ardentsoul":163,"JonathanHoshi":9}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"Trackermon is a **desktop app** for **tracking and managing shows**, **optimized for use via a","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"Command Line Interface (CLI)** while still having the **benefits of a Graphical User Interface (GUI)**.","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"The app allows the user to track and remember what shows they have watched or currently watching.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"They can easily look up the list of shows if they need to.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"1. Ensure you have `Java 11` or above installed in your Computer.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"2. Download the latest version of **Trackermon** [here](https://github.com/AY2122S2-CS2103T-T09-3/tp/releases).","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"3. Move the file to the folder you want to use as the _home folder_ for **Trackermon**.","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"4. Double-click the file to start the app.","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"5. Start communicating with Trackermon using the command box.","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"* **`list`** : Lists all shows.","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"* **`add`**`n/ReZero s/watching t/Anime` : Adds a show named `ReZero` with the tag `Anime` to Trackermon as watching.","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"* **`delete`**`3` : Deletes the 3rd show shown in the current list.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"* Words in `\u003cUPPER_CASE\u003e` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"  e.g. in `add n/\u003cNAME\u003e`, `\u003cNAME\u003e` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"  e.g `n/\u003cNAME\u003e [s/\u003cSTATUS\u003e] [t/\u003cTAG\u003e]` can be used as `n/ReZero t/Anime` or as `n/ReZero`.","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"  e.g. `[t/\u003cTAG\u003e]…​` can be used as ` ` (i.e. 0 times), `t/Anime`, `t/Sitcom t/Kdrama` etc.","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"  e.g. if the command specifies `n/\u003cNAME\u003e [t/\u003cTAG\u003e]`, `[t/\u003cTAG\u003e] n/\u003cNAME\u003e` is also acceptable.","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"  e.g. if you specify `n/You n/Me`, only `n/Me` will be taken.","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `exit` and `list` ) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"  e.g. if the command specifies `exit 123`, it will be interpreted as `exit`.","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"### Adding a show: `add`","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"Adds a new show to trackermon. Note that the name of the show can only contain alphanumeric characters.","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"Format: `add n/\u003cNAME\u003e [s/\u003cSTATUS\u003e] [t/\u003cTAG\u003e]…​`","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Ardentsoul"},"content":"* `add n/All of us are dead t/Kdrama`","lastModifiedDate":"2022-02-25"},{"lineNumber":78,"author":{"gitId":"Ardentsoul"},"content":"* `add n/All of us are dead s/completed t/Kdrama`","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"Ardentsoul"},"content":"* `add n/All of us are dead`","lastModifiedDate":"2022-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"arcornior"},"content":"### Listing all shows : `list`","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"arcornior"},"content":"Shows a list of all shows in Trackermon.","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"Format: `delete \u003cINDEX\u003e`","lastModifiedDate":"2022-02-22"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"* Deletes the show at the specified `\u003cINDEX\u003e`.","lastModifiedDate":"2022-02-22"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"* The index refers to the index number shown in the displayed show list. (not overall)","lastModifiedDate":"2022-02-22"},{"lineNumber":94,"author":{"gitId":"lowkaiwei98"},"content":"* The index **must be a positive integer** 1,2,3,..","lastModifiedDate":"2022-02-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"lowkaiwei98"},"content":"* `list` followed by `delete 2` removes 2nd show in Trackermon","lastModifiedDate":"2022-02-22"},{"lineNumber":98,"author":{"gitId":"lowkaiwei98"},"content":"* `find ghibli` followed by `delete 1` removes 1st show in results of `find` command","lastModifiedDate":"2022-02-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Exits the program. ","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"aweijun"},"content":"* Displays error message and exits the program after 3 seconds.","lastModifiedDate":"2022-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Saving the data ","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"aweijun"},"content":"Trackermon data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"aweijun"},"content":"### Editing the data file `[coming in v1.3]`","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":115,"author":{"gitId":"aweijun"},"content":"Trackermon data are saved as a JSON file `[JAR file location]/data/trackermon.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":118,"author":{"gitId":"aweijun"},"content":"If your changes to the data file makes its format invalid, Trackermon will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":121,"author":{"gitId":"aweijun"},"content":"### Better Search `[coming in v1.3]`","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"JonathanHoshi"},"content":"_Details coming soon ..._","lastModifiedDate":"2022-02-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"aweijun"},"content":"**Add** | `add n/\u003cNAME\u003e [s/\u003cSTATUS\u003e] [t/\u003cTAG\u003e]…​` \u003cbr\u003e e.g., `n/ReZero s/watching t/Anime`","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"aweijun"},"content":"**Delete** | `delete \u003cINDEX\u003e`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"aweijun"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"arcornior":3,"aweijun":19,"-":96,"lowkaiwei98":6,"Ardentsoul":6,"JonathanHoshi":10}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"title: Trackermon","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T09-3/tp/actions)","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T09-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S2-CS2103T-T09-3/tp)","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"**Trackermon is a desktop application for to organise your shows.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"* If you are interested in using Trackermon, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"* If you are interested about developing Trackermon , the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"aweijun":6,"-":13}},{"path":"docs/team/arcornior.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"title: Lim Shao Cong\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"### Project: Trackermon","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"Trackermon is an app that helps the user to track and remember what shows they have watched or currently","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"watching. They can easily look up the list of shows if they need to.","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"* **New Feature**: _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"  * What it does:","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"  * Justification:","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"  * Highlights:","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"  * Credits: *{if any}*","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"  * _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"  * _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"  * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"    * _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"    * _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"  * PRs reviewed (with non-trivial review comments): _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"  * Contributed to forum discussions _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"  * Reported bugs and suggestions for other teams in the class _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"  * Some parts of the history feature I added was adopted by several other class mates _TBA_","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"* **Tools**:","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"arcornior":39}},{"path":"docs/team/ardentsoul.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"layout: page","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"title: Zachary\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"---","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"### Project: Trackermon","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"Trackermon - The app will help to allow the user to track and remember what shows they have watched. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"* **New Feature**: ~~Added the ability to undo/redo previous commands.~~","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"  * ~~What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.~~","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"  * ~~Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.~~","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"  * ~~Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.~~","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"  * ~~Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*~~","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"* **New Feature**: ~~Added a history command that allows the user to navigate to previous commands using up/down keys.~~","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"* **Project management**:","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"  * ~~Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub~~","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"  * ~~Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())~~","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"  * ~~Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())~~","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"  * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    * ~~Added documentation for the features `delete` and `find` [\\#72]().~~","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"    * ~~Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]().~~","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"    * Added documentation for the `add` feature.","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    * ~~Added implementation details of the `delete` feature.~~","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"    * Added use cases UC01-UC03.","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"* **Community**:","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"  * ~~PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]().~~","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"  * ~~Contributed to forum discussions (examples: [1](), [2](), [3](), [4]()).~~","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"  * ~~Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]()).~~","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"  * ~~Some parts of the history feature I added was adopted by several other class mates ([1](), [2]()).~~","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"* **Tools**:","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"  * ~~Integrated a third party library (Natty) to the project ([\\#42]()).~~","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"  * ~~Integrated a new Github plugin (CircleCI) to the team repo~~","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"* ~~_{you can add/remove categories in the list above}_~~","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"Ardentsoul":48}},{"path":"docs/team/aweijun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"title: aweijun\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"    * About Me:","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"        * Updated the AboutMe Page with personal information.","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"    * Readme:","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"        * Created a mock up of the final product using figma.","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"    * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"        * Updated the glossary ","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"aweijun":49}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"title: aweijun\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"aweijun":1,"-":45}},{"path":"docs/team/jonathanhoshi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JonathanHoshi"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"title: Jonathan Yeo\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"### Project: Trackermon","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"Trackermon is an app that helps the user to track and remember what shows they have watched or currently","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"watching. They can easily look up the list of shows if they need to.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"* **New Feature**: _TBA_","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"  * What it does: ","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"  * Justification: ","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"  * Highlights: ","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"  * Credits: *{if any}*","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"  ","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"  * _TBA_","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"JonathanHoshi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"  * _TBA_","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"  * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"    * Added basic information of Trackermon and Quick Start","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"    * _TBA_","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"  * PRs reviewed (with non-trivial review comments): _TBA_ \u003c!--[\\#12](), [\\#32](), [\\#19](), [\\#42]()--\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"JonathanHoshi":37}},{"path":"docs/team/lowkaiwei98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"title: Kaiwei\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"### Project: Trackermon","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"Trackermon - The app will help to allow the user to track and remember what shows they have watched. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"  to be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"  to be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"* **Project management**:","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"  to be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"  to be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"  to be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"* **Community**:","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"  to be added soon","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"* **Tools**:","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"  to be added soon","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"lowkaiwei98":31}},{"path":"src/main/java/seedu/address/commons/core/MessagesTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":" * Container for user visible messages.","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"public class MessagesTrackermon {","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_INVALID_SHOW_DISPLAYED_INDEX \u003d \"The show index provided is invalid\";","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_SHOWS_LISTED_OVERVIEW \u003d \"%1$d shows listed!\";","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Ardentsoul":13}},{"path":"src/main/java/seedu/address/logic/LogicManagerTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.CommandResultTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.CommandTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.parser.TrackermonParser;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.ModelTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.storage.StorageTrackermon;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"public class LogicManagerTrackermon implements LogicTrackermon {","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManagerTrackermon.class);","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"    private final ModelTrackermon model;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"    private final StorageTrackermon storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"    private final TrackermonParser parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"    public LogicManagerTrackermon(ModelTrackermon model, StorageTrackermon storage) {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"        this.model \u003d model;","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"        parser \u003d new TrackermonParser();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"    public CommandResultTrackermon execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"        CommandResultTrackermon commandResult;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"        CommandTrackermon command \u003d parser.parseCommand(commandText);","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"            storage.saveShowList(model.getShowList());","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"        return commandResult;","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"    public ReadOnlyShowList getShowList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"        return model.getShowList();","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"    public ObservableList\u003cShow\u003e getFilteredShowList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"        return model.getFilteredShowList();","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"    public Path getShowListFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"        return model.getShowListFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"lowkaiwei98":83}},{"path":"src/main/java/seedu/address/logic/LogicTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.CommandResultTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":" * API of the Logic component","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"public interface LogicTrackermon {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"    CommandResultTrackermon execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the ShowList.","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"     * @see seedu.address.model.ModelTrackermon#getShowList()","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"    ReadOnlyShowList getShowList();","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"    /** Returns an unmodifiable view of the filtered list of shows */","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"    ObservableList\u003cShow\u003e getFilteredShowList();","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the user prefs\u0027 show list file path.","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"    Path getShowListFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"lowkaiwei98":50}},{"path":"src/main/java/seedu/address/logic/commands/AddCommandTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.address.logic.parser.CliSyntaxTrackermon.PREFIX_NAME;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.address.logic.parser.CliSyntaxTrackermon.PREFIX_STATUS;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.address.logic.parser.CliSyntaxTrackermon.PREFIX_TAG;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.model.ModelTrackermon;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":" * Adds a show to Trackermon.","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"public class AddCommandTrackermon extends CommandTrackermon {","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a show to Trackermon. \"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_NAME + \"Boku no Hero \"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_STATUS + \"completed \"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_TAG + \"Anime \"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"            + PREFIX_TAG + \"Action\";","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New show added: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This show already exists in Trackermon\";","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"    private final Show toAdd;","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"     * Creates an AddCommand to add the specified {@code Show}","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"    public AddCommandTrackermon(Show show) {","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"        requireNonNull(show);","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"        toAdd \u003d show;","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"    public CommandResultTrackermon execute(ModelTrackermon model) throws CommandException {","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"        if (model.hasShow(toAdd)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"        model.addShow(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"        return new CommandResultTrackermon(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"                || (other instanceof AddCommandTrackermon // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"                \u0026\u0026 toAdd.equals(((AddCommandTrackermon) other).toAdd));","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Ardentsoul":62}},{"path":"src/main/java/seedu/address/logic/commands/CommandResultTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"public class CommandResultTrackermon {","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    private final boolean showHelp;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    /** The application should exit. */","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    private final boolean exit;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     * Constructs a {@code CommandResultTrackermon} with the specified fields.","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    public CommandResultTrackermon(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"     * Constructs a {@code CommandResultTrackermon} with the specified {@code feedbackToUser},","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"    public CommandResultTrackermon(String feedbackToUser) {","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"        return feedbackToUser;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"        return showHelp;","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"        return exit;","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"            return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"        if (!(other instanceof CommandResultTrackermon)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"            return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"        CommandResultTrackermon otherCommandResult \u003d (CommandResultTrackermon) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Ardentsoul":71}},{"path":"src/main/java/seedu/address/logic/commands/CommandTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.model.ModelTrackermon;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"public abstract class CommandTrackermon {","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"     * @param model {@code ModelTrackermon} which the command should operate on.","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    public abstract CommandResultTrackermon execute(ModelTrackermon model) throws CommandException;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Ardentsoul":20}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommandTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import java.util.List;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.commons.core.MessagesTrackermon;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.model.ModelTrackermon;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":" * Deletes a show identified using it\u0027s displayed index from Trackermon.","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"public class DeleteCommandTrackermon extends CommandTrackermon {","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"            + \": Deletes the show identified by the index number used in the displayed Trackermon.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_DELETE_SHOW_SUCCESS \u003d \"Deleted Show: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"    public DeleteCommandTrackermon(Index targetIndex) {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    public CommandResultTrackermon execute(ModelTrackermon model) throws CommandException {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"        List\u003cShow\u003e lastShownList \u003d model.getFilteredShowList();","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"            throw new CommandException(MessagesTrackermon.MESSAGE_INVALID_SHOW_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"        Show showToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"        model.deleteShow(showToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"        return new CommandResultTrackermon(String.format(MESSAGE_DELETE_SHOW_SUCCESS, showToDelete));","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"                || (other instanceof DeleteCommandTrackermon // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommandTrackermon) other).targetIndex)); // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Ardentsoul":53}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommandTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.model.ModelTrackermon;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":" * Terminates Trackermon.","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"public class ExitCommandTrackermon extends CommandTrackermon {","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Trackermon as requested ...\";","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    public CommandResultTrackermon execute(ModelTrackermon model) {","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"        return new CommandResultTrackermon(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Ardentsoul":19}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommandTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.model.ModelTrackermon;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"public class HelpCommandTrackermon extends CommandTrackermon {","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows Trackermon usage instructions.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    public CommandResultTrackermon execute(ModelTrackermon model) {","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"        return new CommandResultTrackermon(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Ardentsoul":21}},{"path":"src/main/java/seedu/address/logic/commands/ListCommandTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import static seedu.address.model.ModelTrackermon.PREDICATE_SHOW_ALL_SHOWS;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.model.ModelTrackermon;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":" * Lists all shows in Trackermon to the user.","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"public class ListCommandTrackermon extends CommandTrackermon {","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all shows\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    public CommandResultTrackermon execute(ModelTrackermon model) {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"        model.updateFilteredShowList(PREDICATE_SHOW_ALL_SHOWS);","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"        return new CommandResultTrackermon(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Ardentsoul":24}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import seedu.address.logic.commands.CommandTrackermon;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":" * Represents an error which occurs during execution of a {@link CommandTrackermon}.","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"Ardentsoul":3}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParserTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.address.commons.core.MessagesTrackermon.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.address.logic.parser.CliSyntaxTrackermon.PREFIX_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.address.logic.parser.CliSyntaxTrackermon.PREFIX_STATUS;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.address.logic.parser.CliSyntaxTrackermon.PREFIX_TAG;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.AddCommandTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.show.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.show.Status;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"public class AddCommandParserTrackermon implements ParserTrackermon\u003cAddCommandTrackermon\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"    public AddCommandTrackermon parse(String args) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_STATUS, PREFIX_TAG)","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommandTrackermon.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"        Name name \u003d ParserUtilTrackermon.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"        Status status \u003d ParserUtilTrackermon.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtilTrackermon.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"        Show show \u003d new Show(name, status, tagList);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"        return new AddCommandTrackermon(show);","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"lowkaiwei98":54}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntaxTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"public class CliSyntaxTrackermon {","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"    /* Prefix definitions */","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Ardentsoul":13}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParserTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.DeleteCommandTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"public class DeleteCommandParserTrackermon implements ParserTrackermon\u003cDeleteCommandTrackermon\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"    public DeleteCommandTrackermon parse(String args) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"            Index index \u003d ParserUtilTrackermon.parseIndex(args);","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"            return new DeleteCommandTrackermon(index);","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommandTrackermon.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"lowkaiwei98":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.CommandTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"public interface ParserTrackermon\u003cT extends CommandTrackermon\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"lowkaiwei98":17}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtilTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.show.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.show.Status;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":"public class ParserUtilTrackermon {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"     * trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses a {@code String status} into a {@code Status}.","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"        String trimmedStatus \u003d status.trim().toUpperCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"lowkaiwei98"},"content":"        return Status.valueOf(trimmedStatus);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"lowkaiwei98"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"lowkaiwei98"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"lowkaiwei98"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"lowkaiwei98"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"lowkaiwei98"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"lowkaiwei98"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"lowkaiwei98"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"lowkaiwei98"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"lowkaiwei98"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"lowkaiwei98"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"lowkaiwei98"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"lowkaiwei98"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"lowkaiwei98"},"content":"        return tagSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"lowkaiwei98":93}},{"path":"src/main/java/seedu/address/logic/parser/TrackermonParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkaiwei98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.address.commons.core.MessagesTrackermon.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"lowkaiwei98"},"content":"import static seedu.address.commons.core.MessagesTrackermon.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.AddCommandTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.CommandTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.DeleteCommandTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.ExitCommandTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.HelpCommandTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.commands.ListCommandTrackermon;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"lowkaiwei98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"lowkaiwei98"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"lowkaiwei98"},"content":" * Parses user input.","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"lowkaiwei98"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"lowkaiwei98"},"content":"public class TrackermonParser {","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"lowkaiwei98"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"lowkaiwei98"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"lowkaiwei98"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"lowkaiwei98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"    public CommandTrackermon parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"lowkaiwei98"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"lowkaiwei98"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"lowkaiwei98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"lowkaiwei98"},"content":"                    HelpCommandTrackermon.MESSAGE_USAGE));","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"lowkaiwei98"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"lowkaiwei98"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"lowkaiwei98"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"lowkaiwei98"},"content":"        case AddCommandTrackermon.COMMAND_WORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"lowkaiwei98"},"content":"            return new AddCommandParserTrackermon().parse(arguments);","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"lowkaiwei98"},"content":"        case DeleteCommandTrackermon.COMMAND_WORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"lowkaiwei98"},"content":"            return new DeleteCommandParserTrackermon().parse(arguments);","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"lowkaiwei98"},"content":"        case ListCommandTrackermon.COMMAND_WORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"lowkaiwei98"},"content":"            return new ListCommandTrackermon();","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"lowkaiwei98"},"content":"        case ExitCommandTrackermon.COMMAND_WORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"lowkaiwei98"},"content":"            return new ExitCommandTrackermon();","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"lowkaiwei98"},"content":"        default:","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"lowkaiwei98"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"lowkaiwei98"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"lowkaiwei98"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"lowkaiwei98"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"lowkaiwei98":62}},{"path":"src/main/java/seedu/address/model/ModelManagerTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"public class ModelManagerTrackermon implements ModelTrackermon {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"    private final ShowList showList;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"    private final UserPrefsTrackermon userPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"    private final FilteredList\u003cShow\u003e filteredShows;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"     * Initializes a ModelManager with the given showList and userPrefs.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"    public ModelManagerTrackermon(ReadOnlyShowList showList, ReadOnlyUserPrefsTrackermon userPrefs) {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(showList, userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"        logger.fine(\"Initializing with address book: \" + showList + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"        this.showList \u003d new ShowList(showList);","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"        this.userPrefs \u003d new UserPrefsTrackermon(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"        filteredShows \u003d new FilteredList\u003c\u003e(this.showList.getShowList());","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"    public ModelManagerTrackermon() {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"        this(new ShowList(), new UserPrefsTrackermon());","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"    public void setUserPrefs(ReadOnlyUserPrefsTrackermon userPrefs) {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"    public ReadOnlyUserPrefsTrackermon getUserPrefs() {","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"        return userPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"    //Done","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"    public Path getShowListFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"        return userPrefs.getShowListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"    public void setShowListFilePath(Path showListFilePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"        requireNonNull(showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"        userPrefs.setShowListFilePath(showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ShowList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"    public void setShowList(ReadOnlyShowList showList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"        this.showList.resetData(showList);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"    public ReadOnlyShowList getShowList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"        return showList;","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"    public boolean hasShow(Show person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"        return showList.hasShow(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"aweijun"},"content":"    public void deleteShow(Show target) {","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"        showList.removeShow(target);","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"aweijun"},"content":"    public void addShow(Show person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"aweijun"},"content":"        showList.addShow(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"aweijun"},"content":"        updateFilteredShowList(PREDICATE_SHOW_ALL_SHOWS);","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"aweijun"},"content":"    public void setShow(Show target, Show editedShow) {","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(target, editedShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"aweijun"},"content":"        showList.setShow(target, editedShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"aweijun"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Show List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"aweijun"},"content":"     * Returns an unmodifiable view of the list of {@code Show} backed by the internal list of","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"aweijun"},"content":"     * {@code versionedShowList}","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"aweijun"},"content":"    public ObservableList\u003cShow\u003e getFilteredShowList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"aweijun"},"content":"        return filteredShows;","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"aweijun"},"content":"    public void updateFilteredShowList(Predicate\u003cShow\u003e predicate) {","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"aweijun"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"aweijun"},"content":"        filteredShows.setPredicate(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"aweijun"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"aweijun"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"aweijun"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"aweijun"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"aweijun"},"content":"        if (!(obj instanceof ModelManagerTrackermon)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"aweijun"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"aweijun"},"content":"        // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"aweijun"},"content":"        ModelManagerTrackermon other \u003d (ModelManagerTrackermon) obj;","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"aweijun"},"content":"        return showList.equals(other.showList)","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 filteredShows.equals(other.filteredShows);","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":147}},{"path":"src/main/java/seedu/address/model/ModelTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"public interface ModelTrackermon {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"    Predicate\u003cShow\u003e PREDICATE_SHOW_ALL_SHOWS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"    void setUserPrefs(ReadOnlyUserPrefsTrackermon userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"     * Returns the user prefs.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"    ReadOnlyUserPrefsTrackermon getUserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"    Path getShowListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"    void setShowListFilePath(Path addressBookFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"    void setShowList(ReadOnlyShowList addressBook);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"    /** Returns the ShowList */","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"    ReadOnlyShowList getShowList();","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"    boolean hasShow(Show person);","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"     * Deletes the given person.","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"    void deleteShow(Show target);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"     * Adds the given person.","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"    void addShow(Show show);","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"     * Replaces the given person {@code target} with {@code editedShow}.","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"     * The person identity of {@code editedShow} must not be the same as another existing person in the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"    void setShow(Show target, Show editedShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"    ObservableList\u003cShow\u003e getFilteredShowList();","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"    void updateFilteredShowList(Predicate\u003cShow\u003e predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":84}},{"path":"src/main/java/seedu/address/model/ReadOnlyShowList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"public interface ReadOnlyShowList {","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"     * Returns an unmodifiable view of the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"     * This list will not contain any duplicate show.","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"    ObservableList\u003cShow\u003e getShowList();","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":13}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefsTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"public interface ReadOnlyUserPrefsTrackermon {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"    Path getShowListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":13}},{"path":"src/main/java/seedu/address/model/ShowList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.address.model.show.UniqueShowList;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"public class ShowList implements ReadOnlyShowList {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"    private final UniqueShowList shows;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"    {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"        shows \u003d new UniqueShowList();","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"    public ShowList() {}","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"     * Creates an ShowList using the Shows in the {@code toBeCopied}","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"    public ShowList(ReadOnlyShowList toBeCopied) {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"        this();","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"     * Replaces the contents of the show list with {@code shows}.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"     * {@code shows} must not contain duplicate shows.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"    public void setShows(List\u003cShow\u003e shows) {","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"        this.shows.setShows(shows);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"     * Resets the existing data of this {@code ShowList} with {@code newData}.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    public void resetData(ReadOnlyShowList newData) {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"        setShows(newData.getShowList());","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"     * Returns true if a show with the same identity as {@code show} exists in the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"    public boolean hasShow(Show show) {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        requireNonNull(show);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"        return shows.contains(show);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"     * Adds a show to the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"     * The show must not already exist in the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"    public void addShow(Show p) {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"        shows.add(p);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"     * Replaces the given show {@code target} in the list with {@code editedShow}.","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"     * {@code target} must exist in the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"     * The show identity of {@code editedShow} must not be the same as another existing show in the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"    public void setShow(Show target, Show editedShow) {","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"        requireNonNull(editedShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"        shows.setShow(target, editedShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"     * Removes {@code key} from this {@code ShowList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"     * {@code key} must exist in the show list.","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"    public void removeShow(Show key) {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"        shows.remove(key);","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"    //// util methods","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"        return shows.asUnmodifiableObservableList().size() + \" shows\";","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"    public ObservableList\u003cShow\u003e getShowList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"        return shows.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"aweijun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"                || (other instanceof ShowList // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 shows.equals(((ShowList) other).shows));","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"aweijun"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"aweijun"},"content":"        return shows.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":108}},{"path":"src/main/java/seedu/address/model/UserPrefsTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"public class UserPrefsTrackermon implements ReadOnlyUserPrefsTrackermon {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"    private Path showListFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"    public UserPrefsTrackermon() {}","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    public UserPrefsTrackermon(ReadOnlyUserPrefsTrackermon userPrefs) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"        this();","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"        resetData(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"    public void resetData(ReadOnlyUserPrefsTrackermon newUserPrefs) {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"        setShowListFilePath(newUserPrefs.getShowListFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"        return guiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"    public Path getShowListFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"        return showListFilePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"    public void setShowListFilePath(Path showListFilePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        requireNonNull(showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"        this.showListFilePath \u003d showListFilePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"        if (!(other instanceof UserPrefsTrackermon)) { //this handles null as well.","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"        UserPrefsTrackermon o \u003d (UserPrefsTrackermon) other;","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 showListFilePath.equals(o.showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"        return Objects.hash(guiSettings, showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"        sb.append(\"\\nLocal data file location : \" + showListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":83}},{"path":"src/main/java/seedu/address/model/show/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model.show;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"public class Name {","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"    /*","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"    public final String fullName;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    public Name(String name) {","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"    public String toString() {","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"        return fullName;","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"                || (other instanceof seedu.address.model.person.Name // instanceof handles nulls","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 fullName.equals(((seedu.address.model.person.Name) other).fullName)); // state check","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"aweijun":56}},{"path":"src/main/java/seedu/address/model/show/Show.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model.show;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"public class Show {","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"    //Identity field","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"    private final Name name;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"    private final Status status;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    //Data field","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    public Show(Name name, Status status, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(name, status, tags);","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"    public Name getName() {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"        return name;","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"    public Status getStatus() {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"        return status;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"     * Returns true if both show have the same name.","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"     * This defines a weaker notion of equality between two show.","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"    public boolean isSameShow(Show otherShow) {","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        if (otherShow \u003d\u003d this) {","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"            return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"        return otherShow !\u003d null","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 otherShow.getName().equals(getName());","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"     * Returns true if both shows have the same identity and data fields.","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"     * This defines a stronger notion of equality between two shows.","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"            return true;","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"        if (!(other instanceof Show)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"            return false;","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"        Show otherShow \u003d (Show) other;","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"        return otherShow.getName().equals(getName())","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 otherShow.getTags().equals(getTags());","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"        return Objects.hash(name, tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"    public String toString() {","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"        builder.append(getName().toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"        builder.append(getStatus().toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"aweijun":101}},{"path":"src/main/java/seedu/address/model/show/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model.show;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"public enum Status {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"    COMPLETED(\"completed\"),","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"    WATCHING(\"watching\");","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"lowkaiwei98"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"            \"Status should only be either completed or watching!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"    private final String status;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"    Status(String status) {","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"        return \"[\" + status + \"]\";","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"     * Checks the status of the show.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"     * @return true if the show status is completed.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"    public Boolean isCompleted() {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"lowkaiwei98"},"content":"        return status.equals(COMPLETED);","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"lowkaiwei98"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"lowkaiwei98"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"lowkaiwei98"},"content":"     * Checks the status of the show.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"lowkaiwei98"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"lowkaiwei98"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"        String uppercaseTest \u003d test.toUpperCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"        return uppercaseTest.equals(COMPLETED.name()) || uppercaseTest.equals(WATCHING.name());","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"arcornior":4,"aweijun":26,"lowkaiwei98":8}},{"path":"src/main/java/seedu/address/model/show/UniqueShowList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model.show;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"aweijun"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"aweijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"aweijun"},"content":"import seedu.address.model.show.exceptions.DuplicatedShowException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"aweijun"},"content":"import seedu.address.model.show.exceptions.ShowNotFoundException;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"aweijun"},"content":"public class UniqueShowList implements Iterable\u003cShow\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"aweijun"},"content":"    private final ObservableList\u003cShow\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"aweijun"},"content":"    private final ObservableList\u003cShow\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"aweijun"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"aweijun"},"content":"     * Returns true if the list contains an equivalent show as the given argument.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"aweijun"},"content":"    public boolean contains(Show toCheck) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"aweijun"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"aweijun"},"content":"        return internalList.stream().anyMatch(toCheck::isSameShow);","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"aweijun"},"content":"     * Adds a show to the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"aweijun"},"content":"     * The show must not already exist in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"aweijun"},"content":"    public void add(Show toAdd) {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"aweijun"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"aweijun"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"aweijun"},"content":"            throw new DuplicatedShowException();","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"aweijun"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"aweijun"},"content":"     * Replaces the show {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"aweijun"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"aweijun"},"content":"     * The show identity of {@code editedShow} must not be the same as another existing show in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"aweijun"},"content":"    public void setShow(Show target, Show editedPerson) {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"aweijun"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"aweijun"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"aweijun"},"content":"            throw new ShowNotFoundException();","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"aweijun"},"content":"        if (!target.isSameShow(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"aweijun"},"content":"            throw new DuplicatedShowException();","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"aweijun"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"aweijun"},"content":"     * Removes the equivalent show from the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"aweijun"},"content":"     * The show must exist in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"aweijun"},"content":"    public void remove(Show toRemove) {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"aweijun"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"aweijun"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"aweijun"},"content":"            //to-do: Add new exception","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"aweijun"},"content":"            throw new ShowNotFoundException();","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"aweijun"},"content":"    public void setShows(UniqueShowList replacement) {","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"aweijun"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"aweijun"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"aweijun"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"aweijun"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"aweijun"},"content":"    public void setShows(List\u003cShow\u003e lists) {","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"aweijun"},"content":"        requireAllNonNull(lists);","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"aweijun"},"content":"        if (!showsAreUnique(lists)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"aweijun"},"content":"            throw new DuplicatedShowException();","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"aweijun"},"content":"        internalList.setAll(lists);","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"aweijun"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"aweijun"},"content":"    public ObservableList\u003cShow\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"aweijun"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"aweijun"},"content":"    public Iterator\u003cShow\u003e iterator() {","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"aweijun"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"aweijun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"aweijun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"aweijun"},"content":"                || (other instanceof UniqueShowList // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"aweijun"},"content":"                \u0026\u0026 internalList.equals(((UniqueShowList) other).internalList));","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"aweijun"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"aweijun"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"aweijun"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"aweijun"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"aweijun"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"aweijun"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"aweijun"},"content":"    private boolean showsAreUnique(List\u003cShow\u003e lists) {","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"aweijun"},"content":"        for (int i \u003d 0; i \u003c lists.size() - 1; i++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"aweijun"},"content":"            for (int j \u003d i + 1; j \u003c lists.size(); j++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"aweijun"},"content":"                if (lists.get(i).isSameShow(lists.get(j))) {","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"aweijun"},"content":"                    return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"aweijun"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"aweijun"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"aweijun"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"aweijun"},"content":"        return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":128}},{"path":"src/main/java/seedu/address/model/show/exceptions/DuplicatedShowException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model.show.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"public class DuplicatedShowException extends RuntimeException {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"aweijun"},"content":"    public DuplicatedShowException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"aweijun"},"content":"        super(\"Operation would result in duplicate shows\");","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"aweijun"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"aweijun"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"aweijun":8}},{"path":"src/main/java/seedu/address/model/show/exceptions/ShowNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aweijun"},"content":"package seedu.address.model.show.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"aweijun"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"aweijun"},"content":"public class ShowNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"aweijun":3}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedShow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.show.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.show.Status;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":" * Jackson-friendly version of {@link Show}.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"class JsonAdaptedShow {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Show\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"    private final String name;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    private final String status;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"    public JsonAdaptedShow(@JsonProperty(\"name\") String name, @JsonProperty(\"status\") String status,","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"     * Converts a given {@code Show} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"    public JsonAdaptedShow(Show source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"        status \u003d source.getStatus().name();","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"     * Converts this Jackson-friendly adapted show object into the model\u0027s {@code Show} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted show.","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"    public Show toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"        final List\u003cTag\u003e showTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"            showTags.add(tag.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"arcornior"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"arcornior"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"arcornior"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"arcornior"},"content":"        final Status modelStatus \u003d Status.valueOf(status.toUpperCase());","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"arcornior"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(showTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"arcornior"},"content":"        return new Show(modelName, modelStatus, modelTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":84}},{"path":"src/main/java/seedu/address/storage/JsonSerializableShowList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.ShowList;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"@JsonRootName(value \u003d \"showlist\")","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"class JsonSerializableShowList {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"    public static final String MESSAGE_DUPLICATE_SHOW \u003d \"Trackermon contains duplicate show(s).\";","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"    private final List\u003cJsonAdaptedShow\u003e shows \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"     * Constructs a {@code JsonSerializableShowList} with the given shows.","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"    public JsonSerializableShowList(@JsonProperty(\"shows\") List\u003cJsonAdaptedShow\u003e shows) {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"        this.shows.addAll(shows);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"     * Converts a given {@code ReadOnlyShowList} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableShowList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"    public JsonSerializableShowList(ReadOnlyShowList source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"        shows.addAll(source.getShowList().stream().map(JsonAdaptedShow::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"     * Converts this show list into the model\u0027s {@code ShowList} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"    public ShowList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"        ShowList addressBook \u003d new ShowList();","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"        for (JsonAdaptedShow jsonAdaptedShow : shows) {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"            Show show \u003d jsonAdaptedShow.toModelType();","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"            if (addressBook.hasShow(show)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SHOW);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"            addressBook.addShow(show);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"        return addressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":60}},{"path":"src/main/java/seedu/address/storage/JsonShowListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":" * A class to access Trackermon data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"public class JsonShowListStorage implements ShowListStorage {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    public JsonShowListStorage(Path filePath) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"    public Path getShowListFilePath() {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"        return filePath;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"    public Optional\u003cReadOnlyShowList\u003e readShowList() throws DataConversionException {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"        return readShowList(filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"     * Similar to {@link #readShowList()}.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"    public Optional\u003cReadOnlyShowList\u003e readShowList(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"        Optional\u003cJsonSerializableShowList\u003e jsonShowList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"                filePath, JsonSerializableShowList.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"        if (!jsonShowList.isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"            return Optional.of(jsonShowList.get().toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"    public void saveShowList(ReadOnlyShowList showList) throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"        saveShowList(showList, filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"     * Similar to {@link #saveShowList(ReadOnlyShowList)}.","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"arcornior"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"arcornior"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"    public void saveShowList(ReadOnlyShowList showList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"        requireNonNull(showList);","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"arcornior"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"arcornior"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"arcornior"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableShowList(showList), filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":80}},{"path":"src/main/java/seedu/address/storage/ShowListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"public interface ShowListStorage {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"    Path getShowListFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"     * Returns Trackermon data as a {@link ReadOnlyShowList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    Optional\u003cReadOnlyShowList\u003e readShowList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"     * @see #getShowListFilePath()","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"    Optional\u003cReadOnlyShowList\u003e readShowList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"     * Saves the given {@link ReadOnlyShowList} to the storage.","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"     * @param showList cannot be null.","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"    void saveShowList(ReadOnlyShowList showList) throws IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"     * @see #saveShowList(ReadOnlyShowList)","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"    void saveShowList(ReadOnlyShowList showList, Path filePath) throws IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":45}},{"path":"src/main/java/seedu/address/storage/StorageManagerTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":" * Manages storage of ShowList data in local storage.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"public class StorageManagerTrackermon implements StorageTrackermon {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"    private ShowListStorage showListStorage;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    public StorageManagerTrackermon(ShowListStorage showListStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"        this.showListStorage \u003d showListStorage;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"arcornior"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"arcornior"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"arcornior"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"arcornior"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"arcornior"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"arcornior"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"arcornior"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ShowList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"arcornior"},"content":"    public Path getShowListFilePath() {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"arcornior"},"content":"        return showListStorage.getShowListFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"arcornior"},"content":"    public Optional\u003cReadOnlyShowList\u003e readShowList() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"arcornior"},"content":"        return readShowList(showListStorage.getShowListFilePath());","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"arcornior"},"content":"    public Optional\u003cReadOnlyShowList\u003e readShowList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"arcornior"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"arcornior"},"content":"        return showListStorage.readShowList(filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"arcornior"},"content":"    public void saveShowList(ReadOnlyShowList showList) throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"arcornior"},"content":"        saveShowList(showList, showListStorage.getShowListFilePath());","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"arcornior"},"content":"    public void saveShowList(ReadOnlyShowList showList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"arcornior"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"arcornior"},"content":"        showListStorage.saveShowList(showList, filePath);","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"arcornior"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":78}},{"path":"src/main/java/seedu/address/storage/StorageTrackermon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arcornior"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"arcornior"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"arcornior"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"arcornior"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"arcornior"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.ReadOnlyShowList;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"arcornior"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"arcornior"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"arcornior"},"content":" * API of the Storage component","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"arcornior"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"arcornior"},"content":"public interface StorageTrackermon extends ShowListStorage, UserPrefsStorage {","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"arcornior"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"arcornior"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"arcornior"},"content":"    Path getShowListFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"arcornior"},"content":"    Optional\u003cReadOnlyShowList\u003e readShowList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"arcornior"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"arcornior"},"content":"    void saveShowList(ReadOnlyShowList showList) throws IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"arcornior"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"arcornior"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"arcornior":32}},{"path":"src/main/java/seedu/address/ui/ShowCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanHoshi"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":" * An UI component that displays information of a {@code Show}.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":"public class ShowCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"    private static final String FXML \u003d \"ShowListCard.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"JonathanHoshi"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"     * where Trackermon is based on\u003c/a\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"    public final Show show;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"    private Label name;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"    private Label id;","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"    private Label status;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"JonathanHoshi"},"content":"     * Creates a {@code ShowCard} with the given {@code Show} and index to display.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"JonathanHoshi"},"content":"    public ShowCard(Show show, int displayedIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"JonathanHoshi"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"JonathanHoshi"},"content":"        this.show \u003d show;","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"JonathanHoshi"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"JonathanHoshi"},"content":"        name.setText(show.getName().fullName);","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"JonathanHoshi"},"content":"        status.setText(show.getStatus().toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"JonathanHoshi"},"content":"        show.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"JonathanHoshi"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"JonathanHoshi"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"JonathanHoshi"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"JonathanHoshi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"JonathanHoshi"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"JonathanHoshi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"JonathanHoshi"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"JonathanHoshi"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"JonathanHoshi"},"content":"        if (!(other instanceof ShowCard)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"JonathanHoshi"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"JonathanHoshi"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"JonathanHoshi"},"content":"        ShowCard card \u003d (ShowCard) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"JonathanHoshi"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"JonathanHoshi"},"content":"                \u0026\u0026 show.equals(card.show);","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"JonathanHoshi":73}},{"path":"src/main/java/seedu/address/ui/ShowListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanHoshi"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"JonathanHoshi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"JonathanHoshi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"JonathanHoshi"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"JonathanHoshi"},"content":"import seedu.address.model.show.Show;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"JonathanHoshi"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"JonathanHoshi"},"content":" * Panel containing the list of shows.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"JonathanHoshi"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"JonathanHoshi"},"content":"public class ShowListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"JonathanHoshi"},"content":"    private static final String FXML \u003d \"ShowListPanel.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"JonathanHoshi"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ShowListPanel.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"JonathanHoshi"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"JonathanHoshi"},"content":"    private ListView\u003cShow\u003e showListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"JonathanHoshi"},"content":"     * Creates a {@code ShowListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"JonathanHoshi"},"content":"    public ShowListPanel(ObservableList\u003cShow\u003e showList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"JonathanHoshi"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"JonathanHoshi"},"content":"        showListView.setItems(showList);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"JonathanHoshi"},"content":"        showListView.setCellFactory(listView -\u003e new ShowListViewCell());","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"JonathanHoshi"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"JonathanHoshi"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Show} using a {@code ShowCard}.","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"JonathanHoshi"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"JonathanHoshi"},"content":"    class ShowListViewCell extends ListCell\u003cShow\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"JonathanHoshi"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"JonathanHoshi"},"content":"        protected void updateItem(Show show, boolean empty) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"JonathanHoshi"},"content":"            super.updateItem(show, empty);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"JonathanHoshi"},"content":"            if (empty || show \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"JonathanHoshi"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"JonathanHoshi"},"content":"                setText(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"JonathanHoshi"},"content":"            } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"JonathanHoshi"},"content":"                setGraphic(new ShowCard(show, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"JonathanHoshi"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"JonathanHoshi"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"JonathanHoshi"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"JonathanHoshi"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"JonathanHoshi"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"JonathanHoshi":51}}]
